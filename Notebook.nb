(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   4152312,      82628]
NotebookOptionsPosition[   4132504,      82298]
NotebookOutlinePosition[   4132942,      82315]
CellTagsIndexPosition[   4132899,      82312]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Predicting Climate Risks", "Title",
 CellChangeTimes->{
  3.879155723926409*^9},ExpressionUUID->"3d5c901c-528e-40ea-bfb5-\
6cae8602de3b"],

Cell["MGT529- Data Science and Machine Learning II", "Subtitle",
 CellChangeTimes->{
  3.879155728340694*^9},ExpressionUUID->"e7479a40-b674-4689-a1e6-\
7937b2c177d6"],

Cell["Jeanne Fernandez, Dario Scalabrin ", "Subsubtitle",
 CellChangeTimes->{
  3.879155732027416*^9},ExpressionUUID->"439ae915-0578-422b-b930-\
d6d3dc9f7065"],

Cell[CellGroupData[{

Cell["Data Loading & Cleaning", "Section",
 CellChangeTimes->{{3.877882042179366*^9, 3.877882055356389*^9}, {
  3.8778893815568857`*^9, 
  3.877889387854753*^9}},ExpressionUUID->"7dace181-d0f9-4283-b4a9-\
94e43c143822"],

Cell[CellGroupData[{

Cell["Data Loading", "Subsection",
 CellChangeTimes->{{3.877882058823523*^9, 
  3.877882061508025*^9}},ExpressionUUID->"94903ccb-4645-43a4-b5e5-\
28857714dfcf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ds", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://raw.githubusercontent.com/scalabrindario/predicting-climate-\
risks/main/data/dataset.csv\>\"", ",", " ", "\"\<Dataset\>\"", ",", " ", 
      RowBox[{"\"\<HeaderLines\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"Import", " ", "dataset", " ", "sample"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"comp", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://raw.githubusercontent.com/scalabrindario/predicting-climate-\
risks/main/data/company_information.csv\>\"", ",", " ", "\"\<Dataset\>\"", 
      ",", " ", 
      RowBox[{"\"\<HeaderLines\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"Import", " ", "company", " ", "information"}], "*)"}]}]}], "Input",\

 CellChangeTimes->{{3.877882155173353*^9, 3.877882233086768*^9}, {
   3.877889276711831*^9, 3.877889320051159*^9}, {3.877889368631003*^9, 
   3.8778893690756893`*^9}, 3.8784898834160337`*^9, {3.878489924575973*^9, 
   3.878489955668668*^9}, {3.878490108390555*^9, 3.878490113641554*^9}, {
   3.878490505952305*^9, 3.878490508768412*^9}, {3.87849066090661*^9, 
   3.878490670695458*^9}, {3.878492856576652*^9, 3.8784928608632383`*^9}, {
   3.879354526479218*^9, 3.879354527596731*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"fc7511cd-d7b9-430d-bc85-259db4bc506b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Cleaning", "Subsection",
 CellChangeTimes->{{3.877882058823523*^9, 3.877882061508025*^9}, {
   3.877889406517935*^9, 3.877889407751175*^9}, 
   3.8784911565823393`*^9},ExpressionUUID->"35896a36-bc89-45d7-aa4c-\
67e8432be11c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ds", " ", "=", " ", 
    RowBox[{
     RowBox[{"KeyDrop", "[", 
      RowBox[{"{", "\"\<\>\"", "}"}], "]"}], "@", "ds"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Drop", " ", "emtpy", " ", "column"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ds", " ", "=", " ", 
    RowBox[{"ds", "[", 
     RowBox[{"All", ",", 
      RowBox[{"KeyMap", "[", 
       RowBox[{"Replace", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Ultimate Parent Name\>\"", "->", "\"\<Company\>\""}], 
          ",", " ", 
          RowBox[{"\"\<Ultimate Parent ISIN\>\"", "->", "\"\<ISIN\>\""}], ",", 
          RowBox[{
          "\"\<ExposureScore_Composite_ModerateHigh_2020\>\"", " ", "->", 
           " ", "\"\<Risk2020\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "\"\<ExposureScore_Composite_ModerateHigh_2030\>\"", " ", "->", 
           " ", "\"\<Risk2030\>\""}], ",", 
          RowBox[{
          "\"\<ExposureScore_Composite_ModerateHigh_2040\>\"", " ", "->", 
           " ", "\"\<Risk2040\>\""}], ",", 
          RowBox[{
          "\"\<ExposureScore_Composite_ModerateHigh_2050\>\"", " ", "->", 
           " ", "\"\<Risk2050\>\""}], ",", 
          RowBox[{
          "\"\<ExposureScore_Composite_ModerateHigh_2060\>\"", " ", "->", 
           "\"\<Risk2060\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "\"\<ExposureScore_Composite_ModerateHigh_2070\>\"", " ", "->", 
           " ", "\"\<Risk2070\>\""}], ",", 
          RowBox[{
          "\"\<ExposureScore_Composite_ModerateHigh_2080\>\"", " ", "->", 
           " ", "\"\<Risk2080\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "\"\<ExposureScore_Composite_ModerateHigh_2090\>\"", "->", " ", 
           "\"\<Risk2090\>\""}]}], "}"}], "]"}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Rename", " ", "columns", " ", "name"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"ds", ",", " ", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"comp", " ", "=", " ", 
    RowBox[{
     RowBox[{"KeyDrop", "[", 
      RowBox[{"{", "\"\<\>\"", "}"}], "]"}], "@", "comp"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Drop", " ", "emtpy", " ", "column"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"comp", ",", " ", "5"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.877882155173353*^9, 3.877882233086768*^9}, {
   3.877889276711831*^9, 3.877889320051159*^9}, {3.877889368631003*^9, 
   3.8778893690756893`*^9}, {3.8778894126624193`*^9, 3.877889423407289*^9}, {
   3.877889459383305*^9, 3.8778894845215483`*^9}, {3.877889566017929*^9, 
   3.877889588273754*^9}, {3.877889627649275*^9, 3.877889817726323*^9}, {
   3.877889863794015*^9, 3.877889867382916*^9}, {3.877889963648498*^9, 
   3.8778899642708073`*^9}, 3.877890035751668*^9, {3.8784901464207277`*^9, 
   3.878490159646762*^9}, 3.8784902110953283`*^9, {3.878490551607078*^9, 
   3.878490552886361*^9}, {3.878491133677877*^9, 3.878491152768239*^9}, {
   3.878492863880169*^9, 3.878492878427312*^9}, {3.879419381866446*^9, 
   3.879419382875142*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"64e06684-09ba-41b9-8f8e-61ae4922557f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Company" -> "India", "Country" -> "India", "ISIN" -> "", "Latitude" -> 
        11.25318, "Longitude" -> 75.78284, "Risk2020" -> 56, "Risk2030" -> 52,
         "Risk2040" -> 54, "Risk2050" -> 54, "Risk2060" -> 53, "Risk2070" -> 
        54, "Risk2080" -> 57, "Risk2090" -> 57|>, <|
       "Company" -> "India", "Country" -> "India", "ISIN" -> "", "Latitude" -> 
        22.59256, "Longitude" -> 88.29574, "Risk2020" -> 62, "Risk2030" -> 61,
         "Risk2040" -> 52, "Risk2050" -> 53, "Risk2060" -> 55, "Risk2070" -> 
        52, "Risk2080" -> 56, "Risk2090" -> 61|>, <|
       "Company" -> "The Gap Inc.", "Country" -> "United Kingdom", "ISIN" -> 
        "US3647601083", "Latitude" -> 51.43916321, "Longitude" -> 0.270177007,
         "Risk2020" -> 80, "Risk2030" -> 82, "Risk2040" -> 78, "Risk2050" -> 
        84, "Risk2060" -> 87, "Risk2070" -> 88, "Risk2080" -> 92, "Risk2090" -> 
        92|>, <|"Company" -> "Unicaja Banco S.A.", "Country" -> "Spain", 
        "ISIN" -> "ES0180907000", "Latitude" -> 39.42476, 
        "Longitude" -> -2.29423, "Risk2020" -> 84, "Risk2030" -> 87, 
        "Risk2040" -> 85, "Risk2050" -> 89, "Risk2060" -> 90, "Risk2070" -> 
        91, "Risk2080" -> 92, "Risk2090" -> 94|>, <|
       "Company" -> "Swedbank", "Country" -> "Sweden", "ISIN" -> 
        "SE0000242455", "Latitude" -> 59.60689, "Longitude" -> 16.55278, 
        "Risk2020" -> 65, "Risk2030" -> 65, "Risk2040" -> 63, "Risk2050" -> 
        69, "Risk2060" -> 72, "Risk2070" -> 74, "Risk2080" -> 76, "Risk2090" -> 
        79|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "Country"} -> 1, {All, "ISIN"} -> 1, {All, "Latitude"} -> 
        1, {All, "Longitude"} -> 1, {All, "Risk2020"} -> 1, {All, "Risk2030"} -> 
        1, {All, "Risk2040"} -> 1, {All, "Risk2050"} -> 1, {All, "Risk2060"} -> 
        1, {All, "Risk2070"} -> 1, {All, "Risk2080"} -> 1, {All, "Risk2090"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], "Country" -> 
            TypeSystem`PackageScope`AtomShape[156.8], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "Latitude" -> 
            TypeSystem`PackageScope`AtomShape[60], "Longitude" -> 
            TypeSystem`PackageScope`AtomShape[60], "Risk2020" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2030" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2040" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2050" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2060" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2070" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2080" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2090" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "Country", "ISIN", "Latitude", "Longitude", "Risk2020", 
         "Risk2030", "Risk2040", "Risk2050", "Risk2060", "Risk2070", 
         "Risk2080", "Risk2090"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "Country"} -> 1, {All, "ISIN"} -> 1, {All, "Latitude"} -> 
        1, {All, "Longitude"} -> 1, {All, "Risk2020"} -> 1, {All, "Risk2030"} -> 
        1, {All, "Risk2040"} -> 1, {All, "Risk2050"} -> 1, {All, "Risk2060"} -> 
        1, {All, "Risk2070"} -> 1, {All, "Risk2080"} -> 1, {All, "Risk2090"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], "Country" -> 
            TypeSystem`PackageScope`AtomShape[156.8], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "Latitude" -> 
            TypeSystem`PackageScope`AtomShape[60], "Longitude" -> 
            TypeSystem`PackageScope`AtomShape[60], "Risk2020" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2030" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2040" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2050" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2060" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2070" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2080" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2090" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "Country", "ISIN", "Latitude", "Longitude", "Risk2020", 
         "Risk2030", "Risk2040", "Risk2050", "Risk2060", "Risk2070", 
         "Risk2080", "Risk2090"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 5], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     13, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Company", 
                  Style[
                  "Company", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Company"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Company"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Country"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISIN", 
                  Style[
                  "ISIN", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ISIN"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ISIN"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latitude", 
                  Style[
                  "Latitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Latitude"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Latitude"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Longitude", 
                  Style[
                  "Longitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Longitude"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Longitude"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2020", 
                  Style[
                  "Risk2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2030", 
                  Style[
                  "Risk2030", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2030"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2030"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2040", 
                  Style[
                  "Risk2040", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2040"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2040"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2050", 
                  Style[
                  "Risk2050", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2050"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2050"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2060", 
                  Style[
                  "Risk2060", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2060"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2060"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["India", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["India", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.2532"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["75.7828"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["India", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["India", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.5926"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["88.2957"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["The Gap Inc.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["United Kingdom", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["US3647601083", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51.4392"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.270177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Unicaja Banco S.A.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Spain", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ES0180907000", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39.4248"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.29423"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Swedbank", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sweden", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SE0000242455", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.6069"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.5528"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["69"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["72"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{956., {108.134033203125, 113.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{956., {108.134033203125, 113.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878492879714177*^9, 3.878617216432308*^9, 3.878715008748741*^9, 
   3.878805382545115*^9, 3.879148942302202*^9, 3.879155098450674*^9, 
   3.879155922821879*^9, 3.879325253165563*^9, {3.879354541168386*^9, 
   3.8793545548178177`*^9}, 3.879416651061475*^9, 3.879419393401959*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"59ffc17f-97fd-4d71-bf72-1a11ed3e4e5d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "TCUID" -> 239168, "Company" -> 
        "Hansoh Pharmaceutical Group Company Limited", "Country" -> "CHINA", 
        "ISIN" -> "KYG549581067", "GICS Sector Name" -> "Health Care", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 20214.002, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 15107.634, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 112517.306, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 16.053, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 11.998, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 89.357, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        1259.186603914043|>, <|
       "TCUID" -> 52563, "Company" -> "Indiabulls Real Estate Limited", 
        "Country" -> "INDIA", "ISIN" -> "INE069I01010", "GICS Sector Name" -> 
        "Real Estate", "Carbon-Scope 1  (tonnes CO2e)" -> 10446.724, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 5668.835, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 78155.685, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 22.64, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 12.285, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 169.376, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        461.433219794041|>, <|
       "TCUID" -> 238824, "Company" -> "Maoyan Entertainment", "Country" -> 
        "CHINA", "ISIN" -> "KYG5804A1076", "GICS Sector Name" -> 
        "Consumer Discretionary", "Carbon-Scope 1  (tonnes CO2e)" -> 702.154, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 488.68, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 8240.034, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 3.548, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 2.47, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 41.641, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        197.883880308295|>, <|
       "TCUID" -> 135866, "Company" -> 
        "China ZhengTong Auto Services Holdings Limited", "Country" -> 
        "CHINA", "ISIN" -> "KYG215A81084", "GICS Sector Name" -> 
        "Consumer Discretionary", "Carbon-Scope 1  (tonnes CO2e)" -> 
        71703.479, "Carbon-Scope 2  (tonnes CO2e)" -> 93970.65, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 145145.161, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 29.315, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 38.418, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 59.34, 
        "Carbon Disclosure" -> 
        "Estimate used instead of disclosure - data does not cover global \
operations", "Revenue (USD mn)" -> 2445.990799755402|>, <|
       "TCUID" -> 207217, "Company" -> 
        "Bergbahnen Engelberg-Tr\[UDoubleDot]bsee-Titlis AG", "Country" -> 
        "SWITZERLAND", "ISIN" -> "CH0527044959", "GICS Sector Name" -> 
        "Consumer Discretionary", "Carbon-Scope 1  (tonnes CO2e)" -> 277.322, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 343.6, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 1986.225, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 7.257, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 8.992, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 51.978, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        38.212473477377|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "TCUID"} -> 
        1, {All, "Company"} -> 1, {All, "Country"} -> 1, {All, "ISIN"} -> 
        1, {All, "GICS Sector Name"} -> 
        1, {All, "Carbon-Scope 1  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 2  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 3 (tonnes CO2e)"} -> 
        1, {All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Disclosure"} -> 1, {All, "Revenue (USD mn)"} -> 1|>, 
       
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "TCUID" -> TypeSystem`PackageScope`AtomShape[34], "Company" -> 
            TypeSystem`PackageScope`AtomShape[515.2], "Country" -> 
            TypeSystem`PackageScope`AtomShape[115.5], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "GICS Sector Name" -> 
            TypeSystem`PackageScope`AtomShape[231.], 
            "Carbon-Scope 1  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 2  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 3 (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Carbon Disclosure" -> 
            TypeSystem`PackageScope`AtomShape[787.5], "Revenue (USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "TCUID", "Company", "Country", "ISIN", "GICS Sector Name", 
         "Carbon-Scope 1  (tonnes CO2e)", "Carbon-Scope 2  (tonnes CO2e)", 
         "Carbon-Scope 3 (tonnes CO2e)", 
         "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", "Carbon Disclosure",
          "Revenue (USD mn)"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["CHINA", "INDIA", "SWITZERLAND"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Consumer Discretionary", "Health Care", "Real Estate"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Estimated data", 
           "Estimate used instead of disclosure - data does not cover global \
operations"]], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "TCUID"} -> 
        1, {All, "Company"} -> 1, {All, "Country"} -> 1, {All, "ISIN"} -> 
        1, {All, "GICS Sector Name"} -> 
        1, {All, "Carbon-Scope 1  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 2  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 3 (tonnes CO2e)"} -> 
        1, {All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Disclosure"} -> 1, {All, "Revenue (USD mn)"} -> 1|>, 
       
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "TCUID" -> TypeSystem`PackageScope`AtomShape[34], "Company" -> 
            TypeSystem`PackageScope`AtomShape[515.2], "Country" -> 
            TypeSystem`PackageScope`AtomShape[115.5], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "GICS Sector Name" -> 
            TypeSystem`PackageScope`AtomShape[231.], 
            "Carbon-Scope 1  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 2  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 3 (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Carbon Disclosure" -> 
            TypeSystem`PackageScope`AtomShape[787.5], "Revenue (USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "TCUID", "Company", "Country", "ISIN", "GICS Sector Name", 
         "Carbon-Scope 1  (tonnes CO2e)", "Carbon-Scope 2  (tonnes CO2e)", 
         "Carbon-Scope 3 (tonnes CO2e)", 
         "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", "Carbon Disclosure",
          "Revenue (USD mn)"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["CHINA", "INDIA", "SWITZERLAND"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Consumer Discretionary", "Health Care", "Real Estate"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Estimated data", 
           "Estimate used instead of disclosure - data does not cover global \
operations"]], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     13, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TCUID", 
                  Style[
                  "TCUID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TCUID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TCUID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Company", 
                  Style[
                  "Company", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Company"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Company"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Country"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISIN", 
                  Style[
                  "ISIN", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ISIN"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ISIN"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GICS Sector Name", 
                  Style[
                  "GICS Sector Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "GICS Sector Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "GICS Sector Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 1  (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 1  (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 1  (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 1  (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 2  (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 2  (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 2  (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 2  (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 3 (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 3 (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 3 (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 3 (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                  Style[
                  "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                  Style[
                  "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["239168"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hansoh Pharmaceutical Group Company Limited", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CHINA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["KYG549581067", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Health Care", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20214.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15107.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["112517."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.053"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["52563"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Indiabulls Real Estate Limited", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["INDIA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["INE069I01010", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Real Estate", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10446.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5668.84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78155.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.285"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["238824"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Maoyan Entertainment", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CHINA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["KYG5804A1076", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Consumer Discretionary", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["702.154"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["488.68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8240.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.548"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["135866"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["China ZhengTong Auto Services Holdings Limited", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CHINA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["KYG215A81084", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Consumer Discretionary", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71703.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["93970.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["145145."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29.315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["38.418"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["207217"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bergbahnen Engelberg-Tr\[UDoubleDot]bsee-Titlis AG", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SWITZERLAND", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CH0527044959", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Consumer Discretionary", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["277.322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["343.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1986.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.257"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1414., {108.134033203125, 113.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1414., {108.134033203125, 113.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878492879714177*^9, 3.878617216432308*^9, 3.878715008748741*^9, 
   3.878805382545115*^9, 3.879148942302202*^9, 3.879155098450674*^9, 
   3.879155922821879*^9, 3.879325253165563*^9, {3.879354541168386*^9, 
   3.8793545548178177`*^9}, 3.879416651061475*^9, 3.879419393547036*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"b5aeca91-1273-477e-b51a-e0ba3fa1036c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Feature Engineering", "Section",
 CellChangeTimes->{{3.877882042179366*^9, 3.877882055356389*^9}, {
  3.8778893815568857`*^9, 3.877889387854753*^9}, {3.8784907159983683`*^9, 
  3.878490721079863*^9}},ExpressionUUID->"09b8ec3b-6ad4-4052-b6db-\
39219809bea4"],

Cell[CellGroupData[{

Cell["Integral Score ", "Subsection",
 CellChangeTimes->{
  3.878095202888431*^9},ExpressionUUID->"718b3489-2255-4bf6-9e53-\
6fbf72095c28"],

Cell["\<\
Our goal it to give a summary of the risk approximation by decade into one \
scalar statistic, called Integral Score. 
We first visualise several options for this score, given the risk values by \
decade.
One can fit a function given the risk approximation for several years, and \
then integrate the resulting curve.
The choice of score then boils down to the choice of approximation.\
\>", "Text",
 CellChangeTimes->{{3.878095305913897*^9, 3.878095370787418*^9}, {
  3.8781074730571938`*^9, 3.878107496759869*^9}, {3.878107594724197*^9, 
  3.878107668134574*^9}, {3.878110381495985*^9, 3.878110396451376*^9}, {
  3.8781104565792303`*^9, 3.878110566684598*^9}, {3.8791559279498043`*^9, 
  3.879155929461714*^9}},ExpressionUUID->"709f453a-bbea-4521-b17e-\
2c6be2d07fba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "2020", ",", " ", "2030", ",", " ", "2040", ",", "2050", ",", "2060", ",",
      "2070", ",", " ", "2080", ",", " ", "2090"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yRandom", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{"Values", "@", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"ds", "[", 
         RowBox[{"All", ",", " ", 
          RowBox[{"{", 
           RowBox[{"6", ";;", "13"}], "}"}]}], "]"}], ",", "1"}], "]"}], "[", 
      
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "pick", " ", "one", " ", "row", " ", "at", " ", "random", " ", 
    "to", " ", "illustrate", " ", "all", " ", "the", " ", "possible", " ", 
    "scores"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Normal", "@", 
     RowBox[{"{", 
      RowBox[{"x", ",", "yRandom"}], "}"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line", " ", "=", " ", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "z"}], "}"}], ",", " ", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parabola", " ", "=", " ", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "z", ",", 
       RowBox[{"z", "^", "2"}]}], "}"}], ",", " ", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polynomial3", " ", "=", " ", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "z", ",", 
       RowBox[{"z", "^", "2"}], ",", 
       RowBox[{"z", "^", "3"}]}], "}"}], ",", " ", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "->", "Red"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"line", ",", " ", "parabola", ",", " ", "polynomial3"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "2010", ",", "2100"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", "yRandom", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Linear approximation (line): \>\"", ",", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{"line", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "2020", ",", "2100"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Quardatic approximation (parabola): \>\"", ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{"parabola", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "2020", ",", "2100"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Third degree approximation (polynomial3): \>\"", ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{"polynomial3", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "2020", ",", "2100"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Rectangle approximation (barchart): \>\"", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Total", "@", "yRandom"}], ")"}], "*", "10"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.878095988419815*^9, 3.878096008451264*^9}, {
   3.878096246426421*^9, 3.878096249028542*^9}, {3.87809736728378*^9, 
   3.8780973906733418`*^9}, 3.878097432467164*^9, {3.878097478162343*^9, 
   3.8780974995002832`*^9}, {3.8780983570920067`*^9, 3.878098417799266*^9}, {
   3.878098491380351*^9, 3.87809849395568*^9}, {3.87809898606929*^9, 
   3.8780989909869013`*^9}, {3.878107175408936*^9, 3.878107175612001*^9}, {
   3.878107205692005*^9, 3.878107358687537*^9}, {3.8781074188971367`*^9, 
   3.878107421340673*^9}, {3.878109452000227*^9, 3.878109498076082*^9}, {
   3.878109557921968*^9, 3.8781096290645742`*^9}, {3.878109816628388*^9, 
   3.878109816734045*^9}, {3.878110581079624*^9, 3.8781106177289267`*^9}, {
   3.87849120512105*^9, 3.878491209011669*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"2de772f5-4145-4495-9373-d8e224bc076d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "79", ",", "81", ",", "79", ",", "79", ",", "80", ",", "81", ",", "84", ",",
    "82"}], "}"}]], "Output",
 CellChangeTimes->{
  3.878098992066743*^9, 3.878099331598818*^9, 3.878099368325416*^9, {
   3.878107182896913*^9, 3.87810720691947*^9}, {3.87810723821165*^9, 
   3.878107276352625*^9}, 3.8781073240250177`*^9, {3.878107422738969*^9, 
   3.878107453848839*^9}, {3.878107756105233*^9, 3.878107760910823*^9}, 
   3.87810783859802*^9, {3.8781080362344112`*^9, 3.878108065411766*^9}, 
   3.8781094596677227`*^9, {3.878109571943493*^9, 3.87810959893552*^9}, 
   3.878109630289406*^9, {3.8781097915711803`*^9, 3.8781098474344463`*^9}, {
   3.878110619585442*^9, 3.878110622826226*^9}, {3.878490683574058*^9, 
   3.878490686083373*^9}, 3.87849085128356*^9, 3.878490941270187*^9, {
   3.8784911611531076`*^9, 3.8784911727022753`*^9}, {3.878491209407058*^9, 
   3.878491211387108*^9}, 3.878492609902875*^9, 3.878617218535305*^9, 
   3.878715011509631*^9, 3.8788053848095617`*^9, 3.879148945149165*^9, 
   3.879155930705359*^9, 3.879325256209025*^9, 3.879354559722999*^9, 
   3.879416660013793*^9, 3.879419401370537*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"b4d46764-b099-4065-9a4f-246329671543"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[{{2020., 79.}, {2030., 81.}, {2040., 79.}, {2050., 79.}, {
          2060., 80.}, {2070., 81.}, {2080., 84.}, {2090., 
          82.}}]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0nsw1WkYB/BD2DaSMtIgki5smbQuodQ3SjhyVr/XtoUupyLblFpSsTrp
wkmtouhGv3dPW8ktqexx2dWFVFNOitpy7Ia2TrtGwpbRYp/945lnPv8883zn
eezlscs26EskkqVU//dW3ySJZKMI77SDgVnHBVxwly+yIWd0Wmy9RN7iGKj0
JLeFqnJukIdGW5ptIyttqjq6yJOel9m1k59d6UyWZguQx/41vzZGRLxWVmaQ
I0B3ZkWycpOIktnjrXecENDTN2fALFbEZK2qM/y0gPjkuRMrE0Tca1nmouIC
Yoydg9qSRSz199HffUHAlCOKQ6/2izjfsmfjvCIBwW8nfFAcFlFtHR67o0zA
mwD+7aljIkrvxBoEqAV0794yUnpGxHoba+/sXwXUFORV/qYS0ZlrZ1BXK0Ci
rUx4dUmETLkqIv2+gMsdthHKKyLibN3CHjwS0Ni9VVqgpv3tFmnPPRVQ0esg
y68RESAt/hipFWD6cOL38+tFaO2Lrx5vF/C00PDqsgYRweveDK7RCTBe62Y+
3CwiWabWXeoS8JlJbVpaq4iUqPbo5j4B26sXGmW8ErFW5789Z0BAqJ9RycxO
EXoWvg5NEgauUa8O7BWhKNqx+qIRQ8SXZd5DA5S3y2/eRxOG2MVG2Uv0OB6G
xxQ7mTPExBeM1RhwVLjeK3o/geG0aY9KNZIjqrwm2MOO4UChi5e7Ccf7c92J
ZlMZhNvi8+tjOEKqE30efsGw3L8sY685xybFGW40m8HiQVWAqSXHhuIPmc0e
DJ//stHytRWHbarOwd6Hoc3Rv7vQlqPooGuQzI/huxNWDS6TOcb3q4fGBTJ4
b8u6oTeNA2ObBUHGULVUT53pxLEke8YcpzAGu/O8Yowzx6RFLSVtKxkqozs0
z104KvPs68evZTB1nvi33I3DRa7a3BbFcCpywMrTkyO6seKa42aG1qMNsgdz
OXYVGqcbxjEYLHiSEbKAY3VpeW/tTgb5N0ntNn4chmv6ByUKhl3xVnML/DmU
ifE5j/cz1H+KyN8XxHF/QZpm0iGG/kGNnTSE4+Ws3tzQTIYOfe/cxlCOpvRT
/ZYnaH7cEuefwjhSjz7tW5nH8Mef0tvuKyivXojC9RxD3pM9665H0D65tme7
8hmyZq6YkLKGI6/9QOS0ywxQOj42Xk8+Nr2w9xrlefe7ypo8W8OOjb7O0PN1
dtwMct2ovUnTyeen6ltIye9StNJw8qjbLcvTyb5bMztvkZsGM1pHbuB4E/zJ
Oauc7h/3j84wisPVSFPqoma49aKwwoJcv/Dfk0FkG195+lRyZLJTynpyg5lm
xmLygb59oSfJbiX5W/aTX7R79gyTh3ThffrRHIoalaumgv7jq3F148jmnzTW
b8mlP9/Nnky+6DE4YkQlw7pU9zm+5Mbi5U0e5LsOYxJTyFNyTbafJdsfqgvK
JKufeUWqyYk9SdY/koPNoxc/Jjvf1FXfICek37QwqmJIdRR/eEQ2vtM1aEd+
eSRs1Usy17N57UX2+mg8q5vs7hPYIJCzVt0aHibf25lQvpn8HwLHN/o=
           "]]}, Annotation[#, "Charting`Private`Tag$147218#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
qBzE
           "]]}, Annotation[#, "Charting`Private`Tag$147218#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, Annotation[#, "Charting`Private`Tag$147218#3"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2018.5416666666713`, 78.72222222222238}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2018.5416666666713`, 2090.}, {78.72222222222238, 84.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"line", "parabola", "polynomial3"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.878098992066743*^9, 3.878099331598818*^9, 3.878099368325416*^9, {
   3.878107182896913*^9, 3.87810720691947*^9}, {3.87810723821165*^9, 
   3.878107276352625*^9}, 3.8781073240250177`*^9, {3.878107422738969*^9, 
   3.878107453848839*^9}, {3.878107756105233*^9, 3.878107760910823*^9}, 
   3.87810783859802*^9, {3.8781080362344112`*^9, 3.878108065411766*^9}, 
   3.8781094596677227`*^9, {3.878109571943493*^9, 3.87810959893552*^9}, 
   3.878109630289406*^9, {3.8781097915711803`*^9, 3.8781098474344463`*^9}, {
   3.878110619585442*^9, 3.878110622826226*^9}, {3.878490683574058*^9, 
   3.878490686083373*^9}, 3.87849085128356*^9, 3.878490941270187*^9, {
   3.8784911611531076`*^9, 3.8784911727022753`*^9}, {3.878491209407058*^9, 
   3.878491211387108*^9}, 3.878492609902875*^9, 3.878617218535305*^9, 
   3.878715011509631*^9, 3.8788053848095617`*^9, 3.879148945149165*^9, 
   3.879155930705359*^9, 3.879325256209025*^9, 3.879354559722999*^9, 
   3.879416660013793*^9, 3.879419401547536*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"dc45f563-20d0-4bfe-abe5-4b827e294061"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 79.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{20.24671633359226, 
            57.840870883457754`}, {-89.8271103480246, 100.97172611871366`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 79]& ,
         TagBoxNote->"79"],
        StyleBox["79", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             81.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{61.352668066413344`, 
            98.94682261627884}, {-94.64480241047369, 100.97172611871366`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 81]& ,
         TagBoxNote->"81"],
        StyleBox["81", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             79.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{102.45861979923443`, 
            140.05277434909993`}, {-89.8271103480246, 100.97172611871366`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 79]& ,
         TagBoxNote->"79"],
        StyleBox["79", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 79.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{143.5645715320555, 
            181.158726081921}, {-89.8271103480246, 100.97172611871366`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 79]& ,
         TagBoxNote->"79"],
        StyleBox["79", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[79, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 80.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{184.67052326487658`, 
            222.2646778147421}, {-92.23595637924913, 100.97172611871366`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 80]& ,
         TagBoxNote->"80"],
        StyleBox["80", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[80, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 81.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{225.77647499769768`, 
            263.3706295475632}, {-94.64480241047369, 100.97172611871366`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 81]& ,
         TagBoxNote->"81"],
        StyleBox["81", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 84.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{266.8824267305188, 
            304.47658128038427`}, {-101.87134050414727`, 
            100.97172611871366`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 84]& ,
         TagBoxNote->"84"],
        StyleBox["84", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[84, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 82.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{307.9883784633398, 
            345.5825330132053}, {-97.05364844169821, 100.97172611871366`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 82]& ,
         TagBoxNote->"82"],
        StyleBox["82", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[82, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{8.451201747997086, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.39075018208302986`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.878098992066743*^9, 3.878099331598818*^9, 3.878099368325416*^9, {
   3.878107182896913*^9, 3.87810720691947*^9}, {3.87810723821165*^9, 
   3.878107276352625*^9}, 3.8781073240250177`*^9, {3.878107422738969*^9, 
   3.878107453848839*^9}, {3.878107756105233*^9, 3.878107760910823*^9}, 
   3.87810783859802*^9, {3.8781080362344112`*^9, 3.878108065411766*^9}, 
   3.8781094596677227`*^9, {3.878109571943493*^9, 3.87810959893552*^9}, 
   3.878109630289406*^9, {3.8781097915711803`*^9, 3.8781098474344463`*^9}, {
   3.878110619585442*^9, 3.878110622826226*^9}, {3.878490683574058*^9, 
   3.878490686083373*^9}, 3.87849085128356*^9, 3.878490941270187*^9, {
   3.8784911611531076`*^9, 3.8784911727022753`*^9}, {3.878491209407058*^9, 
   3.878491211387108*^9}, 3.878492609902875*^9, 3.878617218535305*^9, 
   3.878715011509631*^9, 3.8788053848095617`*^9, 3.879148945149165*^9, 
   3.879155930705359*^9, 3.879325256209025*^9, 3.879354559722999*^9, 
   3.879416660013793*^9, 3.879419401580249*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"248ccc5f-e686-47b1-870f-d1de1c691657"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Linear approximation (line): \"\>", "\[InvisibleSpace]", 
   "6470.476190476192`"}],
  SequenceForm["Linear approximation (line): ", 6470.476190476192],
  Editable->False]], "Print",
 CellChangeTimes->{{3.878107238329743*^9, 3.878107276508223*^9}, 
   3.878107324138131*^9, {3.8781074228993597`*^9, 3.878107454003121*^9}, {
   3.878107756220397*^9, 3.87810776106087*^9}, 3.878107838740787*^9, {
   3.8781080364435863`*^9, 3.8781080655675163`*^9}, 3.8781094601917057`*^9, {
   3.8781095726128073`*^9, 3.878109599220655*^9}, 3.878109630566448*^9, {
   3.8781097918409157`*^9, 3.878109847741796*^9}, {3.87811061987574*^9, 
   3.8781106231039658`*^9}, {3.878490683843603*^9, 3.8784906861542788`*^9}, 
   3.878490851355443*^9, 3.878490941341604*^9, {3.8784911612271547`*^9, 
   3.878491172773608*^9}, {3.878491209476358*^9, 3.878491211457273*^9}, 
   3.8784926100106277`*^9, 3.878617218677796*^9, 3.878715011801186*^9, 
   3.878805385108643*^9, 3.879148945384584*^9, 3.879155930987974*^9, 
   3.879325256463355*^9, 3.879354559828231*^9, 3.8794166603483152`*^9, 
   3.879419401587644*^9},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"d58fd0ec-67f5-4353-8b97-1ab88bc456bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Quardatic approximation (parabola): \"\>", "\[InvisibleSpace]",
    "6473.174603174499`"}],
  SequenceForm["Quardatic approximation (parabola): ", 6473.174603174499],
  Editable->False]], "Print",
 CellChangeTimes->{{3.878107238329743*^9, 3.878107276508223*^9}, 
   3.878107324138131*^9, {3.8781074228993597`*^9, 3.878107454003121*^9}, {
   3.878107756220397*^9, 3.87810776106087*^9}, 3.878107838740787*^9, {
   3.8781080364435863`*^9, 3.8781080655675163`*^9}, 3.8781094601917057`*^9, {
   3.8781095726128073`*^9, 3.878109599220655*^9}, 3.878109630566448*^9, {
   3.8781097918409157`*^9, 3.878109847741796*^9}, {3.87811061987574*^9, 
   3.8781106231039658`*^9}, {3.878490683843603*^9, 3.8784906861542788`*^9}, 
   3.878490851355443*^9, 3.878490941341604*^9, {3.8784911612271547`*^9, 
   3.878491172773608*^9}, {3.878491209476358*^9, 3.878491211457273*^9}, 
   3.8784926100106277`*^9, 3.878617218677796*^9, 3.878715011801186*^9, 
   3.878805385108643*^9, 3.879148945384584*^9, 3.879155930987974*^9, 
   3.879325256463355*^9, 3.879354559828231*^9, 3.8794166603483152`*^9, 
   3.879419401589594*^9},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"32734033-839b-4e4e-9d8d-3de426cbe3d0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Third degree approximation (polynomial3): \"\>", 
   "\[InvisibleSpace]", "6465.396825440228`"}],
  SequenceForm[
  "Third degree approximation (polynomial3): ", 6465.396825440228],
  Editable->False]], "Print",
 CellChangeTimes->{{3.878107238329743*^9, 3.878107276508223*^9}, 
   3.878107324138131*^9, {3.8781074228993597`*^9, 3.878107454003121*^9}, {
   3.878107756220397*^9, 3.87810776106087*^9}, 3.878107838740787*^9, {
   3.8781080364435863`*^9, 3.8781080655675163`*^9}, 3.8781094601917057`*^9, {
   3.8781095726128073`*^9, 3.878109599220655*^9}, 3.878109630566448*^9, {
   3.8781097918409157`*^9, 3.878109847741796*^9}, {3.87811061987574*^9, 
   3.8781106231039658`*^9}, {3.878490683843603*^9, 3.8784906861542788`*^9}, 
   3.878490851355443*^9, 3.878490941341604*^9, {3.8784911612271547`*^9, 
   3.878491172773608*^9}, {3.878491209476358*^9, 3.878491211457273*^9}, 
   3.8784926100106277`*^9, 3.878617218677796*^9, 3.878715011801186*^9, 
   3.878805385108643*^9, 3.879148945384584*^9, 3.879155930987974*^9, 
   3.879325256463355*^9, 3.879354559828231*^9, 3.8794166603483152`*^9, 
   3.879419401591428*^9},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"e0d55027-8fad-49bd-ab45-83a92d88e911"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rectangle approximation (barchart): \"\>", "\[InvisibleSpace]",
    "6450"}],
  SequenceForm["Rectangle approximation (barchart): ", 6450],
  Editable->False]], "Print",
 CellChangeTimes->{{3.878107238329743*^9, 3.878107276508223*^9}, 
   3.878107324138131*^9, {3.8781074228993597`*^9, 3.878107454003121*^9}, {
   3.878107756220397*^9, 3.87810776106087*^9}, 3.878107838740787*^9, {
   3.8781080364435863`*^9, 3.8781080655675163`*^9}, 3.8781094601917057`*^9, {
   3.8781095726128073`*^9, 3.878109599220655*^9}, 3.878109630566448*^9, {
   3.8781097918409157`*^9, 3.878109847741796*^9}, {3.87811061987574*^9, 
   3.8781106231039658`*^9}, {3.878490683843603*^9, 3.8784906861542788`*^9}, 
   3.878490851355443*^9, 3.878490941341604*^9, {3.8784911612271547`*^9, 
   3.878491172773608*^9}, {3.878491209476358*^9, 3.878491211457273*^9}, 
   3.8784926100106277`*^9, 3.878617218677796*^9, 3.878715011801186*^9, 
   3.878805385108643*^9, 3.879148945384584*^9, 3.879155930987974*^9, 
   3.879325256463355*^9, 3.879354559828231*^9, 3.8794166603483152`*^9, 
   3.8794194015925627`*^9},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"df6b0a00-af64-4bc7-a34d-7dfe1688a7d4"]
}, Open  ]]
}, Open  ]],

Cell["\<\
We note that all the approximations are in the same order of magnitude. For \
the sake of simplicity and to avoid overfitting, we choose the linear \
approximation. We add the chosen Integral Score to the dataset.\
\>", "Text",
 CellChangeTimes->{{3.878107677086873*^9, 3.878107708192883*^9}, {
  3.87810802196667*^9, 3.878108027717223*^9}, {3.8781096481332808`*^9, 
  3.8781096662372627`*^9}, {3.8781106655916853`*^9, 
  3.878110686574559*^9}},ExpressionUUID->"1a6fc14d-0418-469d-b9d5-\
9f5a2764ee89"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intColumn", " ", "=", 
   RowBox[{"ds", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<integralScore\>\"", "->", 
        RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Fit", "[", 
           RowBox[{
            RowBox[{"Transpose", "@", 
             RowBox[{"Normal", "@", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "#Risk2020", ",", "#Risk2030", ",", "#Risk2040", ",", 
                  "#Risk2050", ",", "#Risk2060", ",", "#Risk2070", ",", 
                  "#Risk2080", ",", "#Risk2090"}], "}"}]}], "}"}]}]}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "z"}], "}"}], ",", " ", "z"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "2020", ",", "2100"}], "}"}]}], "]"}]}], "|>"}], 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newds", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"ds", ",", "intColumn", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"newds", ",", " ", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.878108591025799*^9, 3.878108736379463*^9}, {
   3.878109366113057*^9, 3.878109404653481*^9}, 3.878109680564666*^9, {
   3.878490953016451*^9, 3.8784909537716618`*^9}, {3.8784925335551987`*^9, 
   3.878492533615432*^9}, {3.878492578793417*^9, 3.8784925827181873`*^9}, {
   3.878492846193266*^9, 3.878492848609735*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"2e930372-2ce5-4b8c-89e1-74e90910d3f2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Company" -> "NEXT plc", "Country" -> "United Kingdom", "ISIN" -> 
        "GB0032089863", "Latitude" -> 51.6128977, "Longitude" -> -0.7719822, 
        "Risk2020" -> 80, "Risk2030" -> 83, "Risk2040" -> 80, "Risk2050" -> 
        83, "Risk2060" -> 86, "Risk2070" -> 86, "Risk2080" -> 90, "Risk2090" -> 
        91, "integralScore" -> 6853.333333333343|>, <|
       "Company" -> "Huhtam\[ADoubleDot]ki Oyj", "Country" -> "France", 
        "ISIN" -> "FI0009000459", "Latitude" -> 46.35, "Longitude" -> -0.85, 
        "Risk2020" -> 80, "Risk2030" -> 85, "Risk2040" -> 84, "Risk2050" -> 
        88, "Risk2060" -> 90, "Risk2070" -> 92, "Risk2080" -> 94, "Risk2090" -> 
        94, "integralScore" -> 7150.476190476198|>, <|
       "Company" -> "ICICI Bank", "Country" -> "India", "ISIN" -> 
        "INE090A01021", "Latitude" -> 10.3076, "Longitude" -> 78.65229, 
        "Risk2020" -> 80, "Risk2030" -> 79, "Risk2040" -> 78, "Risk2050" -> 
        79, "Risk2060" -> 78, "Risk2070" -> 79, "Risk2080" -> 78, "Risk2090" -> 
        80, "integralScore" -> 6308.571428571427|>, <|
       "Company" -> "Banco Comercial Portugu\[EHat]s S.A.", "Country" -> 
        "Portugal", "ISIN" -> "PTBCP0AM0015", "Latitude" -> 37.69867, 
        "Longitude" -> -8.086423, "Risk2020" -> 61, "Risk2030" -> 61, 
        "Risk2040" -> 59, "Risk2050" -> 59, "Risk2060" -> 57, "Risk2070" -> 
        56, "Risk2080" -> 54, "Risk2090" -> 51, "integralScore" -> 
        4524.761904761894|>, <|
       "Company" -> "Dunelm Group plc", "Country" -> "United Kingdom", "ISIN" -> 
        "GB00B1CKQ739", "Latitude" -> 51.4067813, "Longitude" -> -1.3209579, 
        "Risk2020" -> 81, "Risk2030" -> 83, "Risk2040" -> 79, "Risk2050" -> 
        82, "Risk2060" -> 84, "Risk2070" -> 85, "Risk2080" -> 89, "Risk2090" -> 
        89, "integralScore" -> 6770.476190476198|>}, "AllowEmbedding" -> True,
      "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "Country"} -> 1, {All, "ISIN"} -> 1, {All, "Latitude"} -> 
        1, {All, "Longitude"} -> 1, {All, "Risk2020"} -> 1, {All, "Risk2030"} -> 
        1, {All, "Risk2040"} -> 1, {All, "Risk2050"} -> 1, {All, "Risk2060"} -> 
        1, {All, "Risk2070"} -> 1, {All, "Risk2080"} -> 1, {All, "Risk2090"} -> 
        1, {All, "integralScore"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> 
            TypeSystem`PackageScope`AtomShape[336.00000000000006`], "Country" -> 
            TypeSystem`PackageScope`AtomShape[156.8], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "Latitude" -> 
            TypeSystem`PackageScope`AtomShape[60], "Longitude" -> 
            TypeSystem`PackageScope`AtomShape[60], "Risk2020" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2030" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2040" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2050" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2060" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2070" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2080" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2090" -> 
            TypeSystem`PackageScope`AtomShape[34], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "Country", "ISIN", "Latitude", "Longitude", "Risk2020", 
         "Risk2030", "Risk2040", "Risk2050", "Risk2060", "Risk2070", 
         "Risk2080", "Risk2090", "integralScore"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "Country"} -> 1, {All, "ISIN"} -> 1, {All, "Latitude"} -> 
        1, {All, "Longitude"} -> 1, {All, "Risk2020"} -> 1, {All, "Risk2030"} -> 
        1, {All, "Risk2040"} -> 1, {All, "Risk2050"} -> 1, {All, "Risk2060"} -> 
        1, {All, "Risk2070"} -> 1, {All, "Risk2080"} -> 1, {All, "Risk2090"} -> 
        1, {All, "integralScore"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> 
            TypeSystem`PackageScope`AtomShape[336.00000000000006`], "Country" -> 
            TypeSystem`PackageScope`AtomShape[156.8], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "Latitude" -> 
            TypeSystem`PackageScope`AtomShape[60], "Longitude" -> 
            TypeSystem`PackageScope`AtomShape[60], "Risk2020" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2030" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2040" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2050" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2060" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2070" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2080" -> 
            TypeSystem`PackageScope`AtomShape[34], "Risk2090" -> 
            TypeSystem`PackageScope`AtomShape[34], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "Country", "ISIN", "Latitude", "Longitude", "Risk2020", 
         "Risk2030", "Risk2040", "Risk2050", "Risk2060", "Risk2070", 
         "Risk2080", "Risk2090", "integralScore"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     14, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Company", 
                  Style[
                  "Company", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Company"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Company"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Country"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISIN", 
                  Style[
                  "ISIN", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ISIN"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ISIN"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Latitude", 
                  Style[
                  "Latitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Latitude"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Latitude"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Longitude", 
                  Style[
                  "Longitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Longitude"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Longitude"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2020", 
                  Style[
                  "Risk2020", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2020"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2020"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2030", 
                  Style[
                  "Risk2030", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2030"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2030"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2040", 
                  Style[
                  "Risk2040", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2040"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2040"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2050", 
                  Style[
                  "Risk2050", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2050"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2050"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Risk2060", 
                  Style[
                  "Risk2060", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Risk2060"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Risk2060"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["NEXT plc", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["United Kingdom", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GB0032089863", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51.6129"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.771982"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Huhtam\[ADoubleDot]ki Oyj", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["France", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FI0009000459", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46.35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ICICI Bank", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["India", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["INE090A01021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.3076"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78.6523"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Banco Comercial Portugu\[EHat]s S.A.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Portugal", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["PTBCP0AM0015", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37.6987"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-8.08642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["57"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Dunelm Group plc", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["United Kingdom", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GB00B1CKQ739", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51.4068"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Latitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.32096"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Longitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2020"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2030"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2040"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2050"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Risk2060"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[14, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[14, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1092., {108.134033203125, 113.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1092., {108.134033203125, 113.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8784928496142683`*^9, 3.878617221117325*^9, 
  3.87871501453109*^9, 3.878805387280489*^9, 3.879148951112846*^9, 
  3.8791559344153643`*^9, 3.879325271104972*^9, 3.879354565721301*^9, 
  3.879416668340049*^9, 3.87941941918766*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"2fe3fc1a-a93f-4bab-8a6c-8d1c835afd0d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computing Average of Integral Score", "Subsection",
 CellChangeTimes->{
  3.878095202888431*^9, {3.878490751754402*^9, 3.878490760860165*^9}, {
   3.8784908151806507`*^9, 3.878490819061284*^9}, {3.878715022061735*^9, 
   3.878715028092407*^9}},ExpressionUUID->"056fde69-d6a3-4d9e-a2ac-\
b269c1f5fc2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"avgds", "=", " ", 
     RowBox[{"newds", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GroupBy", "[", 
         RowBox[{
          RowBox[{"{", "#Company", "}"}], "&"}], "]"}], "/*", "Values"}], ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Company\>\"", "->", 
          RowBox[{"Query", "[", 
           RowBox[{"First", ",", "\"\<Company\>\""}], "]"}]}], ",", 
         RowBox[{"\"\<ISIN\>\"", "->", 
          RowBox[{"Query", "[", 
           RowBox[{"First", ",", "\"\<ISIN\>\""}], "]"}]}], ",", 
         RowBox[{"\"\<integralScore\>\"", "->", 
          RowBox[{"Query", "[", 
           RowBox[{"Mean", ",", "\"\<integralScore\>\""}], "]"}]}]}], 
        "|>"}]}], "]"}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Grouped", " ", "and", " ", "computed", " ", "operations", " ", "on", " ",
      "some", " ", "columns"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"avgds", ",", " ", "5"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8784908252724667`*^9, 3.878490859549131*^9}, {
  3.878490919998516*^9, 3.878490962787115*^9}, {3.8784925322187567`*^9, 
  3.8784926038952293`*^9}, {3.878492921017454*^9, 3.878492940468293*^9}, {
  3.878492972636957*^9, 3.878492985774609*^9}, {3.87849308816151*^9, 
  3.878493092286625*^9}, {3.878493399368621*^9, 3.878493401413369*^9}, {
  3.878619908928514*^9, 3.878619996059414*^9}, {3.8786200326366796`*^9, 
  3.878620054537904*^9}, {3.879154728021397*^9, 3.879154753671281*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"750190a8-3600-4615-bbeb-0c8e1dcd2654"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Company" -> "Stryker Corp.", "ISIN" -> "US8636671013", 
        "integralScore" -> 6255.518207282916|>, <|
       "Company" -> "Petrol d.d.", "ISIN" -> "SI0031102153", "integralScore" -> 
        6034.761904761912|>, <|
       "Company" -> "China Assurance Finance Group", "ISIN" -> "", 
        "integralScore" -> 6039.591836734694|>, <|
       "Company" -> "NRC Group ASA", "ISIN" -> "NO0003679102", 
        "integralScore" -> 5816.190476190477|>, <|
       "Company" -> "Union Corp.", "ISIN" -> "KR7000910000", "integralScore" -> 
        6527.3015873015875`|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "ISIN"} -> 1, {All, "integralScore"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> TypeSystem`PackageScope`AtomShape[324.8], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Company", "ISIN", "integralScore"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "ISIN"} -> 1, {All, "integralScore"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> TypeSystem`PackageScope`AtomShape[324.8], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Company", "ISIN", "integralScore"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 5, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Company", 
                  Style[
                  "Company", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Company"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Company"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISIN", 
                  Style[
                  "ISIN", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ISIN"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ISIN"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["integralScore", 
                  Style[
                  "integralScore", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "integralScore"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "integralScore"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Stryker Corp.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["US8636671013", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6255.52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Petrol d.d.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SI0031102153", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6034.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["China Assurance Finance Group", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6039.59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NRC Group ASA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NO0003679102", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5816.19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Union Corp.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["KR7000910000", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6527.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{565., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{565., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.878492604113213*^9, 3.878492615513929*^9}, 
   3.878492925618964*^9, 3.8784929782031727`*^9, {3.878493099243601*^9, 
   3.8784931045623503`*^9}, 3.8784934031612453`*^9, 3.8786172233522177`*^9, {
   3.878620048849023*^9, 3.878620055252098*^9}, 3.878715029289898*^9, 
   3.878805388889771*^9, 3.8791489526821136`*^9, 3.879155113490831*^9, 
   3.879155938432053*^9, 3.8793252733030367`*^9, 3.879354566763836*^9, 
   3.8794166747758493`*^9, 3.8794194199033737`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"5b80b074-88f2-4e59-bc93-89b525189286"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Merge the two datasets", "Subsection",
 CellChangeTimes->{
  3.878095202888431*^9, {3.878490751754402*^9, 3.878490760860165*^9}, {
   3.8784908151806507`*^9, 3.878490819061284*^9}, {3.8784927152585287`*^9, 
   3.878492724398346*^9}},ExpressionUUID->"c2596125-a273-4404-a475-\
df67a84893ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"merged", " ", "=", " ", 
    RowBox[{"JoinAcross", "[", 
     RowBox[{"avgds", ",", "comp", ",", 
      RowBox[{"Key", "[", "\"\<ISIN\>\"", "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Merged", " ", "two", " ", "datasets", " ", "and", " ", "dropped", " ", 
    "rows", " ", "without", " ", "ISIN", " ", "value"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"merged", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8784908252724667`*^9, 3.878490859549131*^9}, {
  3.878490919998516*^9, 3.878490962787115*^9}, {3.8784925322187567`*^9, 
  3.8784926038952293`*^9}, {3.8784927320593*^9, 3.878492824701557*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"71b43137-8fd0-4fca-a3e2-e31cd7015633"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Company" -> "Sungrow Power Supply Co.", "ISIN" -> "CNE1000018M7", 
        "integralScore" -> 5824.2857142857165`, "TCUID" -> 238661, "Country" -> 
        "CHINA", "GICS Sector Name" -> "Industrials", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 92762.551, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 55093.428, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 406179.787, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 33.196, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 19.715, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 145.354, 
        "Carbon Disclosure" -> 
        "Estimate used instead of disclosure - data does not cover global \
operations", "Revenue (USD mn)" -> 2794.426810673134|>, <|
       "Company" -> "Compagnie Financi\[EGrave]re Richemont", "ISIN" -> 
        "CH0210483332", "integralScore" -> 6116.598639455791, "TCUID" -> 
        44110, "Country" -> "SWITZERLAND", "GICS Sector Name" -> 
        "Consumer Discretionary", "Carbon-Scope 1  (tonnes CO2e)" -> 11287., 
        "Carbon-Scope 2  (tonnes CO2e)" -> 56759., 
        "Carbon-Scope 3 (tonnes CO2e)" -> 2.3682448*^6, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 0.713, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 3.587, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 149.682, 
        "Carbon Disclosure" -> "Value derived from data provided in CDP", 
        "Revenue (USD mn)" -> 15821.882301392336`|>, <|
       "Company" -> "Emlak Konut GYO A.S.", "ISIN" -> "TREEGYO00017", 
        "integralScore" -> 6743.607748184028, "TCUID" -> 124230, "Country" -> 
        "TURKEY", "GICS Sector Name" -> "Real Estate", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 8516.592, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 37365.352, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 20501.559, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 12.648, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 55.493, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 30.448, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        673.3381|>, <|
       "Company" -> "NOTE AB (publ)", "ISIN" -> "SE0001161654", 
        "integralScore" -> 5780.952380952382, "TCUID" -> 67991, "Country" -> 
        "SWEDEN", "GICS Sector Name" -> "Industrials", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 9869.546, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 3262.293, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 32446.768, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 48.5, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 16.031, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 159.446, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        203.496803997377|>, <|
       "Company" -> "AST Groupe", "ISIN" -> "FR0000076887", "integralScore" -> 
        6380.000000000007, "TCUID" -> 221200, "Country" -> "FRANCE", 
        "GICS Sector Name" -> "Consumer Discretionary", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 4191.215, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 2183.482, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 42003.594, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 20.915, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 10.896, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 209.602, 
        "Carbon Disclosure" -> 
        "Estimate used instead of disclosure - data does not cover global \
operations", "Revenue (USD mn)" -> 200.396793339553|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "ISIN"} -> 1, {All, "integralScore"} -> 1, {All, "TCUID"} -> 
        1, {All, "Country"} -> 1, {All, "GICS Sector Name"} -> 
        1, {All, "Carbon-Scope 1  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 2  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 3 (tonnes CO2e)"} -> 
        1, {All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Disclosure"} -> 1, {All, "Revenue (USD mn)"} -> 1|>, 
       
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> 
            TypeSystem`PackageScope`AtomShape[336.00000000000006`], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60], "TCUID" -> 
            TypeSystem`PackageScope`AtomShape[34], "Country" -> 
            TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
            "GICS Sector Name" -> TypeSystem`PackageScope`AtomShape[231.], 
            "Carbon-Scope 1  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 2  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 3 (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Carbon Disclosure" -> 
            TypeSystem`PackageScope`AtomShape[787.5], "Revenue (USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "ISIN", "integralScore", "TCUID", "Country", 
         "GICS Sector Name", "Carbon-Scope 1  (tonnes CO2e)", 
         "Carbon-Scope 2  (tonnes CO2e)", "Carbon-Scope 3 (tonnes CO2e)", 
         "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", "Carbon Disclosure",
          "Revenue (USD mn)"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Consumer Discretionary", "Industrials", "Real Estate"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Estimated data", 
           "Estimate used instead of disclosure - data does not cover global \
operations", "Value derived from data provided in CDP"]], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "ISIN"} -> 1, {All, "integralScore"} -> 1, {All, "TCUID"} -> 
        1, {All, "Country"} -> 1, {All, "GICS Sector Name"} -> 
        1, {All, "Carbon-Scope 1  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 2  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 3 (tonnes CO2e)"} -> 
        1, {All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Disclosure"} -> 1, {All, "Revenue (USD mn)"} -> 1|>, 
       
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> 
            TypeSystem`PackageScope`AtomShape[336.00000000000006`], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60], "TCUID" -> 
            TypeSystem`PackageScope`AtomShape[34], "Country" -> 
            TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
            "GICS Sector Name" -> TypeSystem`PackageScope`AtomShape[231.], 
            "Carbon-Scope 1  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 2  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 3 (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Carbon Disclosure" -> 
            TypeSystem`PackageScope`AtomShape[787.5], "Revenue (USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "ISIN", "integralScore", "TCUID", "Country", 
         "GICS Sector Name", "Carbon-Scope 1  (tonnes CO2e)", 
         "Carbon-Scope 2  (tonnes CO2e)", "Carbon-Scope 3 (tonnes CO2e)", 
         "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", "Carbon Disclosure",
          "Revenue (USD mn)"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Consumer Discretionary", "Industrials", "Real Estate"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Estimated data", 
           "Estimate used instead of disclosure - data does not cover global \
operations", "Value derived from data provided in CDP"]], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     14, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Company", 
                  Style[
                  "Company", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Company"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Company"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISIN", 
                  Style[
                  "ISIN", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ISIN"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ISIN"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["integralScore", 
                  Style[
                  "integralScore", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "integralScore"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "integralScore"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TCUID", 
                  Style[
                  "TCUID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TCUID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TCUID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Country"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GICS Sector Name", 
                  Style[
                  "GICS Sector Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "GICS Sector Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "GICS Sector Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 1  (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 1  (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 1  (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 1  (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 2  (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 2  (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 2  (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 2  (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 3 (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 3 (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 3 (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 3 (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                  Style[
                  "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Sungrow Power Supply Co.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CNE1000018M7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5824.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["238661"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CHINA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Industrials", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92762.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55093.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, ImageMargins -> 
              {{5, 3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["406180."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33.196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Compagnie Financi\[EGrave]re Richemont", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CH0210483332", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6116.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44110"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SWITZERLAND", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Consumer Discretionary", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11287.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56759.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2368245."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.713"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Emlak Konut GYO A.S.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TREEGYO00017", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6743.61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124230"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TURKEY", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Real Estate", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8516.59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37365.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20501.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.648"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NOTE AB (publ)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SE0001161654", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5780.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["67991"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SWEDEN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Industrials", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9869.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3262.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32446.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["AST Groupe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FR0000076887", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6380.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["221200"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FRANCE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Consumer Discretionary", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{231., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4191.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2183.48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42003.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20.915"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[14, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[14, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1307., {108.134033203125, 113.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1307., {108.134033203125, 113.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.878492604113213*^9, 3.878492615513929*^9}, 
   3.8784927477738037`*^9, {3.878492795346176*^9, 3.878492824983602*^9}, {
   3.878492900694974*^9, 3.878492935514345*^9}, 3.878493415460045*^9, 
   3.878495273252953*^9, 3.8786200576404467`*^9, 3.878715031327244*^9, 
   3.878805390742227*^9, 3.879148953914688*^9, 3.879155941226163*^9, 
   3.879325275424492*^9, 3.879354569024786*^9, 3.8794166810631857`*^9, 
   3.8794194201841583`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"0a874e12-b288-40ce-9d03-60131e3a4398"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Ratings", "Subsection",
 CellChangeTimes->{
  3.878095202888431*^9, {3.878490751754402*^9, 3.878490760860165*^9}, {
   3.8784908151806507`*^9, 3.878490819061284*^9}, {3.8784927152585287`*^9, 
   3.878492724398346*^9}, {3.878493542826058*^9, 
   3.878493549686611*^9}},ExpressionUUID->"13e1a9e6-dd50-4c06-9ec7-\
817728819780"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MinMaxScaler", "[", "value_", "]"}], ":=", 
   RowBox[{"Rescale", "[", 
    RowBox[{"value", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{"merged", "[", 
         RowBox[{"All", ",", " ", "\"\<integralScore\>\""}], "]"}], "]"}], 
       ",", 
       RowBox[{"Max", "[", 
        RowBox[{"merged", "[", 
         RowBox[{"All", ",", " ", "\"\<integralScore\>\""}], "]"}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinMaxScaledList", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"MinMaxScaler", ",", " ", 
     RowBox[{"merged", "[", 
      RowBox[{"All", ",", " ", "\"\<integralScore\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RatingCreator", "[", "value_", "]"}], ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Between", "[", 
       RowBox[{"value", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.2"}], "}"}]}], "]"}], ",", " ", "\"\<A\>\"", 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Between", "[", 
         RowBox[{"value", ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.4"}], "}"}]}], "]"}], ",", " ", "\"\<B\>\"",
         ",", " ", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Between", "[", 
           RowBox[{"value", ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "0.6"}], "}"}]}], "]"}], ",", " ", 
          "\"\<C\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Between", "[", 
             RowBox[{"value", ",", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", "0.8"}], "}"}]}], "]"}], ",", " ", 
            "\"\<D\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Between", "[", 
               RowBox[{"value", ",", 
                RowBox[{"{", 
                 RowBox[{"0.8", ",", "1"}], "}"}]}], "]"}], ",", " ", 
              "\"\<E\>\"", ","}], "   ", "\[IndentingNewLine]", "]"}]}], 
           "]"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Convert", " ", "a", " ", "numerical", " ", "variable", " ", "into", " ", 
    "a", " ", "category"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RatingsList", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"RatingCreator", ",", " ", "MinMaxScaledList"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntScaledDat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"<|", 
        RowBox[{"\"\<IntScaled\>\"", "->", "#"}], "|>"}], "&"}], "/@", 
      RowBox[{"Normal", "[", "MinMaxScaledList", "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Convert", " ", "the", " ", "list", " ", "into", " ", "a", " ", 
    "dataset"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RatingsDat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"<|", 
        RowBox[{"\"\<Ratings\>\"", "->", "#"}], "|>"}], "&"}], "/@", 
      RowBox[{"Normal", "[", "RatingsList", "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Convert", " ", "the", " ", "list", " ", "into", " ", "a", " ", 
    "dataset"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"finalds", " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{"merged", ",", "IntScaledDat", ",", "2"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Add", " ", "Scaled", " ", "Integral", " ", "column", " ", "to", " ", 
    "the", " ", "dataset"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finalds", " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{"finalds", ",", "RatingsDat", ",", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Add", " ", "Rating", " ", "column", " ", "to", " ", "the", " ", 
    "dataset"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"finalds", ",", " ", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8784908252724667`*^9, 3.878490859549131*^9}, {
   3.878490919998516*^9, 3.878490962787115*^9}, {3.8784925322187567`*^9, 
   3.8784926038952293`*^9}, {3.8784927320593*^9, 3.878492824701557*^9}, {
   3.878493559212455*^9, 3.8784935891839933`*^9}, {3.8784936472366467`*^9, 
   3.8784936492084208`*^9}, {3.878493698086041*^9, 3.878493699127733*^9}, {
   3.8784938213563004`*^9, 3.878493898608631*^9}, {3.8784939465591927`*^9, 
   3.878493963332162*^9}, {3.878494335528428*^9, 3.878494372239007*^9}, {
   3.878494649208815*^9, 3.878494840715115*^9}, 3.878494880956595*^9, {
   3.878494921764689*^9, 3.878494941321616*^9}, {3.878495002471055*^9, 
   3.878495005993518*^9}, {3.878495546235155*^9, 3.878495626059207*^9}, {
   3.878495676259441*^9, 3.87849578178084*^9}, {3.878495849965911*^9, 
   3.8784960294861317`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"aca8cf41-acc7-4aa4-b9d0-698571a4bee2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Company" -> "ElringKlinger AG", "ISIN" -> "DE0007856023", 
        "integralScore" -> 6651.428571428576, "TCUID" -> 185371, "Country" -> 
        "GERMANY", "GICS Sector Name" -> "Consumer Discretionary", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 21160.159, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 69408.809, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 565989.506, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 12.541, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 41.136, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 335.44, 
        "Carbon Disclosure" -> "Exact Value from Environmental/CSR", 
        "Revenue (USD mn)" -> 1687.302643375606, "IntScaled" -> 
        0.8790029322127811, "Ratings" -> "E"|>, <|
       "Company" -> "Suzhou TFC Optical Communicati", "ISIN" -> 
        "CNE100001XQ1", "integralScore" -> 6564.76190476191, "TCUID" -> 
        245581, "Country" -> "CHINA", "GICS Sector Name" -> 
        "Information Technology", "Carbon-Scope 1  (tonnes CO2e)" -> 5778.772,
         "Carbon-Scope 2  (tonnes CO2e)" -> 1351.019, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 16806.198, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 45.66, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 10.675, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 132.792, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 126.56,
         "IntScaled" -> 0.8619320280753598, "Ratings" -> "E"|>, <|
       "Company" -> "Top Frontier Invt Hldgs Inc", "ISIN" -> "PHY8898C1046", 
        "integralScore" -> 6380.251572327047, "TCUID" -> 192192, "Country" -> 
        "PHILIPPINES", "GICS Sector Name" -> "Industrials", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 1.3033968427*^7, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 361818.716, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 5.441830428*^6, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 1336.126, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 37.09, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 557.848, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        9755.044874427615, "IntScaled" -> 0.8255886642596756, "Ratings" -> 
        "E"|>, <|"Company" -> "Ratnamani Metals & Tubes Ltd.", "ISIN" -> 
        "INE703B01027", "integralScore" -> 5839.999999999998, "TCUID" -> 
        239557, "Country" -> "INDIA", "GICS Sector Name" -> "Materials", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 933639.33, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 48222.117, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 212450.058, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 2561.972, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 132.325, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 582.978, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        364.422215411984, "IntScaled" -> 0.7191742473217572, "Ratings" -> 
        "D"|>, <|"Company" -> "BigBen Interactive", "ISIN" -> "FR0000074072", 
        "integralScore" -> 7090.476190476198, "TCUID" -> 185074, "Country" -> 
        "FRANCE", "GICS Sector Name" -> "Consumer Discretionary", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 5651.979, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 3162.816, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 27943.107, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 19.303, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 10.802, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 95.431, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        292.810391462858, "IntScaled" -> 0.9654830070188399, "Ratings" -> 
        "E"|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "ISIN"} -> 1, {All, "integralScore"} -> 1, {All, "TCUID"} -> 
        1, {All, "Country"} -> 1, {All, "GICS Sector Name"} -> 
        1, {All, "Carbon-Scope 1  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 2  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 3 (tonnes CO2e)"} -> 
        1, {All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Disclosure"} -> 1, {All, "Revenue (USD mn)"} -> 
        1, {All, "IntScaled"} -> 1, {All, "Ratings"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> 
            TypeSystem`PackageScope`AtomShape[336.00000000000006`], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60], "TCUID" -> 
            TypeSystem`PackageScope`AtomShape[34], "Country" -> 
            TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
            "GICS Sector Name" -> 
            TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Carbon-Scope 1  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 2  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 3 (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Carbon Disclosure" -> 
            TypeSystem`PackageScope`AtomShape[357.], "Revenue (USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "IntScaled" -> 
            TypeSystem`PackageScope`AtomShape[60], "Ratings" -> 
            TypeSystem`PackageScope`AtomShape[31.5]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "ISIN", "integralScore", "TCUID", "Country", 
         "GICS Sector Name", "Carbon-Scope 1  (tonnes CO2e)", 
         "Carbon-Scope 2  (tonnes CO2e)", "Carbon-Scope 3 (tonnes CO2e)", 
         "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", "Carbon Disclosure",
          "Revenue (USD mn)", "IntScaled", "Ratings"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Estimated data", "Exact Value from Environmental/CSR"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["D", "E"]]}], 5], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "ISIN"} -> 1, {All, "integralScore"} -> 1, {All, "TCUID"} -> 
        1, {All, "Country"} -> 1, {All, "GICS Sector Name"} -> 
        1, {All, "Carbon-Scope 1  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 2  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 3 (tonnes CO2e)"} -> 
        1, {All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Disclosure"} -> 1, {All, "Revenue (USD mn)"} -> 
        1, {All, "IntScaled"} -> 1, {All, "Ratings"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> 
            TypeSystem`PackageScope`AtomShape[336.00000000000006`], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60], "TCUID" -> 
            TypeSystem`PackageScope`AtomShape[34], "Country" -> 
            TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
            "GICS Sector Name" -> 
            TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Carbon-Scope 1  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 2  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 3 (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Carbon Disclosure" -> 
            TypeSystem`PackageScope`AtomShape[357.], "Revenue (USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "IntScaled" -> 
            TypeSystem`PackageScope`AtomShape[60], "Ratings" -> 
            TypeSystem`PackageScope`AtomShape[31.5]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "ISIN", "integralScore", "TCUID", "Country", 
         "GICS Sector Name", "Carbon-Scope 1  (tonnes CO2e)", 
         "Carbon-Scope 2  (tonnes CO2e)", "Carbon-Scope 3 (tonnes CO2e)", 
         "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", "Carbon Disclosure",
          "Revenue (USD mn)", "IntScaled", "Ratings"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Estimated data", "Exact Value from Environmental/CSR"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["D", "E"]]}], 5], "Path" -> {}, 
     "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     5, "DataColumnCount" -> 16, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Company", 
                  Style[
                  "Company", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Company"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Company"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISIN", 
                  Style[
                  "ISIN", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ISIN"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ISIN"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["integralScore", 
                  Style[
                  "integralScore", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "integralScore"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "integralScore"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TCUID", 
                  Style[
                  "TCUID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TCUID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TCUID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Country"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GICS Sector Name", 
                  Style[
                  "GICS Sector Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "GICS Sector Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "GICS Sector Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 1  (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 1  (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 1  (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 1  (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 2  (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 2  (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 2  (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 2  (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 3 (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 3 (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 3 (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 3 (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                  Style[
                  "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["ElringKlinger AG", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DE0007856023", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6651.43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["185371"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GERMANY", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Consumer Discretionary", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21160.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["69408.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["565990."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.541"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Suzhou TFC Optical Communicati", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CNE100001XQ1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6564.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["245581"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CHINA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Information Technology", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5778.77"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1351.02"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16806.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["45.66"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Top Frontier Invt Hldgs Inc", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["PHY8898C1046", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6380.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["192192"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["PHILIPPINES", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Industrials", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13033968."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["361819."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5441830."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1336.13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Ratnamani Metals & Tubes Ltd.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["INE703B01027", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5840.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["239557"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["INDIA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Materials", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["933639."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48222.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["212450."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2561.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BigBen Interactive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FR0000074072", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7090.48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["185074"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FRANCE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Consumer Discretionary", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5651.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3162.82"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27943.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19.303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 16, 1], {1, 16 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 16, 1], {1, 16 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[16, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[16, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 16, 1], {1, 16 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 16, 1], {1, 16 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1308., {108.134033203125, 113.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1308., {108.134033203125, 113.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878496029715033*^9, 3.87861722563971*^9, 3.878620059554048*^9, 
   3.878715034646832*^9, 3.87871584130048*^9, 3.878715883845355*^9, 
   3.87871626622314*^9, 3.878805392352337*^9, 3.879148955639336*^9, 
   3.879155943742526*^9, {3.8793252781727467`*^9, 3.879325306093731*^9}, 
   3.879354572293003*^9, 3.879416688007812*^9, 3.8794194320042133`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"0767bafc-a767-48ad-85ef-245ea9b1721c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Add to the dataset the Total Carbon Intensity", "Subsection",
 CellChangeTimes->{
  3.878095202888431*^9, {3.878490751754402*^9, 3.878490760860165*^9}, {
   3.8784908151806507`*^9, 3.878490819061284*^9}, {3.8784927152585287`*^9, 
   3.878492724398346*^9}, {3.8787162065270653`*^9, 
   3.87871624908082*^9}},ExpressionUUID->"2841fd97-a03b-47f0-825e-\
747d3de9d265"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CI1L", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"finalds", "[", 
     RowBox[{
     "All", ",", " ", 
      "\"\<Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\>\""}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CI2L", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"finalds", "[", 
     RowBox[{
     "All", ",", "  ", 
      "\"\<Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\>\""}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CI3L", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"finalds", "[", 
     RowBox[{
     "All", ",", "  ", 
      "\"\<Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\>\""}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CItotDat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
        "\"\<Carbon Intensity Total (tonnes CO2e/USD mn)\>\"", "->", "#"}], 
        "|>"}], "&"}], "/@", 
      RowBox[{"Normal", "[", 
       RowBox[{"Total", "[", 
        RowBox[{"{", 
         RowBox[{"CI1L", ",", " ", "CI2L", ",", " ", "CI3L"}], "}"}], "]"}], 
       "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Convert", " ", "the", " ", "list", " ", "into", " ", "a", " ", 
    "dataset"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"finalds", " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{"finalds", ",", "CItotDat", ",", "2"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Add", " ", "Carbon", " ", "Intensity"}], "-", 
    RowBox[{
    "Scope", " ", "Total", " ", "column", " ", "to", " ", "the", " ", 
     "dataset"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"finalds", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8784908252724667`*^9, 3.878490859549131*^9}, {
  3.878490919998516*^9, 3.878490962787115*^9}, {3.8784925322187567`*^9, 
  3.8784926038952293`*^9}, {3.8784927320593*^9, 3.878492824701557*^9}, {
  3.8787162247281437`*^9, 3.878716252711678*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"89c65a73-b4ee-4482-9bc9-332b9a5ea9b8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Company" -> "Huadong Medicine Co. Ltd", "ISIN" -> "CNE0000011S1", 
        "integralScore" -> 6198.730158730163, "TCUID" -> 231200, "Country" -> 
        "CHINA", "GICS Sector Name" -> "Health Care", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 86797.55, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 69381.872, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 306679.634, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 17.784, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 14.216, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 62.837, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        4880.565403930404, "IntScaled" -> 0.7898340336781181, "Ratings" -> 
        "D", "Carbon Intensity Total (tonnes CO2e/USD mn)" -> 94.837|>, <|
       "Company" -> "Bank Guizhou", "ISIN" -> "CNE100003PT7", "integralScore" -> 
        5956.190476190488, "TCUID" -> 244879, "Country" -> "CHINA", 
        "GICS Sector Name" -> "Financials", "Carbon-Scope 1  (tonnes CO2e)" -> 
        1848.97, "Carbon-Scope 2  (tonnes CO2e)" -> 13845., 
        "Carbon-Scope 3 (tonnes CO2e)" -> 25774.873, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 1.6, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 11.983, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 22.309, 
        "Carbon Disclosure" -> 
        "Value derived from data provided in Environmental/CSR", 
        "Revenue (USD mn)" -> 1155.374787481436, "IntScaled" -> 
        0.7420605144070941, "Ratings" -> "D", 
        "Carbon Intensity Total (tonnes CO2e/USD mn)" -> 35.892|>, <|
       "Company" -> "EDAP TMS S.A.", "ISIN" -> "US2683111072", 
        "integralScore" -> 5841.904761904767, "TCUID" -> 214060, "Country" -> 
        "FRANCE", "GICS Sector Name" -> "Health Care", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 886.413, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 657.612, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 6183.69, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 18.673, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 13.853, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 130.266, 
        "Carbon Disclosure" -> "Estimated data", "Revenue (USD mn)" -> 
        47.469799995253, "IntScaled" -> 0.7195494320280754, "Ratings" -> "D", 
        "Carbon Intensity Total (tonnes CO2e/USD mn)" -> 
        162.79199999999997`|>, <|
       "Company" -> "Nampak Ltd.", "ISIN" -> "ZAE000071676", "integralScore" -> 
        6500.000000000004, "TCUID" -> 53350, "Country" -> "SOUTH AFRICA", 
        "GICS Sector Name" -> "Materials", "Carbon-Scope 1  (tonnes CO2e)" -> 
        118495.315, "Carbon-Scope 2  (tonnes CO2e)" -> 234700.37, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 379182.155, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 170.341, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 337.389, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 545.087, 
        "Carbon Disclosure" -> "Derived from previous year", 
        "Revenue (USD mn)" -> 695.636499930436, "IntScaled" -> 
        0.8491757480605832, "Ratings" -> "E", 
        "Carbon Intensity Total (tonnes CO2e/USD mn)" -> 1052.817|>, <|
       "Company" -> "Sichuan Hengkang Dev. Co.", "ISIN" -> "", 
        "integralScore" -> 5954.285714285725, "TCUID" -> 203464, "Country" -> 
        "NETHERLANDS", "GICS Sector Name" -> "Financials", 
        "Carbon-Scope 1  (tonnes CO2e)" -> 1685.318, 
        "Carbon-Scope 2  (tonnes CO2e)" -> 34.001, 
        "Carbon-Scope 3 (tonnes CO2e)" -> 12335.502, 
        "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 3.354, 
        "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 0.068, 
        "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 24.548, 
        "Carbon Disclosure" -> "Exact Value from Environmental/CSR", 
        "Revenue (USD mn)" -> 502.507862851605, "IntScaled" -> 
        0.7416853297007767, "Ratings" -> "D", 
        "Carbon Intensity Total (tonnes CO2e/USD mn)" -> 27.97|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "ISIN"} -> 1, {All, "integralScore"} -> 1, {All, "TCUID"} -> 
        1, {All, "Country"} -> 1, {All, "GICS Sector Name"} -> 
        1, {All, "Carbon-Scope 1  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 2  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 3 (tonnes CO2e)"} -> 
        1, {All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Disclosure"} -> 1, {All, "Revenue (USD mn)"} -> 
        1, {All, "IntScaled"} -> 1, {All, "Ratings"} -> 
        1, {All, "Carbon Intensity Total (tonnes CO2e/USD mn)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> TypeSystem`PackageScope`AtomShape[280.], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60], "TCUID" -> 
            TypeSystem`PackageScope`AtomShape[34], "Country" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "GICS Sector Name" -> 
            TypeSystem`PackageScope`AtomShape[115.5], 
            "Carbon-Scope 1  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 2  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 3 (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Carbon Disclosure" -> 
            TypeSystem`PackageScope`AtomShape[560.], "Revenue (USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "IntScaled" -> 
            TypeSystem`PackageScope`AtomShape[60], "Ratings" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Carbon Intensity Total (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "ISIN", "integralScore", "TCUID", "Country", 
         "GICS Sector Name", "Carbon-Scope 1  (tonnes CO2e)", 
         "Carbon-Scope 2  (tonnes CO2e)", "Carbon-Scope 3 (tonnes CO2e)", 
         "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", "Carbon Disclosure",
          "Revenue (USD mn)", "IntScaled", "Ratings", 
         "Carbon Intensity Total (tonnes CO2e/USD mn)"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Financials", "Health Care", "Materials"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["D", "E"]], 
         TypeSystem`Atom[Real]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Company"} -> 
        1, {All, "ISIN"} -> 1, {All, "integralScore"} -> 1, {All, "TCUID"} -> 
        1, {All, "Country"} -> 1, {All, "GICS Sector Name"} -> 
        1, {All, "Carbon-Scope 1  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 2  (tonnes CO2e)"} -> 
        1, {All, "Carbon-Scope 3 (tonnes CO2e)"} -> 
        1, {All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"} -> 
        1, {All, "Carbon Disclosure"} -> 1, {All, "Revenue (USD mn)"} -> 
        1, {All, "IntScaled"} -> 1, {All, "Ratings"} -> 
        1, {All, "Carbon Intensity Total (tonnes CO2e/USD mn)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Company" -> TypeSystem`PackageScope`AtomShape[280.], "ISIN" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "integralScore" -> 
            TypeSystem`PackageScope`AtomShape[60], "TCUID" -> 
            TypeSystem`PackageScope`AtomShape[34], "Country" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "GICS Sector Name" -> 
            TypeSystem`PackageScope`AtomShape[115.5], 
            "Carbon-Scope 1  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 2  (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon-Scope 3 (tonnes CO2e)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Carbon Disclosure" -> 
            TypeSystem`PackageScope`AtomShape[560.], "Revenue (USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60], "IntScaled" -> 
            TypeSystem`PackageScope`AtomShape[60], "Ratings" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Carbon Intensity Total (tonnes CO2e/USD mn)" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Company", "ISIN", "integralScore", "TCUID", "Country", 
         "GICS Sector Name", "Carbon-Scope 1  (tonnes CO2e)", 
         "Carbon-Scope 2  (tonnes CO2e)", "Carbon-Scope 3 (tonnes CO2e)", 
         "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
         "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", "Carbon Disclosure",
          "Revenue (USD mn)", "IntScaled", "Ratings", 
         "Carbon Intensity Total (tonnes CO2e/USD mn)"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Financials", "Health Care", "Materials"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["D", "E"]], 
         TypeSystem`Atom[Real]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     17, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Company", 
                  Style[
                  "Company", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Company"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Company"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISIN", 
                  Style[
                  "ISIN", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ISIN"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ISIN"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["integralScore", 
                  Style[
                  "integralScore", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "integralScore"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "integralScore"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TCUID", 
                  Style[
                  "TCUID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TCUID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TCUID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Country"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GICS Sector Name", 
                  Style[
                  "GICS Sector Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "GICS Sector Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "GICS Sector Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 1  (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 1  (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 1  (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 1  (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 2  (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 2  (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 2  (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 2  (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon-Scope 3 (tonnes CO2e)", 
                  Style[
                  "Carbon-Scope 3 (tonnes CO2e)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon-Scope 3 (tonnes CO2e)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon-Scope 3 (tonnes CO2e)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                  Style[
                  "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Huadong Medicine Co. Ltd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CNE0000011S1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6198.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["231200"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CHINA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Health Care", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86797.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["69381.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306680."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.784"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Bank Guizhou", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CNE100003PT7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5956.19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["244879"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CHINA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Financials", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1848.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13845.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25774.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["EDAP TMS S.A.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["US2683111072", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5841.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["214060"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FRANCE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Health Care", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["886.413"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["657.612"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6183.69"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.673"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Nampak Ltd.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ZAE000071676", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6500.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53350"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SOUTH AFRICA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Materials", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["118495."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["234700."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["379182."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["170.341"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Sichuan Hengkang Dev. Co.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ISIN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5954.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["integralScore"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["203464"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TCUID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NETHERLANDS", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Financials", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["GICS Sector Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1685.32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 1  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 2  (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12335.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon-Scope 3 (tonnes CO2e)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.354"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 17, 1], {1, 17 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 17, 1], {1, 17 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[17, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[17, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 17, 1], {1, 17 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 17, 1], {1, 17 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1306., {108.134033203125, 113.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1306., {108.134033203125, 113.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.878492604113213*^9, 3.878492615513929*^9}, 
   3.8784927477738037`*^9, {3.878492795346176*^9, 3.878492824983602*^9}, {
   3.878492900694974*^9, 3.878492935514345*^9}, 3.878493415460045*^9, 
   3.878495273252953*^9, 3.8786200576404467`*^9, 3.878715031327244*^9, {
   3.878716255009305*^9, 3.878716270015567*^9}, 3.878805394207941*^9, 
   3.879148976154166*^9, 3.8791559465093727`*^9, {3.879325281525175*^9, 
   3.879325308877884*^9}, 3.879354574453087*^9, 3.879416688305077*^9, 
   3.87941943966565*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"143faf8a-972e-4806-91f9-875792db94da"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exploratory Data Analysis", "Section",
 CellChangeTimes->{{3.8790836664971437`*^9, 
  3.879083674820643*^9}},ExpressionUUID->"c4ba50b6-f780-49eb-946b-\
2f462f16f559"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "finalds"}]], "Input",
 CellChangeTimes->{{3.879084612771394*^9, 3.879084620790764*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"21eccc16-790e-4e60-a70d-b036ebf73aad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1768", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.879084621058104*^9, 3.8790848414065228`*^9, 
  3.879155954143017*^9, 3.879354578714726*^9},
 CellLabel->
  "Out[463]=",ExpressionUUID->"43ad3a8c-4b41-4d7d-b170-f9d779e24f46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", " ", "=", " ", 
   RowBox[{"ReverseSort", "@", 
    RowBox[{"Counts", "[", 
     RowBox[{"finalds", "[", 
      RowBox[{"All", ",", " ", "\"\<GICS Sector Name\>\""}], "]"}], "]"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"x1", ",", 
   RowBox[{"ChartLabels", " ", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"Keys", "@", "x1"}]}], ",", "Below", ",", " ", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"Pi", "/", "2"}]}], "]"}], " ", "&"}]}], "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Number of companies in each sector\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.878832299999441*^9, 3.8788323432592993`*^9}, {
  3.878832703687394*^9, 3.8788327125817327`*^9}, {3.879088980326983*^9, 
  3.8790890078534184`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"5756d48e-5a10-4881-afc8-5ab15276c347"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.332737030411449, 0.}, {11.44929131691207, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5507086830879317, 0.}, {1.4492913169120683`, 
             2295.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{31.039574653390765`, 
            57.46818733435144}, {-145.21819631415997`, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2295]& ,
         TagBoxNote->"2295"],
        StyleBox["2295", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2295, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5507086830879317`, 0.}, {2.4492913169120683`, 
             929.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{59.894586652248535`, 
            86.3231993332092}, {-28.622180920543656`, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 929]& ,
         TagBoxNote->"929"],
        StyleBox["929", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[929, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5507086830879317`, 0.}, {3.4492913169120683`, 
             650.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{88.7495986511063, 
            115.17821133206698`}, {-4.807914233267702, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 650]& ,
         TagBoxNote->"650"],
        StyleBox["650", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[650, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5507086830879317`, 0.}, {4.449291316912069, 593.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{117.60461064996407`, 144.03322333092478`}, {
            0.057366057681143445`, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 593]& ,
         TagBoxNote->"593"],
        StyleBox["593", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[593, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.550708683087932, 0.}, {5.449291316912069, 547.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{146.45962264882186`, 172.88823532978253`}, {
            3.9837326082714455`, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 547]& ,
         TagBoxNote->"547"],
        StyleBox["547", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[547, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.550708683087932, 0.}, {6.449291316912069, 468.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{175.31463464767964`, 201.7432473286403}, {
            10.7268403799374, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 468]& ,
         TagBoxNote->"468"],
        StyleBox["468", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[468, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.550708683087932, 0.}, {7.449291316912069, 323.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{204.16964664653742`, 230.59825932749808`}, {
            23.10343059375465, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 323]& ,
         TagBoxNote->"323"],
        StyleBox["323", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[323, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.550708683087932, 0.}, {8.449291316912069, 294.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{233.02465864539516`, 259.45327132635583`}, {
            25.5787486365181, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 294]& ,
         TagBoxNote->"294"],
        StyleBox["294", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[294, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.550708683087933, 0.}, {9.44929131691207, 261.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{261.87967064425294`, 288.30828332521367`}, {
            28.39548985759375, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 261]& ,
         TagBoxNote->"261"],
        StyleBox["261", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[261, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.550708683087933, 0.}, {10.44929131691207, 120.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{290.7346826431107, 317.16329532407144`}, {
            40.4306568930988, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 120]& ,
         TagBoxNote->"120"],
        StyleBox["120", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[120, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{10.550708683087933`, 0.}, {11.44929131691207, 96.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{319.5896946419685, 346.0183073229292}, {
            42.479195962972, 51.1733522424648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 96]& ,
         TagBoxNote->"96"],
        StyleBox["96", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[96, {}], "Tooltip"]& ]}}, {}, {}}, {}, {InsetBox[
     RotationBox["\<\"Financials\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {1., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Industrials\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {2., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Consumer Discretionary\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {3., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Information Technology\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {4., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Materials\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {5., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Health Care\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {6., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Real Estate\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {7., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Consumer Staples\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {8., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Communication Services\"\>",
      BoxRotation->1.5707963267948966`], 
     Offset[{0, -4}, {9.000000000000002, 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     RotationBox["\<\"Energy\"\>",
      BoxRotation->1.5707963267948966`], 
     Offset[{0, -4}, {10.000000000000002, 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     RotationBox["\<\"Utilities\"\>",
      BoxRotation->1.5707963267948966`], 
     Offset[{0, -4}, {11.000000000000002, 0.}], 
     ImageScaled[{0.5, 1}]]}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.332737030411449, 0.}, {11.67162240264208, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5507086830879317, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5507086830879317, 0.}]}],
          LineBox[{{11.449291316912069`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {11.449291316912069`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.332737030411449, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Number of companies in each sector\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.87883234423953*^9, 3.8788327132203197`*^9, 3.8790836769852333`*^9, 
   3.879084843530794*^9, {3.879089002892417*^9, 3.879089008575879*^9}, 
   3.8791559563961773`*^9, {3.8793252833813477`*^9, 3.879325312347659*^9}, 
   3.879354584935548*^9, 3.879419442029084*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"27e88ef9-1a3b-4988-80f2-4e147442461d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.879088295626131*^9},ExpressionUUID->"e1529622-9291-44a8-be5c-\
b09e04bfff93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"finalds", "[", 
    RowBox[{"All", ",", " ", "\"\<integralScore\>\""}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Number of companies for integralScore values\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879084447728084*^9, 3.879084502593306*^9}, {
  3.879084540544734*^9, 3.879084592330991*^9}, {3.8790890154624033`*^9, 
  3.879089034389842*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"b48cf2f3-be79-417e-9329-af8519c3734c"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2000., 0}, {2500., 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.15832666132907, 60.78708421282481}, {
           98.1577442392817, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2500., 0}, {3000., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{60.28708421282481, 89.91584176432058}, {
           98.28075789982907, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3000., 0}, {3500., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{89.41584176432058, 119.04459931581631`}, {
           98.28075789982907, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3500., 0}, {4000., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{118.54459931581631`, 148.17335686731207`}, {
           98.34226473010276, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4000., 0}, {4500., 54.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{147.67335686731207`, 177.30211441880783`}, {
           95.08240272559746, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 54]& ,
        TagBoxNote->"54"],
       StyleBox["54", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[54, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4500., 0}, {5000., 178.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{176.80211441880783`, 206.43087197030354`}, {
           87.45555577166057, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 178]& ,
        TagBoxNote->"178"],
       StyleBox["178", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[178, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5000., 0}, {5500., 323.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{205.93087197030354`, 235.5596295217993}, {
           78.53706538197629, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 323]& ,
        TagBoxNote->"323"],
       StyleBox["323", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[323, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5500., 0}, {6000., 1554.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{235.0596295217993, 264.6883870732951}, {
           2.8221573150704273`, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1554]& ,
        TagBoxNote->"1554"],
       StyleBox["1554", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1554, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6000., 0}, {6500., 3119.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{264.1883870732951, 
           293.8171446247908}, {-93.4360320632461, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3119]& ,
        TagBoxNote->"3119"],
       StyleBox["3119", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3119, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6500., 0}, {7000., 1259.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{293.3171446247908, 322.94590217628655`}, {
           20.966672245807416`, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1259]& ,
        TagBoxNote->"1259"],
       StyleBox["1259", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1259, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7000., 0}, {7500., 80.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{322.44590217628655`, 352.0746597277823}, {
           93.48322513848167, 98.90377156037644}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 80]& ,
        TagBoxNote->"80"],
       StyleBox["80", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[80, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1890., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Number of companies for integralScore values\"", TraditionalForm],
  PlotRange->{{2000., 7500.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8790844771428556`*^9, 3.87908449159438*^9}, {
   3.879084555531775*^9, 3.87908459279572*^9}, 3.879084847287459*^9, 
   3.879089034973052*^9, 3.879155960967038*^9, {3.8793252939542522`*^9, 
   3.879325314615931*^9}, 3.879354587282126*^9, 3.879419445265633*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"880a850d-6e6b-418a-8f32-e9fa701bf0d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x2", " ", "=", " ", 
   RowBox[{"Counts", "[", 
    RowBox[{"finalds", "[", 
     RowBox[{"All", ",", " ", "\"\<Ratings\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "[", "\"\<A\>\"", "]"}], ",", " ", 
     RowBox[{"x2", "[", "\"\<B\>\"", "]"}], ",", " ", 
     RowBox[{"x2", "[", "\"\<C\>\"", "]"}], ",", " ", 
     RowBox[{"x2", "[", "\"\<D\>\"", "]"}], ",", " ", 
     RowBox[{"x2", "[", "\"\<E\>\"", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"x3", ",", 
   RowBox[{"ChartLabels", " ", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", "\"\<D\>\"", 
        ",", "\"\<E\>\""}], "}"}], ",", "Below", ",", " ", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"Pi", "/", "2"}]}], "]"}], " ", "&"}]}], "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Number of companies for each Rating (A, B, C, D, E) \>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.879084647765478*^9, {3.879089043466652*^9, 3.8790890684781313`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"adaaf859-359c-4c64-922f-f922f86c28aa"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.45075018208302986`, 0.}, {5.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6649999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 7.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{31.03957465339077, 89.4268350571284}, {
            99.67448128538092, 100.5761335524859}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 7]& ,
         TagBoxNote->"7"],
        StyleBox["7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             38.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{95.18744271984096, 153.5747031235786}, {
            97.8957355310589, 100.5761335524859}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 38]& ,
         TagBoxNote->"38"],
        StyleBox["38", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[38, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             263.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{159.33531078629113`, 217.7225711900288}, {
            84.9854840883991, 100.5761335524859}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 263]& ,
         TagBoxNote->"263"],
        StyleBox["263", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[263, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             3414.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{223.48317885274133`, 
            281.87043925647896`}, {-95.8154150041389, 100.5761335524859}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3414]& ,
         TagBoxNote->"3414"],
        StyleBox["3414", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3414, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 2854.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{287.63104691919153`, 
            346.01830732292916`}, {-63.68323363574116, 100.5761335524859}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2854]& ,
         TagBoxNote->"2854"],
        StyleBox["2854", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2854, {}], "Tooltip"]& ]}}, {}, {}}, {}, {InsetBox[
     RotationBox["\<\"A\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {1., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"B\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {2., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"C\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {3., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"D\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {4., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"E\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {5., 0.}], 
     ImageScaled[{0.5, 1}]]}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.45075018208302986`, 0.}, {5.551210779315368, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{5.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {5.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.45075018208302986`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Number of companies for each Rating (A, B, C, D, E) \"", 
    TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.879084648684904*^9, 3.879084851333737*^9, 3.8790890692270393`*^9, 
   3.879155966890028*^9, {3.879325295797743*^9, 3.87932531644877*^9}, 
   3.879354589386361*^9, 3.879419448523576*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"a4cc7def-9f88-43aa-9522-e2b5ff774e99"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8790892553746843`*^9, 
  3.87908928086124*^9}},ExpressionUUID->"61586cba-14da-4c50-98ff-\
8bab0c59ecc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x4", " ", "=", " ", 
   RowBox[{"ReverseSort", "@", 
    RowBox[{"finalds", "[", 
     RowBox[{
      RowBox[{"GroupBy", "[", "\"\<GICS Sector Name\>\"", "]"}], ",", "Mean", 
      ",", 
      RowBox[{"{", "\"\<integralScore\>\"", "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x5", " ", "=", " ", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Values", "@", 
     RowBox[{"Values", "@", 
      RowBox[{"Normal", "@", "x4"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"x5", ",", 
   RowBox[{"ChartLabels", " ", "\[Rule]", " ", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"Keys", "@", "x4"}]}], ",", "Below", ",", " ", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"Pi", "/", "2"}]}], "]"}], " ", "&"}]}], "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Aggregated Integral Score in each sector\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.879088582393643*^9, 3.879088606859907*^9}, {
   3.879088817958867*^9, 3.8790888475937138`*^9}, {3.879088890538597*^9, 
   3.8790888912859383`*^9}, {3.8790890777019043`*^9, 
   3.8790891313046007`*^9}, {3.8790891667778807`*^9, 3.879089168292939*^9}, {
   3.879089224120842*^9, 3.879089284209132*^9}, {3.8790895490288343`*^9, 
   3.8790895860854683`*^9}, {3.8791559781725197`*^9, 3.879155993220313*^9}, 
   3.879325325705998*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"9864a534-e22e-4b02-8543-31db9531ec9f"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.332737030411449, 0.}, {11.44929131691207, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5507086830879317, 0.}, {1.4492913169120683`, 
             6168.8983492842635`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{31.039574653390762`, 
            57.468187334351434`}, {-145.21819631415997`, 51.17335224246483}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6168.8983492842635`]& ,
         TagBoxNote->"6168.8983492842635"],
        StyleBox["6168.8983492842635`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6168.8983492842635`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5507086830879317`, 0.}, {2.4492913169120683`, 
             6168.230653730441}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{59.89458665224853, 
            86.3231993332092}, {-145.19699383867777`, 51.17335224246483}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6168.230653730441]& ,
         TagBoxNote->"6168.230653730441"],
        StyleBox["6168.230653730441`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6168.230653730441, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5507086830879317`, 0.}, {3.4492913169120683`, 
             6164.614222723808}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{88.7495986511063, 
            115.17821133206697`}, {-145.08215513814713`, 51.17335224246483}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6164.614222723808]& ,
         TagBoxNote->"6164.614222723808"],
        StyleBox["6164.614222723808`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6164.614222723808, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5507086830879317`, 0.}, {4.449291316912069, 
             6152.664749417438}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{117.60461064996406`, 
            144.03322333092476`}, {-144.70270313587957`, 51.17335224246483}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6152.664749417438]& ,
         TagBoxNote->"6152.664749417438"],
        StyleBox["6152.664749417438`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6152.664749417438, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.550708683087932, 0.}, {5.449291316912069, 
             6125.023977004209}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{146.45962264882186`, 
            172.88823532978253`}, {-143.82497855609995`, 51.17335224246483}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6125.023977004209]& ,
         TagBoxNote->"6125.023977004209"],
        StyleBox["6125.023977004209`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6125.023977004209, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.550708683087932, 0.}, {6.449291316912069, 
             6115.903574847407}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{175.3146346476796, 
            201.74324732864028`}, {-143.53536287420718`, 51.17335224246483}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6115.903574847407]& ,
         TagBoxNote->"6115.903574847407"],
        StyleBox["6115.903574847407`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6115.903574847407, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.550708683087932, 0.}, {7.449291316912069, 
             6106.248352292772}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{204.1696466465374, 
            230.59825932749806`}, {-143.22876412824058`, 51.17335224246483}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6106.248352292772]& ,
         TagBoxNote->"6106.248352292772"],
        StyleBox["6106.248352292772`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6106.248352292772, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.550708683087932, 0.}, {8.449291316912069, 
             6053.393452794774}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{233.02465864539514`, 
            259.45327132635583`}, {-141.55037237573765`, 51.17335224246483}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6053.393452794774]& ,
         TagBoxNote->"6053.393452794774"],
        StyleBox["6053.393452794774`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6053.393452794774, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.550708683087933, 0.}, {9.44929131691207, 
             6042.968610327574}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{261.87967064425294`, 
            288.3082833252136}, {-141.21933457632315`, 51.17335224246483}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6042.968610327574]& ,
         TagBoxNote->"6042.968610327574"],
        StyleBox["6042.968610327574`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6042.968610327574, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.550708683087933, 0.}, {10.44929131691207, 
             6041.979711119833}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{290.7346826431107, 
            317.1632953240714}, {-141.1879323734982, 51.17335224246483}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6041.979711119833]& ,
         TagBoxNote->"6041.979711119833"],
        StyleBox["6041.979711119833`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6041.979711119833, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{10.550708683087933`, 0.}, {11.44929131691207, 
             5806.528108309398}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{319.5896946419685, 
            346.01830732292916`}, {-133.71123613485344`, 51.17335224246483}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5806.528108309398]& ,
         TagBoxNote->"5806.528108309398"],
        StyleBox["5806.528108309398`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5806.528108309398, {}], "Tooltip"]& ]}}, {}, {}}, {}, {
    InsetBox[
     RotationBox["\<\"Industrials\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {1., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Real Estate\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {2., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Financials\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {3., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Information Technology\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {4., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Consumer Discretionary\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {5., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Health Care\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {6., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Utilities\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {7., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Materials\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {8., 0.}], 
     ImageScaled[{0.5, 1}]], InsetBox[
     RotationBox["\<\"Consumer Staples\"\>",
      BoxRotation->1.5707963267948966`], 
     Offset[{0, -4}, {9.000000000000002, 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     RotationBox["\<\"Communication Services\"\>",
      BoxRotation->1.5707963267948966`], 
     Offset[{0, -4}, {10.000000000000002, 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     RotationBox["\<\"Energy\"\>",
      BoxRotation->1.5707963267948966`], 
     Offset[{0, -4}, {11.000000000000002, 0.}], 
     ImageScaled[{0.5, 1}]]}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.332737030411449, 0.}, {11.67162240264208, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5507086830879317, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5507086830879317, 0.}]}],
          LineBox[{{11.449291316912069`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {11.449291316912069`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.332737030411449, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Aggregated Integral Score in each sector\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.8790885978513203`*^9, {3.879088818982444*^9, 3.8790888481246357`*^9}, 
   3.879088891933947*^9, 3.879088924848865*^9, {3.8790890953920116`*^9, 
   3.879089131777567*^9}, 3.879089169791932*^9, {3.879089226786725*^9, 
   3.879089233705319*^9}, 3.879089268782674*^9, {3.879089379822844*^9, 
   3.8790893897917624`*^9}, {3.8790895498507433`*^9, 3.879089586629397*^9}, 
   3.879090183796979*^9, {3.879155969086055*^9, 3.87915599382867*^9}, {
   3.879325298192086*^9, 3.879325326285351*^9}, 3.879354593061714*^9, 
   3.8794194516638107`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"5b318a20-a38c-4caa-99df-e4ab5487fd80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{"All", ",", " ", "\"\<Carbon-Scope 1  (tonnes CO2e)\>\""}], 
      "]"}], ",", 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Green", ",", 
         RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{"All", ",", " ", "\"\<Carbon-Scope 2  (tonnes CO2e)\>\""}], 
      "]"}], ",", 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Orange", ",", 
         RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{"All", ",", " ", "\"\<Carbon-Scope 3 (tonnes CO2e)\>\""}], 
      "]"}], ",", 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g1", ",", "g2", ",", " ", "g3"}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Carbon-Scope 1,2,3 (tonnes CO2e)\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8788323527722597`*^9, 3.8788323815942993`*^9}, {
  3.878832422144025*^9, 3.8788325115157127`*^9}, {3.879083807000125*^9, 
  3.879083832969097*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"883ef2e7-3172-40b9-8c55-4ffc16691005"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0}, {141417.256276, 5794.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{27.703611642313973`, 
                42.50165750175579}, {-105.83793791208598`, \
-17.592483717630444`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5794]& ,
            TagBoxNote->"5794"],
           StyleBox["5794", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5794, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{141417.256276, 0}, {282834.512552, 224.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{42.00165750175579, 
                56.7997033611976}, {-21.484782947792347`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 224]& ,
            TagBoxNote->"224"],
           StyleBox["224", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[224, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{282834.512552, 0}, {424251.768828, 93.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{56.2997033611976, 
                71.09774922063941}, {-19.50089366586731, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 93]& ,
            TagBoxNote->"93"],
           StyleBox["93", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[93, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{424251.768828, 0}, {565669.025104, 59.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{70.59774922063941, 
                85.39579508008121}, {-18.985991104146308`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 59]& ,
            TagBoxNote->"59"],
           StyleBox["59", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[59, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{565669.025104, 0}, {707086.2813800001, 44.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{84.89579508008121, 
                99.69384093952304}, {-18.758828209269396`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 44]& ,
            TagBoxNote->"44"],
           StyleBox["44", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[44, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{707086.2813800001, 0}, {848503.5376559999, 32.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{99.19384093952304, 
                113.99188679896483`}, {-18.577097893367863`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 32]& ,
            TagBoxNote->"32"],
           StyleBox["32", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[32, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{848503.5376559999, 0}, {989920.793932, 21.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{113.49188679896483`, 
                128.28993265840666`}, {-18.41051177045813, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 21]& ,
            TagBoxNote->"21"],
           StyleBox["21", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[21, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{989920.793932, 0}, {1.131338050208*^6, 26.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{127.78993265840666`, 
                142.58797851784846`}, {-18.486232735417097`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 26]& ,
            TagBoxNote->"26"],
           StyleBox["26", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[26, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.131338050208*^6, 0}, {1.272755306484*^6, 26.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{142.08797851784846`, 
                156.8860243772903}, {-18.486232735417097`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 26]& ,
            TagBoxNote->"26"],
           StyleBox["26", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[26, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.272755306484*^6, 0}, {1.41417256276*^6, 18.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{156.3860243772903, 
                171.1840702367321}, {-18.36507919148275, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 18]& ,
            TagBoxNote->"18"],
           StyleBox["18", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[18, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.41417256276*^6, 0}, {1.555589819036*^6, 6.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{170.6840702367321, 
                185.4821160961739}, {-18.183348875581217`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.555589819036*^6, 0}, {1.697007075312*^6, 12.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{184.9821160961739, 
                199.7801619556157}, {-18.274214033531983`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.697007075312*^6, 0}, {1.8384243315879998`*^6, 
                 9.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{199.2801619556157, 
                214.0782078150575}, {-18.228781454556596`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.8384243315879998`*^6, 0}, {
                 1.9798415878640001`*^6, 15.}, "RoundingRadius" -> 0]},
               ImageSizeCache->{{213.5782078150575, 
                228.37625367449937`}, {-18.319646612507363`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 15]& ,
            TagBoxNote->"15"],
           StyleBox["15", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[15, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.9798415878640001`*^6, 0}, {2.12125884414*^6, 
                 10.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{227.87625367449937`, 
                242.67429953394117`}, {-18.243925647548394`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.12125884414*^6, 0}, {2.262676100416*^6, 7.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{242.17429953394117`, 
                256.97234539338297`}, {-18.198493068573008`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.262676100416*^6, 0}, {2.4040933566920003`*^6, 
                 8.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{256.47234539338297`, 
                271.2703912528248}, {-18.213637261564806`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.4040933566920003`*^6, 0}, {2.545510612968*^6, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{270.7703912528248, 
                285.5684371122666}, {-18.16820468258942, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.545510612968*^6, 0}, {2.6869278692440004`*^6, 
                 6.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{285.0684371122666, 
                299.8664829717085}, {-18.183348875581217`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.6869278692440004`*^6, 0}, {
                 2.8283451255200002`*^6, 8.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{299.3664829717085, 
                314.1645288311503}, {-18.213637261564806`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.8283451255200002`*^6, 0}, {2.969762381796*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{313.6645288311503, 
                328.4625746905921}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.969762381796*^6, 0}, {3.1111796380720004`*^6, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{327.9625746905921, 
                342.7606205500339}, {-18.16820468258942, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.1111796380720004`*^6, 0}, {3.252596894348*^6, 
                 4.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{342.2606205500339, 
                357.0586664094757}, {-18.153060489597628`, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.252596894348*^6, 0}, {3.394014150624*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{356.5586664094757, 
                371.3567122689175}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.5354314069000003`*^6, 0}, {3.676848663176*^6, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{385.15475812835933`, 
                399.95280398780113`}, {-18.16820468258942, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.676848663176*^6, 0}, {3.818265919452*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{399.45280398780113`, 
                414.25084984724293`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.818265919452*^6, 0}, {3.9596831757280002`*^6, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{413.75084984724293`, 
                428.54889570668473`}, {-18.13791629660583, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.9596831757280002`*^6, 0}, {
                 4.1011004320040005`*^6, 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{428.04889570668473`, 
                442.8469415661266}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.1011004320040005`*^6, 0}, {
                 4.242517688279999*^6, 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{442.3469415661266, 
                457.1449874255683}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.242517688279999*^6, 0}, {4.383934944556*^6, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{456.6449874255683, 
                471.44303328501013`}, {-18.13791629660583, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.383934944556*^6, 0}, {4.525352200832*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{470.94303328501013`, 
                485.741079144452}, {-18.12277210361404, -17.59248371763045}}],
              
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.525352200832*^6, 0}, {4.666769457107999*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{485.241079144452, 
                500.03912500389373`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.666769457107999*^6, 0}, {4.808186713384*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{499.53912500389373`, 
                514.3371708633355}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.94960396966*^6, 0}, {5.091021225935999*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{528.1352167227773, 
                542.9332625822191}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.232438482212*^6, 0}, {5.373855738488*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{556.731308441661, 
                571.5293543011028}, {-18.13791629660583, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.373855738488*^6, 0}, {5.515272994764*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{571.0293543011028, 
                585.8274001605446}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.515272994764*^6, 0}, {5.65669025104*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{585.3274001605446, 
                600.1254460199864}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.65669025104*^6, 0}, {5.798107507316*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{599.6254460199864, 
                614.4234918794282}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.798107507316*^6, 0}, {5.939524763592*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{613.9234918794282, 
                628.7215377388701}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.939524763592*^6, 0}, {6.0809420198679995`*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{628.2215377388701, 
                643.0195835983118}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.0809420198679995`*^6, 0}, {6.222359276144*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{642.5195835983118, 
                657.3176294577537}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{6.222359276144*^6, 0}, {6.36377653242*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{656.8176294577537, 
                671.6156753171955}, {-18.13791629660583, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.36377653242*^6, 0}, {6.505193788695999*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{671.1156753171955, 
                685.9137211766372}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.505193788695999*^6, 0}, {6.646611044972*^6, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{685.4137211766372, 
                700.2117670360791}, {-18.13791629660583, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.788028301248*^6, 0}, {6.929445557523999*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{714.0098128955209, 
                728.8078587549627}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.929445557523999*^6, 0}, {7.0708628138*^6, 2.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{728.3078587549627, 
                743.1059046144045}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.353697326351999*^6, 0}, {7.495114582628*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{771.2019963332881, 
                786.0000421927299}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.495114582628*^6, 0}, {7.636531838904*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{785.5000421927299, 
                800.2980880521718}, {-18.13791629660583, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.636531838904*^6, 0}, {7.777949095179999*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{799.7980880521718, 
                814.5961339116135}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.777949095179999*^6, 0}, {7.919366351456*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{814.0961339116135, 
                828.8941797710554}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.919366351456*^6, 0}, {8.060783607732*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{828.3941797710554, 
                843.1922256304972}, {-18.13791629660583, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.060783607732*^6, 0}, {8.202200864008*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{842.6922256304972, 
                857.490271489939}, {-18.10762791062224, -17.59248371763045}}],
              
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.202200864008*^6, 0}, {8.343618120284*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{856.990271489939, 
                871.7883173493809}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.767869889112*^6, 0}, {8.909287145388*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{914.1824549277062, 
                928.9805007871481}, {-18.13791629660583, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.909287145388*^6, 0}, {9.050704401664*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{928.4805007871481, 
                943.2785466465899}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{9.050704401664*^6, 0}, {9.19212165794*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{942.7785466465899, 
                957.5765925060317}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.19212165794*^6, 0}, {9.333538914216*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{957.0765925060317, 
                971.8746383654736}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.474956170491999*^6, 0}, {9.616373426768*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{985.6726842249152, 
                1000.4707300843571`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.616373426768*^6, 0}, {9.757790683044*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{999.9707300843571, 
                1014.7687759437989`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.89920793932*^6, 0}, {1.0040625195596*^7, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1028.5668218032406`, 
                1043.3648676626826`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.0464876964424*^7, 0}, {1.06062942207*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1085.759005241008, 
                1100.5570511004498`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.06062942207*^7, 0}, {1.0747711476976*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1100.0570511004498`, 
                1114.8550969598916`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.0747711476976*^7, 0}, {1.0889128733252*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1114.3550969598916`, 
                1129.1531428193334`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.1171963245804*^7, 0}, {1.131338050208*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1157.2492345382173`, 
                1172.0472803976588`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.131338050208*^7, 0}, {1.1454797758356*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1171.5472803976588`, 
                1186.3453262571006`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.1454797758356*^7, 0}, {1.1596215014632*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1185.8453262571006`, 
                1200.6433721165424`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.1596215014632*^7, 0}, {1.1737632270908*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1200.1433721165424`, 
                1214.9414179759842`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.2161884039735999`*^7, 0}, {1.2303301296012*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1257.3355555543096`, 
                1272.1336014137514`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.2303301296012*^7, 0}, {1.2444718552288*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1271.6336014137514`, 
                1286.4316472731934`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.2868970321116*^7, 0}, {1.3010387577391999`*^7,
                  2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1328.8257848515188`, 
                1343.6238307109604`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.3010387577391999`*^7, 0}, {1.3151804833668*^7,
                  2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1343.1238307109604`, 
                1357.9218765704024`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.3576056602496*^7, 0}, {1.3717473858772*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1400.3160141487278`, 
                1415.1140600081696`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.3717473858772*^7, 0}, {1.3858891115048*^7, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1414.6140600081696`, 
                1429.4121058676117`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.3858891115048*^7, 0}, {1.4000308371323999`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1428.9121058676117`, 
                1443.7101517270532`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.4283142883876*^7, 0}, {1.4424560140152*^7, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1471.8062434459368`, 
                1486.6042893053786`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.4848811908979999`*^7, 0}, {1.4990229165256*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1528.998426883704, 
                1543.7964727431458`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.4990229165256*^7, 0}, {1.5131646421532*^7, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1543.2964727431458`, 
                1558.0945186025879`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.5838732702912*^7, 0}, {1.5980149959188*^7, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1629.0847478997969`, 
                1643.8827937592387`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.5980149959188*^7, 0}, {1.6121567215464*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1643.3827937592387`, 
                
                1658.1808396186805`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.6121567215464*^7, 0}, {1.626298447174*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1657.6808396186805`, 
                1672.4788854781223`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.6545818984292*^7, 0}, {1.6687236240568*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1700.574977197006, 
                1715.373023056448}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.697007075312*^7, 0}, {1.7111488009395998`*^7, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1743.4691147753315`, 
                1758.267160634773}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.7111488009395998`*^7, 0}, {1.7252905265672*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1757.767160634773, 
                1772.5652064942149`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.7959991547052*^7, 0}, {1.8101408803328*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1843.555435791424, 
                1858.353481650866}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.838424331588*^7, 0}, {1.8525660572156*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1886.4495733697495`, 
                1901.2476192291913`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.8525660572156*^7, 0}, {1.8667077828432*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1900.7476192291913`, 
                1915.5456650886333`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.8949912340983998`*^7, 0}, {1.909132959726*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1943.6417568075165`, 
                1958.4398026669585`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.9656998622364*^7, 0}, {1.979841587864*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2015.1319861047257`, 
                2029.9300319641675`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.1071171185124*^7, 0}, {2.12125884414*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2158.1124446991435`, 
                2172.9104905585855`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.12125884414*^7, 0}, {2.1354005697676*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2172.4104905585855`, 
                2187.208536418027}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.191967472278*^7, 0}, {2.2061091979056*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2243.9007198557947`, 
                2258.6987657152363`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.5030854360852*^7, 0}, {2.5172271617128*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2558.4577287635143`, 
                2573.2557746229563`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.686927869244*^7, 0}, {2.7010695948716*^7, 2.},
                  "RoundingRadius" -> 0]},
               ImageSizeCache->{{2744.332324936258, 
                2759.1303707957}, {-18.12277210361404, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.111179638072*^7, 0}, {3.1253213636996*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3173.2737007195124`, 
                3188.0717465789544`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.1677465405824*^7, 0}, {3.18188826621*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3230.4658841572796`, 
                3245.263930016721}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.252596894348*^7, 0}, {3.2667386199756*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3316.2541593139304`, 
                3331.0522051733724`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.2950220712308*^7, 0}, {3.3091637968584*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3359.148296892256, 
                3373.946342751698}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.3657306993688*^7, 0}, {3.3798724249964006`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3430.638526189465, 
                3445.4365720489072`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.3798724249964006`*^7, 0}, {3.394014150624*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3444.9365720489072`, 
                3459.734617908349}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.4930062300172*^7, 0}, {3.5071479556448005`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3559.320938924441, 
                3574.1189847838837`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.5495731325276*^7, 0}, {3.563714858155201*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3616.513122362209, 
                3631.311168221651}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.775840742569201*^7, 0}, {3.7899824681968*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3845.281856113278, 
                3860.0799019727197`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.8041241938244*^7, 0}, {3.8182659194520004`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3873.877947832161, 
                3888.6759936916033`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.8465493707072005`*^7, 0}, {3.8606910963348*^7,
                  2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3916.772085410487, 
                3931.5701312699284`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.9455414501004*^7, 0}, {3.959683175728001*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4016.8584064265797`, 
                4031.6564522860217`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.959683175728001*^7, 0}, {3.9738249013556*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4031.1564522860217`, 
                4045.9544981454633`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.0021083526108004`*^7, 0}, {4.0162500782384*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4074.050589864347, 
                4088.8486357237884`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.101100432004*^7, 0}, {4.115242157631601*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4174.13691088044, 
                4188.934956739882}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.115242157631601*^7, 0}, {4.1293838832592*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4188.434956739882, 
                4203.233002599323}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.171809060142*^7, 0}, {4.1859507857696004`*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4245.6271401776485`, 
                4260.4251860370905`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.5253522008320004`*^7, 0}, {4.5394939264596*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4603.078286663695, 
                4617.876332523136}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.9354622440324*^7, 0}, {4.9496039696600005`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5017.721616587507, 
                5032.519662446949}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.1900133053292006`*^7, 0}, {5.2041550309568*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5275.08644205746, 
                5289.884487916901}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.8405326841988005`*^7, 0}, {5.8546744098264*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5932.796551591783, 
                5947.594597451224}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.8829578610816*^7, 0}, {5.8970995867092006`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5975.690689170108, 
                5990.48873502955}, {-18.10762791062224, -17.59248371763045}}],
              
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.293067904282001*^7, 0}, {6.3072096299096*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{6390.334019093921, 
                6405.132064953363}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.858736929386*^7, 0}, {6.8728786550136*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{6962.255853471594, 
                6977.053899331035}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.42440595449*^7, 0}, {7.4385476801176*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{7534.177687849266, 
                7548.975733708707}, {-18.10762791062224, -17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.09881208126452*^8, 0}, {
                 1.1002262538272801`*^8, 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{11137.285244428602`, 
                11152.083290288045`}, {-18.10762791062224, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.41417256276*^8, 0}, {1.4155867353227597`*^8, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14325.749471084124`, 
                14340.547516943565`}, {-18.12277210361404, \
-17.59248371763045}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-28990.53753658, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{24.734150209076606`, 2.953611136687755}, {
       15.8923948326823, 3.694564550577695}},
      PlotRange->{{0., 1.449526876829*^6}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {105.98891295300908, -65.23254034255807},
      ImageScaled[{0.5, 0.5}], {197.04009522597204, 124.2524577953487}], 
    InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 0}, {20063., 4812.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{27.697551033848043`, 
                42.49559689328984}, {-105.83793791208599`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4812]& ,
            TagBoxNote->"4812"],
           StyleBox["4812", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4812, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{20063., 0}, {40126., 520.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{41.99559689328984, 
                56.79364275273167}, {-27.574536124346352`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 520]& ,
            TagBoxNote->"520"],
           StyleBox["520", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[520, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{40126., 0}, {60189., 243.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{56.29364275273167, 
                71.09168861217347}, {-22.52351974615346, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 243]& ,
            TagBoxNote->"243"],
           StyleBox["243", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[243, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{60189., 0}, {80252., 170.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{70.59168861217347, 
                85.38973447161527}, {-21.192385465979882`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 170]& ,
            TagBoxNote->"170"],
           StyleBox["170", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[170, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{80252., 0}, {100315., 107.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{84.88973447161527, 
                99.68778033105707}, {-20.043598347473917`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 107]& ,
            TagBoxNote->"107"],
           StyleBox["107", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[107, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{100315., 0}, {120378., 70.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{99.18778033105707, 
                113.98582619049893`}, {-19.368913849303752`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 70]& ,
            TagBoxNote->"70"],
           StyleBox["70", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[70, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{120378., 0}, {140441., 52.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{113.48582619049893`, 
                128.28387204994073`}, {-19.04068895830205, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 52]& ,
            TagBoxNote->"52"],
           StyleBox["52", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[52, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{140441., 0}, {160504., 60.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{127.78387204994073`, 
                142.58191790938253`}, {-19.186566687636137`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 60]& ,
            TagBoxNote->"60"],
           StyleBox["60", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[60, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{160504., 0}, {180567., 36.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{142.08191790938253`, 
                156.87996376882433`}, {-18.748933499633864`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 36]& ,
            TagBoxNote->"36"],
           StyleBox["36", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[36, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{180567., 0}, {200630., 31.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{156.37996376882433`, 
                171.17800962826612`}, {-18.65775991880006, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 31]& ,
            TagBoxNote->"31"],
           StyleBox["31", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[31, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{200630., 0}, {220693., 28.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{170.67800962826612`, 
                185.47605548770792`}, {-18.603055770299775`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 28]& ,
            TagBoxNote->"28"],
           StyleBox["28", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[28, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{220693., 0}, {240756., 33.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{184.97605548770792`, 
                199.77410134714972`}, {-18.69422935113358, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 33]& ,
            TagBoxNote->"33"],
           StyleBox["33", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[33, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{240756., 0}, {260819., 25.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{199.27410134714972`, 
                214.07214720659152`}, {-18.54835162179949, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 25]& ,
            TagBoxNote->"25"],
           StyleBox["25", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[25, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{260819., 0}, {280882., 26.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{213.57214720659152`, 
                228.37019306603338`}, {-18.56658633796625, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 26]& ,
            TagBoxNote->"26"],
           StyleBox["26", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[26, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{280882., 0}, {300945., 20.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{227.87019306603338`, 
                242.66823892547518`}, {-18.457178040965687`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 20]& ,
            TagBoxNote->"20"],
           StyleBox["20", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[20, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{300945., 0}, {321008., 19.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{242.16823892547518`, 
                256.966284784917}, {-18.43894332479892, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 19]& ,
            TagBoxNote->"19"],
           StyleBox["19", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[19, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{321008., 0}, {341071., 15.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{256.466284784917, 
                271.26433064435884`}, {-18.366004460131876`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 15]& ,
            TagBoxNote->"15"],
           StyleBox["15", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[15, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{341071., 0}, {361134., 13.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{270.76433064435884`, 
                285.56237650380064`}, {-18.329535027798357`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 13]& ,
            TagBoxNote->"13"],
           StyleBox["13", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[13, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{361134., 0}, {381197., 14.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{285.06237650380064`, 
                299.86042236324244`}, {-18.347769743965117`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 14]& ,
            TagBoxNote->"14"],
           StyleBox["14", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[14, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{381197., 0}, {401260., 14.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{299.36042236324244`, 
                314.15846822268423`}, {-18.347769743965117`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 14]& ,
            TagBoxNote->"14"],
           StyleBox["14", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[14, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{401260., 0}, {421323., 9.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{313.65846822268423`, 
                328.45651408212603`}, {-18.256596163131313`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{421323., 0}, {441386., 13.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{327.95651408212603`, 
                342.75455994156783`}, {-18.329535027798357`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 13]& ,
            TagBoxNote->"13"],
           StyleBox["13", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[13, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{441386., 0}, {461449., 15.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{342.25455994156783`, 
                357.05260580100963`}, {-18.366004460131876`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 15]& ,
            TagBoxNote->"15"],
           StyleBox["15", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[15, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{461449., 0}, {481512., 8.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{356.55260580100963`, 
                371.35065166045143`}, {-18.238361446964547`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{481512., 0}, {501575., 5.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{370.85065166045143`, 
                385.64869751989323`}, {-18.18365729846426, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{501575., 0}, {521638., 4.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{385.14869751989323`, 
                399.94674337933503`}, {-18.165422582297502`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{521638., 0}, {541701., 12.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{399.44674337933503`, 
                414.24478923877695`}, {-18.31130031163159, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{541701., 0}, {561764., 6.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{413.74478923877695`, 
                428.54283509821875`}, {-18.201892014631028`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{561764., 0}, {581827., 6.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{428.04283509821875`, 
                442.84088095766054`}, {-18.201892014631028`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{581827., 0}, {601890., 11.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{442.34088095766054`, 
                457.13892681710234`}, {-18.29306559546483, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 11]& ,
            TagBoxNote->"11"],
           StyleBox["11", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[11, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{601890., 0}, {621953., 6.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{456.63892681710234`, 
                471.43697267654414`}, {-18.201892014631028`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{621953., 0}, {642016., 6.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{470.93697267654414`, 
                485.73501853598594`}, {-18.201892014631028`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{642016., 0}, {662079., 5.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{485.23501853598594`, 
                500.03306439542774`}, {-18.18365729846426, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{662079., 0}, {682142., 1.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{499.53306439542774`, 
                514.3311102548696}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{682142., 0}, {702205., 5.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{513.8311102548696, 
                528.6291561143114}, {-18.18365729846426, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{702205., 0}, {722268., 6.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{528.1291561143114, 
                542.9272019737532}, {-18.201892014631028`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{722268., 0}, {742331., 5.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{542.4272019737532, 
                557.225247833195}, {-18.18365729846426, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{742331., 0}, {762394., 6.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{556.725247833195, 
                571.5232936926368}, {-18.201892014631028`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{762394., 0}, {782457., 1.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{571.0232936926368, 
                585.8213395520786}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{782457., 0}, {802520., 4.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{585.3213395520786, 
                600.1193854115204}, {-18.165422582297502`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{802520., 0}, {822583., 5.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{599.6193854115204, 
                614.4174312709622}, {-18.18365729846426, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{822583., 0}, {842646., 3.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{613.9174312709622, 
                628.715477130404}, {-18.147187866130743`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{842646., 0}, {862709., 5.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{628.215477130404, 
                643.0135229898458}, {-18.18365729846426, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{862709., 0}, {882772., 3.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{642.5135229898458, 
                657.3115688492876}, {-18.147187866130743`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{882772., 0}, {902835., 1.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{656.8115688492876, 
                671.6096147087294}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{902835., 0}, {922898., 3.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{671.1096147087294, 
                685.9076605681712}, {-18.147187866130743`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{922898., 0}, {942961., 3.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{685.4076605681712, 
                700.205706427613}, {-18.147187866130743`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{942961., 0}, {963024., 2.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{699.705706427613, 
                714.5037522870548}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{963024., 0}, {983087., 1.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{714.0037522870548, 
                728.8017981464966}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{983087., 0}, {1.00315*^6, 2.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{728.3017981464966, 
                743.0998440059384}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.00315*^6, 0}, {1.023213*^6, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{742.5998440059384, 
                757.3978898653802}, {-18.165422582297502`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.023213*^6, 0}, {1.043276*^6, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{756.8978898653802, 
                771.695935724822}, {-18.165422582297502`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.043276*^6, 0}, {1.063339*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{771.195935724822, 
                785.9939815842638}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.063339*^6, 0}, {1.083402*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{785.4939815842638, 
                800.2920274437058}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.083402*^6, 0}, {1.103465*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{799.7920274437058, 
                814.5900733031476}, {-18.147187866130743`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.103465*^6, 0}, {1.123528*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{814.0900733031476, 
                828.8881191625894}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.143591*^6, 0}, {1.163654*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{842.6861650220312, 
                857.484210881473}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.163654*^6, 0}, {1.183717*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{856.984210881473, 
                871.7822567409148}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.183717*^6, 0}, {1.20378*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{871.2822567409148, 
                886.0803026003566}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.20378*^6, 0}, {1.223843*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{885.5803026003566, 
                900.3783484597984}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.243906*^6, 0}, {1.263969*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{914.1763943192402, 
                928.974440178682}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.263969*^6, 0}, {1.284032*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{928.474440178682, 
                943.2724860381238}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.284032*^6, 0}, {1.304095*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{942.7724860381238, 
                957.5705318975656}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.344221*^6, 0}, {1.364284*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{985.6666236164494, 
                1000.4646694758912`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.364284*^6, 0}, {1.384347*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{999.9646694758912, 
                1014.762715335333}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.384347*^6, 0}, {1.40441*^6, 5.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1014.262715335333, 
                1029.0607611947748`}, {-18.18365729846426, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.424473*^6, 0}, {1.444536*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1042.8588070542166`, 
                1057.6568529136584`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.444536*^6, 0}, {1.464599*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1057.1568529136584`, 
                1071.9548987731002`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.504725*^6, 0}, {1.524788*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1100.0509904919838`, 
                1114.8490363514256`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.524788*^6, 0}, {1.544851*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1114.3490363514256`, 
                1129.1470822108674`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.564914*^6, 0}, {1.584977*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1142.9451280703092`, 
                1157.743173929751}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.584977*^6, 0}, {1.60504*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1157.243173929751, 
                1172.0412197891928`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.60504*^6, 0}, {1.625103*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1171.5412197891928`, 
                1186.3392656486346`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.625103*^6, 0}, {1.645166*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1185.8392656486346`, 
                1200.6373115080764`}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.645166*^6, 0}, {1.665229*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1200.1373115080764`, 
                1214.9353573675182`}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.745481*^6, 0}, {1.765544*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1271.6275408052857`, 
                1286.4255866647275`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.80567*^6, 0}, {1.825733*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1314.521678383611, 
                1329.3197242430529`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.825733*^6, 0}, {1.845796*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1328.8197242430529`, 
                1343.6177701024947`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.865859*^6, 0}, {1.885922*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{1357.4158159619365`, 
                1372.2138618213783`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.885922*^6, 0}, {1.905985*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1371.7138618213783`, 
                1386.51190768082}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.946111*^6, 0}, {1.966174*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1414.6079993997037`, 
                1429.4060452591455`}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.966174*^6, 0}, {1.986237*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1428.9060452591455`, 
                1443.7040911185873`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.986237*^6, 0}, {2.0063*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1443.2040911185873`, 
                1458.002136978029}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.0063*^6, 0}, {2.026363*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1457.502136978029, 
                1472.3001828374709`}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.086552*^6, 0}, {2.106615*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1514.6943204157963`, 
                1529.492366275238}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.106615*^6, 0}, {2.126678*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1528.992366275238, 
                1543.7904121346799`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.146741*^6, 0}, {2.166804*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1557.5884579941217`, 
                1572.3865038535637`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.186867*^6, 0}, {2.20693*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1586.1845497130055`, 
                1600.9825955724473`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.20693*^6, 0}, {2.226993*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1600.4825955724473`, 
                1615.280641431889}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.226993*^6, 0}, {2.247056*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1614.780641431889, 
                1629.5786872913309`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.287182*^6, 0}, {2.307245*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1657.6747790102145`, 
                1672.4728248696563`}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.327308*^6, 0}, {2.347371*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1686.270870729098, 
                1701.0689165885399`}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.40756*^6, 0}, {2.427623*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1743.4630541668653`, 
                
                1758.261100026307}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.467749*^6, 0}, {2.487812*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1786.3571917451907`, 
                1801.1552376046325`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.548001*^6, 0}, {2.568064*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1843.5493751829579`, 
                1858.3474210423997`}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.568064*^6, 0}, {2.588127*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1857.8474210423997`, 
                1872.6454669018412`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.648316*^6, 0}, {2.668379*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1915.0396044801669`, 
                1929.837650339609}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.708505*^6, 0}, {2.728568*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1957.9337420584925`, 
                1972.731787917934}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.788757*^6, 0}, {2.80882*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2015.1259254962597`, 
                2029.9239713557013`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.049576*^6, 0}, {3.069639*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2201.000521669003, 
                2215.798567528445}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.21008*^6, 0}, {3.230143*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2315.3848885445373`, 
                2330.1829344039793`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.230143*^6, 0}, {3.250206*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2329.6829344039793`, 
                2344.480980263421}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.310395*^6, 0}, {3.330458*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2386.8751178417465`, 
                2401.673163701188}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.350521*^6, 0}, {3.370584*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2415.47120956063, 
                2430.269255420072}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.591277*^6, 0}, {3.61134*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2587.0477598739317`, 
                2601.8458057333737`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.671529*^6, 0}, {3.691592*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2644.239943311699, 
                2659.037989171141}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.691592*^6, 0}, {3.711655*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2658.537989171141, 
                2673.3360350305825`}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.932348*^6, 0}, {3.952411*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2830.1145394844425`, 
                2844.9125853438845`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.153041*^6, 0}, {4.173104*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2987.3930439383025`, 
                3002.191089797744}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.474049*^6, 0}, {4.494112*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3216.1617776893713`, 
                3230.9598235488133`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.514175*^6, 0}, {4.534238*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3244.757869408255, 
                3259.555915267697}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.81512*^6, 0}, {4.835183*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3459.228557299882, 
                3474.026603159324}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.955561*^6, 0}, {4.975624*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3559.314878315975, 
                3574.1129241754165`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.975624*^6, 0}, {4.995687*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3573.6129241754165`, 
                3588.4109700348586`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.096002*^6, 0}, {5.116065*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3659.4011993320673`, 
                3674.1992451915094`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.838333*^6, 0}, {5.858396*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4188.428896131414, 
                4203.226941990856}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.139278*^6, 0}, {6.159341*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4402.899584023042, 
                4417.697629882483}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.279719*^6, 0}, {6.299782*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4502.985905039134, 
                4517.783950898576}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.460286*^6, 0}, {6.480349*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4631.668317774111, 
                4646.466363633553}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.383184*^6, 0}, {7.403247*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5289.378427308434, 
                5304.176473167876}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.543688*^6, 0}, {7.563751*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5403.762794183968, 
                5418.56084004341}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.309232*^6, 0}, {9.329295*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{6661.9908298148475`, 
                6676.78887567429}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.469736*^6, 0}, {9.489799*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{6776.375196690382, 
                6791.173242549824}, {-18.128953149963984`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.489799*^6, 0}, {9.509862*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{6790.673242549824, 
                6805.471288409265}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.0513012*^7, 0}, {1.0533075*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{7519.8735813813555`, 
                7534.6716272407975`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.0994524*^7, 0}, {1.1014587*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{7863.02668200796, 
                7877.824727867402}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.2499249*^7, 0}, {1.2519312*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{8935.380121466096, 
                8950.178167325537}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.4024037*^7, 0}, {1.40441*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{10022.031606783674`, 
                10036.829652643115`}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.0063*^7, 0}, {2.0083063*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14325.743410475658`, 
                14340.5414563351}, {-18.110718433797217`, \
-17.592483717630458`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-4112.915, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{24.734269305974586`, 3.1023631622599623`}, {
       15.8923948326823, 3.694564550577695}},
      PlotRange->{{0, 205645.75}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {318.0411744202624, -65.23254034255807},
      ImageScaled[{0.5, 0.5}], {197.18896634844222, 124.2524577953487}], 
    InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0}, {78750.644013, 4356.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{27.5386590019192, 
                42.319322743678015`}, {-105.78632240577656`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4356]& ,
            TagBoxNote->"4356"],
           StyleBox["4356", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4356, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{78750.644013, 0}, {157501.288026, 646.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{41.819322743678015`, 
                56.59998648543677}, {-31.144476269553632`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 646]& ,
            TagBoxNote->"646"],
           StyleBox["646", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[646, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{157501.288026, 0}, {236251.93203899998`, 314.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{56.09998648543677, 
                70.88065022719553}, {-24.464936399681392`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 314]& ,
            TagBoxNote->"314"],
           StyleBox["314", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[314, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{236251.93203899998`, 0}, {315002.576052, 202.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{70.38065022719553, 
                85.16131396895435}, {-22.21159764839919, -17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 202]& ,
            TagBoxNote->"202"],
           StyleBox["202", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[202, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{315002.576052, 0}, {393753.220065, 159.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{84.66131396895435, 
                99.44197771071316}, {-21.34647652067477, -17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 159]& ,
            TagBoxNote->"159"],
           StyleBox["159", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[159, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{393753.220065, 0}, {472503.86407799996`, 97.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{98.94197771071316, 
                113.72264145247192`}, {-20.099092569072127`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 97]& ,
            TagBoxNote->"97"],
           StyleBox["97", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[97, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{472503.86407799996`, 0}, {551254.508091, 81.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{113.22264145247192`, 
                128.00330519423068`}, {-19.77718703317467, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 81]& ,
            TagBoxNote->"81"],
           StyleBox["81", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[81, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{551254.508091, 0}, {630005.152104, 78.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{127.50330519423068`, 
                142.28396893598955`}, {-19.7168297451939, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 78]& ,
            TagBoxNote->"78"],
           StyleBox["78", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[78, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{630005.152104, 0}, {708755.7961169999, 52.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{141.78396893598955`, 
                156.5646326777483}, {-19.193733249360527`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 52]& ,
            TagBoxNote->"52"],
           StyleBox["52", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[52, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{708755.7961169999, 0}, {787506.44013, 55.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{156.0646326777483, 
                170.84529641950706`}, {-19.2540905373413, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 55]& ,
            TagBoxNote->"55"],
           StyleBox["55", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[55, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{787506.44013, 0}, {866257.084143, 35.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{170.34529641950706`, 
                185.12596016126582`}, {-18.851708617469477`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 35]& ,
            TagBoxNote->"35"],
           StyleBox["35", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[35, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{866257.084143, 0}, {945007.7281559999, 34.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{184.62596016126582`, 
                199.40662390302458`}, {-18.83158952147589, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 34]& ,
            TagBoxNote->"34"],
           StyleBox["34", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[34, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{945007.7281559999, 0}, {1.023758372169*^6, 33.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{198.90662390302458`, 
                213.68728764478345`}, {-18.811470425482298`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 33]& ,
            TagBoxNote->"33"],
           StyleBox["33", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[33, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.023758372169*^6, 0}, {1.102509016182*^6, 24.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{213.18728764478345`, 
                227.9679513865422}, {-18.630398561539977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 24]& ,
            TagBoxNote->"24"],
           StyleBox["24", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[24, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.102509016182*^6, 0}, {1.181259660195*^6, 21.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{227.4679513865422, 
                242.24861512830097`}, {-18.570041273559205`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 21]& ,
            TagBoxNote->"21"],
           StyleBox["21", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[21, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.181259660195*^6, 0}, {1.260010304208*^6, 17.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{241.74861512830097`, 
                256.52927887005984`}, {-18.48956488958484, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 17]& ,
            TagBoxNote->"17"],
           StyleBox["17", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[17, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.260010304208*^6, 0}, {1.338760948221*^6, 21.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{256.02927887005984`, 
                270.8099426118186}, {-18.570041273559205`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 21]& ,
            TagBoxNote->"21"],
           StyleBox["21", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[21, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.338760948221*^6, 0}, {1.4175115922339999`*^6, 
                 16.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{270.3099426118186, 
                
                285.09060635357736`}, {-18.469445793591248`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 16]& ,
            TagBoxNote->"16"],
           StyleBox["16", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[16, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.4175115922339999`*^6, 0}, {1.496262236247*^6, 
                 17.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{284.59060635357736`, 
                299.37127009533623`}, {-18.48956488958484, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 17]& ,
            TagBoxNote->"17"],
           StyleBox["17", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[17, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.496262236247*^6, 0}, {1.57501288026*^6, 12.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{298.87127009533623`, 
                313.6519338370949}, {-18.388969409616884`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.57501288026*^6, 0}, {1.653763524273*^6, 16.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{313.1519338370949, 
                327.93259757885374`}, {-18.469445793591248`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 16]& ,
            TagBoxNote->"16"],
           StyleBox["16", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[16, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.653763524273*^6, 0}, {1.732514168286*^6, 7.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{327.43259757885374`, 
                342.2132613206125}, {-18.288373929648927`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.732514168286*^6, 0}, {1.8112648122989999`*^6, 
                 9.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{341.7132613206125, 
                356.49392506237126`}, {-18.328612121636112`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.8112648122989999`*^6, 0}, {
                 1.8900154563119998`*^6, 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{355.99392506237126`, 
                370.77458880413013`}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.8900154563119998`*^6, 0}, {1.968766100325*^6, 
                 10.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{370.27458880413013`, 
                385.0552525458889}, {-18.348731217629705`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.968766100325*^6, 0}, {2.047516744338*^6, 7.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{384.5552525458889, 
                399.33591628764765`}, {-18.288373929648927`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.047516744338*^6, 0}, {2.126267388351*^6, 8.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{398.83591628764765`, 
                413.6165800294064}, {-18.30849302564252, -17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.126267388351*^6, 0}, {2.205018032364*^6, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{413.1165800294064, 
                427.8972437711653}, {-18.228016641668155`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.205018032364*^6, 0}, {2.283768676377*^6, 5.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{427.3972437711653, 
                442.17790751292404`}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.283768676377*^6, 0}, {2.36251932039*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{441.67790751292404`, 
                456.4585712546828}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.36251932039*^6, 0}, {2.4412699644029997`*^6, 
                 13.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{455.9585712546828, 
                470.73923499644155`}, {-18.409088505610477`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 13]& ,
            TagBoxNote->"13"],
           StyleBox["13", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[13, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.4412699644029997`*^6, 0}, {2.520020608416*^6, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{470.23923499644155`, 
                485.0198987382004}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.520020608416*^6, 0}, {2.598771252429*^6, 7.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{484.5198987382004, 
                499.3005624799592}, {-18.288373929648927`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.598771252429*^6, 0}, {2.677521896442*^6, 9.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{498.8005624799592, 
                513.581226221718}, {-18.328612121636112`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.677521896442*^6, 0}, {2.756272540455*^6, 5.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{513.081226221718, 
                527.8618899634769}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.756272540455*^6, 0}, {2.8350231844679997`*^6, 
                 8.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{527.3618899634769, 
                542.1425537052355}, {-18.30849302564252, -17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.8350231844679997`*^6, 0}, {2.913773828481*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{541.6425537052355, 
                556.4232174469944}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.913773828481*^6, 0}, {2.992524472494*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{555.9232174469944, 
                570.7038811887533}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.992524472494*^6, 0}, {3.071275116507*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{570.2038811887533, 
                584.9845449305119}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.071275116507*^6, 0}, {3.15002576052*^6, 7.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{584.4845449305119, 
                599.2652086722708}, {-18.288373929648927`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.15002576052*^6, 0}, {3.2287764045329997`*^6, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{598.7652086722708, 
                613.5458724140294}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.2287764045329997`*^6, 0}, {3.307527048546*^6, 
                 6.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{613.0458724140294, 
                627.8265361557883}, {-18.26825483365534, -17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.307527048546*^6, 0}, {3.386277692559*^6, 5.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{627.3265361557883, 
                642.1071998975472}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.386277692559*^6, 0}, {3.465028336572*^6, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{641.6071998975472, 
                656.3878636393058}, {-18.228016641668155`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.465028336572*^6, 0}, {3.543778980585*^6, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{655.8878636393058, 
                670.6685273810647}, {-18.228016641668155`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.543778980585*^6, 0}, {3.6225296245979997`*^6, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{670.1685273810647, 
                684.9491911228233}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.6225296245979997`*^6, 0}, {3.701280268611*^6, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{684.4491911228233, 
                699.2298548645822}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.701280268611*^6, 0}, {3.7800309126239996`*^6, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{698.7298548645822, 
                713.5105186063411}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.7800309126239996`*^6, 0}, {3.858781556637*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{713.0105186063411, 
                727.7911823480997}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.858781556637*^6, 0}, {3.93753220065*^6, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{727.2911823480997, 
                742.0718460898586}, {-18.228016641668155`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.0162828446629997`*^6, 0}, {4.095033488676*^6, 
                 4.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{755.8525098316172, 
                770.6331735733761}, {-18.228016641668155`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.095033488676*^6, 0}, {4.1737841326889996`*^6, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{770.1331735733761, 
                784.913837315135}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.1737841326889996`*^6, 0}, {4.252534776702*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{784.413837315135, 
                799.1945010568936}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.252534776702*^6, 0}, {4.331285420715*^6, 5.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{798.6945010568936, 
                813.4751647986525}, {-18.248135737661748`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.331285420715*^6, 0}, {4.410036064728*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{812.9751647986525, 
                827.7558285404114}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.410036064728*^6, 0}, {4.488786708741*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{827.2558285404114, 
                842.03649228217}, {-18.187778449680977`, -17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.488786708741*^6, 0}, {4.567537352754*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{841.53649228217, 
                856.3171560239289}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.567537352754*^6, 0}, {4.646287996767*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{855.8171560239289, 
                870.5978197656877}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.646287996767*^6, 0}, {4.72503864078*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{870.0978197656877, 
                884.8784835074464}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.72503864078*^6, 0}, {4.803789284793*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{884.3784835074464, 
                899.1591472492053}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.803789284793*^6, 0}, {4.882539928805999*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{898.6591472492053, 
                913.4398109909639}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.882539928805999*^6, 0}, {4.961290572819*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{912.9398109909639, 
                927.7204747327228}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.961290572819*^6, 0}, {5.040041216832*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{927.2204747327228, 
                942.0011384744816}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.040041216832*^6, 0}, {5.118791860845*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{941.5011384744816, 
                956.2818022162403}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.118791860845*^6, 0}, {5.197542504858*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{955.7818022162403, 
                970.5624659579992}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.197542504858*^6, 0}, {5.276293148871*^6, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{970.0624659579992, 
                984.843129699758}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.276293148871*^6, 0}, {5.355043792884*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{984.343129699758, 
                999.1237934415167}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.355043792884*^6, 0}, {5.433794436896999*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{998.6237934415167, 
                1013.4044571832753`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.433794436896999*^6, 0}, {5.51254508091*^6, 
                 4.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1012.9044571832753`, 
                1027.6851209250344`}, {-18.228016641668155`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.591295724923*^6, 0}, {5.670046368935999*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1041.465784666793, 
                1056.246448408552}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.670046368935999*^6, 0}, {5.748797012949*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1055.746448408552, 
                1070.5271121503108`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.748797012949*^6, 0}, {5.827547656962*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1070.0271121503108`, 
                1084.8077758920695`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.906298300975*^6, 0}, {5.985048944988*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1098.5884396338283`, 
                1113.3691033755872`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.985048944988*^6, 0}, {6.063799589001*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1112.8691033755872`, 
                1127.6497671173458`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.063799589001*^6, 0}, {6.142550233014*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1127.1497671173458`, 
                1141.9304308591047`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.142550233014*^6, 0}, {6.221300877026999*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1141.4304308591047`, 
                1156.2110946008634`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.30005152104*^6, 0}, {6.378802165053*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1169.9917583426222`, 
                1184.772422084381}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.378802165053*^6, 0}, {6.457552809065999*^6, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1184.272422084381, 
                1199.0530858261397`}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.772555385118*^6, 0}, {6.851306029131*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1255.675740793175, 
                1270.4564045349337`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.930056673144*^6, 0}, {7.008807317156999*^6, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1284.2370682766925`, 
                1299.0177320184512`}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.008807317156999*^6, 0}, {7.08755796117*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1298.5177320184512`, 
                1313.29839576021}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.08755796117*^6, 0}, {7.166308605183*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1312.79839576021, 
                1327.579059501969}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.166308605183*^6, 0}, {7.2450592491959995`*^6, 
                 4.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1327.079059501969, 
                1341.8597232437276`}, {-18.228016641668155`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.2450592491959995`*^6, 0}, {7.323809893209*^6, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1341.3597232437276`, 
                1356.1403869854864`}, {-18.207897545674562`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.323809893209*^6, 0}, {7.402560537222*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1355.6403869854864`, 
                1370.4210507272453`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.402560537222*^6, 0}, {7.481311181235*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1369.9210507272453`, 
                1384.701714469004}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.560061825247999*^6, 0}, {7.638812469261*^6, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1398.4823782107628`, 
                1413.2630419525217`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.638812469261*^6, 0}, {7.717563113274*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1412.7630419525217`, 
                1427.5437056942803`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.717563113274*^6, 0}, {7.796313757286999*^6, 
                 4.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1427.0437056942803`, 
                1441.8243694360392`}, {-18.228016641668155`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.953815045313*^6, 0}, {8.0325656893259995`*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1469.8856969195567`, 
                1484.6663606613154`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.190066977352*^6, 0}, {8.268817621365*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1512.727688144833, 
                1527.5083518865918`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.268817621365*^6, 0}, {8.347568265377999*^6, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1527.0083518865918`, 
                1541.7890156283506`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.347568265377999*^6, 0}, {8.426318909390999*^6,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1541.2890156283506`, 
                1556.0696793701093`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.741321485443*^6, 0}, {8.820072129456*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1612.6923343371445`, 
                1627.4729980789036`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.820072129456*^6, 0}, {8.898822773469*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1626.9729980789036`, 
                1641.753661820662}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.607578569586*^6, 0}, {9.686329213599*^6, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1769.7796354964912`, 
                1784.56029923825}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.843830501625*^6, 0}, {9.922581145638*^6, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1812.6216267217674`, 
                1827.4022904635262`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.0316334365703*^7, 0}, {1.0395085009716*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1898.3056091723201`, 
                1913.086272914079}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.0473835653729*^7, 0}, {1.0552586297742*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1926.866936655838, 
                1941.6476003975968`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.0552586297742*^7, 0}, {1.0631336941755*^7, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1941.1476003975968`, 
                1955.9282641393556`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.0631336941755*^7, 0}, {1.0710087585768*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1955.4282641393556`, 
                1970.208927881114}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.1497594025898*^7, 0}, {1.1576344669910999`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2112.5155652987023`, 
                2127.2962290404607`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.1733845957937*^7, 0}, {1.181259660195*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2155.3575565239785`, 
                2170.1382202657373`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.181259660195*^7, 0}, {1.1891347245963*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2169.6382202657373`, 
                2184.418884007496}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.1970097889976*^7, 0}, {1.2048848533989*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2198.199547749255, 
                2212.9802114910135`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.2206349822015*^7, 0}, {1.2285100466028*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2241.0415389745312`, 
                2255.82220271629}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.2285100466028*^7, 0}, {1.2363851110041*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2255.32220271629, 
                2270.102866458049}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.2363851110041*^7, 0}, {1.2442601754053999`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2269.602866458049, 
                2284.3835301998074`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.260010304208*^7, 0}, {1.2678853686092999`*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2312.444857683325, 
                2327.2255214250836`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.338760948221*^7, 0}, {1.3466360126223*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2455.251495100913, 
                2470.032158842672}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.3860113346288*^7, 0}, {1.3938863990301*^7, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2540.9354775514657`, 
                2555.7161412932246`}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.4805121074444*^7, 0}, {1.4883871718457*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2712.3034424525713`, 
                2727.08410619433}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.496262236247*^7, 0}, {1.5041373006483*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2740.8647699360886`, 
                2755.6454336778474`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.5277624938522*^7, 0}, {1.5356375582534999`*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2797.987424903124, 
                2812.7680886448825`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.811264812299*^7, 0}, {1.8191398767003*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3312.0913196064403`, 
                3326.871983348199}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.8191398767003*^7, 0}, {1.8270149411016*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3326.371983348199, 
                3341.1526470899576`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.8427650699042*^7, 0}, {1.8506401343055*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3369.2139745734753`, 
                3383.994638315234}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.968766100325*^7, 0}, {1.9766411647262998`*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3597.704594441616, 
                3612.4852581833743`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.2680185475743998`*^7, 0}, {2.2758936119757*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4140.369816628449, 
                4155.150480370208}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.3940195779952*^7, 0}, {2.4018946423965*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4368.86043649659, 
                
                4383.641100238348}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.835023184468*^7, 0}, {2.8428982488693*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5168.577606035082, 
                5183.358269776841}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.9610242148888*^7, 0}, {2.9688992792901*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5397.068225903223, 
                5411.848889644981}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.0397748589018*^7, 0}, {3.0476499233030997`*^7,
                  2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5539.874863320811, 
                5554.655527062569}, {-18.187778449680977`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.1185255029147997`*^7, 0}, {3.1264005673161*^7,
                  1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5682.681500738398, 
                5697.462164480157}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.4492782077694*^7, 0}, {3.4571532721707*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{6282.469377892267, 
                6297.250041634026}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.0871584242747*^7, 0}, {4.095033488676*^7, 1.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{7439.20314097473, 
                7453.983804716488}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.0244242669945*^7, 0}, {6.0322993313958*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{10952.246421447391`, 
                10967.02708518915}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.481311181235*^7, 0}, {7.489186245636299*^7, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{13594.169213672767`, 
                13608.949877414523`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 0, 1], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.8750644013*^7, 0}, {7.8829394657013*^7, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14308.202400760705`, 
                14322.983064502465`}, {-18.167659353687384`, \
-17.64754025769379}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-16143.882022664999`, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{24.739142265397778`, 9.188689481826032}, {
       15.8923948326823, 3.694564550577695}},
      PlotRange->{{0., 807194.1011332499}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {533.2134710882453, -65.23254034255807},
      ImageScaled[{0.5, 0.5}], {203.28016562743147, 124.2524577953487}]}, {}},
  
  ImageSize->{
    UpTo[600], 
    UpTo[223]},
  PlotRange->{{0, 642.3224192419842}, {-130.46508068511613`, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.87883251447371*^9, {3.879083813011243*^9, 3.8790838410200663`*^9}, 
   3.879084878678048*^9, 3.879156008829116*^9, 3.8793253332747517`*^9, 
   3.87935459669552*^9, 3.879419455503995*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"9b25635c-c0b0-461f-9244-c71e797d6941"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"j1", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{
      "All", ",", " ", 
       "\"\<Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\>\""}], "]"}], ",", 
     
     RowBox[{"ChartStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Green", ",", 
         RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"j2", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{
      "All", ",", " ", 
       "\"\<Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\>\""}], "]"}], ",", 
     
     RowBox[{"ChartStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Orange", ",", 
         RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"j3", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{
      "All", ",", " ", 
       "\"\<Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\>\""}], "]"}], ",", 
     
     RowBox[{"ChartStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"j1", ",", "j2", ",", " ", "j3"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Carbon Intensity-Scope 1,2,3 (tonnes CO2e/USD mn)\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.878832524550375*^9, 3.878832569077739*^9}, 
   3.8790838421459103`*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"f630a3a6-8885-4262-9891-ecf78bdcd971"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0}, {147.50902, 5862.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{27.61193212306479, 
                42.764556047920195`}, {-105.58764521744335`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5862]& ,
            TagBoxNote->"5862"],
           StyleBox["5862", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5862, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{147.50902, 0}, {295.01804000000004`, 222.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{42.264556047920195`, 
                57.417179972775614`}, {-19.071605037296877`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 222]& ,
            TagBoxNote->"222"],
           StyleBox["222", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[222, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{295.01804000000004`, 0}, {442.52706, 98.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{56.917179972775614`, 
                72.06980389763102}, {-17.16947933120855, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 98]& ,
            TagBoxNote->"98"],
           StyleBox["98", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[98, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{442.52706, 0}, {590.03608, 53.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{71.56980389763102, 
                86.72242782248642}, {-16.479191776579718`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 53]& ,
            TagBoxNote->"53"],
           StyleBox["53", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[53, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{590.03608, 0}, {737.5451, 42.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{86.22242782248642, 
                101.37505174734184`}, {-16.310454818781565`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 42]& ,
            TagBoxNote->"42"],
           StyleBox["42", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[42, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{737.5451, 0}, {885.05412, 31.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{100.87505174734184`, 
                116.02767567219725`}, {-16.141717860983405`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 31]& ,
            TagBoxNote->"31"],
           StyleBox["31", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[31, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{885.05412, 0}, {1032.56314, 21.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{115.52767567219725`, 
                130.68029959705262`}, {-15.988320626621444`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 21]& ,
            TagBoxNote->"21"],
           StyleBox["21", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[21, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1032.56314, 0}, {1180.07216, 32.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{130.18029959705262`, 
                145.33292352190807`}, {-16.157057584419604`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 32]& ,
            TagBoxNote->"32"],
           StyleBox["32", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[32, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1180.07216, 0}, {1327.58118, 23.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{144.83292352190807`, 
                159.98554744676346`}, {-16.019000073493835`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 23]& ,
            TagBoxNote->"23"],
           StyleBox["23", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[23, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1327.58118, 0}, {1475.0901999999999`, 18.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{159.48554744676346`, 
                174.63817137161885`}, {-15.942301456312855`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 18]& ,
            TagBoxNote->"18"],
           StyleBox["18", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[18, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1475.0901999999999`, 0}, {1622.59922, 5.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{174.13817137161885`, 
                189.2907952964743}, {-15.742885051642304`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1622.59922, 0}, {1770.10824, 9.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{188.7907952964743, 
                203.9434192213297}, {-15.804243945387093`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1770.10824, 0}, {1917.61726, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{203.4434192213297, 
                218.59604314618508`}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1917.61726, 0}, {2065.12628, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{218.09604314618508`, 
                233.24866707104053`}, {-15.727545328206105`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2065.12628, 0}, {2212.6353, 5.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{232.74866707104053`, 
                247.90129099589592`}, {-15.742885051642304`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2212.6353, 0}, {2360.14432, 8.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{247.40129099589592`, 
                262.5539149207513}, {-15.788904221950894`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2360.14432, 0}, {2507.65334, 7.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{262.0539149207513, 
                277.2065388456067}, {-15.773564498514695`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2507.65334, 0}, {2655.16236, 29.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{276.7065388456067, 
                291.8591627704621}, {-16.111038414111015`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 29]& ,
            TagBoxNote->"29"],
           StyleBox["29", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[29, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2655.16236, 0}, {2802.6713799999998`, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{291.3591627704621, 
                306.51178669531754`}, {-15.696865881333714`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2802.6713799999998`, 0}, {2950.1803999999997`, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{306.01178669531754`, 
                321.16441062017293`}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2950.1803999999997`, 0}, {3097.6894199999997`, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{320.66441062017293`, 
                335.8170345450283}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3245.1984399999997`, 0}, {3392.70746, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{349.9696584698837, 
                365.12228239473916`}, {-15.727545328206105`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3392.70746, 0}, {3540.21648, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{364.62228239473916`, 
                379.7749063195946}, {-15.696865881333714`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3540.21648, 0}, {3687.7255, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{379.2749063195946, 
                394.42753024445}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3687.7255, 0}, {3835.23452, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{393.92753024445, 
                409.0801541693054}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3835.23452, 0}, {3982.74354, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{408.5801541693054, 
                423.7327780941608}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3982.74354, 0}, {4130.252559999999, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{423.2327780941608, 
                438.3854020190161}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4130.252559999999, 0}, {4277.761579999999, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{437.8854020190161, 
                453.03802594387156`}, {-15.696865881333714`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4277.761579999999, 0}, {4425.270599999999, 6.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{452.53802594387156`, 
                467.69064986872695`}, {-15.758224775078503`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4425.270599999999, 0}, {4572.779619999999, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{467.19064986872695`, 
                482.3432737935824}, {-15.727545328206105`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4572.779619999999, 0}, {4720.28864, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{481.8432737935824, 
                496.99589771843785`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4720.28864, 0}, {4867.797659999999, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{496.49589771843785`, 
                511.6485216432932}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4867.797659999999, 0}, {5015.30668, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{511.1485216432932, 
                526.3011455681486}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5162.815699999999, 0}, {5310.32472, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{540.453769493004, 
                555.6063934178594}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5310.32472, 0}, {5457.833739999999, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{555.1063934178594, 
                570.2590173427149}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5457.833739999999, 0}, {5605.3427599999995`, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{569.7590173427149, 
                584.9116412675703}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5605.3427599999995`, 0}, {5752.851779999999, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{584.4116412675703, 
                599.5642651924256}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5900.3607999999995`, 0}, {6047.869819999999, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{613.7168891172811, 
                628.8695130421364}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6047.869819999999, 0}, {6195.378839999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{628.3695130421364, 
                643.5221369669919}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6195.378839999999, 0}, {6342.887859999999, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{643.0221369669919, 
                658.1747608918472}, {-15.696865881333714`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6342.887859999999, 0}, {6490.396879999999, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{657.6747608918472, 
                672.8273848167026}, {-15.712205604769913`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6490.396879999999, 0}, {6637.905899999999, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{672.3273848167026, 
                687.4800087415581}, {-15.696865881333714`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6637.905899999999, 0}, {6785.414919999999, 27.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{686.9800087415581, 
                702.1326326664135}, {-16.080358967238624`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 27]& ,
            TagBoxNote->"27"],
           StyleBox["27", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[27, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7670.469039999999, 0}, {7817.9780599999995`, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{789.5483762155459, 
                804.7010001404013}, {-15.696865881333714`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8260.50512, 0}, {8408.01414, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{848.1588719149677, 
                863.311495839823}, {-15.696865881333714`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8408.01414, 0}, {8555.52316, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{862.811495839823, 
                877.9641197646786}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{10473.14042, 0}, {10620.64944, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1067.9482307877986`, 
                1083.1008547126542`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{12538.2667, 0}, {12685.77572, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1273.0849657357746`, 
                1288.2375896606297`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{13865.84788, 0}, {14013.3569, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1404.9585810594733`, 
                1420.1112049843284`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{14603.39298, 0}, {14750.902, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1478.2217006837502`, 
                1493.3743246086058`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{14898.41102, 0}, {15045.920039999999`, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1507.5269485334609`, 
                1522.6795724583164`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{15783.46514, 0}, {15930.97416, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1595.4426920825933`, 
                1610.595316007449}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{16521.01024, 0}, {16668.519259999997`, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1668.7058117068707`, 
                1683.8584356317258`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{16668.519259999997`, 0}, {16816.02828, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1683.3584356317258`, 
                1698.5110595565814`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{18586.136519999996`, 0}, {18733.645539999998`, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1873.8425466548458`, 
                1888.9951705797014`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{20208.735739999996`, 0}, {20356.244759999998`, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2035.0214098282552`, 
                2050.174033753111}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{25371.551439999996`, 0}, {25519.060459999997`, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2547.8632471981946`, 
                2563.01587112305}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{37024.76402, 0}, {37172.27304, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3705.4205372617726`, 
                3720.5731611866277`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{61363.75232, 0}, {61511.26134, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{6123.103484862914, 
                6138.256108787769}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0, 1, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{147509.02, 0}, {147656.52902, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14680.235856978472`, 
                14695.388480903328`}, {-15.681526157897522`, \
-15.166186434461324`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-30.2393491, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{24.73298638911129, 1.5}, {12.874412825298435`, 
       0.7022198660540369}},
      PlotRange->{{0., 1511.967455}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {108.53673669006382, -64.13537806010406},
      ImageScaled[{0.5, 0.5}], {201.92881244663036, 122.16262487638869}], 
    InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.588], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.588], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0}, {8.26048, 3012.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{27.611932123064804`, 
                38.83974606804824}, {-105.58764521744334`, \
-15.16618643446131}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3012]& ,
            TagBoxNote->"3012"],
           StyleBox["3012", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3012, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.26048, 0}, {16.52096, 1020.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{38.33974606804824, 
                49.56756001303165}, {-46.11767646057076, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1020]& ,
            TagBoxNote->"1020"],
           StyleBox["1020", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1020, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{16.52096, 0}, {24.781439999999996`, 578.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{49.06756001303165, 
                60.29537395801509}, {-32.92203078259001, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 578]& ,
            TagBoxNote->"578"],
           StyleBox["578", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[578, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{24.781439999999996`, 0}, {33.04192, 345.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{59.79537395801509, 
                71.02318790299853}, {-25.965955119763045`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 345]& ,
            TagBoxNote->"345"],
           StyleBox["345", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[345, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{33.04192, 0}, {41.3024, 379.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{70.52318790299853, 
                81.75100184798191}, {-26.981004787300023`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 379]& ,
            TagBoxNote->"379"],
           StyleBox["379", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[379, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{41.3024, 0}, {49.56287999999999, 175.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{81.25100184798191, 
                92.47881579296535}, {-20.890706782078134`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 175]& ,
            TagBoxNote->"175"],
           StyleBox["175", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[175, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{49.56287999999999, 0}, {57.823359999999994`, 
                 265.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{91.97881579296535, 
                103.20662973794879`}, {-23.577602960852495`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 265]& ,
            TagBoxNote->"265"],
           StyleBox["265", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[265, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{57.823359999999994`, 0}, {66.08384, 92.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{102.70662973794879`, 
                113.93444368293223`}, {-18.412791417208446`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 92]& ,
            TagBoxNote->"92"],
           StyleBox["92", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[92, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{66.08384, 0}, {74.34432, 103.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{113.43444368293223`, 
                124.66225762791566`}, {-18.74118983905864, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 103]& ,
            TagBoxNote->"103"],
           StyleBox["103", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[103, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{74.34432, 0}, {82.6048, 48.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{124.16225762791566`, 
                135.39007157289905`}, {-17.099197729807642`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 48]& ,
            TagBoxNote->"48"],
           StyleBox["48", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[48, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{82.6048, 0}, {90.86528, 32.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{134.89007157289905`, 
                146.11788551788254`}, {-16.621527298025534`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 32]& ,
            TagBoxNote->"32"],
           StyleBox["32", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[32, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{90.86528, 0}, {99.12575999999999, 38.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{145.61788551788254`, 
                156.84569946286592`}, {-16.800653709943823`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 38]& ,
            TagBoxNote->"38"],
           StyleBox["38", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[38, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{99.12575999999999, 0}, {107.38623999999999`, 
                 34.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{156.34569946286592`, 
                167.57351340784936`}, {-16.6812361019983, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 34]& ,
            TagBoxNote->"34"],
           StyleBox["34", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[34, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{107.38623999999999`, 0}, {115.64671999999999`, 
                 34.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{167.07351340784936`, 
                178.3013273528328}, {-16.6812361019983, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 34]& ,
            TagBoxNote->"34"],
           StyleBox["34", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[34, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{115.64671999999999`, 0}, {123.90719999999999`, 
                 25.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{177.8013273528328, 
                189.02914129781618`}, {-16.41254648412086, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 25]& ,
            TagBoxNote->"25"],
           StyleBox["25", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[25, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{123.90719999999999`, 0}, {132.16768, 33.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{188.52914129781618`, 
                199.75695524279968`}, {-16.651381700011918`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 33]& ,
            TagBoxNote->"33"],
           StyleBox["33", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[33, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{132.16768, 0}, {140.42816, 46.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{199.25695524279968`, 
                210.48476918778306`}, {-17.03948892583488, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 46]& ,
            TagBoxNote->"46"],
           StyleBox["46", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[46, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{140.42816, 0}, {148.68864, 17.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{209.98476918778306`, 
                221.2125831327665}, {-16.17371126822981, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 17]& ,
            TagBoxNote->"17"],
           StyleBox["17", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[17, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{148.68864, 0}, {156.94912, 11.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{220.7125831327665, 
                231.94039707774994`}, {-15.99458485631152, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 11]& ,
            TagBoxNote->"11"],
           StyleBox["11", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[11, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{156.94912, 0}, {165.2096, 14.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{231.44039707774994`, 
                242.66821102273332`}, {-16.084148062270664`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 14]& ,
            TagBoxNote->"14"],
           StyleBox["14", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[14, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{165.2096, 0}, {173.47008, 14.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{242.16821102273332`, 
                253.3960249677168}, {-16.084148062270664`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 14]& ,
            TagBoxNote->"14"],
           StyleBox["14", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[14, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{173.47008, 0}, {181.73056, 20.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{252.8960249677168, 
                264.1238389127002}, {-16.263274474188954`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 20]& ,
            TagBoxNote->"20"],
           StyleBox["20", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[20, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{181.73056, 0}, {189.99104, 17.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{263.6238389127002, 
                274.85165285768363`}, {-16.17371126822981, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 17]& ,
            TagBoxNote->"17"],
           StyleBox["17", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[17, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{189.99104, 0}, {198.25151999999997`, 7.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{274.35165285768363`, 
                285.57946680266707`}, {-15.87516724836599, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{198.25151999999997`, 0}, {206.51199999999997`, 
                 6.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{285.07946680266707`, 
                296.30728074765045`}, {-15.845312846379606`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{206.51199999999997`, 0}, {214.77247999999997`, 
                 10.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{295.80728074765045`, 
                307.03509469263395`}, {-15.964730454325135`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{214.77247999999997`, 0}, {223.03295999999997`, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{306.53509469263395`, 
                
                317.76290863761733`}, {-15.815458444393222`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{223.03295999999997`, 0}, {231.29343999999998`, 
                 23.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{317.26290863761733`, 
                328.4907225826007}, {-16.3528376801481, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 23]& ,
            TagBoxNote->"23"],
           StyleBox["23", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[23, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{231.29343999999998`, 0}, {239.55391999999998`, 
                 10.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{327.9907225826007, 
                339.2185365275842}, {-15.964730454325135`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{239.55391999999998`, 0}, {247.81439999999998`, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{338.7185365275842, 
                349.9463504725676}, {-15.815458444393222`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{247.81439999999998`, 0}, {256.07488, 9.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{349.4463504725676, 
                360.6741644175511}, {-15.934876052338751`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{256.07488, 0}, {264.33536, 29.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{360.1741644175511, 
                371.40197836253446`}, {-16.53196409206639, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 29]& ,
            TagBoxNote->"29"],
           StyleBox["29", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[29, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{264.33536, 0}, {272.59583999999995`, 6.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{370.90197836253446`, 
                382.12979230751785`}, {-15.845312846379606`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{272.59583999999995`, 0}, {280.85632, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{381.62979230751785`, 
                392.85760625250134`}, {-15.785604042406845`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{280.85632, 0}, {289.11679999999996`, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{392.35760625250134`, 
                403.5854201974847}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{289.11679999999996`, 0}, {297.37728, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{403.0854201974847, 
                414.3132341424682}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{297.37728, 0}, {305.63775999999996`, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{413.8132341424682, 
                425.0410480874516}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{305.63775999999996`, 0}, {313.89824, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{424.5410480874516, 
                435.7688620324351}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{313.89824, 0}, {322.15871999999996`, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{435.2688620324351, 
                446.4966759774185}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{322.15871999999996`, 0}, {330.4192, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{445.9966759774185, 
                457.22448992240186`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{330.4192, 0}, {338.67967999999996`, 3.}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{456.72448992240186`, 
                467.95230386738535`}, {-15.755749640420461`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{338.67967999999996`, 0}, {346.94016, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{467.45230386738535`, 
                478.68011781236874`}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{346.94016, 0}, {355.20063999999996`, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{478.18011781236874`, 
                489.4079317573521}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{355.20063999999996`, 0}, {363.46112, 5.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{488.9079317573521, 
                500.1357457023356}, {-15.815458444393222`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{363.46112, 0}, {371.72159999999997`, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{499.6357457023356, 
                510.863559647319}, {-15.785604042406845`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{371.72159999999997`, 0}, {379.98208, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{510.363559647319, 
                521.5913735923025}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{379.98208, 0}, {388.24255999999997`, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{521.0913735923025, 
                532.3191875372859}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{396.50303999999994`, 0}, {404.76351999999997`, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{542.5470014822693, 
                553.7748154272527}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{404.76351999999997`, 0}, {413.02399999999994`, 
                 2.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{553.2748154272527, 
                564.5026293722361}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{421.28448, 0}, {429.54495999999995`, 3.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{574.7304433172195, 
                585.958257262203}, {-15.755749640420461`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{437.80544, 0}, {446.06591999999995`, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{596.1860712071864, 
                607.4138851521698}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{446.06591999999995`, 0}, {454.3264, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{606.9138851521698, 
                618.1416990971533}, {-15.785604042406845`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{454.3264, 0}, {462.58687999999995`, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{617.6416990971533, 
                628.8695130421366}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{462.58687999999995`, 0}, {470.84736, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{628.3695130421366, 
                639.5973269871201}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{479.10783999999995`, 0}, {487.36832, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{649.8251409321035, 
                661.052954877087}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{512.14976, 0}, {520.4102399999999, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{692.7363967120373, 
                703.9642106570207}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{520.4102399999999, 0}, {528.67072, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{703.4642106570207, 
                714.6920246020042}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{528.67072, 0}, {536.9312, 6.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{714.1920246020042, 
                725.4198385469875}, {-15.845312846379606`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{536.9312, 0}, {545.1916799999999, 4.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{724.9198385469875, 
                736.1476524919709}, {-15.785604042406845`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{553.4521599999999, 0}, {561.71264, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{746.3754664369544, 
                757.6032803819378}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{561.71264, 0}, {569.97312, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{757.1032803819378, 
                768.3310943269213}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{578.2335999999999, 0}, {586.4940799999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{778.5589082719046, 
                789.786722216888}, {-15.6960408364477, -15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{586.4940799999999, 0}, {594.75456, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{789.286722216888, 
                800.5145361618715}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{611.2755199999999, 0}, {619.536, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{821.4701640518383, 
                832.6979779968219}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{619.536, 0}, {627.79648, 1.}, "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{832.1979779968219, 
                843.4257919418053}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{693.88032, 0}, {702.1407999999999, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{928.7483035016728, 
                939.976117446656}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{718.66176, 0}, {726.92224, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{960.931745336623, 
                972.1595592816066}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{735.1827199999999, 0}, {743.4431999999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{982.3873732265897, 
                993.6151871715733}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{743.4431999999999, 0}, {751.70368, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{993.1151871715733, 
                
                1004.3430011165567`}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{784.7456, 0}, {793.0060799999999, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1046.7542568964905`, 
                1057.9820708414738`}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{793.0060799999999, 0}, {801.2665599999999, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1057.4820708414738`, 
                1068.7098847864572`}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{801.2665599999999, 0}, {809.5270399999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1068.2098847864572`, 
                1079.4376987314408`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{817.78752, 0}, {826.0479999999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1089.6655126764242`, 
                1100.8933266214076`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{867.3503999999999, 0}, {875.61088, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1154.0323963463247`, 
                1165.260210291308}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{883.87136, 0}, {892.1318399999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1175.4880242362917`, 
                1186.7158381812749`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{892.1318399999999, 0}, {900.3923199999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1186.2158381812749`, 
                1197.4436521262585`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{916.91328, 0}, {925.1737599999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1218.3992800162255`, 
                1229.6270939612086`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{933.4342399999999, 0}, {941.69472, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1239.8549079061922`, 
                1251.0827218511756`}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{941.69472, 0}, {949.9551999999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1250.5827218511756`, 
                1261.810535796159}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{966.4761599999999, 0}, {974.73664, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1282.7661636861258`, 
                1293.9939776311094`}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1049.08096, 0}, {1057.34144, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1390.0443031359603`, 
                1401.2721170809436`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1082.12288, 0}, {1090.3833599999998`, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1432.9555589158938`, 
                1444.1833728608772`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1098.64384, 0}, {1106.9043199999999`, 1.}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{1454.4111868058608`, 
                1465.6390007508442`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1115.1648, 0}, {1123.42528, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1475.8668146958278`, 
                1487.094628640811}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1139.94624, 0}, {1148.20672, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1508.050256530778, 
                1519.2780704757613`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1214.29056, 0}, {1222.5510399999998`, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1604.6005820356286`, 
                1615.828395980612}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1263.8534399999999`, 0}, {1272.11392, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{1668.967465705529, 
                1680.1952796505127`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1519.92832, 0}, {1528.1888, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2001.5296980000153`, 
                2012.757511944999}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1561.2307199999998`, 0}, {1569.4912, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2055.1687677249324`, 
                2066.396581669916}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1767.74272, 0}, {1776.0031999999999`, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2323.3641163495186`, 
                2334.5919302945017`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2213.8086399999997`, 0}, {2222.0691199999997`, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{2902.6660693786234`, 
                2913.8938833236066`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2783.78176, 0}, {2792.0422399999998`, 2.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{3642.8852315824797`, 
                3654.1130455274633`}, {-15.725895238434077`, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3205.0662399999997`, 0}, {3213.3267199999996`, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{4190.003742776635, 
                4201.231556721617}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4229.36576, 0}, {4237.62624, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5520.25267195458, 
                5531.480485899563}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4245.8867199999995`, 0}, {4254.147199999999, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{5541.708299844546, 
                5552.93611378953}, {-15.6960408364477, -15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1, 0.5, 0], Opacity[0.5], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8260.48, 0}, {8268.740479999999, 1.}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{10755.42587710649, 
                10766.653691051473`}, {-15.6960408364477, \
-15.166186434461316`}}],
              "DelayedMouseEffectStyle"]},
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-2.3129343999999996`, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{24.732986389111293`, 1.4999999999999432`}, {
       12.874412825298435`, 0.7022198660540369}},
      PlotRange->{{0., 115.64671999999999`}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {325.61021007019144, -64.13537806010406},
      ImageScaled[{0.5, 0.5}], {201.9288124466303, 122.16262487638869}], 
    InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.469], Thickness[Small]}], 
         {RGBColor[0, 0, 1], Opacity[0.5], RectangleBox[{0., 0}, {20., 17.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{20., 0}, {40., 2812.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{40., 0}, {60., 551.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{60., 0}, {80., 337.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{80., 0}, {100., 406.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{100., 0}, {120., 178.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{120., 0}, {140., 205.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{140., 0}, {160., 156.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{160., 0}, {180., 234.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{180., 0}, {200., 190.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{200., 0}, {220., 106.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{220., 0}, {240., 150.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{240., 0}, {260., 130.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{260., 0}, {280., 115.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{280., 0}, {300., 151.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{300., 0}, {320., 64.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{320., 0}, {340., 87.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{340., 0}, {360., 65.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{360., 0}, {380., 94.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{380., 0}, {400., 64.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{400., 0}, {420., 33.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{420., 0}, {440., 52.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{440., 0}, {460., 29.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{460., 0}, {480., 38.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{480., 0}, {500., 18.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{500., 0}, {520., 18.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{520., 0}, {540., 19.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{540., 0}, {560., 18.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{560., 0}, {580., 24.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{580., 0}, {600., 30.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{600., 0}, {620., 9.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{620., 0}, {640., 9.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{640., 0}, {660., 17.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{660., 0}, {680., 12.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{680., 0}, {700., 8.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{700., 0}, {720., 7.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{720., 0}, {740., 9.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{740., 0}, {760., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{760., 0}, {780., 5.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{780., 0}, {800., 10.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{800., 0}, {820., 7.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{820., 0}, {840., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{840., 0}, {860., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{860., 0}, {880., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{880., 0}, {900., 3.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{900., 0}, {920., 4.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{920., 0}, {940., 4.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{940., 0}, {960., 3.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{960., 0}, {980., 3.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{980., 0}, {1000., 3.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1000., 0}, {1020., 13.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1020., 0}, {1040., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1040., 0}, {1060., 4.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1060., 0}, {1080., 3.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1080., 0}, {1100., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1100., 0}, {1120., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1120., 0}, {1140., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1140., 0}, {1160., 3.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1160., 0}, {1180., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1180., 0}, {1200., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1200., 0}, {1220., 4.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1220., 0}, {1240., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1240., 0}, {1260., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1260., 0}, {1280., 7.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1320., 0}, {1340., 4.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1360., 0}, {1380., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1380., 0}, {1400., 2.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1420., 0}, {1440., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1460., 0}, {1480., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1540., 0}, {1560., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1580., 0}, {1600., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1860., 0}, {1880., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1900., 0}, {1920., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{1960., 0}, {1980., 1.},
           RoundingRadius->0]}, 
         {RGBColor[0, 0, 1], Opacity[0.5], 
          RectangleBox[{2020., 0}, {2040., 4.},
           
           RoundingRadius->
            0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-12.4, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{24.732986389111282`, 1.4999999999999432`}, {
       12.874412825298435`, 0.7022198660540369}},
      PlotRange->{{0, 620}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {542.683683450319, -64.13537806010406}, 
     ImageScaled[{0.5, 0.5}], {201.9288124466303, 122.16262487638869}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[223]},
  PlotRange->{{0, 651.2204201403828}, {-128.27075612020812`, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.878832570844365*^9, 3.879083844899994*^9, 
  3.8790848815869637`*^9, 3.879156013010385*^9, 3.879325334803912*^9, 
  3.879354599033166*^9, 3.879419459575225*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"9b08d367-0fc9-44de-a9da-55b609b5ca7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Keys", "@", 
   RowBox[{"First", "@", "finalds"}]}]}]], "Input",
 CellChangeTimes->{3.8790844311935472`*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"5901ca7d-0a0a-47e0-9d28-98cbe6ae5bce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\"\<Company\>\"", ",", "\"\<ISIN\>\"", ",", "\"\<integralScore\>\"", ",", 
   "\"\<TCUID\>\"", ",", "\"\<GICS Sector Name\>\"", ",", 
   "\"\<Carbon-Scope 1  (tonnes CO2e)\>\"", ",", 
   "\"\<Carbon-Scope 2  (tonnes CO2e)\>\"", ",", 
   "\"\<Carbon-Scope 3 (tonnes CO2e)\>\"", ",", 
   "\"\<Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\>\"", ",", 
   "\"\<Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\>\"", ",", 
   "\"\<Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\>\"", ",", 
   "\"\<Carbon Disclosure\>\"", ",", "\"\<Revenue (USD mn)\>\"", ",", 
   "\"\<IntScaled\>\"", ",", "\"\<Ratings\>\"", ",", 
   "\"\<Carbon Intensity Total (tonnes CO2e/USD mn)\>\""}], "}"}]], "Input",
 CellChangeTimes->{3.8793546001095533`*^9},
 CellLabel->
  "In[481]:=",ExpressionUUID->"ac81ec20-61b3-42ff-9d30-8d8c49991057"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Company\"\>", ",", "\<\"ISIN\"\>", 
   ",", "\<\"integralScore\"\>", ",", "\<\"TCUID\"\>", 
   ",", "\<\"GICS Sector Name\"\>", 
   ",", "\<\"Carbon-Scope 1  (tonnes CO2e)\"\>", 
   ",", "\<\"Carbon-Scope 2  (tonnes CO2e)\"\>", 
   ",", "\<\"Carbon-Scope 3 (tonnes CO2e)\"\>", 
   ",", "\<\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"\>", 
   ",", "\<\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"\>", 
   ",", "\<\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"\>", 
   ",", "\<\"Carbon Disclosure\"\>", ",", "\<\"Revenue (USD mn)\"\>", 
   ",", "\<\"IntScaled\"\>", ",", "\<\"Ratings\"\>", 
   ",", "\<\"Carbon Intensity Total (tonnes CO2e/USD mn)\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.879354600193618*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"2916c6af-5be9-47c2-91ae-9a2fc48358eb"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"6fe5b5e1-9fef-45da-9020-be49d30f6e34"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"revLog", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{"All", ",", "\"\<Revenue (USD mn)\>\""}], " ", "]"}], "[", 
     "Log", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scope1Log", " ", "=", "  ", 
   RowBox[{"Normal", "@", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{"All", ",", "\"\<Carbon-Scope 1  (tonnes CO2e)\>\""}], " ", 
      "]"}], "[", "Log", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scope2Log", " ", "=", "  ", 
   RowBox[{"Normal", "@", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{"All", ",", "\"\<Carbon-Scope 2  (tonnes CO2e)\>\""}], " ", 
      "]"}], "[", "Log", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scope3Log", " ", "=", "  ", 
   RowBox[{"Normal", "@", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{"All", ",", "\"\<Carbon-Scope 3 (tonnes CO2e)\>\""}], " ", 
      "]"}], "[", "Log", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scopeTotLog", " ", "=", "  ", 
   RowBox[{"Normal", "@", 
    RowBox[{
     RowBox[{"finalds", "[", 
      RowBox[{
      "All", ",", "\"\<Carbon Intensity Total (tonnes CO2e/USD mn)\>\""}], 
      "]"}], "[", "Log", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.878832940631596*^9, 3.8788329661671133`*^9}, {
  3.879084661985804*^9, 3.8790846867595243`*^9}, {3.8790851603181553`*^9, 
  3.879085203306385*^9}, {3.8790852353950872`*^9, 3.879085251927593*^9}, {
  3.879086653227219*^9, 3.879086667630204*^9}, {3.8790873114616327`*^9, 
  3.8790873208823442`*^9}, {3.879156038412794*^9, 3.8791560504922037`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"f3c47b9b-a284-4e6d-8579-72e54a1fcde3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataRev", "  ", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{"<|", 
      RowBox[{"\"\<Log of Revenues (USD mn)\>\"", "->", 
       RowBox[{"Normal", "@", "revLog"}]}], " ", "|>"}], "]"}], "//", 
    "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataScope1Log", "  ", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{"<|", 
      RowBox[{"\"\<Log of Scope 1 emissons (tonnes CO2e)\>\"", "->", 
       RowBox[{"Normal", "@", "scope1Log"}]}], " ", "|>"}], "]"}], "//", 
    "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataScope2Log", "  ", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{"<|", 
      RowBox[{"\"\<Log of Scope 2 emissons (tonnes CO2e)\>\"", "->", 
       RowBox[{"Normal", "@", "scope2Log"}]}], " ", "|>"}], "]"}], "//", 
    "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataScope3Log", "  ", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{"<|", 
      RowBox[{"\"\<Log of Scope 3 emissons (tonnes CO2e)\>\"", "->", 
       RowBox[{"Normal", "@", "scope3Log"}]}], " ", "|>"}], "]"}], "//", 
    "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataScopeTotLog", "  ", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{"<|", 
      RowBox[{"\"\<Log of Carbon Intensity Total (tonnes CO2e/USD mn)\>\"", "->", 
       RowBox[{"Normal", "@", "scopeTotLog"}]}], " ", "|>"}], "]"}], "//", 
    "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalds2", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"finalds", ",", "dataRev", " ", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalds3", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"finalds2", ",", "dataScope1Log", " ", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalds4", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"finalds3", ",", "dataScope2Log", " ", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalds5", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"finalds4", ",", "dataScope3Log", " ", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalds6", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"finalds5", ",", "dataScopeTotLog", " ", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.879086674886086*^9, 3.8790867757777843`*^9}, {
  3.8790868104961033`*^9, 3.879086843282325*^9}, {3.8790872617954082`*^9, 
  3.879087278550708*^9}, {3.8790873277104273`*^9, 3.87908737146085*^9}, {
  3.8791560642796917`*^9, 3.879156136173725*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"9547b407-c261-4cd3-9c61-3a2a8845f68e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"finalds3", "[", 
    RowBox[{
     RowBox[{"GroupBy", "[", 
      RowBox[{"Key", "[", "\"\<Ratings\>\"", "]"}], "]"}], ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Revenue (USD mn)\>\"", ",", 
       "\"\<Carbon-Scope 1  (tonnes CO2e)\>\""}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Revenues(log)\>\"", ",", "\"\<Scope 1 Emissions(log)\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8790872056130342`*^9, 3.879087214367696*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"4097cc73-a6ff-48d9-8186-ee3b23ad5f46"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
o9bldXldXpfX5XV5XV6X1+V1eV1el9fldXldXpfX5XV5XV6X1+V1eV1el9fl
dXldXpfX5XV5XV6X1+V1eV1el9fldXldXpfX5XV5XV6X1+V1eV1el9fldXld
XpfX5XV5Xf7/QN4z+sFU67A4fi+e3gEqWFfvD9nHoPeyGR91gO+YcjkNixni
r/glUgnNQvGJ3G8F8fv5vKZw++ne4UtHlDBfQJQTzDnseq910BTxf+8QroWp
f/qPODfew++nervDDjf4Sx3LiPl2NirD8spc4HUmR8T/U/09H1y14m6PT6uh
96lnZzxAeeL1M9D0Re+//znWCBby+dua51zR+6gR6XXofIfCbf3o/dkso23E
TSXRjUWX1/h4kn6DxscojX9/QhH/4uupEEjWE7o/+8QA8x2oqIH6k/pHK57K
6Plxso/g3f57MwyTfuTzmXzDT7rBSMtA+1kZXTL/TN6+i7zE42jXut/5Ybi/
bF5A1Lq9prMzxucx1OnAZ4Wbctqx0Yj/NyL5GywdiKD/cU0fn8elbwA598ss
XIQC197HVYaenzNvrbw9MR+Wuj3ic2dXlABJxslftjS+oPTUTpj+vg56X9z6
9hKIZbl7iv5Y4+swCwDTiRUKb8XLmE9ivwbmMZDOQPwkKd2z4Mbb06hb8gSP
h8NjyOQ91/CSSRG9r936qRGOnW26t5Igjfkp8sUgjeUro9tTPXw+S4gabBR+
IXX+8HXMB3bfEMh0YpPtytCde+5El0IR5q2lv4Hbv9cIfv5Mei4ZjM9XhOwU
sCjcRf3TVRa3q9cG9O0OvfBgNcR89mw5UKsweEB7UQrzDXwPhB1/v8WcrHDA
/C6ReUBpPmfFlGqL2hdYuom4f7bR5peAPOKfMVv5D/rLpI120zEiPt8yYTVo
qepsGjugi/ggTqnlgWq3qz/lP2f0/v0HwQEQqbnvp+7+CPEVE95P8fmMCxzo
/fdpGgNgj5L9YVmmiN7nTj3/Fnq//NjcdOg/zM8zIwNvYhY2rmhYYB6hjUZw
1eCNRxeTCn5fWbYSKuMN5JPknRD/ykLnD0h70HL+Rroj5nMRqQC2M2cY69zo
8HkWHUKgzKEstKRkgvmUW9rhds5c409LwPYYagNSWw9FnWlgwvrWJg2Lqfnb
q6PE8HlIrC7gZTPf4PyWFZ+nsfMEBB4d7kj84oD53XfGg8l1zo+WfML4/XbN
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
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
C1nx1DsoIce8knPQOdvsS76RWRnQ4yRo/J+SL+njly4Aq/zOeOCO/Jb742e4
EDN54CKsUQ/+X2o/tLO9mhZtGI/na+L7exDkM7G2nqZJ/SeVa1Da6l9/f9iF
eNS5S8CuKHXD69OUf7d0DLgoGVYO2RzG+Ou/lg2urB94pIF6ePaNN5BidczC
SM0O18/mXS7sXFts3NFO+u4T/QZ4b8VRk7HyBNWbgiHwhENeekVAJPG91GC6
/gRl6u8uz0YcslQxovzw5DrpgLFmpO87lcAxdvX3/CpXZXGOe8tX2U+vxA//
9+2PLM4fJdsCx9I9A/e9OMlHtEQP+ONXJSz/cBTxgMv1KjBjFq1GC8mvS12n
FGrm/nhw7JsvrUdHPaB/elcwni+Ot23Q2D62fskuC4rv4Vtg+KbSsiRBk+ad
lvoD+nU/9GP93jLpFfuYxpaIU8NB5OdYLz4BoHr3iW6bJ9YT2w40wgrWAefb
O9Vf9oZP8+q2pscZk/6ZeRKKHjindOyNJn7k54H+vFrCVsg32b5kA7yW5xzl
3k/6xK4EWFJ5odx800Li202qUCURKxgX5415RvBeMzTfvia1+7Y+zWempcD/
2ncpKulok97tnglXzIOe71Y3R772YMYtsJ7zrKlybgjpmQ3X4dS/hKO/tx+i
fnB8GfGuF3uQT/M0mQJXN5+hN0e4LPKV5Huyz77+Xsx4e9D8zZ0K0F2u+nHk
XCrev8G6p1D8tAhCd9Dvfco8DtMfjWiKXziK+bW+oApao3zsxyf5HdajPZXA
p7p/FqfUFvqcag863ZIC7JxqNM8snkB9NzEuWs9URTjQ6WgR3YvzESlc9j2w
YGjbarcSccpzKtrQetJRNVLai/iZ9XqQSSkJqlG1Q7wIVa2CEem9im53qH9y
75YPfBgf99r3v+MUn5mhMInOm4oLYlB/C6npB1a6sLMBqmdNI0Anu8ecZ20U
fm/1/C4I9ItsVvPxJz+/x8Uwg7P5t4u2GuX3rZngU3Lzytf7ouSvud8DOPlf
Si0RCEV+tuh3NVje3Dcj73UAxoPbID8j9O1iRHa1B/FFsfIpv1Bd5MHWty7D
iQ2TEVVvQHjNkwaT0ezpqulP8zzrWmGz4Kovjm9caL2FqqG+xLazREgfz6Mx
RxlsFhVbZbrNG9dv5/WPVH/1kH/io8zZDOaPcT3kk9rc6VAfu1Juiwv2m2Wu
HVnNKNg5j0bomOP9THDdgvMJp2uWBVlhvVX5O4/qiT+hWH8WJnYQnl82xXp2
i30LiFWdEIxbGM7Cd+l148LM41WbrcoHgOqDa35Udx8ivqW45BH4WpzzSNY4
RM/PSBXCT79rhYevOiE+rvtyg+Ikz4TmG5OqgTXOOivxIOmPDcGwV8apvDuB
9I9Ztvk453thlxHiTsZQFTAN1nN8vyqSH9VoKHy/Ua8ckxaB9ef977U0lyps
jvlkWXwLDK+u/Wqrmkh4WpsJn/f9mdex1pr89D6k4/z45b265KuXlAutboUW
Ej/C8P4WFf6DnP1XzvbNo/NTPvMaqL17OPC43BX55Pvq27B9o3+dSk885ndp
kzFQ7ih4eSU8krUuRhnJO/D5npDmJNQXog+9A1W4sDAtzwfzwZ/pHAzG6S1b
/N731TmsV/2PeNP+HLsCBSWhjEJGDJ2rmhbIPBJwXcvEHT//HXwDwrciiw5F
asAC/mtzHzbtAEZ81b+qAsuputwezOoTjDcuNcF+t9GGS6Cvs25TcaY+PV/S
dhKkhoU02zbI0voU5cD8I3deJYXqk14Ungz7fsUdkS2PxnpJb1cRBDdkv7/x
WBTnH4bP9YPJESUzsSEzvH7ddG4G8eh+IOaNfPFs0hETyZ+ycUEWoN+roRvG
wdIj5yHnh9j7S8UWrHhg5KW2MjWDria7u6bmu2aVwwbNXc0iYnOpH9srBUK5
A4bHvCNQT8pvuwf3xeN4HoEh6cmcycAbOvo7uPMAzRM88YCOM86GOzgiMV/f
TawE/iUX05Jbtag/tTceHgfUtYqHj8ri3zMaoI8GkO9lMe5WLASDE4uX7U+l
5yUuy3fC1vRzQ5bds3F/GiXrYZFiSnHcQmfkj/7Lr8DKbNn529cq0lzBLSkQ
Czg+oT4sQv3qS2Eg1NZ+QX851oNc1cHbmLcbxgebO3fiOt3/PJO537/0zn3V
0/R8VEwqiCwUETaQ1KTnw0oYsDyQJ7PPm53q7x+KoOI0+rk5XY3u/3sKsLfM
zssoaPx/flSkyPvQUUOa5oPdHSC/z9/uekMQ4lX1+naa71Yiv2YZ5edwY8Vg
ysnXByif6BwFXdvw0gW+pAew554Dy/ta9Tc5tAi/vdMg3sP8wgeeUVms7+q2
ARx8uEjjwiLiW8sZMExPsN/oboh49jfpNFRme73SDzbHeNw8fxjSk7YalNYQ
H+BvvQ1fxOPYPX2Nqd6ccIQ/o6vmlAwtJL1zy1H45tV5ek+4OfIn3oePYFfM
8jut+T9lkf/FLwP9HxwzCzKtMP9+SJ7cj0eGe33LNEiXWDdZVzWVRyvraiNf
WB7CyRgcf8j397M96X3HyyGsa+Ui34hfsojXSgDjvgsqmqLjEV/k7g4QD5tr
RvvZOXmuH3+5dVZyK+UvkUh4ruicu1PUH/nxXOd2mNZ0LVPm0kzSF6vUYIz7
8tOR+3LIFwyOtYFaxKXKpjYvvJ8D7l2w89728S3irtR/XFUN084mjt9Rl6d6
zyoM+pTf7nsfpUf9TM0k6G0VrAv4a4J9inr2cQhfdmWGbYE//n1Sz22Idl5X
1aafQPMmzcHAbew6WyXDmuYBc9KBh3Pj6lULgnA/buiWg9zW8tKrBw0Jz4/2
gF2UYI7f+eXUP9LThiG2Ze8+HmQnvHYKgc1DIg8TBESndH0emJ1gNf93iBni
h3lGNQinRm9+G+aCuFzIPILDnW9EOa0cMH8ulTtLz5lUaNH+mBRCX7xfkXjU
LryeM9KXoGSBkLeuqwrWf5sk2ZkPd5267nzRm3r+hx00XnieWMohSv31rebA
L7rcvl1tK32+Zwem106+3M0xpacYFMFVVsVqaUfnMzkLTtiWzh1RpOcfgrta
YItryzFxTwfSl3mzQWJ71y8PLWXyH812hMHipw3egR9lkd90bYArl+U5AmcH
Ib9r2FQFoTWbuc1rzJD/K8h8Ao+Gmd8jLmrTc4kpSeB8dXX/7WQPXM+O1DJY
HKL78XiUHfGvd2fgl2JYq9IsU9p/jgJQjTsYls7rhvjTFcLFyCUGyq7JPkT5
YX4+rBHnTzCMp/lDOJkPX7ZsitkTIkx6+7AkbFrR9Ht/oRbVTwIA641LKnm2
+aAeoVP8HkLDfv09tbiUxUcbWmfrMgopUvdnPJSh8x/iDoFSRoH8NrtoviEy
AHYZKwe0i2hRvVwdDwHGNm0jD4iP3l3dBzkvDsTF20zNw4ymwzPd28L7hdwx
330cHoZeia/cZ35lIH8LlWwHoz8PNz6JscT7leidrNe1kuRUpT2of1l5H3i0
dSs/OEhRPy/MDaodHC8LzNKheUmfGrA4slC6K1eC8FDDBfJ0NSX3hN1FfJrh
x810jKr87HuvSXzc2x3nc3aYp+D+5wmMgresl0fQP+w3vSvzq4YqGVGfoidT
+qeGFvUdzk/Nh+32gv8DgB8PWQ==
        "]]}, {
       RGBColor[0.560181, 0.691569, 0.194885], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
z5I9XzUNgNNrcNHXH5cI/+9y5KX+DzPrnnU=
        "]]}, {
       RGBColor[0.922526, 0.385626, 0.209179], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQHcaYYyK6/pwDkMlw5YSNY94yw7vtCw472HJdX2zw
cK8Dv0qW7iWVyQ5CzQdOGXo/c2jwLxIuqXZ2sDeN2+Vp1+mw973LtqT6x/aN
U527cwQLHO4VdvWlTO9xcE7mOt2ewu7o9+hcaR1LrcP1xQW2Xb3zHSKebHJP
Tyt12Pb57xWH3AsOuy57uZeI1jikgcC6UofP6mdMFDLqHYDWLXQNnUUy/80B
S+Uu68lg/0Swsjr2ZZhkaG3ucKgFOnjWxIsOkz8XLl1ztdlBla1xavbSKw6S
vcduL0woB6tnWFTm4NO8883ni1UOuc9/rzS8v9zBZvrsyyvfNDgAlTufvrvX
4dYCzeJVx5Id5FtfB+64udLB5PrkSbxpzQ7z3i8/dnviFYdu9uNXZISWOGya
+36526wpDouNbE3WfLN1UNxQlDFxraZDp9iVZXm/XBwst5wo2/ffwGFug9qh
Y7wTHbxEZilwJLs6Pk7fOKe0pxUsH+D80WFGHjDktSwcZs2cObPz1WGHHX17
tjHrFTlEABVs6zvikBgSpL7AMcXhS7F4/tXUTQ4Gu9X5uW0jHFhYbCMO2s9z
EC1NzZh41g9i/6U+B5u9QdMUFxQ4MAo9ko3/sNEhOOFHnuOWSQ7g+AvY7wCS
7gvPcMiY+LbG/mqaw+Y5+/Q43OIcjipsKHqRPs8h/Ny31HUWVSD7M+QKDRzP
pgcH3mNeAA4Pi3VPHTqOvejqeZLsYAwCEe0OAATaFMA=
        "]]}, {
       RGBColor[0.528488, 0.470624, 0.701351], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[{{2564.4, 281725.}, {614.9, 416231.}, {1939.2817, 
        1.268687911*^6}, {865.6, 1.264039*^6}, {502.507862851605, 1685.318}, {
        2873.57, 845386.}, {2413.939, 1.193461724*^6}}]}}, {{}, {{{
         Opacity[0], {
          RGBColor[0.528488, 0.470624, 0.701351], 
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6]}, {
          RGBColor[0.880722, 0.611041, 0.142051], 
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6], 
          TagBox[
           TooltipBox[
            PointBox[{6977.439637264443, 25199.53}], 
            StyleBox[
             PaneBox[
              FrameBox[
              "\"Carbon-Scope 1  (tonnes CO2e)\"", LabelStyle -> {}, 
               Background -> None, ContentPadding -> False, LabelStyle -> {}, 
               Frame -> True, RoundingRadius -> 4, Background -> 
               GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
               BaselinePosition -> Automatic, LabelingSize -> 
               DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
              0], {}, StripOnInput -> False]], Annotation[#, 
            Style[
             Pane[
              Framed[
              "Carbon-Scope 1  (tonnes CO2e)", LabelStyle -> {}, Background -> 
               None, ContentPadding -> False, {
               LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                FrameMargins -> 2, BaselinePosition -> Automatic, 
                LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
              0], {}], "Tooltip"]& ]}}, {
         Opacity[0], {
          RGBColor[0.528488, 0.470624, 0.701351], 
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6]}, {
          RGBColor[0.880722, 0.611041, 0.142051], 
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6], 
          TagBox[
           TooltipBox[
            PointBox[{11071.357498892865`, 8.894054*^6}], 
            StyleBox[
             PaneBox[
              FrameBox[
              "\"Revenue (USD mn)\"", LabelStyle -> {}, Background -> None, 
               ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
               RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
               FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
               Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
               False], FrameMargins -> 0], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Pane[
              Framed[
              "Revenue (USD mn)", LabelStyle -> {}, Background -> None, 
               ContentPadding -> False, {
               LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                FrameMargins -> 2, BaselinePosition -> Automatic, 
                LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
              0], {}], "Tooltip"]& ]}}}, {}}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
       TagBox["\"Revenues(log)\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Scope 1 Emissions(log)\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
    ImageSize -> {746.36328125, Automatic}, 
    Method -> {
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{0, 4184.59124457237}, {0, 140677.771}}, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.08]}, {
       Scaled[0.02], 
       Scaled[0.12944271909999158`]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"D\"", "\"E\"", "\"C\"", "\"B\"", "\"A\""}, "PointLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.879087215231567*^9, 3.87932534713229*^9, 
  3.879325429568788*^9, 3.8793546082748003`*^9, 3.879419476475441*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"c465eb24-183e-4c27-9e86-76ba1829a847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"finalds3", "[", 
     RowBox[{
      RowBox[{"GroupBy", "[", 
       RowBox[{"Key", "[", "\"\<Ratings\>\"", "]"}], "]"}], ",", "All", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Log of Revenues (USD mn)\>\"", ",", 
        "\"\<Log of Scope 1 emissons (tonnes CO2e)\>\""}], "}"}]}], "]"}], 
    ",", " ", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Revenues(log)\>\"", ",", "\"\<Scope 1 Emissions(log)\>\""}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8790864776930027`*^9, 3.879086602122036*^9}, {
  3.879086786734255*^9, 3.879086805076805*^9}, {3.8790868864451942`*^9, 
  3.87908688671143*^9}, {3.8790869912407513`*^9, 3.879087038984003*^9}, {
  3.8790870844861183`*^9, 3.879087107213188*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"ab8da2c3-9be2-40c2-9160-36c02e5f30bd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
Dk6WyHnou5LxZo/v4ntObJBU3dl5bQT/zN16so4lgtekQnlZPhdu9Tzpo4dF
uKI/bTLLl+iLe7pOHC/mo83P1W5zGQ2Lq7/Fs89QIf63ixGnwkFK1cFj9xwE
SGt4SqlIZSHfpGRQRpeLjtYZoXsnmPBPfu6R9FMDu7Jjp80lcsqLv/7Z7w0a
WGcEs9K3hE9unNhs2qGBdufUf4ILdMgovP58eqEuVIebacktPDTSR75npqvj
jvvuGeqEv7xuc9FNrdLCwVPLZ1/TZeFf4G+T2CAhTi01NgtsouNzfHGS5wGC
c3YFLxgh8lBPo1J1qEGIoO5jt08TfPX+WbjM2X4RNCIa5a+pslHrvli7fFQD
006oXB0j/JZ3/dGufeK6SEv/rHkhigej7V68R7vUMXml6fqQPh+zV/9SX7dM
E70KbfeeiQuwn5NQtCZPH0ZJV9mPBtkQbxtcmfOK4L4QOZtNTjT4RsY2v+3k
4lvoo3MbAnjwd309bUROAENRXcORRiqEMyhhg5eEEITsH+uyF6HYbYVX/zkO
zLYd8dmazoN40yGl/70/d6XdDzR/caF1/1UW9YU6Oi4f0xg4SoNr8IuZ6iVc
hDYf+jTzCgcTFRt28W048IkqC5ixkkH0jVUWt7+K4HbSwrXQcgbePN0tKpJU
gUyZWLV9KcElPX97x/5o4u4l9hPFczRU7tZe8NiSjoj2ci9fKwp0O6qjiwOI
/hMidN+nTUN+w/13S3Pp+Ou2ujwpgQKr8WNSyrGEvwacKg99SQUj83vZHRoP
9Y8kLaR+8rD8bwy5docenFMLosbnkzFXQ84rwYSLzObF+fmfGJD7adzgsEcD
0e+VKqhuRF8b6f5ceYuPUJVjTWYyItxPmTh+TUsHn3k3F0dYEnk7L8rJ5KII
A69aeIXFigjIcNIskZGDccbS0x1/aDg/1yVVdRvBN9TlO1RNRHDxFnuzYZU2
Xqv/+1dWyQHb9Ukr+acIylFLzri+ZKF9vozlk+l8XC+/4KlP9EUX5zu3no0I
cfbBrYVi8+nIq73zcNMjKnKjTimUFJLAkdH5rzychvkbdz8al+WAXttwSqxd
A9sPxM320FfDkILLPU09Mu7Ol7YomiT2hNU/I7iaB0PP+2ZGcizs0qwbX79C
EXYRNvqnr6kif1bpgmCi/40+16pr2DILp9L0FJ3fUxEpm/zfHG+ir7xtW/3R
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
0PHvr4j56K3cI9BnIpgZM7BnWB1ZbswzHa/U8GbZ1hPm30QwNbv6ARNc2M76
xDrgwcX27+77Pz3n4tBVSU+X3+qwv9y5+CZx3q2c0zstfzNhnyaZrUbwz6p1
0TM1X2jjSWRCo/gVFsqf/GDcNtFFvbjD7m/pxHzYWH6oEIlw2LX6+ZYOJm7t
M1m84wMH1RG/dducaQg7ozjAW8jDTZf32mOvBBi6rwAxgkd73g5qJ41Q4KNt
jBIbJnQOFY+IS7DRmOo0/0yyNqLHb6pLdLFgaNMqW3BJCwUaw9OD6EQfFK5c
UH5WAL9Llylul0kIar+zpl2Sg0XO7/WnXWDA8MXW5F01AmgcM9qfcJAGzYkn
q45pccAe2Ld3pRzByQ81NUOU1XGr5VDLsjEqhprWPSGxhRCqkTUO7aRg+ZOo
CcP3mjiht9/C4DkPxn+Lf5+f1IBKaJYh05DoG/YHLvoQ8/wC+suDVenQWU0T
Wu4g443SsGzEdmI//17Jd2xTxdf3UTF2oQzUPOdI9sWI8Fqn/IzUehKSpKnn
b1lxMJPcXbDPn4WP9SHaO5cI4L2s4sr29TRkF45a+M8j+sCcjidp+TSc8ltm
cqiNB+fRjIRhRS78bm6bVeuphbN2u1QKiefHLtr87UaDAHP2vqU4/8dG16E3
ZYHi6kgrb4wfN6BgU+TjPc+JOVwce8y9E1wU0E8cXLdehAv7Mj75fiAhr+Th
vtqfTIj9Fhhm+HCgZDddiZmlBdOepjspFcT8xGVcqKER/Y7a4Wo9SYNlyhLD
LSFsRJ8hR8f8oCDd9uLdnhA+aKLHFYE1HMw7FbDz64gAzyrzY6IJbp8xP5H3
ed1s0P0WBu19QsOVCPX2cIIrfbfVbfd7S0XN9Yb+LVl0qOmevbWzlA7fYPML
w9LqcFzs9Fd89jQcDGq8O3elKvyjip/ohdLQNl5t0dpBxbT/ltkPZRG52Krk
f5jEwsv+2IUWO5SwpyVuTK90Jq6c93LzrVLGxma9j2YCDpyvjc8vUmHA+2jO
vzMBVFy6eDCy8iQHiaXZrq9LhRiOexk0fJ+GIwz2LcFRLv7tq65IaiNhYKL4
4dmk/31O3yq//h4d431hRmsnRPh1ydCzgXhf3Pnys9cTz0P7+ALl1cT87NIz
zfvVyIFHbmB+qzwdbe7U+kub+ZBZXXDJWKCC3svrjrhXUrBvSVXTeeK8+vUj
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
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
3RlBw4NuUwfDbTr4L2AJ6ZA=
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQbVSq9/VnkLKD/yLR2vpnOg7CVfwWxnlKDo3OQjE1
jxQdxBdE2bUVyjjE3vo22bRU1SEz7Ns6aV9eB3HO2mtfj0k5/L159mPM1vv7
lRoDj8w2EnOQ3HnQo85N2mH5tbfvFwRrOFzSsO+40y/hYNonMMm4UM7BYXms
GXeEuAOrXO/LL6XKDkmsTtFxeRIOc/YsvJaZKu7gv4/pxMMHEg5TTdcfZ90h
SzK/kVdpmVOZjMNDlts+T2Q0HMJ+T167ZoOUQxCjj2vcDGWHC1JGnNwXJB1S
HM+5M71WdujNu3mue5O4A7eC5PrUieIO7h3/FC3tJRxyJmgUreRRcOCfcz5j
gq6kw7+0ZepOwPCwnl3hXeQo4qCX9KIrz1TBYfWVGkmPnZIOhYvuucq8VHbY
rrJs+s50eYf9eYUHdu6RcbBNlLmuacztkG6e3lqXzeLgJXSAb8ETXgeFH1Nf
+axic2gxYlui8lvaYX/zgwjvjboOL0xTPF+pSDk865Jk0QxVc/h35zPr7SpO
hxNWzNvWlyo5tD7deZ17o5iDZ933Uy9blRwOZTlzs0aJOLj07os1fKXgsFxH
XI3FR8jh2Lu/b/+4yjk84wwIXFEt4OB2j/V3/mRpBzlubeWOUDGHZ7OOMDrf
VXBIF/V5tStSxuHUc4u1db8UHexYhA20xEQdFL6bnlh4RcShhXnp5fX6wg5W
18PWeXjLOQhJnLsvpQGKz8Nlx45rOzSfZJ46uUHO4Unu2l9v01QdspOaxCvd
RRzWvls44VGZlAMA2s37nQ==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{7.849479812113103, 12.54868669682055}, {6.421459652959424, 
         12.938995673589352`}, {7.570072925763097, 14.053493783431916`}, {
         6.763422908092217, 14.049822707643331`}, {6.219611287276691, 
         7.4297095490159295`}, {7.9633104381870154`, 13.647548606769519`}, {
         7.789015132075569, 13.992368653865524`}}]}}}, {{}, {{{{{
           Opacity[0], {
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]]}, 
           Directive[
            PointSize[0.003666666666666667], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           TagBox[
            TooltipBox[
             PointBox[{8.850437314318158, 10.134580622531935`}], 
             StyleBox[
              PaneBox[
               FrameBox[
               "\"Log of Scope 1 emissons (tonnes CO2e)\"", LabelStyle -> {}, 
                Background -> None, ContentPadding -> False, LabelStyle -> {},
                 Frame -> True, RoundingRadius -> 4, Background -> 
                GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
                BaselinePosition -> Automatic, LabelingSize -> 
                DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
               0], {}, StripOnInput -> False]], Annotation[#, 
             Style[
              Pane[
               Framed[
               "Log of Scope 1 emissons (tonnes CO2e)", LabelStyle -> {}, 
                Background -> None, ContentPadding -> False, {
                LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                 Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                 FrameMargins -> 2, BaselinePosition -> Automatic, 
                 LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
               0], {}], "Tooltip"]& ]}, {
           Opacity[0], {
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]]}, 
           Directive[
            PointSize[0.003666666666666667], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           TagBox[
            TooltipBox[
             PointBox[{9.312116646810683, 16.00089352154323}], 
             StyleBox[
              PaneBox[
               FrameBox[
               "\"Log of Revenues (USD mn)\"", LabelStyle -> {}, Background -> 
                None, ContentPadding -> False, LabelStyle -> {}, Frame -> 
                True, RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
                FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
                Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
                False], FrameMargins -> 0], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Pane[
               Framed[
               "Log of Revenues (USD mn)", LabelStyle -> {}, Background -> 
                None, ContentPadding -> False, {
                LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                 Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                 FrameMargins -> 2, BaselinePosition -> Automatic, 
                 LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
               0], {}], "Tooltip"]& ]}}}}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"Revenues(log)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Scope 1 Emissions(log)\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 12.103724255530306`}, {0, 18.767225342707643`}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.08]}, {
        Scaled[0.02], 
        Scaled[0.12944271909999158`]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"D\"", "\"E\"", "\"C\"", "\"B\"", "\"A\""}, "PointLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.879086506557887*^9, 3.8790865481112137`*^9, {3.8790865808356113`*^9, 
   3.879086603495572*^9}, 3.879086805954302*^9, 3.87908685078435*^9, {
   3.8790870243427973`*^9, 3.8790870397306223`*^9}, {3.8790870848904448`*^9, 
   3.879087107916469*^9}, 3.879325348781508*^9, 3.879325431149507*^9, 
   3.8793546136515303`*^9, 3.879419484314218*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"cc920117-8b76-4e20-947e-2521838287f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"finalds5", "[", 
     RowBox[{
      RowBox[{"GroupBy", "[", 
       RowBox[{"Key", "[", "\"\<Ratings\>\"", "]"}], "]"}], ",", "All", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Log of Revenues (USD mn)\>\"", ",", 
        "\"\<Log of Scope 3 emissons (tonnes CO2e)\>\""}], "}"}]}], "]"}], 
    ",", " ", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Revenues(log)\>\"", ",", "\"\<Scope 3 Emissions(log)\>\""}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.87908698238165*^9, {3.8790873957890177`*^9, 3.879087402409729*^9}, {
   3.879087548263501*^9, 3.879087555863674*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"29d3a312-4370-4946-bf15-97af67597887"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
acI0W28kb5o6OIF/xNbjTFyn3u4OVyXhYIqX1e4KDjY0OFygPteCZMjK+nv3
CV762Jjjm0aCkn65wyYTAYJzSnVKZ2ujS2A7z5jI85dlvQ/N6lNC5vGrvgnE
nnDLkyJtOaaFOf8dkruwh40g0nfLuikUnE/OuLWug4cMz53fLU3ZmDk1vqQr
Xwwf9lSf6Cp1GPM+q+435eGaU651qi4T/xwWcDKO6xHfrS49P5CKf0NjVw4k
iLFowdWTXYpc3LPY0pGxUIzpd/V6bOOeWQwxnYWLu1SwMSL5Y4idJtxObntV
eYAF++Eycz0ij1yMHPWrOMTG0y+88NxgLcyTNmheV8dD57mla24FKOOyosz6
I+00iIPfxJYQc3FtoLeFf14Mr+70m/7qZFAXKW5/OMZHpnWeW8juGajvSPIq
/0XDYGp300QyHb8lQ5fW9/FxKepQb9x9NZy83qaW6M5CWX538OO1ZBQN2qtf
bmVjeZXUg84PJMx7dtFa9HJST+pJPakn9aSe1JN6Uk/qST2pJ/WkntSTelJP
6kk9qSf1pJ7Uk3pST+pJPakn9aSe1JN6Uk/qST2pJ/WkntSTelJP6kk9qSf1
pJ7Uk3pST+pJPakn9aSe1P8XtMLP2+3Gn5VRK3hPetbBwETCe56dLh3j7/P0
qq7wQZE98A+HtJATm+NySJaL9g0ic8tpiijcVD334n06LhTWWejlq+HLt+ll
6mNMyBp+sI6y0cK1eXp9Qds4uHxTeFCzfwYcVa9n//eZie2Op2znfZNAbsy3
ZslXFMw/5HVOMJ+M9MMy3xtUeKjqn7nCtl0db+IMFnGiWHh5Si3fz0sb1202
mWrc4SK2Mb6ufy4FrwbWLlyxUwDazK+erfZcXJ8e5msaaABxULhfnDUF10JJ
qnc/CmDts2zz0r9UpJr/PTKnkwuJnyb7dy3RROvJJLfPu1i4F2310P6fGuJj
F8/bPJuJL16+y4LPa8P/oJxBoRwXmn6/dxa2auCv+/WNO9QF8M/Lzxxh0HBs
4tTjlqk8/E29Mt/vpyYip9P2jhWzsH3xu5lWinQ8c5esjNogxoVm8ZRSDU3Y
cn0Ywx9ZCFrWxrw7nYr6u/LXHAL58Lapi6e3UGBVkH1a9xkHft0eMfsMVTAo
M1C59zUdLOPE4uRiDRh/sOzk1AuwWsuZ/qxPA/eevWwxm8/GryJa6UDHdNSE
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
vs+33/qocn95/i2pefZvm5MnSlr7ZmniEq+/9pkvDx3Zd2JPGlER4H38tf13
LhZnKxokUCkwf+IyvZrgzb2XZr3MtGKik7nusHi2FCOKm4LYzy9U7NhSVRRd
ORlfbFcKcj8xMSR5f1lDX4ipPet8e5bTcW6+eeLgbxHu7zN29bqii9tj7qYH
ywwhXF8+yUiRhsWPTzSNBEpxs/ZZVpysLjy89lcfoYrxOIMjGRykYZDpVOQ6
LMDXvu6lHj5M3Gm5OL+B8J974dLwB9uYKM97+P30KzFizbsXmrXIwVvX5xqJ
o4NHe01mDUqpOLD5gu6xG3wcnOQ69acuCx+feD3NnSNAWGFQppOPHCZVJd1Q
/MLCcOOyz3tPMWGr4MAPKRIjobZi+FkYCVsE547LFQkwt7jU3H01GyTpvMM0
kRjTj38aXbxZDcmXer783srDH3xTW9JHgvcGj3NHXbnoH1q+812YLsJEl8s1
P0mwkBkwbYOXFhLnf+adSediyyNzqyfuVPC3TS+bQpFgpM8jY/NeVTAb11ys
esPDjHdzqFM3qSLMMany8JAuVnOnewmeEbyZ53+jdo4Ywb2sH+cWUnFz7RRl
1Tki/JSdU3uoVx6aW1bHVerRkfRfxOXNHzUw+sRvqj1bF0mbe17ujtWB0vL2
4mdCwmc+fQyy3sjCMfnCfW6ZhE9VrhmgEvwzb852u6QEMcY4w6IKMwqCH1+q
WEUS48bsvA41Fhfjjc5Ve4INoTHnlN/sNZpYGZlsmN+igxuXmppPEPyoMZHk
HDOXj6S1u0/s6GfBPmG+xolZAizU55J3vKHC9Pimgizienv+Nf4kGTLAzFbp
O1rKx5y31euKL1AI7lvrXN3AQ8A3raazh0hYPPv0wiNP+FB0MQw7G6aMUk/t
hsIgAUTfF/v2vNOCskddpsozHr4t0ehRM9XB5Oq/Z1+UCPGQF3JuxYgCrF5W
XDtM5P9sbsf7Q0Y6uJe4WJ0Wr48PxTpLG2SZ4JN1clzp+ljgutt3sIGGJJvL
lovW6MPlZPCVT7JT8Grl0ulfdrLQw+ocuL+VgQffedvXpOqjarLiaU8fLfTo
5S9be0CAo5Z7V6+spcIxsUb7yG0RFJ3fOy6fScL7VWn2MSd5+Ey6VLRjCwMX
elu3yL0n+P1r39e5AgZ29LZV3NkvxAFHxfiDvRSEM3S3bj/Og90mrdNH3tEg
uZ7dYtQuwLLfTozytTqIavp+YRHB/75tboarP7Mx28DplFyNBAnd61O+mrJx
Q33vn5dCKQ42/+01C1BE1JJaTrCaDphP7/mPsl9VmPy9IZgUp4mFXR0bJ25y
CK8umHArFcJl5Pd5mQkOAiVPY/ZJJXidWqbFjtZGQec0mb26XJy0jgj1mETk
q+UFLx8i7zLexk30a7HRWnkidZi4vo8VyXfdHDXvRwbV+L/vabUR8zq+FWzR
wwz5ybGkAjEmst4um6RIxpx1txy8J3iYo91zX9OYhrM6vu2lv7hIy6yYblSj
C90954/sFkhRTK2X0yH6ZubLPyEy0VLI/MuT2lgyMK6dNSqrSOxjWOdyoTMb
7WFulp0rxPht5mN9bacmnsaqyzkQvu0sn3rP97bCfTONVQGLJo3ZnKs7+0Vl
hIT12/5pRbG52HfbottcyMZDtbj3KwlfblmkOLA2gYpE63uyR+14OGE5kH6g
WR0F4au4D6/rYte6ouvrtujgXQ1pX+BUMYxnKQ0/o1ysaJJ53zI7VQt1j4bW
t3RoQlNhcU/5MT1s3H9MqdeJioTDtS86N/NhPtFvtYOYr223Xmn5K4jhtv/Q
548rmNio9zM29IIU23NkaG9UdXDVJzK8MkyKeo+1FCmJhYkD0Qap98WI/LW9
zrKVhNR5z47aHxIgNGv7JVeeBqxqdR8P/GRjz3/y5971qGK7YJF8O5MLa7UW
UncCCdMPyp0JO60H9XDro43+NCjsmbnzBFuEV+EXT1dXaWHGAvftsy11YbNn
61KtKgYSqn5WK8oKkHag+LTZqX82B2wNB3K/03GtPORsQBIHDMkhnXk5IhSt
1XPeflcPBarPIvSnSvFYefbwut9U7BfMTxs6TfiFm1affwYL6eERMyuJeT1q
En02nMGGi7tX2S4jEZaH2YrHklkwy0m47iEQw8LAUkosIrSwX7/pHw8Wg3l5
itN4eH+28iLphwHER750zN3Pwk/aw3+iGsJ/NP1F84t14KFjE7kiTYilz3W1
9zzTwdKVsWt93hDP1zzIIvAxB0nhwpoHShJcb+95udCVhckzmrbc2izG0EYv
Yev/Xo9JCzPuySOul7TQaHU4HUo+X8mUHh60Li6veP5QByWMZMGXg/qI/jN2
ZIOtLs7eoLXvfiyFxfWPaoy5NLRUerQ5NHNRefY+kq5wUJ3KufusWIpL3gIP
m1ZdrGdp7f0SNBUh8ww+ZT4heKTG1Hd/ExfOr6LIU/U/2xQuGt00coaMYja/
b2mOCv4F83V2B/NwYeg/kwdlJEzd+trcaDkXrObscz8YMrjcsL/tUSATlnqu
s6lODMi2NNKTZCQ4k/Nufvp82f99rpum/pAOeo846Twf5MDYLkzNyUCEkV//
DtLU6SiczX8XJ+ZjfLar/RrCL+JlAixvHOODtXWlefh2Ks6/vXhMgchrp8Dn
d++dYqC62cttS5QI/VNyZS9qMqH5aXyS/CwxAhr+k62p0cEW1Z/HfNvFWOJA
tmvdxYCLza+jFwZFKCsuYm8KI2NGuPV121E+gneFaXzNZ2DfJNnY70ReLTnf
FXn5DB2pDT/P1V0RIy5SEr8imo0Xyl01Tw+IcWKm4+J/tzUR/a4r5uMMPaxq
yT0t/k2CsXHZr5NhfMjU9mmatjAR38ML2Wsr/N9cvjr9joXdV41DoqulKEJD
3OHzatiat+NisaYeZhecn3tdnwJ5d3O5zw0CxI1ZLdhsTIfbKf4WI+Lvyf4X
FbSMRsfH2XW+G5KFuM7dF7zNcDIe6dwdmunJgvGV2wav6dqYkprD4HcKkHPh
5PcuJglPq592298R4N7N8M0q0xlgXcu1LN0kweEXe0JV/dkoSHGhObD1sfeV
edlpLRpk9beumDGLh4eh4ZfsX9ARqR26fW+AEDGDS/0rntNhUZBeviBVDJrr
HemjeWQkaHyv7V0pwLHBR7/fuFFwmzFlu2SjCLxbA4kyaWQkj0U9OEz4O9ZM
GiAbacOrYKKvYzcX0V8mfT14iYy24Lu/zlNFUPvsN7t0Fwt2a2Rr20pFmJJe
bxKxh4ZlrcHrX8mKoHCpUllnMxOUqqU4y5CiJ9fW5tt6NtYfvThp5IoUK2x/
aCu8pGFpGNn07H4+XKZNW5iUykIf5R8/gysF7cHqlv3XmVhf9muB6h0xDms+
YhQRvKIiOGb9pYWPppcVMxSVaPB537yBUyXEeaP3ygvNOPC4PH3KgtkSlGn2
uu2T6OLSo8+zatKlSP7s3TP/HBttOaFj+f/zuy+KP6oMSAj9FalsKS/AuilX
36y6yoG6vfLeKUIJWKqZFQpF2kijus7eTjyvi/aM6hprEl6svDxmf4aLgKsj
5zU96JBxMgoobRdB/QrvYhSJhg2XDQNH5HnYUixepFVP9PuzfVsv6IuhEDX0
w1GDg4Xv9y5ysdAnuOzSqbMqFOjcfJ3AKeDhUVitp+l/dCxrmEzzKpNg4Ih8
NT1HB923fx/Y+kofhY7SUOdiFl4tG4t9oCeB/gqZE9eiqGhfkOUfQuZjZNyz
78hFKmLDlx2nZYiw+sykW4cTmYg6XfxCbKUPjXrn45tSqPirpWkoqyZEtrPh
55YxFq5Yr1VgOEoR+TnnwaYRJiauXPibCQk4HTvkMghf+TKF0rGf6Nta9znl
eUeZWFYYx7lfI8Q/zliOyTnCc6uDL89SFEEj/PArroACde9KGc1ALtRT9x86
683Cr7+V5DPpYnj0D+zaKqMD24LS3552Urx1WjrRSvBZ88Ql+wP3+Qj3Xmhs
PYeMX77Xg2gdEqyb07umgkdD2jzP+MYzIqyXsW4LamdDtqn80iy+EFzqnZXv
nengtzUv+DHOg/Mi5vZcKzr+yt3LF2hL0Hjf5fz8HgreLmrJ0+OI8Xq741hK
JBVlrY/7w3xE8CcdTb/5hQf+hd+3BRZG2PPus5hqxoT2Pa1ug+dCHPkbElxy
iYpj/QHrc+eJwN4T81PjJg1fz0m+XyZ4MDjwR1cJhQ2Ka/eht+8EmPlqvPLt
EAtv5qXHN0VIUJfT1PlhBx+yrNitj5jTQA2UzSrkMtH890hK81kpnPKkR8QH
GYgU5gUfLxejxe6ly6W1TGT9pznwZJIEMr0+34x/6SJf+mWs6o4h6Nnrto+o
0tAdrf98/jUhnM4qKGqMslBZUdD8niRB3y+TBWWrdREb9qRyv4whnuXtvD3r
OwXTvlF+OnkLcfrY9/GXvVTcPXhlbJKmAP3x25baE/ynvjMunlMshK97RlVn
Jx1zTnn83PacD02VTlprhCZalnheWmKuhxGvpNCtH2iw+z77wL8OHpLC7sc9
YbAgu6Fi/ZrHEjirv9mtUcZARl/l5jXEfB50vBdSRezDrLlyJLu7fCyMSlN0
jCZy6lOT2shcYzjUr+esqmNAYfuL9vR6CbyYcxxMnpPR0v3L+IcyH9PHRUs6
7rOg9CPy8OUfEnT0pKc862fD/HAwX4a4H6VIO39dfwZi10mmPAoTgaOW7UNV
YoH6Jno0akCCXw2fjq8UEH5oPvV521JDKPv5cXd/YKF29OMZ+k8DDJyZOP26
Ug9mSpX+ClOkiKKfVojT1IZF6NWnNQv0kPz+Xr7XX21ovjlpvGwXH41P3nSd
8lWFi9o7UUe1HhSanURn6nXx8fvJhj9K+oiftFtucwcTfqSNNxRuiUG25+95
e4cFVvGzPZzp+rApTEkZJfpqqk7HI1K3CLmBF7+m5MtjqXfO8jtKDGRtmrYt
PYGBscnc2f+GRNDZ2Hu1YTkZ7y3lZzpcIXzfd86ZDyNk9MfknfQ04SKudpfX
Qj0u/iqahCwYFCPKh72e8YOGP5sXv9+8nuDNrO//PfDRQMjynQWxdnrgXfy3
7/ImNlZMr85sMBcDOxqneawXwi5iwOVJ1DQIyj+eVesTwnFQ9aLF02nIzlga
vTWQg42pZzdlHTRAv3n7lSmHWVAs++9b/Xcx7mXm7HCJo2Nfx7ZJYwf56NQN
nNurwID+3Bp17/N85O05Iub6cPHD6OXDvmYij6cVjizksdA6va3zkakUS41+
fRi3oMBw/qDZNw4PSvmWn6P/Ef55foS35asQm7wHA3Q0iH7KYTHD1/BQn3ek
5EoYHT8lHRmyy0Wot1Ix1iD23/5CY+O6fUKMrSVVvHmuio2R3ZzvBAcea7Rq
azzPQVX1Vf7sS0IcShlVE+bQYfdO2+6ekQAFK29v7WpjQMdXleFywAB+ipMm
jF0Z8LKcxVAizq90+sSfuXZ06AW/+ujzjochQe3+e6FaWHwlijvnjQ7mPqTd
UN1LRUnyxAqOAg938p9kxXqysa8t4Y0Bg8j7mX1Tmuqo2DF87EJgDA/BoqlP
3lMYyFnzXlfthQT2pUGex00YCKidr136VoT4d91dznI6KF3v98E4n+CdToW+
kP/ICBROX3JUR4Td3zbOvGrKA8u6s2b2TAPUiz0S9nhpI0o39SZljA/VyqyS
P+00ZLXMTU94JkaizknNtA103N5ps245sc9G9ubS8q9kgg8OWFhs4YP9Nkp8
d7o23n0577YwjYutnWsXMuJpSDe+syRnBR9FW9dRe3oYeLwqRf0twWM1rp7q
55cTeTszIV5RVgKno74V8VNZOOBE3T2/SAB5Nj31xxESti2xWnAtm4+jlWNa
6wOosHMwbnzlKcBk37UvRx3YuHm2ybFyTAiRZ0jy4GomjK7Zbbm1VYIpMZMo
6wY1ESWJurtLzIO407GEv1MLAq8ljZkE///a7LyUZkDH9G9yC8JJAlxvvt9w
7RMHOr2n38k/kcDlXVD0plw9zMqKDJYEiHHs8VmGYS8JA19tn24k+CrheUHi
Ij1ddNWMLEvYI8FDx2mFthfYmMU60O4l1IdZlLly4TQa/pFsoysW8XCU4a7p
XkRCx832o7vj9RDiWM81fqON808Lqjw1uAgaGSm1JOYsQ7rB9+UZKeRHVfys
LJmgmV96ZKYohi2t68ONERaOOPmTzndLYFA6VmuYRfBqjjHloaUYVhqZ3hEg
oY13cV+7Bw8PNvfFBgeSIElZ1aWez4NGDpXhfpPo22NhuZIIATTk3as+DVNw
U93goMMIH5cON51VOjAFL6f6HC6dRfi0hVP64DgJM1Z+2OI6ysPuewtGjpqR
8MPERBgYwkWJr+prNzEDwwmcptMtIsj9t97csYGEtGfvZ2UrcaEgWL5LYTYL
Fa9LP+y3ksI8Zd+ykvkEX8rsNPe7LMTR/gq3Azcp6JvWs8PimgDNlbPbzoIC
I9foxXt2C3FLxuH722o6ktwzVv9VJuZ7RoOd4ZAAl0NtNpZUGEH3+RJb/2JN
hE6zD2Jc00O30hpa7Uo6moYcXU/9Jnju6fB6p3IennfIpfYe08fbjM53tAcM
aNI39n18qQ+VqoXFSV/UIRttdGghRwd/rysIY2JYGMiamD1sLkKiwos5wf4a
WNe/7uWMFTqQ918gH7peAZ6JMWMFg3Tk1JL2L/hFxpIjueeMNPkIzB90Yy5h
YpfxXXZzqQAZrBuuJ4i+21C2pWpvNAfzrt54P3uCBMv5fxNYRM4GR1r7XntJ
h1r906hhPSFIU3scrlZq4SM3buEOvi6O6T5zLF5C3F/6dd+NygJ4TX45234x
E4tleOb/iJ8vVv7S2B0+GXKHhYz+SBYCvE2/ZetNRuDgg8w8wgf+JHjnOVyl
InDt03+vn/AxUFK9Pn4pFTMXye30vSlC6IW9Rb/ViHk5OfDPJYoH/8eGT2Nl
OUic9pmj+lcfmRkOlMMEH1x6HLNl31webt69w/6eo4f4lmNb7CYbYHpz3zmZ
ASZSjCqyVD5IkBA/svr5Wi0kpdWb2bVxIB/nV3klkoZnx857V8eJ0di5L9J0
Gx039pyKivbmw+SIx6yQIQr+U+0r5v4Tgn3qk8+W90Q+mb6s+P1MiAvF+zck
WKhjfMLU+5QhH1s1HJycfBnodVz0TPe9CH55YRolJOI8l+xYcVWdjzhkD1H/
0BGg6/8111kM1Tus1GUhOpgoz1kjThDiZMXGW9v8mSjo/D2easCH8NXW9uBF
ZPysnBb2fUSIhQ8/GP98rYy2ZdvyB64xMXB39qW6/70+/i3u9Pt5fLzzdK3h
/ceCZojG/fPfpNgu7DXRvE7DqFbXrmyhAMcF6n9vZtChfsmP2RLCx+9XGpzB
TgbehlAfudYJsWtxVXGaM3EebtWb68a5KPwcyj1+RwdFmd0+pktFaK4SOlb/
VMetjO41ezZzUPmc8y2+Xwd1ZgceyxP+NMMxX7fSno55+V2etB4+ijPOeYlv
0bA57URyQwoPN6jH6zb//WPzO0o/yGkHHS/WErKwkfBar5Ev1dkGiHTu5rSa
MjBzy9OG0TEBnp5SOeurzcKJn2n8/nI+2mrIZrE+U+CTNdSrtZPYm30foyx0
6m2U3raZne7URvApmdOzgqgwVSrwqnMWoGGgbXvjfAbWK6b+fU7MY4O9xdT6
AgaemCykOsbzccE85HRZA5XwzNu5FYFCbDU6vmJ4GQN5f81bjHWEqP54cLFr
BQXrGrKWXjklRPydk4WnXlNweMbnyPElIozWPDvlXqaK0eYfFDuCu6oyNnQL
jmuj5Gdi+Iw2Pfzy2WXdJyShT523OE+JyPO5Q88N4qlQM/CWWq0T4PuO71fI
9jQ8vDYakMLlQbBlevFxBy0YV3cOHk3QxZGJRwdfzmLg0S7Xw4ef6ePBbccP
KgnEfIoURzfOEOJl+n9TMI8Jhx2r2bpDfISGPLNQ6qFhpO6TnXKIAH+u7z6Z
q0TFiYWSwQ+X+LCWv3rsQSoPc4IWbFo7boyxuAUnQj5qQehft9xqmAdlt9t6
ugvpWHJwqOVhNx/O5cPB3M00nCq73ZjJFcHnfE7Pwr0MmPsXR+dWi1CT5eZ9
ZSsZd0cqKjN8BQis7m5baKWEM7rNnAp1FmgrpENyESzczmcce/xRjBXuj77/
nUxH4w+Z+1x3om/OpUSsOa8FPxfzUcVSPmLTE73kn5DwySZw691cgvc2v2QO
HaAi+u1k6R9fHnrSomXCfrPgJoh4XXNTiCrhcptueTrMXpqpcWoIfrf97fBT
TPDyakW96z8J/2lQilSjkMEcN1O0auSiu3HGXj7Rd4tkl7Xl8Yk+/8+46+UZ
Bg4cPu6XcVuCsJt/snNJZExW3Nfvos9Fe7+Mrp+yDux1koUReRK8ofx6v1NA
w3nVd/co80XouNd5mKRM+Ph5Tj3dQYihJyFHHl5mwLLALYx/UojusvK2l/d0
wXbqIkpLik2rls3qbKYjJnGF9t1kEd4z/Sf9SSNyMWANtfq3GEeOR5Q8N6Og
8rC88Nxqwqe303M3L6DigLtW2Mz5PFw4NXjp5Q4GRKMyO+bfFeLTdqdVT4tY
6J2Yttae8NU9CYqHPtUoQaND09f3mC7CqyN+vjXUw9THMUOZJ/Xx5MFGk7tz
if0MuyI7GspDQJu48esUEkw2XZZSXIRo9Wr+OtykCZkrlAtHjwsw5XJvmP+o
Fpa7Pf28QCzEkk1LuYX+8hg+E6d5ZhUDg2v27iuRGbGZY2mYa+FLAu1p8Z+K
QyR8/Le7aLeqCLWxt5sz1ChYu+uApVWuECuerzRf80sL/Lhvj6p4xD7ywmyy
F1HQ2jdWc3En0ae7L6dEW2rham5rSU000T9dWs53k5lwkvUtvhoggqdH+Kmg
CRb2nvjxdWeeFK111SM64WTMiLucw/MTIW2bX/rpIFVMMl/248lNNia9U1H/
QCP4ZX/t+AI3PZRs7rid7k7CVdktcamefOy7Ep+fKqJA4dzb0hRlHgKfydnt
saTCiH/WcsdsAU7aaymsTaaj6OctZ2oQH2d1Gg94EP2m5KQf/ns6cX4t+YpL
5LigSVjh57wMoaC92aI7nIIXjx7LtCbzoCa/yPBDKg25lkMzuYZi3Gzy2eK4
hI1ihfQugzlSnAs86yAkU/DuUamzox8PU45qEDBF7Oepx/lX4vUx9e7JP76+
NFCuNMl0E30yQ/VZ+isTPZwy7z+bSTfAuENf8sWrTJjVa941KBTj3aWEj9vf
sDGcmOKf9ECKe++/HH5Tqoc7Di9m+T43wEpPycnZpSzEjz+41JglRsxgTLCj
mw40fpI/3uyV4uP94eV1DAZeSv6oxD4S402F2GYXwU+lq2y0u26KQWW+fBKo
x4bj8dpjj2bpg27R35Jyi07wS3ZH2A7Cr3x3N+10Jfz83bZDUjspptq99BEQ
/DpXs1zKNZeCt6WtYNyPCZLi0JzGUgmG7Hef0JfnQMb85HCOgQHevGc3uB5m
Q9enoPlWowQpVz1ME8U0tNz7PuG0isgb231HIq/rIZt2Qidf2wAhK36fpE5h
ozpQwTJyiQBfYHHt0Apt3NORNJJ36yHod+Qq33gKGM2l5XeeCJA34wn1JjHP
N3bcnRJK8H/HwzvKce0U5M3vv9u2hwetkFf7AyZRMYM+s3buIwE20F4ePEL0
SWRKUfeEoQAh/SEngoVsGEkOiU4LpKgNjgtu6dSEWl9pUEgOFyqap85tK2JD
1t7yhU+MGCVxfod+kBnwyI30XX1IgN/vWPRt6mSktGVePy7HR+3VJdZBS4ds
+Pvsg1ZZkDG19srX/N9sUNXjXmgaiWDyJiiQGaKFWSOiqUmfOZgbrDLreDsV
qzdeWipezoODp3bR0UzCR4efbjm6U4T/vK8//WRHQ1HF2U0ywUIkqtavXz2b
jv5VAY+NfvFQnvFP18qGhXNhNX6XlaS4G5Ke88mCgz8D8pJd0foouD5HbvE6
Fk4/yFr+pk0MY+U3D0pV6Dh2ZDgvfECAWNX+5Q17NIjz0C1wXaSL4mET/Usx
HHgfcTnTcd4QQo3iiDvHqfg6b6ilIFsAg4MzQ2ILqShYZ5Pc2iVGQPK+ib/2
eni0dFb3pt9TMT3ce9HpZTR86rvrp/xQCo8Ni9xvydIRGbClIvaEAFk+E3OF
r7TRtccxwNqXj6TZd5t/SDn473r+i1sEfzW3ytvXdbHw/W753rcHRbizY3yD
/y0q7M+dXpYfwUPCSfq8c94kFPqesa18y0Oh8bSoiQgKrHKidv5fxWbiD/XX
hmFLiso2+wxmX2xRaUPljkJCpRRJ0WKPlEIJqWylhCRJi31JKSUSla0iSmiX
iqjkJ0qy5P2+/8CZc55znvu5rs/MbCsUIHUiVZAYSUbgWequjQd5yGg8seMw
lwGN8G4r99kSbMrcnPlVm45Y/f1jEYuEcAz+yqnLpaJ9vaZS4F8e4jQiS/Xn
kmFtGTC3R4OLubXP+KIICnyV195PMyb2n3hBStqIiX6FiijlHYTfDrXZT+tX
xf3JuzYtthx83cbmP6uhI/Q/61lfZARoDR2MyF1NRMDLCy/VVktQQEnSudnA
wsJ8rttgngSXwuaLLlqRYH50HzNwBgdprc5i8YACnlf2n2KYcWHh6Fo+SeSF
7zXstXglwlI3/+bu7yyUSg5kd6frwG+1zJh+HR3Gwosz03tF2KSy6KJaJAvD
vklFGNBCUZODaupsGiYsD7+zDxdjy4ODDzIdyJAS+t5T+v//y0bjh2yv0SH7
pC6sz1MAfZmLCX236UiuvxY2FinGzgeMMPf/KAi4uzRE05SPA7ZPbto9ZcC6
5+2y0HUSWEb/fXV0ETGPTFPUWl7o4Iiumv5ZqhoWX6eXrCwQYm+xI+VVHJEP
xddodns1UalPVqs9QUOR/mdl6SghKi9fbW4meCjXeHD6snMirJ1rTqIvpaDj
n3aqXaUY/zx9hsKyVJE3aXctiyLEHZlptlKvOHj50+jBjgQdFGHjPil1JtR6
TLY4xopwQufkbAVraYRYG/LvjxH1VD/k7nNEATuV6rffkFGD7pLSZwonlTE/
fTQljcVDTVH2y8NbKMg9HX27nU3wfIqpJYWY56kltT3WbWLoGE8dUjaj4sRR
rd4DI0L4pOvRw77Scb630Dv6mgS2Y9aeU4h8XWydr7bEUoApv2o05ScokOlU
nSNzkYewqRsGHoxpIH5ytvH74zqwW9S76fF6Op7r+pS9cZfg14IHy53nEnyS
KX90oaIA+/tlizwtKJDa2yXlmcLHq3TPKQvfqqKlSfvn8mQuuI1hzUG9ZBzt
yY89M8CHWWwA7/iUmTD4zyS3YxkX2ZNlx8hb6XBfvHaJSZwIyzzyvYsj/5j8
TTNesaiUhZ7vrNVDegzcWe0ZqkcXAesOyeZcJeH7WKMceY4Qj5m1MU1OxHmH
qSSffAleeDCX3PDQgEZOOMPCUhcxKx89O31aA41bxo9erxMjxsUlXZEsi/Wv
LLQymlnI7l+mUhBChk1URa3JEj7sNoRfKnaSxZt+Up0ZsQ6/nT1UJUPD4zk3
W3/FSaCxMWrnh7N01JzeUbErWhNDXXFn1ezUoS87Js0keKDi+WBJUC0DzjEj
E9xGMWIvPXGcqsHC6JT1oVVE/SZjm7bJW8kC/pp99V3E5/8bLhQPUFBKmjTf
rMjHQzlDUsqNT1XOdw2CHqSrYuOlPJ2uq1SsXvrkcvFxCY4rlJz8dZiJta6m
ySveS2CyarOfZqI6JspIH8XjImzZOTO4PImD5D7jg0v7ZsHvyxc3tTgq9ntR
JatihbhNm3qwLpiENQquCi52PPzyP/B1/gk27jw+vXvefjG+qd8iNRN1CetL
nbkvQhOmfR/0Tl1Xx+6lmwRfM7XwhjU6qd1NQ6bmWRk9HTEKnmdvURWogJOf
0XmgjA9vl+bnZZUszDnqqqraKkJ4z/rJdSuZCNiZuDhTSQJNo3el7p0CUA5+
mRIVo424h6ZbjoxRQGUnTe17wkN/nrP2m2cU5AdEOsdFCjBcamIkeqgG9wmy
0WiH6P+/r90f0UHCppefN1Sd4mLxbrVFX+youDHXWX5+Ax+JNpcjLlSRULzZ
bMttZx6O6bjLx89Tww7/OyYtGyXoouVd952vjtHO+IL9a4T4qfRtdftiJoKd
gnzXbhGh4eddzhDha9vFC+ILKwTIvlMy1zGFA4lvaCpXRQ98s9pXj+pY8JAO
HWc5CXH3CjsthEX4kGdb8HviXBWeJk3e+1mwapocn6ciRP4PT7fkc8o44Lpp
1sQdHgwEq6Svk/mIPPPF0u2VFoyqZ6V5a9Fw+yKP8eaKAEva6vsrIhRRZrD1
ZRTBTZ13tXerv1ZE+qfAEZ2v6kgzPlGfQtzHzMspy+ReiJDQ46FZKEXHcb8U
wbtjIsyIaf0w8JeNRLy4MLhTB0PWNW6CSsLHTJb46ok1sZ5y6sdwMNGX+5pO
js/TReWhfV17HNXw80VRoDQx/66utk6Kq1TA7W9zL3T3MvHN4Jun2jgdbpdO
jlc/FMAjKLvhngUTtFd/tyYdFmNvuOa8U+cZuL3Cgr+OeP+FT5R+dVizoVBj
dlitSwf5ctbVM+Np0KZW/huwEkN9tTPLv52FLs72Pk6+EI+6M5QiHqig1y5L
6ZmEj6wjH6Zu3Dphcmnf0+LRy1wct09ntGwkYUN8cU7LcS6kkmJms2fIQb79
vJ6aEwdn6nNNDJPoUBz+42zuK8Zcj6+X5BlMKMszhYq/JFia9m5+gCsT+3Zd
X0bN5+NOQ+I8r//zdcBZtRK+BNWlT1cmWpERssRraKomD3KdN9+eyiLDePtn
90PXiftMjc9XJPx7UeHV1rQ0IcIF3s0rPCkI05MyfOgtgNrK0aP3hyiw5GdZ
nq4R4avWfz2n+piw2xZyW4bot5/fbBgTbBLkT4ZnjutzIVOk/U7DnIO8kWuq
V2ia8CZbZFZzSDC0SFuxTYsDizUl6XIDVNDyR7l8fSHsGxmXWqcS/jycU7a8
U4jGhCPbYwlecA59E7TzIx9JvJ0LRMPT4ShsTHIgPOB+2Iws5pSp96futL51
Z6zVZNp5w81xiUReu05PPr9AhCCHpV6rc2VQZ9GuvDyVBZcM6u1TltPgMPJG
enk3E9XzrmmP2FNA6jfUP7CKh4fUvpHCECbuWJZVDVpowqO8ZUF5gyoehj7k
9xXy0SJouO87ScUqG8Px9Ak+jtaeHnF6ScdH1SPPOrIk+LsrZuiIKgvylPiL
qUvESKtr65wapY4RmRmREQwRmi//zD/5iIYbplKDetsEcNSw/3uwQAEpGxK+
TVryYH++x1hnN+Gf629tvvFbhIDQ7fGRD1UxVT+r+qgPB6tzCubbEDx72u94
eaaEB3Xta7bXm+i4umyTca6lGFdq7HKN75OweM6aikFrggfF3im6edPvuznm
N3xhDJokcdu6pIvI+Ne+fjX5oQhPpQM9h2OJ/WgkWTZki/An2CeUM40ObotS
20kHPjwf5Yn+65cFve9gt9aAGmbPd2LpFtLwdncGRaQhQmA7e+/vcEWcvBnw
eb+0BiKzdPXagwm/9Yu6FDcigLJjq1f/AB2CI36LI6tEyM/tq7HxInglf3UT
/Hi4zFpvtyyJAZHXleRFFySoD/isNF76z8Tm2mOD5mgmDGYe6T2UTQIvZEC2
1kGAAkVXlZmfGZAgbdMcBwmqqp3G9wWz0BboP0NujwSb56snt0Sr4T/5YIO4
g1oYT1GuzrpJwYVn6Xd6+nmY/l3P1PE3kR+q7x68c5LA+LoWLYJCQ4jT7Gb3
dAFqtZvXKJGZiKLktpGeSjB1pPtl2yJVjBR+6yoL5ELtRUZx9xwa5AVN2iQi
T79denbs3hANRwtmX7rFE4EXnGAeIyahLffq7+1WfESNqK9pn0bGzcN7X3sR
+frX4h8S/MmIeVPpEXaIh6kWaw0dLNkoN7d411epgygfJeVt/kwkVcSVQUqC
6HqpDcvWktFicAK9zQL8W5D7M/2RKupsvGPavhLrd7c7C51oyJn+YMLPTQSj
ZTsDvgyOmVztq2UOxXIwRYvlpEBj4mNU3O/FCyUIHjHf7LyJhsWFz/K0JkX4
TXNIfxnHhvG2FnXuOm1YDq6seeHJRtnDskejJC38LTrEvO/xvIqbELwuXl8F
LwZF7xPTSBjJjjCQIvOwcmDijKGE4LaQ+4xgBy1s/9Uh5XBMHdOd6Hrjy3XR
c8sfxy6wUJT5SvSW4MPAr02/f2xmIfF9cAE7WYTjK73q1wfS8VXv5wv1UC34
rt3QQipl4G4b3eNoggRebzbUZc+kY1ru2eO0uwI8v9VTNP6OyJ/r9WfGZcUI
2aqwIKuGhVUZ1RvmmQoRME2FrfpyJnbIdkok+4g56rwjvV9FEb61eQo6B7io
zVqzbvSeChZF2AaOuLORO/PCg2PzqYg/u2dHsJ8YdymJk9EuzVVpNp0/Gj6o
IHPgx3ErK1X08dK33X/AxtAS/wAbLg09jZ35LRkCfBv2fnNZhgMt+eTx9kgt
zGxiLl1A8HlQeU6s1h4hDtYHCOZcpGA92f4y216I6fXzvBxNGDi04uIrOXVi
vr/ZFXjyBhV0J/3jvceEkK/rfmYgpOPCuF2R21IBCi2dB568ZiJ2vd40Y8J/
DeL3Xmwfo8L+z+a2BEUt8HQLw4qtmQgt1DogWy7GeTPhT/4JMkpDdseqXRci
99djRnYmHRtWzqhwV5RgdP/76nFDdXRlDd6IHNOCv/+MGc/laRi7oijHmk/k
eeJnlynzGEjTEpfLmIhxqPItfbhIFfPLmx+hko2OTSEj965Tcb7zl02oshC7
MteXv7GjY1Kpw2eoSATf5Nw7pivp2JnFH+xtEKHQ/dx4bg0Zc7O6dd78ESK6
bOiwiYUGlmxOO9epJUbOxdbZvbIUeHx9WGSsRbyP431HC4Mp6AlLNMlbwYNN
tnPNXQc6tnZZ3RtcpIn7L7o4f3gqoD+JynNvI/i1fMctkz4WIgp/Dl8g/PXw
V0rdzddksMx8/MIlAtw26Ep1JPZPFV1sNU7nw0u5ZIttHxmznLdnnlgoQMjG
R8YFWTTwdUvPbboqxjlWVsXENA1omT+qp5bqwNvaRf2yNxkPg9zlF7hxMVrR
unXPKhaeT9YnHBoXQmvL558/wqg4HF4zKUf40ntlqbDIZRooMbDfZywvhtrC
VK9bj+jQ08n9XrxUjKfp5WEnCR+M8K+1/FYmhOnLoq4MSxp+B4fKhbiI4CnR
PFDzTxGKObtWVPG52C2t1nXRRQPP9vxUb44SYWdvwoYOEwrc1GUWW54UIt5n
9bTMnzQ0xa+wjl4igDmvuqnQkYE8xWN1RxoJ/qa4WwX9VkXMhmvm1D887PeX
sUkTquJTc/C2s1ZcaOTfVNFsUofSOpvCrfXa0PARpox+ICMlZhfGg3moPmir
W1SsBre6u/1d8cR7ra+KTfZggOtsV+L0VYi0Y/Xq+wMZsFcZCiqYJHiY69l1
vp4JdrVcXDZxXvPs1T8WJtOx39I4qIWoR9m+Kb5jCjT0X1vbdlDEx4fW1rlb
SarwHu4sX0IT4E9g6JnETgWIwnLZlYE8uGv9MX0sq4qMR06rAi8KMCf5ifa/
Xwxkn1rzcjlLC4PRDXecKmRB/b5MeK+Ci2vsW3MfCkj///5jOXeUeI/BezrO
3OioetA0sqjDkoz0ROp/BZsoWH56WkHdLTHe+s/2XHNmJrQsbnAqSFx4Gdop
GBO+Y5aRdXUthAh7VX7oM+Er+o/7vyh8FqIob/M5KYe3Jqd4xZeH+5Rx8Nip
klWaXDzdF7Vrp5MmxhMWdM5hq8KK9Lx9PJSNjaY9CWu2kKC1fZ7oTDcXA7+i
PxhvJuHDUIqYNMBF5bZTJcFMPuaUrB8/t1AHto3dA2WldMRrb6E4jfPh45Wd
p56mDtdpda/2V4ixIaT07yOC11eXSdOkQySYSP30ImElGdsiyT/07LmwIAWb
xHbTEbPMdH5NPcGXqg1J8yqpmHrjjqN8khDpCuMFyufJ2OtR+kn0QIj18zOK
owOmIy0rc81sbR42qFYbta+bju85Pkt7vNRw70pi1myiXwwH3WQtXIQY9Xu9
7DafitxjrbM/Ev1mNvul6T0XCr795BkaMQnemaKhq/tOAffwMdPoBhOFne7d
rA8zkVWYZ5H6iIsntavnaMhxsKTUuvH5JW20Mv4biLhCgnHLnuM5bhyI3tU8
HrovgxPasokvamm40BtlYd2qhIz8oEuWRJ2kEz7vrD5PR+yzjAaXLBFUlz/I
jnEjgbH2vYVKkADp+saW6/xICFPYa8R+xoGjt6x9jhkFvmuyGnXZAnQHOzS8
vUeGo7v3eN9NLlhxjp5mD+mw6tNQ7NYXwCkytOTTRylYPr/D/1FMQ1CEaO5z
KgkD9QcZss8EWOyvVxh6XQULDksuKBF5cmPx+RmZIaoQup08f66bj+9l0W6k
hVTEHRJ1vCD43M81xeW9uRKCowvtn9ryUCpZMuXAZiZ2sUfPDC3RAns4wZ5P
3M/he1K2Xm8FkEmcO/TlAwkzZYNT/eO5yKtaf5jrRoWc3FXfhnNiLF281J/2
mIZjFnsyjKw10Wq7cG6FLhXrWmLnvbvNw/Dp9PyWXxT0EsvIZEvAK1WWsc5Q
gRXtnbGVDRuOkxfrAhfQsPUjRz0pQozTn17q3thGwrfCwgVuEwKI4srKZfeq
wFUiftMSzkFa5y7Bl209JvekWUYHDxD3AUPfz6lkvLKzPvbilxhDkpRjnQbK
0DnymOwbx8fGnpMvmacYYOo656QMa6KpbXunegEDTR9oSpufC0CtPTGL4kBD
cEjRof4pAnz/E9V4VsKE/Qef2g/D2njiFXDZr0kF7j7WZkkJGrAc8ymtWjAd
4aIgnRBXNo5v8PdNP0HHvZGhM0mZRJ6o0Qdv71TB9xMViyJrCF8j/+udGKQQ
dTTXMOjnY4bbrO0FPCr257rFDy4TIi5Z3/V0OgvuA4augWUEL1qdk+5bowJm
ZJpVsjkPV6+S528enQoP5pfFRtEcbHXj0Fvif5vY5gin+g5qINfVJWP60WkI
X5XfYf5IA/eW2yxsd2GAPtuwfFGhAG8qTLy+GJIxNjW0wYjYj4n0M0ZsC+Gj
/iWDCxZJYHdtwD3wmyr+Pun9ah4ohLGrFbNNatQkYfd9T01nKuoHxrJVbYdN
LkhFk2bMo6DAz1hK8o6BObbfX9n8k+B7R945NpOo34ZGeU6/GFs/7xuN2E/0
Y7Df7X8bRJgd+FROm+jHl70QrDhNzIv3B+JePCH84ccNrfodXPiXYkf1CBmb
gr0+SD3jIXDyvNeimRpwqfT9WKOhBVZOuP804r5+L52dG9IjxqwdQ0q3SslY
s/eIeTI0sW7MzUMjmgrZU9fv7w4XY9HBvIOcA0xMV82JcePooGeBz0+lIhbS
krqHfaYJ8WK8dqHZFAq2TL+zT7+chwuPGqVlVtMQaKQkc8qdeH/l4UsCMAN3
/fOO9lJ42MhV8/QIokK1trHK958QajneDRfSKbguP3z6U5AYstOV1NWXqsJ0
gh6+b7kQPn7BwdvLKbA/ON+FlctH/PZ3C20LaDBpp2fU8fhQDKIs7rtFQvCb
9iwXsgiZmwb7vjxiwDX0eqUWwRsqlkWmB+6Q8G7bevNkwndi5yg2m5yTQYrL
s8gGHTWE9Dl5r0mggPvp21F2FR+unY2tt8ql4PgjoPjJAzoOblFqV62ahmUR
qXofF/Cx0tYzqillJl40zXnSEM/DdqF+xu5yYl6xTw7IvRbAjG2m2O2vgpVn
465lX+XCQeOovIY0F3MSz/zu4GtCVDxFZdmwCtLnTN+4ZCEHg+ODOe+ukHG8
JGjRaLQEtx2aSlsHx6t2KyyffBolh173ie6oADb8Z8dSJ3ZoowSJX38Qvn+7
Y9ZbHsFvg/bXsoRdFMScr083+inEkfCaCydKaIiWK1rzkeDFP34ekSD4+d3c
ra/dYyQInHHOMGebHOpu7L2+tYKN1x2pn/ffIoM36fzX/R8XDds4/vvvc3Dk
78TdnyU6sAj3NIvapoLl6m3/5AiOkAnzLHlRQ0JtbzHdsl+I5o3HvrweVAR7
yHGtYaYQ1PRG7w/nKXj99O/HogAx7tQ0b+ER+TVnLUcmivDh3OAP7Lzlykgz
CDAIdlPHnY9f/ave07Dh7G7KRYEm8kkXluot5cPFbMbDLpIekgd36Ip3kXGq
l+ORxeAi32F4lVM5HX9r12p1FUtwMnT8zcBZGibMBoITTTVhUGmaNRStimGR
Qcd/jznQZ52XqT5MhUyBkb57uwgOv5s2XguQRcc++0oVwlsGdk/yT8QoQhIy
cLQ7hgN/8wOxMzeqgfde5GvEFWNf3MihmptUeJpquyfbCjBv7qNMpV5ZtBlc
SZKdz8D/ABGdtuw=
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
x6prdXCl8Ml90gcO/gckuqi5
        "]]}, {
       RGBColor[0.560181, 0.691569, 0.194885], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
AHNdBqn+gTRwX5myAl8J8B9DUfxM
        "]]}, {
       RGBColor[0.922526, 0.385626, 0.209179], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQbVSq9/VnkLJD4bngBH4ebQfhKn4L4zwlh4Wxr8+y
XtdwEF8QZddWKOOgnfBE/fchDYfMsG/rpH15Heo4Q7bU9Cs6/L159mPM1vv7
DTVWSyi0CThI7jzoUecm7bBGY276bR1Nh0sa9h13+iUcVOeUJ+ZkKDs4LI81
444Qd/iZzB4+tVfdIYnVKTouT8JB8uuboxPWKzn472M68fCBhIPlhfkumtdJ
5zfyKi1zKpNxSFzotK2+R9Mh7PfktWs2SDmw7vv5wnWmusMFKSNO7guSDlcv
WjjKmmg79ObdPNe9Sdxh0yb18wxTlRzcO/4pWtpLOFyWzlqndU3NgX/O+YwJ
upIOdn/ncbzlUHWwnl3hXeQo4hBVXrWs4qKKw+orNZIeOyUdpNvfxhcaqTts
V1k2fWe6vAP/Mr0LDGJqDraJMtc1jbkdOH9nrg7/LeXgJXSAb8ETXgfTxWpi
0sEyDi1GbEtUfks7iDywjbTbreXwwjTF85WKlEOn0mc5pY/qDv/ufGa9XcXp
MGeHpMtTO3mH1qc7r3NvFHOQqHI6ku+o5nAoy5mbNUrEwSr51NopAqoOy3XE
1Vh8hBxSstR7tzMrOzzjDAhcUS3g0Mv9c9flc0oOctzayh2hYg4HBYVeP5BV
cUgX9Xm1K1LG4YVyRPM/DTUHOxZhAy0xUYe9uZ1fDnoqOrQwL728Xl/YwcTn
EY/hFCUHIYlz96U0JBz2Z+iV77yo4dB8knnq5AY5hyX7haorVmk6ZCc1iVe6
izj4ly6p9nun6AAAQJjxFQ==
        "]]}, {
       RGBColor[0.528488, 0.470624, 0.701351], 
       PointSize[0.003666666666666667], 
       AbsoluteThickness[1.6], 
       PointBox[{{7.849479812113103, 12.476114839881783`}, {6.421459652959424,
         11.08234126759344}, {7.570072925763097, 12.24494294633468}, {
        6.763422908092217, 11.389856407887107`}, {6.219611287276691, 
        9.420236725338428}, {7.9633104381870154`, 12.593958747662803`}, {
        7.789015132075569, 12.41544863338029}}]}}, {{}, {{{
         Opacity[0], {
          RGBColor[0.528488, 0.470624, 0.701351], 
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6]}, {
          RGBColor[0.880722, 0.611041, 0.142051], 
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6], 
          TagBox[
           TooltipBox[
            PointBox[{8.850437314318158, 12.07200508061955}], 
            StyleBox[
             PaneBox[
              FrameBox[
              "\"Log of Scope 3 emissons (tonnes CO2e)\"", LabelStyle -> {}, 
               Background -> None, ContentPadding -> False, LabelStyle -> {}, 
               Frame -> True, RoundingRadius -> 4, Background -> 
               GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
               BaselinePosition -> Automatic, LabelingSize -> 
               DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
              0], {}, StripOnInput -> False]], Annotation[#, 
            Style[
             Pane[
              Framed[
              "Log of Scope 3 emissons (tonnes CO2e)", LabelStyle -> {}, 
               Background -> None, ContentPadding -> False, {
               LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                FrameMargins -> 2, BaselinePosition -> Automatic, 
                LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
              0], {}], "Tooltip"]& ]}}, {
         Opacity[0], {
          RGBColor[0.528488, 0.470624, 0.701351], 
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6]}, {
          RGBColor[0.880722, 0.611041, 0.142051], 
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6], 
          TagBox[
           TooltipBox[
            PointBox[{9.312116646810683, 15.124841063814078`}], 
            StyleBox[
             PaneBox[
              FrameBox[
              "\"Log of Revenues (USD mn)\"", LabelStyle -> {}, Background -> 
               None, ContentPadding -> False, LabelStyle -> {}, Frame -> True,
                RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
               FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
               Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
               False], FrameMargins -> 0], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Pane[
              Framed[
              "Log of Revenues (USD mn)", LabelStyle -> {}, Background -> 
               None, ContentPadding -> False, {
               LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                FrameMargins -> 2, BaselinePosition -> Automatic, 
                LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
              0], {}], "Tooltip"]& ]}}}, {}}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
       TagBox["\"Revenues(log)\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Scope 3 Emissions(log)\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
    ImageSize -> {833.20703125, Automatic}, 
    Method -> {
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{0, 12.103724255530306`}, {0, 18.18179701901431}}, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.08]}, {
       Scaled[0.02], 
       Scaled[0.12944271909999158`]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"D\"", "\"E\"", "\"C\"", "\"B\"", "\"A\""}, "PointLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.879087396627099*^9, 3.879087403486207*^9}, 
   3.8790875567112722`*^9, 3.879325351049676*^9, 3.879325433553246*^9, 
   3.879354620093693*^9, 3.879419487664267*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"d13a14e6-c503-4034-b29b-f591f36b7f7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"finalds6", "[", 
    RowBox[{
     RowBox[{"GroupBy", "[", 
      RowBox[{"Key", "[", "\"\<Ratings\>\"", "]"}], "]"}], ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Log of Revenues (USD mn)\>\"", ",", 
       "\"\<Log of Carbon Intensity Total (tonnes CO2e/USD mn)\>\""}], 
      "}"}]}], "]"}], ",", " ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Revenues(log)\>\"", ",", 
      "\"\<Log of Carbon Intensity Total (tonnes CO2e/USD mn)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879156155587347*^9, 3.8791561790918627`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"cf066b86-a878-4df9-906c-01dfabdcbea6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
ODRrgWWCzJTB7XMcVDCLEPg9fIcIJ6wfyssKEsDh4807i5fYv29Gk0k2iqGA
nH7NOO4uHvSSfFl+enSY0agSOt0nBnzPS1hEWyrK70V/vX8nmEyF8muc4yNG
CB++Y0yuaiai+Z7kPqt0JWsmpHtd65XZQoPZa+teUMxJaD/qU1bvnn9CdEZE
gsZW12YSWAjUS+kuUlA9bDKtaPo3FwOQ5773aSYVflwf4k7LI6P5AQN57F+O
20g804oXbE7Bw8z2c/Vucmw+8Kx2SuGcIDufUnLa+OShTwjPVBb3zQkigFvB
ZPKjo3wg2cMhp+hPAL7uNTm/zCmwoNa/48lVIuylYP3sMxhofMynZR60fMSC
w11LI24Iv381VGG4cooF54qEhxyjkThRvGLZrsK2J4i+LF4mTUf1+e2TA5dW
72NAu8zIY1qWCBbyMtwcKVTg7M+3iRoTg8S95Suar8mwabL50poeBriXT3bS
59n5DbW39/AvmxigP5ZZvKuOCamjrtnFKSwgbL038o5LBBRX5GPLNpLB10Vi
Y3QN4k+DcOgIsn5y5yQsc6MIcL1i4453N3Cw5kJGTPSCGKwJNA3b7E+DlOlT
mtteEGBU+oDAwANeeLTw4IlzGA2EJusB2vBo/rbw0Jmf8fkU2FcSs1kPiffO
XXOb3zwhw+KlRqtwYQbcGT/j2DXDRNdnQ6TYLu0qEiRucyVPnqfBhyNBcEkU
0cH8hbJTDhIw887CYJCGgfpddy9VrZCg3Klf0xrhP//Wq2ENZz+XEzv/FMPr
I71FFYmX2oqXwxGeIQQnf19E+MWrzblk4ytEGM6vf86bwubvXwPDaX3mSDwN
mYjKfkKBKxXXi9L1peBSYNLT3BYsJOhu0lt5SAFVD4c8oQQidIjeW7C+QwCb
T6tm7gQCuE7VbN0WTIXlAzp85Uh8xpywuvj1DhVEE6YsK+XokPv66Tf5HySQ
Ij9O5nbHQ5rJ3IsCYKH52DjOd/IOmTRofm7usO0AAXpkVBT+DDJQ+2REXj7x
kE6HVuWzM9MWJHDO2+7XcZIBHJ8McbGqGNi5LdvL1haJC1cPNoW9Q+xPTHNA
aYIIByZFRP+7h9woinbj6mc8PKjVHOnWF4Nl0coEt1QKfHif92Z3FRFij1bq
4XcjfL78PVeeCw7iM++pP7bEQd+TIptXr8XgRMf6Ar5VBD+2+gReRnTVcuby
jcpERDfs2Tr3WF8cpKdXVlOQ9cZxEdvtET7caad44n4oDUqODH9l5NNg3tDZ
X/U+AxSXgmzieMkQNR8r0Y74hQWeY2vwawL0jzC88E0UGJhsUrM+TIfVXed5
XH+SQVHhUGXPKwJI75+22WlPBvFv6sykQwgf+6zUXRxDR+NbQZ+e9+tDDGh9
EiwVaU6Ee2t4+wceI/jwYWFVSQgPulVNLskHMTD73ERO2YwI9SeUxM9+YaH5
yB+TN1Ra6QxQ2jqz7WUfGdpnVgwz5Kko35oYCNimUSEBtNre4kv2VBA5v/H0
LD8FHprJ8jTexgPNYMnc8jLCswV9lmbzifAj9IXScB5in+W75y5/J8H7P2VU
gcNSaP7hVah18bgyFq6VN6vJcRMgIen2dTF7EnAU+Ao+WiJDZelpS8EZEhof
NK9pEH5PYeCM+tW2FYSPrxRo9GHrJeH1x7f+b6+wQPudGZnHhg4TXT8VeQrx
8ErYsJxXlAoCz1sb65wJIKRknf35lBT0v/fVN32Kg7nxroLbyQRYvBamOH6d
BCHmZtZXKsSBrMbSUZQnwqt7ha/+xFOhbe815aoTZOBy78/y+EyBuRP8kuY8
ZDCBgaXvX8iQoLjJ/HG1KJzRpDFz01hovxWbhD+DCXQCDF6rKNr+HbErl+rs
MWS9NpWrv5ApJMONyAr5ccRvK46qrtFawEBR4sVmaGFA2D5S6bUQDLQNhphL
vKWDhltP33g0oldleNqaC9j3J3c55w/SEV5Vwq+fwHMLiXejoVqHqyggdtNL
/5ogGUBnM9OVWwZyt1nH903hQAOIJ9RG6cBfbMNbgyfDZUnl2CMD4mh+Zlxh
C2GMnw5Z7pvu7CzBgNHCuUAjaXZ/oy6iBK2ck40XJAF3t1BBOhq/fs5LcAg1
IXqyBT9TjNjTg30XmDokMizHy0VG8yLjkn9tK3+DhvZL0ZEy5X10jYZIwQM5
H7wQHNnWv7hcT4Cc4HONm5TJEJTCJUnjxsCjkc2EhhY8nIl5mXhOFtFHagGm
XxH9IzMtmKB9kAnnOelbCcIYyCgMyPvxkQqxE/YRTtMEqO3n3zCmIYTud5zX
vVyTjPDef/aOV3qQf2RFAo4Oelp7bsaBohfvdm1LGsjhuRhPO6iQA3cNixUY
4NDAe5FjBwnceFSEzLdJofFO6bfApBcS176tkX/C8YsE5+2CghN+s+PvpZvd
9Vuq6WAaukGC5YWHAj4BB7tFAoxMqX4fM0H0H/14vvdaJngNnFrTs1sSwufM
Vkb8ELw9cC4x+w8Ousa8v9/PpoHjqwfbXREcx50TPF3DKQFC2BsMcydx8Gm7
qdzOIgHf4TYViWESBBw/Jru29UfDv/WYnI47+CaEAft+TztJ8OChjGrftFFK
CoS8z5KjM7Bg0rUYmmGN2LXzzJv7BRgIrDfbvusQCUiaX32vB1IgfaWlIUJS
Cto3Hbvx/SUGLs5mp71uJUFNT5cG7bkEOHbdG1+2ZPfXelUXuOZnLRNir7h+
u1a3FkYLX3h78DNQvWPJSiaIn8JAkHioulibGByLIUleNSOAd+2q7PX3SHwz
6xRSPUMAnbPNezZr0qCj9wV1rSsTbulO+M0cxYCvfezNG0VYUKEMVa1Dxovh
v7nKy4/oQE+QvIQjQOLfNor65b86//hDsxBeRvYpHSLIe3pSq8WBsd24CFdD
hfQ3t5JW5nDA2XwvXEeICpM7hjrvI/5R9OV9kL4cm79MTfG25w9R0fEft/0V
IrWHBjWxHdRtpUw4kfuF5YD49bn13ldzKvBwMmJtxLsuAhwpeHJW2RgHif0G
nenryEAGQ6kkCTys9ApLttGl0H6Qr/CqZ0tdJFG9/1JP9Xt3IhVKlCs570vh
4V2Ts/3qmBTc628N2FGNQ+Ls4NWudZKQfGH7qQ2BRMi/XHf3yB0yFJ4pAiF1
KgQ4bj9hEksH6d8enj5IXDSprNrQfnEM7Qdx5v5e9dVxMvwJOdDRScDBc6dJ
mWEJInCoz6it2yYITUbTq7sUKEBcu+gfxkUF7vHlK+VuLBDrk95vHiwKi9SU
W+OIH99sOFER8YcBFhUOZS2SOLR+wJflsd03lwjgLNnkhuiy3fHNhufa2f1j
Mp28DH6dpKLvi/MW+8H5jF1vIt37VbD8Hh8c5dC6OnOQBBuT19+s3UOBCfW8
tzenpECNda7AfhzRvRttcROLayCp3qDo6wwZ5F5dyWs6JADcLjsNyW/FgGhT
Eb0dKwkTWTw6m//LB/459XfzBBZmGfiB1zcJEBWif+6//KJfWcmTgTwKTF2P
cfUfp8O4n/ylvls84G6TUjWij4GetqOtettJsKV6ZM2D9whOm52MSRPFgYhO
SViRtTg07pxs4pfCwTuXuqz1jQIQ785IElklwRmjNNna53j49e5z/W0SFdX/
JmZ/rtl9pUFZdX6ipbwkbLxftSqRQ4ZD99fIz9SSIV1q4rkKwkMPZde5B74R
gOhA7Gs1bnZ/Hv4LBqwEhG957Tmeo01H9ElxXEOYMQ2y3DZlL40j835S51je
Zwxsbtr/JbIYD196ZbOOFGHQ/VSq7Yqbcy0N0l1dREOtRODphxC5tAfs/ibX
m+8G75qmwP1MvI3UTgrU2Ec29O8QRvsZKj/8Lc34yAT47Gvz3/7aRNDvFY/b
REgLcAm+JCMIXi6hGkqIvmNsbT+0BcGZfRWPHiWfEQVyhs2nlSQMDC4+rJpS
J8GHkYkGz7Mk2KEpwD2RgODIlY0Dt/KwMJ4m03U2hD1fJQlrbIeQ+FInE4ON
SqOB3g3no2MIL2zm2+vB95gEzesdtvj00GB3PZ/VezsJ2PDQ+OrufhqE1itF
y/kgfhHa9VNSZllHT8ekcK2tKMLPXoyTxnlgNNB/d89FDMQz72zPRniMm2H2
8sEmGqgpuPV8MCDBjbinwq0+VHiybGOiBgSwfZZ/VNEDWadHpccz5rDo+Lat
HnZdg/DlnU8rvv2hU6CRePt7lCceolOX3T8jfCskjtLd3EWGHMEK974FMoS9
9t7fmcXO1+VxKKzruESGJcGf8XZXKLB+7xvTVQdOGKNf3P/7MILnqiCL61kD
D4izRjFMCvhnKfwd0pVE+V4bN9f693+Y8NzKRoDHGYkPb3WWXD4LQaatWdq3
Ujw0vn3+vegQATDZ/tTaeVGYDuywXdjIB4cbU/IiHTDwJy7DhSeDBm0JZL1Y
BB+4y3hcv74RRfc3r8caDPx8K4j2G/Ij926j1pAg9NhLatQSDTaX3+m6dLgF
3X9t3MkQ3+eOzEcGhnryOBFOzlrkra1ngf3Huxe3EDHQdSDm1ZgTEaw85F5U
VFBAsTn/4O4LHGi8tdF9Wtl0i53P34577DsjjUPxPirivvOn23TAnZHIwd+j
wd59GiJ6HXgov7RD10kNictJVEvTlzT4NDxk0YUlw6nGxYquAj7Qexdrtvcp
BsQeLBFarBA9kVH7fX0kBS7uMBCPOcSB+seW6qSYEjUy7NMKXp5uQ/iDC+lq
11sq2l+jKC/+3cMaPJRYX7p8p54IZ4fbp988J0Gji9h5m0IS3H+kJCxJwqP1
jJF1yoz1OQSIafilb7JRGBSa3G6bByH2LXa62fUFBhJ95by0EX0w9XVmf+hj
ImzSOKw3yb2i8w9//wxdz7iVjgPaOYMcPxdh+BC/uZoP0SN6D4Nd6q4SYPyr
H+WiEQm+JNMuGvXgoWPC6NBpOXZ+vjPqL/dnRwqwXKbOpMkQ4A7n9rp3WgjO
Hhhixa8ngknvwV7bDhrI9jNCIBsPssttKS65LOiN3bpVZUUQhBlF1JhZEqzn
13V9i/AyMjU2jOGMhUnv8pJyhNcE9H6OXhTDgcwO/MvcoyJQKauSdcKdne/8
kUI3+vteHEQs2gv+yxfL3S29/1yPnR/n3kg6VvSXvT/rNWepQiWx+692xJ/w
OOZGgDYz0SMi6zHA19iXRW/jRfWueEcxZ9eB9w3/8K1T7cXIHAULF46JmN42
xIDfwe5jdz8LPP63vpfTa/pmNTFofmGg4MG5y4rs3zMq4NuQQGLvv5wu1OzJ
20YD3q396ZaTFFjm8/FgdF9v2H/od7K2FRYmdu6XvjVCA6dU+h0tKwxsnDp8
cMqeAgaTUXqZCG48jlCytC0Wh0/a7we6dWgIT6nnUOQjw6NmwZhVQwZUtL3M
j+MSR/cfn2Wz1i8uIrzXp8yvLxrhxbPje2wcaJBqMFD06zQJ6oLkghqPInr+
pkXhpC4yTvVx/c1vuUG5OnzEw4UAT0+raC7KkcDI2LjFFFnnaA7Ljd/E6WDy
9/NHK1FhCKz0yDNz4IaJxCXZJx/wsNS1d/R0Fg3NPya0NSy9DMTD+cZddIvH
ZNCtfqRu7YTw5UtRsVY4HKimjvw28heB0A3FvV9zSPATpkV2z+KhtDgrn34c
C3M/7E8MBoqj/Fqf5qbsZYtF/Svgqfq2dmsSOAz7J06Z0mB51ibb/7QQRCuq
66+uUGDT4FbSRh8h6PSP7+mOwoGTpKqt9EsS6G7SiNnjRgXvL/SvufpI/MkI
y3Yuo8A3rq1tsV940PW7GB5y0/+zGDqfF/2nesLOMVG+YTTy2WP7ETrUP9Qt
KV2P6Kkm5wUSwn/+5VtWWEvrGjYTYeqd8PbWSQm4o1UyIEKXBKzAq1fZkoh+
2Zp1SMuZvb92p/B1b7oQG68uuoSlH5+jg5+0z7P7HwRBX16ScPwDCRSOC367
ieDD1N+ub3gFKhw45qia1SkGWz+2HK6+TkTr4dymsa9zYvHAGt+TFtdKAD4L
hcCcwDVofmvdjNHBqUEs/FCg669B7GF6t9iUiBoTWl+oG31PEoUnUr65jsu8
8ETDIP/9IyJoSQ4MxSoyIbd95+DUPiZ8qmbu6eSiwZHW1C69Hjrssgw7uNhJ
hj0u6c368kywuOxdPMIljL7PFH144XEwFVRbg4umEd3ULMh3ZZ8DFuV7F7RP
O+1vI6H9yvjMh0ztt+DR+DOKL6w6HkBF9brv5OykrjQV3oWfmWmMx0GkKV98
9BciWj9g4IO9kjhIBkvGo9uqQUTYO29GrXdhwr2xxr9/1DBw8L2VgtMoA47t
aa3844jY67hn2qQaom+4bqnLdpEguvfXl81ufKi90Z7Xuf5mvGn497f+2MCR
1QoWhIn8ejZZLAgWy/PXOFdZYFb5xsS8COFxl2qxDMTudEY2NaXPYODy9hA/
Gw4SiofZH+NW57AM0OMrEeH2FIHPDSkPrUwxaHyRlRqYvhcgAV8nHuyXcBaB
1fyPezn4CGg92lbc1GOMEsKLmeeSW0IFISOvQVWxVRw0B1ovdmYQoZr0gpuJ
4E1L082Ms+fEgfNviZyONhV+p5VybQrBgm7gsL2MOQO0kwinuqdJML/ZYfvt
ExhwreL6OKRMAnOeS3UH7/Oi48ntyJkQWGbX50fc1xhXl2FArN2hQPWLOHhr
yLfgkkCC4j1ldyYsRCBdeyEzslcUlB+bDLH2YCD0cFXZ4QAmimdKmvxLL4k3
Gh7sz93OdwLBm6c/PN8OYOBW38LMjns4OHImmf+LGQmeknbNZZrjQX11bttx
xL7+7SdZnYkd/exIg43SxzMCapB1LOIkfxBigtJ2uuofLzK8sHEhyuHpsOos
0Y+TpMLJ78c6tPvwUDzxIPmzgCT45R8rtJQSQ/nwqXCe3MEpIViNmX6s94EA
20Xe4scT2PUzokHbL3S5ktH+cm+CblxpaWbzN51TwXuwzVR0fjIiq69szvqL
1v/drvfNcbv4X97JhTEVJgZVLhLmxx5KQNXX185fAQvP1mgtHZ4nQVrPuq/H
Z0Vh1go765pNB4ky89JHiggOqUTlBFEZ4CYad6pUHAf2gTtlV1LoME9iWigh
cVZjg7ZckSUFDg9O2d8IJ4DGYkkJnzKic4TPnko3oIJs4sSA7hk6mu9Rw7iu
06tmouPf0y2OO/WSCS829mz7a40HK3UPDfdnLLSeqqx/qkffkp1P/3HEVqaP
xNZjs3h9Racg9n4k9oZ9Q/cTJpp/jPq5kui1UxyOazh+lpCSAo2yzyJUXXb9
e1POY7hYzIK/72wjHO8TodBO2kanTxzk0zCS0evo4Ltjw0heOw4yfCfffUH4
pfmbs4SN8qNo/Uo1Y+3sniIBtD7++o9wlcZaPJoPpvcW5H6lcqL+rC1hqUUy
Y+cjrxYN6mXqcaH49SXRjNm9yILKE6vpn6hCsPz9bzRZlF2/8EfL0tg5hN1f
lR68Xz3oGAmGGuWU28l4MHPvfliXRYXqyZK75EICzAnf4rqBoUFYJ5dBOpUI
bp3hXK2tTBi6kzcy0IKH3SYEg75QKhQ/eZ3ybDcJaqurGD6BBJj+5WXcpUIE
79BAsclyKtQnFzh5n6PA7mtjJ29epcCNNpFouWQKxJ1cH+8YxQCTZ7NRunsJ
kL7F1OjvfQyaTzvw9tYV2Xk8jK/o9o324oGzbRaj9pZd70ldH/vmyiAdjcdV
0Bl3/poIlHYzNp+j4kHr3jXdMnkijKvUHar5SoC4lW27/JUQ3u0W1DBvRQau
8LMee8kUyLjwsObODgKUSUZ4H1UQROdLqfj+hncUtr4vun55ZoyG+IXSKVb9
HMJHKoL8BVTZ/QPPvzrlJ+TKgA0bFUR+WVPg9Bv12itYdv+2J35Bhcav/s/+
xOIe14ZuCtq/k2z5QO4pMo4ciaL2v3eIkLz4dP6DFRG0FZ83vf5IAam7C0mc
GQQ4Q3ew4a0iAThzLBAUkfFVK9i/3oqHqAmOyWhk3QpSXJVLEb0qMnpI61Eo
HX5r5OR+R3SncOYLlZBTZGiXHvSNtyUBb2HTGqY/Da1Pmrq1U2fakwF9+g8j
CU4UcNz5FcfbQ4by1wcKcV5iYKGsrH/xv/rpwcP3riRRgNzo9PZMGQ04nu75
2XGVBOcxT6lVCF9RtvKzOTWAhdc9DZv4+MngM73x62woEa4pDq3R38yCU7sq
DO5N46EW88UqYr046t8po3ZTerkM1F/bJvi+NiO8OSOq6+PcUSIcFi79cKCU
BceTi/te2uKBLpTXwFuFg8EMpnB6GxVuGFNbWrez+1m6lS5fw9hQ4IwWo2Q3
wkdFi6VunMWT4c/qIaqEhRAEVMsaYl9Q2fNx9sdXUzEWKEw8at6H6BpaV2FW
jgCi72V14iv88PA0sG2fWjgFTDLMbj/xp8JCIk8LpYiJ+m+lqZyfOaIL/j1P
3pEz/Tai8//1e1z+s2828QYJVodzLA88IoPTVY6755NoIN5YrGUbTgOxF+ap
PmkI3r4WMP6O2GuBucLo2xU67Juoq/wjQ4eTo0WNPssIL64zy2syJQNr4Dh3
NqJXNm9gbNSORfSw9db6kgs0+Ga5Ydv1eAL8Za0UqeTS0PMfYkHn30hKE9n4
cOlMbI4dHe5ya7yyQXS5zdxCaDAnE+Q/nvGOzqbBR7M9q30IP/tXnxVkp6+0
fSsBmCqunZRiJhze+sW5QYoMP3UOmDzKI4En5/b3Hv0MiD+/OVbuiTBIkh7s
HzJn7z+bG9KO3dpGgXSzOmWuJQnoemxxTW+KCD/T2q9Smmjw7pjpStpJEoqX
rvgLmRUTUvCz8p5J2DQVTg2OypI2s98n8Zevdw2iO0t8fT6/O08GxqmYb2IV
ZOgKHORebiaDt/vXsRoi+zzFljd/mj7+oMMVe5XiWiRedRS9Hv50fC2oOaum
+HhKAMmdK79SkgaKO4v++pqLg1mJXKJsNBU8DZ5Yqx8kw1uDHotCFxp8mSKt
74yTAM4vDtNK38XR/Q5KweFjy0JklO+Z5fDyif2mw5TTtvLKJiLMflfZVesk
Dg3DByZOq9LhZcmJ+5ozRFB5tlvzcTEFriTP/On5gviBKLfHsx84mIs/uscY
4X+foqKonRE4OGid3Tw8TAEPTau7YZ/EACMwTO4LwcDR/vFbk/J4WLa96Bf8
iQyVxt8GxEIQPRD4OK6ditjN0R3yWgwymIt+CBOrpUKZbXsW3YcC0aZ1vs2I
P1QZMOrsVnGgfzaDzzRKCn0fkxeerAMdVKjdmaL+1ZgCtrStJirdSPxpDL1+
cwLRQ3/W7R54TIf7GtdbBXxoMDCVmfZyjgF8zV8mzQ/igP+kgau4KxWGDO9t
u9ZCAJZIgQOJn47WG3zvHEndL82evzWHDkmGfaLD0yIehcfAgIWrq1feNUnA
aHkjy/M6Hs5SrvDGYXBQ8tZf7fQRMUgZqiu3/YUDYXIT/zBiv13tH8ayDgrB
TyWFHVWZBODtNVt39YU43HgsTHGeJEA8Rxi3/wANfhjz4Nq9iEAwXnvq4wM6
xF+vkcxqkQSdyrS03whe7Y+ZXH/Tjwi33G9MppXzwEhgbL3tGgzk+ygfzUxA
8FFk57IMgQjMI19KO+0J0LnR0/BzHqJLDm69+gmJW3fPd2v3OwhBXFuorb4E
O1911oHhSf1KhvlZzc53FWKQnj8T3uggBiVePs4GeDxI3fgbcdOHAYX5XQV1
OgSA413KNp4ygEtqedFkQwfp+s85IrMy4PO5LOkaYucF2Xuigt1ZMHFiPa+n
IBPm1PuLhc/TUfuryys6bhFHgZWbST9LuTAwLO6u+4WXCgE/uUbdm0Wh5FSi
rKSDJMo3apUrl/Wl6BDQEK6w9T6iixS/f/qjQYTus1YfdvRjgL9cezTqLwnl
Gz52i25MMSKKxy9KEmuKAylo/+EX2wSUxBD/Fw3MjV5PJ8CKC77hQ7cQOh/J
Xdved11jQecNb9tMK0GITfstIlNEARVZZVOqHhbu7b8fPPaeCuWzYS4qzkw4
xMexqmRJhZ9SphbfsknwSHX1py4Sd9F8i3TbmTo/LMrPdJ+Q7wghOvFfffSD
8vb8c/sYsMtNy6HrEQ54t8wKv+5g7+d5r9vYPkRk12sbP/LYl6pCBUmDTZoJ
7xD7GRwfM+dmwu9ITT8PDhzUDvPO+iK89bDCV6PqLRQImz6ypVRNCooCtvK8
58fBC1mbhFO2OHjF0FJ7v5cMQk35NT/7ySjeJjEvYzK8KLAz2x3DNUYCRWN1
uXrEToeC1l5zSUTi2cezsg9VcSB+OGFSNowAwcMu+tR4MpDOnOLvr8JCVfBh
0tQUFXjk15zRkyJBq+U+0Wv2FJSPmF042BC/kQ5bgrpuRQaJAA+DculrIh7N
n11oWsF6uiHfq0jwdLqGA8GDLj2/TRjo/sy6fb4pi040EMwZHt2MjFM4hoN4
eBEDvq6tmnbOJJAdNq1ZewILI7mkTfIXCfDd33wPeQMFxd+y3sedt0dYoLVE
MuHKxYPFoEeUzy0JoLMaA+RoQpD8LIeq8AWP1vckdN9LMpQQh/S1C6PTyHw/
MVWu3Hmdgb7P5rPqayqV2XzqAtUaY12FB57FJvIBJVHwNX0hqfQBByYL789m
r8eAx/LyI+0UNj/k+S1waJs2DVZ6xn8vMWiwkzz26c4yHaxLcyJelyI66dFK
m0I+FbXvbWJ5diGAR/Gm0X/2nLc7W9+LFZGo1hU01H7EeKybR5bY9TeF51/n
8EcKgwWvtXpAKhEua5hlLv7BQ09aqFI98nlY3a7lC5vZ9TI1B4XeWclSIc/5
TdIWGSJwh3uqm3ay9SuvtH0orxYdhg5Uh9tIU0A9LWJvjR67/+6FuQaryAoi
vNy68wkNT4TeJq33OUBE9+vvcprMfGyhgO/XU5puYhQw3tRpoPBDGoQc/DbP
1BBAvHv3TtdqDNpvepzfmdy2nwL2Ow131qVh4PXzJU+zeimI+dTduy5TDD5m
Dw+SGxF+L5QhGKzAAIFm/eqLE6JA+t/z27/KeGViYujwdjrh52lvLCTxvtrq
7SoGWyZ2UjynxYDHdRePnycv+n5Fbfgzu74TgPTJLHReiwju5YtWtN00GHtq
Ol1FwkA2/Y5lOoJ3tn7UMdkBUdhRemdIa5U9P94ntx+83UNB1wu/ccqktAmL
2kuy+EvT6t0Y1P9sBXu0jI1oEHGn1mTyExaq10x0jQex+b+bndp0gYQgul/7
M8GuxKSUhOYDFmpaPOP3kGChcYmox0Ls5vrpqnkRtn24PlN4fo6LBb1ccVeN
9zAgL9uEeF6I3X+84uEDxkyRBHwZvpLVso0Mqr2zuZwLNHQ/KiF+2anbha3X
eeIONRWfJIOnW884jYsCXcMRJ9WOUuCE7pBtmYcoqCTaaPr+IAJdqkIuFOFl
jKwRh4AhBAdvRcXWPqfD9eozXgkaoiBYMHJiZTcVgsVMzMwOUmH+/SPFZRU6
HCoJFKvBU0F64EPof/VQcVDwg/QT+Z01qglLp5kg9IB+aa8vE4RzbHZqLIjB
5YYjd4+60qBXIZmgkCQMMm+C+70NCai/6T/5pPTt3Rp0PhceahV2uBOh/mvt
wzE5PAzus2yVCqdDqwmxKruNBcdkvqhgysiw5banYV0NDlKlRX9VZFNAQrtl
UgXROfNvxFiLw1T4sNt8RjcQB6FGzdUZ5iRIPnIv3H4SA5WjfpKpD5D4TDZf
J38FA73NMqYt30RRfGvqZk3HzzFRfNhkWi7ehPCaNvze69d2iEF1dq6t7F0y
jLjTwx3bhOEOKbXD/9dPnZWVXM5RWwq8ckHEwpG1EH8p6ubuUBycNB9n9alR
Id1+RboR0YXPswRyDuLo6PPftxI2n3MQBqsWmez/8mfdEZ/PajBf6AxHXvpS
i+CXdxbnFU0PEuR93aR4+jIOOhfeH+vSo6L8vdNYY+OLe1SY+X7kUbOaEFxX
971S24noieHdUUMvEDxQTHVc2su+P6Llc7SRZQPi7/mWj1Z/kCD+weXKrHdE
NH/3u/VllnWtEJofac72GpdOxYFbxvQvzRBR+O4Qun1Whr1/8133R/eGeBKs
2ZV8bJspDmaOzxQTjJH5Ub+aU2YlBNIBqtWpJlh0fRNXn0b3aFIRPPEM0Cxk
QON9008CCRQ0f9GTGS4MO2gQ6NJmsB/hUX6+LzX4p8iwdd5GzXQdHn6WhV2+
xU9Cx7edpzS58ZIUHLB0akwWp8NK3K50389YNN6tsbovIa7Prtc0r1/ylvRH
9GbwYfzjUiI4XCua0j9NRf9/a76VXXEwAeVH7i3j7/W38aP1MWRHuR/cIWz+
5Gj9dOaXIAWsQ7XDJacF4UJuWojzNSyKV+cyk2z/Oxf87/fj/HtoPyLZfGIq
I4ozcJ593rhZxl5nnIcCGsFvwe0CBjA7502+yTJQPH7XyX9ShEhAnzfeten0
WgTvfCKLXGwvUMEsXGms5yoVvF1e8JuZUSCw4mfBLTz7vpD+OU7xQ2uY6Pg/
EL8PnZAmQ4zDyGjQHyIM1A2fx68hg9eyeWykFBF+tPsmPrlJhQ3XF/SVt+Bg
vLb+fU+dOKgdtyQlrUf43YG9msO9FPR5QzRXjp8Z7PlJTA2p6d5MRMcbcIxy
y38X+/2vZy0W9hxnny8fOWZ24HkVEmdwKVlPhIlwKoEvdqSVHxJup7cOphIg
qCXk20cFCSjzsbSCE0Robzyi8lCXAtIdVKc6GUFwey/bNSmMh6iRUX77jTTo
s+2dXHqNQeu/hW9+CXT9jUX/3u2zR7LSlQd2mqdabRLBwqLz6YgazmWdf3hA
fl79syEWj/K9tnP3e7NFiPDRSUIl9AgdHLv3qzt/Zz+vUypQp8CQiNbL3Q27
mRaljQVicFVwGYJD3mNY84cpNPg0/sFonRkO9tkEZXms0mHi1p75m7Zk6Oto
WWYGEdDnZRw9lHnFQwh4NfSlFoIxwDEoIPqJjIMEbCspnBfhA/4D9zOt8SAT
bqHagyFCRHF8+aV1RPAzWbc3Z1IU3F9yG5zSJgFX2vMTPJdwcNkYy+uSQoE3
Zyi/cL6ikMPsirRB8E1hMXoyYgQPQ2/L+XZzS4JAvXGB+kUy8OL8NcaD2Pxd
hMdQ4dMlMhovKl47BJjuZt+HkeueY/Kf7tn/50ef4xcMCF8QowFZCio4Q0ij
yLpsfHj550FEJz+9+XEif5QEm4ReZr5BdN3JC3FBi0ic+2Mym3KjlAaa4XJ/
ryM4MFiY8PnYBwbMHAsSJXCRoW5o4vyHRxKgdbfEZk8YGfbvW39Z6xEdGv+O
+FCuUSBmMcbb1IoJqfvsPV/WkuHz4yX7DioVzL96/D6K2PGHBlmdUIQ//csf
kGg97e4SDHS+KRpzb9PuUtDP4WDY6xOWdLBVHCitKyHDRoMeB2mEv1bKeCct
x7JAKuD9vT+HaLA2hdNhJYKC6MawdHkeFvq8D0OMTsvzDCRuZVV5y4tDWqmN
WpIsgu9mA/GysjRo3RmReLJMAj0/4us4f5kkjMwn/YUWDisKE6BxO9YRh943
4DF/8sDBeCIar0o2tZMqEHteUXjoUGGEh4EnD9bE9RPh8XSy+pgUBrC+b864
cZDQfJkXuSc6EZln6/I/hb+Q+Ok755vuLcOAPeWQ9+sQHdq847zfDmOAfuzJ
B7o0EQQwWblHq9j1gDVxh2K/EqiwsyrV1w6JR/ODdMpRUcReu5KIxYj/tpXu
3u6x54eOUb3+03xdMdjYVjxZPs8AEb+hLEEbDKh88HCn+bL5iq63gGZqPwka
jw+T+BmiYLIPV3Uhjx1Pwu3Kno8YkNHxJwm98HTSYueL6rP/im/ToaN86KFv
ZtGIBgv9+17ZVm6jw0h83e49EWxFBKU1HxofCVDQfNU5oTn7zlNiaHyqXlKR
L4xhgRrP+h3/1efIiFWHPEglgfJMvkIv4h8borf4nqskwbr2pWWPRCq4pUSs
/jKWABap52KJIRNUg+wMryA67uMdiyd+aSyw8TK0vovwsNoF95kDV3CQ77Cq
K/MGByWSUyTRn0S4qPWw96scC8SDJj5tShCC3j4e444xOtCr/qqPncfBg+N/
vFzvsuNlwmXKjlw7PHo/VKWS8tnVECLEPPeM2aiAh6w/WWtTY/AonuQ/T3A9
I0GB+xslFMsxZLAvcCyYlGffj2AXMineWkSEknsfUuzOI/jMjKlSUsWj9e6q
T15KyUQS0PqW/NSrHJxaVHQ9auffWPPPsvnzpAtL6mULe/+k5/T3yKI9NHQ9
SwhpG+51IPHmAV07pJwK18I3y+Qa40BbePnhuRxByO7Zv27dnAD6fAO7gzWr
B9n5su2HA7pGp2nQeKdQCZvPAL89XL+VWtn6xh6jkUuPocED0+E+te0sKOu0
xWYps+u3DjSGNhbY4mGquEu6ogzREb8uzpvdIUNY0UafQ3JYUOLKTZl5QIaz
YSvBtfdI4NZICXf/iuhg3zIBbkMsnDRrv2fxgoLe/2IY+7MvSkMCJkKKpEiS
NDirQFe6TKSDhtROzuhMUQiqsCP0JdLQ/H29Ep7+JIGE7mfUX7/d1aXJxj9z
VX0ceTsBDosvrqeWUuGv55H5cERnLas2bR7Zhdg3F78ZR584hKu4b/KvYUAZ
7DvKwWB/P2FDkrKAKSc8sPeKS58kQzbjlPuRswLoeihsq3opkCQGDw8nipe7
InywrPDtmQME1B/iMnYYEhA8H8R1aklHEWGDNt+8mB4RguZkgy7ZE+FIjiI5
HHmuz757x6NDGGD229STh8re3+dZaFm/5g8B+P/3PoRwPpu5xt9MNF9qoTFh
/8yKDI6ho9Nnn9NgYUvjzv2qBGigk4Z5HfBwbJa7zNOAgPLLvhxPHvUPWLA4
HtW1/yQWJJ6Hd52YYOsnvfhgyfM8wuh5ycLV6mi8ExnlS7oexd4VMUs65EB+
UyELIoxP0/bMK1Lgprz5hpkDeADLU9w3b+Ng0vOJIsmXBM+oT+I6Hdj1Dq89
qNvuejAhuLQ08OIbFsQZtb1MTmai+Ys4Z+ccETw36k+Fs7qYkjA8ys8tbCKu
VThwo+fDpXpZ8w1c7PjB3HfObfAyGfS5m52ilSVgfiTxMt0Cibcfwr6ZhpCh
tvt75YknFIjsnxwujSZC/LV2Oz4mDXzbI11ihomwGt/pssaYG5Ivjg3YYHBQ
+PdH6bo5Alrf0cSricu4+6nhn//uu3Zrw8htIlqvfl6gMmnhDBUyahIP+TxG
dIOJo9/6VAas/LbIxT3BwAE34ZCaNHFQnXMvntjEBL+xscP0RCJ8KfLH1gUz
4AGJL7Q1BAdmnWpVta+xsBBwcnJzAgvWVYrEPN4lBlOM+7iuLhqIT6wXPZ1H
gh0zg4oXyhlAK5O54ajHhPe0X6vyCA8YHZprO7WDCiXdhQewazGAm0jX8kLw
1Nu5q7u6nobaQ8S41aqlERVSvyueuIPg4Hqtj1XuQ2vBxMoxJPmBICQ27Thw
9jcBfsjydfV/x8Dsrf3y718S0PPKP6p0tGSa6Oj64bzFjkUO4MDfb8PGN4+F
Yas/XWMMsZNjL22YWmQ8pO6+Hnm1AQdPzzgNT7djIXqD+5qLanRwiEv/+CuK
ACOkW+W+mxlwWK+9YaRAGL6JTu3p3UoFX4n5Es9RLHR8eyQ+j+i1sbSgwpdR
olD4sFLVLkMcSlysNnPOMEBK70lfWysNZvREaOMaGHiUx8oOoyE8IGLH7Y5g
BDc8dTq9j9HgA8aDWxPhgcVfPA+nZ4qBzsCZ05KiCH9aa8JZjpdC8UureWO2
txwJmJcDD0TuJMK2N09nayNFIPklISVnjABDj+T9Ge9EQPbhx3Gz6xTI1k54
moGsR7l17VEmgjcp4x7rSznY8VQormdw7icLbm1P+2WkxoR505bDa+vJKB+2
Ilz48iNEArq/OoYsPSND/amjI4F2yPycNHxR2SQJt/eYpiXWC6B4MrVpypO+
QkbH63GisKPOgIr6a1DEerULVygo/pa2iy4MmLLPixTzmjYLXyRB2pW++P/J
X+zZTwvopUG8Q/uOtdEYaBvNF41sRHhxw2rQNgQ/bpwd5Nvn9EdHRfcXJ6eC
OJy3zqG82oeDJXgltDVMDDjS4pRZQrzwLz5celqko5lGBukXGdd7hoig6jF5
bQ2FiuLH9uyPm4MPUtF8xsOOVDUvhF+7UV91CXhSoLnqhVGqMR6Cbz/6ESaD
Ad6hex8u3GDnU2uzLhaLIPr73/nWiLXeXbs82ecN6Ua/oh7PEyDzl87snD4Z
JuW+jl+YocKNEyP/s4/zbWo35Q+LfV8gV5n8R6a+OEjd3Cj98r/7mPAGBc3i
OHS+DfZW5vDOEdHnWz+nXOvhI4EWUY+ZD0R4nnL2UDzCF/75R5qk2xaZH4Lo
+c3H4UI3qDx8j//VD/Jf0XRMRHTYsIom52kE/07YbvfaU8S+n8Y5n/jggiE/
tJS/LquJxEGz2h35ZWu2/mwiziyXhlHRfJhHzastNR1YFO9fre147LuK6NIr
6h33pHAQ9SR52eEtGd7xddm7NErAT5+4+bNYGoQVv586n4SH7NY3Q3zn2Pt3
Xde/FSe1se9Ps2Na/wwtEQDS5WUuBYQHWF8Z197gT4Jo2BVz9ToZgk8fuhjT
hEW/v+dmyebdouzxMuTvmJV3ktHzo3ktFkXaj3Eo/m9Y552hcEsQrSdKk3gz
wlmG8PCBfuO1yVR4wXnc80c8Cf3+UsiR0+L8ZDjFy939SIoOnm23ZL7OcqN4
przZgaZQyubrx3tZQYsR7PvxYm4oKPaGILxPOJ+yiOhqMbser9k5Nj8uLppp
2e1FgPI7Rvf+GorBdZqVhW4aBXScuJp5eSTgafBn0ZWqv2g98ibhsxOnCnFs
PSFyECP8GeE31o7uP/JJ0NDssHI0hAbWiydw8WtI4LiZkf4qFvHv/IcCh7ZQ
YCVDrPnGPQJ6/5PgtOIOu0W2PtQulyNFEkhQURJxPF8KD0/ku/aK4qnofQR8
y6Nv32hgwd3rhC3/KKI7XudXjKqQUHuduvYyum4e4W8PenNPGBFAMiRFP24d
Dv383DJjby8/HkZfn2O06RLhp8FfSAlg51v4DMw1bQ1ZQKdZXme8osG5I6Ji
LgFUOJ9L4Z7bQITYpxw2uuZ4lF/+3VL0LaeNnT86N9q7X9qBBLKWEXnJAUTQ
0nULHvv+W+df/OORozkIkJB4LxC1fmaaCCHL+o777Unw4i3jeNg5MiySbHPe
JrKg0Yd4+iUT4YvfjVpee7Lgc5un3hgSD36WnaI+9uhu+Oc/r7/L9Kdm49Dx
G839uaQpS4e/3d9khyfIcGhhgMM2mgHvu4X6ql6yYPx+AERfpaH7V8cnOxe/
ONLARnfbk8l5HJw38npqdZwMpYdjqMMf6eBrbvMKV0UBbWlH6Z1fSeD13qa1
UJgMjZMeaWZrcdB9f7xs5SMB9B6UMCM2IH7mJLDlRgsNJpj8rnqnRSCYH8PC
vhVG44v7ftecWYwIVE5e0H6N8LcnN/Za/qpj3z9TJHy1MRqx03/53keE1NVY
5y603rBg7st5Y2O2HpzfFhC8WwLx07OfrFj6OJj64f3+Opc4NPB/JW5JIYNw
J3X7FoSf7zVakFubRYDQp8FrVXIJ6HoJPlXzstP5P/fLvfc5nnSXCCIithJr
nyH/r3X05SZpMtCfn7PiOIiBUsP9c+3vqOj5jU0Xg3J7fxMheh/rAe41CyQV
SsMrTKnQJbhFfRThtVf0pL9JJeDh9o+vik/1SFC08IxSWECGO2pjR4vKyPDr
WH/ziiYD/OvvvQ3aR4eAACGhbsRv/u0HT6Z+duZRo8CU08Gr3JcIcKr+A/lH
GRYyLrkSf2WIwIB92HJdOTte+xRY1by3YOOxb3rRwx1GbD1U6p65UtSCR/Mv
sdXzZ3QMmCBPbSkMKMDCzdwe5Qludj7z+PmZqNIQBIfuCsxqGYjC7sL9LY9s
ySgfffx6RHxJEoPWj1jUuN7XmWHvX52ZJLTee4cHe4Gdtx504+HBppEsuzJ2
/PYSqzxgNoNH6zXD9rVpl9xg30eSSbtR+4efCSf8J08qIbzH29SZcd0bj+rH
X7U9ToEmNHR/Ue7A529fwono8/vFOMJjdJlwzXXbCb9ILNDVs7zut5EhkjOu
OrGQCC9yasKTED3okt0a+O4kDna8LRvJN0R4Lb88p7w0CTxl159s+SuC4pU/
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
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJzsvXdYjf8fP95Cu7P3bFNpWC31aCgtGqKkFJXVQJRRGZUQKVRCGrJFUZKM
pgiRVERIRDLasvK7v7/r+vS+rt/339+f/XWuR+c+59yv1+v5fIzXOfedeFm4
e5CUhISEpoKExP95PKr3qOJRtiqOptGSSKk8NKbLJoRcFeO35fWR8mBFaK/5
tlMYJob4F08yy5iCSP/tIRbOAoQUGW/cVU9DS2zLvH4uF4tMN4z03KPhQ8Ji
pwlWanBilSwzy6Dj3bXCm/RXquCuiVRUHmZgOU/3tWGuGKezM8kT5eiov/b+
flWjJuZWhqzZtJoDl5XPdA0mquO1VNL6I7Wy+LZc6cJBE3UsSe/9cGuKGLrB
oR17ldRRHvM0womnAqU/2xedlyOeDz5rTV7HwU0Dpf6QhRrYgEccPXUWPE8r
zG7fq4lTk3hp/fdpqHXw2668SwOGv19+ezRAh4GWnkOItQZ24ed3Ep2GHnDd
f10VIfHq/LyYvUqY7O6t2NWohue8AcVfZSKY9ZISfv9VQ9GOD0ybaAbuuir+
U16oiq683C6Xr3RYZmk8uaSljZzGtcvl5Rk4f1tZd8hZDYybZREbSVyc6dG6
0rVHDTlaJvQmHR7yaH++GNI0YPQ831q6lYUiuZ1mlv6qaA4sSYl/xYG+Wtjw
nk5VbJwmNUuNWJ+s9JnsJr46ZjGsF9VJ8aF4MGTxpVvqiBIZ5T08S4O1+g/P
/boa+Ojh7OksoCN8RsKBY24aaFvIW3KigoK7Ca/SbgSrI/n6+uX+yjykM+b9
q7qogVpBc+CyHXRUwnNQ8rYatq8v+vdVkQZO8l2VL8ZqOCVdxljTSMbKQ0F2
to6a6HjUeeBIFAMzyg9ZL1+thn75E+GBe6iIrMtnKyaqQ2X2xKm6v2koz7Rn
fPTRQF6HsVEfiwWtR+t+Hj+tgWGN9g+0ZXQELh51JBeo4VHC24HYGSyk3p2U
Ts/WwH5/k0t6QQyohJY/tbQXYf7nTWlG/lR8FShS/+1hIyZT98qwOgnSW47c
v/WXhZyzpHfvsikwE3TerXT5aak5ZVdN0S0Gtr7N8vm3S4wbO+wOrZWi4vVp
ylxFbSb8D9OEXxksSITKPY+6KUIxb0d27SY6+o+11S6MZ2NF9Zb8+hd0/BgI
ELOqhMj3GuoYKaRjl9n0kwFOqrjfUjC8u4IGxtpP1lNrOOApWS1adIOEJX76
h7784cDk0r65Qxok2B9b9evfaz5W8BXbNbSpONS/5mdNryoeD7wsveZJgv7T
OYyCaD7ieFrft2gy8Fvo6vhmuwimv5JLm2J40GuI2TG/lKjHqVKJrtEqmJ4T
+aJfjQJ/nTj5CV1kPNd4l5CXyIJRVdfSmlhFpPfn3Pl8majjFq56lAQHhqYp
npeFHBT3CN//3qmCwSjF+h4JIWbVT9nWs44YH1fW32WEhWBx9sOVK+iY+Pjb
Zpn7dFjzeieqLCPWX/Wdl8xeHij27+tC1WlQqIyP6sgT4KjZy521bgLcnjVi
I1Dmwqq6aVPjTjou0QecG/r4sNh28N7KODamDJ7OMbTlon3H5bjVo2TsG9Xf
ejydijllTxxOnlSEh3nMkKaZOpbbtZ7UfU6DKnoMv8szERTSnJ0rFkJv+c1z
A+d5MI7SUhr9RUbelDkXEwh+Ck+tmVX6VBmDlJDS4JU06ITNCj1eTUbz2k8z
jAfpqDObqnd7UAkrtZh67bZCnMu5OefsIWVI2PW8nHyfj2nKPvWtS+mQmNs5
SdKGDXXN1jzvVWQsv+zzfoImC/rRHUz300T/3GeT+jtpmLTeVXewmgazZL5f
xT8Rds6e0xZlxoBv+awN5Ye4aAi66uWWToJCXKtdWD0Xa5yUuLMVGbCP66nc
WsnHxr7SM8byNMR8q8+kaTFx/fLBstVnyfCqKr2iO8KHU97XpSPyLGywE3kt
ahEjZz0pXS5QFr4L+trf5HOQ/jgouX2IhIqb286t3Et8jrzKs5FPFMi/iV9m
06MGbpgzL4Po9+lX98rRrghxb9CKfiqDhNzVrZ17bjNA7YvdFlTAgMvGkpfe
BerYqV1ckJbKQWLSxLnDRP1LraFv882lQjVSOOznRIeOexCdmUeG/e5FuiIH
dWTtKV/QMkpD5iLyegZLHa+qvt/ZVCaPtG2zfRWOsnGj5rgSrZWLmezi/Y2T
uRigWhgdfk6H85VBP8E1ASwPJBgfS6SBlbpIz8uJibhH1vWZkxUxdbaSxoL5
QsxJ3zGdT2Ji+HX227f/mJigu/Ge5H0qoj3pm0y9RXhRrzaBTfQ3ZaDuWYy2
Kn63o8zTmISeuuLVL4j++PD6JyOFqL+Dh7c/OmbKwkqjPwXG+mQsUtqY9oYY
J3+J+26DKxwIzygvmSnFRPq/kafL82ho/Lv4UdUxGuYEf8jt/MFCzO+n4fP/
EnVglOtenKKEvXUzD4nL+CjduLosfD8d9k6n3QZesaHz8NLT0klEXeyv4+Ut
FyErQrVaNp6GI165Vq3+LPDdzZ/aN1Ox7z7z87o+OdzJbV5pX0aHfHLgeZks
Yj0vmbZZezAwb8uzIn89Di7Ujbwb1iVhTb32qdfBXAwnlqYWN8nDIXdmckW0
KhSVTle1PJHHjwrNSW1yGlC7rzLxji4VIalnfXNzaOi3igj47E5CVO9Ofku/
GPktNqsSk8kIDFpZp7mci68K0nFfztMxHMT+ZmFLw4w07dyVSUqgb1jrZWjL
xtvawQ5ZDWUI0LzfR1MEn985WR6udMyfETe6950YV5NiJ+Qc5oBjTvJ5HsbA
ucuL3qe2U0HvthKHEa8PsskwjDSng6W5wDdilQhCWe8nUckCbMx8Qj3gK8LQ
1p+Cti0Er/TsLZqqwkNaB1VOo4yKPStKvGjaDDT3vNZqrWJi0/OqVi6hE5Gz
0yYIJyuga+2g8n5/OgQfXF6F5pIh7PBacWUCoZujBWq5LymYr3To8ckXItQo
6XIFU2mQqrUdTr7ExK+L35zWX6Dh9rFavQVJbCwmDexZasIATX/KhHK2CFbv
Nq2N8VfEw9s1pyI2U5G50uNgFNFfnZ/C5pd0sfHjSUqgRyEFe4skqyVbqGir
PvQhLVMFH/Y/7HhiL8bOayFbtzAouFinnXN4rhpu2mfd+UJRwX5JJb7iIzUc
7ZxkWXKGhMOlP1+lZAmgc7ysSSjDwa7X1Wgo5KNwnVG1BU0OkrcXvyt35+NN
btGtOVwmRKsCw26kceGUlCBV1MzGZxdcP7xAhCvPr7++VU/GQravTeMdPm4l
3l39qZaEd7Mba8PMRKis2l7D0yFDsS30cvAtDq4Z2Z4qp9NR2LdRu1hVgBuT
TYpLklnYZBwgWfCO4JuYGSNbaDy8F/qs/gA1GEpPNPkEGq436zxd603H397b
Hy40k9FfNcsybRcf+yw11HPlSDhh43s7qYWFm1laH0p/E/1Y82jmfk0xTLw3
nxLRRIjR0nFGhDrmT140UnCID0HO6pnHCX1XuiYMWtqjgvnFQdCbp4rPxfox
Amc+WFt1lApe0OB4vrTVlvBfazidUZxXArRN2Fb+YIs8XhkyTldIqcHb9Gmm
nrQSOtvaVCpGhVCwytyVSOj//xdv+CQMvBPMQ4Lz1L25sxQwj/cvt9NWDZ+P
bzDYWkDDzZWhf5bxRbAcfaK8h1hnWt074cRMNRzbKklSO0n+vzBTYr2Ola8q
/BlR1bedmbBr9mzdMUEd7k2DC87J0hH7NiJG00YV4btGlT+FM3Hs2TPT+5Gq
ODIsfdJxAwNmC8xW13/QwM+2faN+O2kw+rpR9/AzDdSP7nT1KZeHHNejWGMx
US9XzHcJomkwz0o7rGOghhdLxLbG9TxcfpW7+65ADX13JqvLF3AQFjJTawPh
RyOit9kOz6Cg4/hDx5OSqpi89wqtp5aJz8ED/itLBSBdkN0gcZWFB0pHt+tM
1ECs9/HzvXcZ6Bv+JbfeXRUB2/Q3qvwlcOjAewHhZ4xzlA2dKpgIPBpz6maV
ACORfjN1DnAxYYB29t5DVbS5zb3XMokFw91qRQ5J6uBeWJe3gKiX/caNmU0h
6nh2aumuJ2F8jObWnjENVMXQF3vH0tVMPFOvfh9wRg3u6cFlu0KYCI9nLsgA
D3f0OxM+f2fh4PZ6FpsiRB39SF88wZ+xw9W3E4UsSD7YVidJ6FBVZObEoVBN
ZIatuTs9m4qrG75YWO8SYnrQZdlD4VSs2GRXUJWsjlPk6gWFVuT/CzcUHSJ3
flfFqtyWS590KNB9ERNNCuQi+Kh/hnEzCbdz/V/KzhDjh25aw81yMkLNQ+/Y
GarBtP++1aHfZLx/9KuD/5APb0tH/WdLFHH1+9vUEiKfOCjPfiTlxQBeGgrT
WtWgGOrRuuMCBYkBaQ0Ox7VwDIscu3nyWGR591DxoBAOocg/068Ir/PN+clc
NahMUeuTeyqHbR9dD6f4caAlQQmyPkNDQsZT0g1CX79airx/X5JD4P2ZQerh
GlhYpO4X46CAReGB9Ix8Ed45xcrndbGw7fPuAoVBEcg76jcVlzOxd+bLM+eJ
fj/PC5z1tZGCDzl3u5IEfBy9M29l/zvC/yy96elDIvzweYOibjclLF53/oXJ
cjFcJ48GXP9CR5aH6PaxtSI4D9VsX0L4+f8v/v3Y0OyxvCrOrXBv1dpKxZIL
lXEW+hpQ+vznzlzC7/i8/SrRukiEhsw/P/WqlNES1TqoW86BcvgC0rFpZDy+
ELole1CMzHDSYMk+NvRpFct/XxChLbtBWHNHDvTovKAyPwa0HykW9Lyg4HDa
x3xLJQHcH92O4J8W43WRU9YqNXW0mET7jExlonPFxhtuXDHkr38x33yEDuOj
zuy9HWKE9MzxOGLExYK06k8uUcT5l0WtyBxiYW3S1gd+YmK9pXwG3U4xUHJ5
YeqczUzsq83IaCWRMU/B8PSHRWroDZJe6uAoD0+17V0XdLjwWDp3cCmbhO2n
Zfb3LuGBHqvxydeIjaa9NRVee8S483JhXC6ZC65a9LRfRSyoTTWX9Bkh4S3F
fE/qdBGqzRaLNxJ569kSUviwthiL1zz548LiY/fAh387Wgi97dB/kiNFhz61
omjqVj7uyUn66vLI2NifEOF0jIejcfUHO69QkHzrp3NjiQCvjg3Eyawj46DL
Be/5VSIYZez4+vQ8CYUsTtSNaA6OiaXMfZ+zcdhNsWmxtwCz1Dy3q3xkIDe2
5+H63SJsexwxav+eyC8Xrz6NOakBlbrtJ3iEv7b1us/I/KOGe/eOjSxsV8RE
fu5tY3U11Dq2ZeQcVoDFv8O7PxP6f7ydsbPltSJsZl6+HyqiISODaalQTcKc
NealQ9FqCJn+eO+UUDnEUO7qGCZo4c21/C+6TXLgld7MrJJmYPTF/RueBhQ0
Zk2WsWTwcW3SmYrQ7VS8pd3L++KvDqcCy9jqSxTIXXgZcP4HB9Upvlf2OHKR
8c68Sf+PMnYvyuksrabD9kXvoY3vKegM/qVg7UDBbsdZb+cs5UHSLf1Vl5I8
DCLPx55OVsNPyxSyk7cSLrxqSM75R+QNxsb1S5IVIJp1kK4epIm/V/5cWkjw
6zlZB2qpmyaKVJfZel1hoFyysedUvgYofgnHfhJ++Hw5t4p6RB1LTp9150/k
4Wnj3N5ltlrQeXnFJCGJjjK7hQqkXE3cbF81wYxBxcCX1T2U15oIPr4iR36Z
PDqluo8qmGmiZ8KJhAwpeXxcG2hyrJ/Qpx1qlS4nFTB94ZQ7D1aJcXmi6+N2
RwpEra99i1M0cPvr3E41XzLkY1Xt9ZWE8JSbG/lzCh3pkqtnJLN58LQJv3Gu
h432XPXCH1fVQNFT8p9kSMPWPZ3kAyVC7M5dJm3ly0WzCe1QdLwQty2iPt6f
xcQX/j/H0G0iRBm2NK0jcXH1ZI7N1AdCJNvH5x9rZOPdLLHrWw4DUzLkTV7Y
U2A6vUD/tY8IRYyq7tF1yvigIFM+XV8I0xOe/KuhdKjb3tqw7ysX0n2bYl8/
JOpvh+86w3uqCJ1hRG0LIsPc5Kzew2diVIRtHZWcysKIsZ4o/ggX7okVA1+S
mTgw+NbRYgofB7ctbNQ4R0YGXv+iJLDwnPtk4jlrwo8xuv89t+LiwPb4Nq9K
Zdi8WCRvm8bBqn2mtnueUKGx5nLT0S0k3F9zcGn5ZDqOUKomTRaL0C2db2zw
lIk9k2X0p01XRsE1jrVlPgnn+jTvyGjTcOrtBknaJKL+pM/+7X2ihOo/DrzV
YQSfa8ikb9jJgpS1ue7VNCIPn0tTWPeQg3kTM9RUquTQwVPcdGElA1orjqzf
Rqxf4tfKGutyNXzS3hIc+o2Kg07SB+7s1MAnS2v9uG4Wnszwdo/eK8D8hH6H
SykMhE0Sb9l+QRUyZYG1MtMY8HB8NyurVwFy2iZTmk8r4o3Pifxlc8XwptFN
Sl+ogHbvwc6EciLvLLXT/dfGQ9yT+OmvrwuR1s73OUeMY/4hwexggRgMo/Np
KWQ2bh1l18fcFOPijWKSTJQAPxTbD/Rb8JFUFeltLsEkfNdHdpYlBaMmyR5x
T8nY77NInbZChAcMT+pgEw3rFGKP65jw8Y07k3N+uRLurTdfVymvhllvH627
JssCKX74hD1LFWuf3fjaI+ITdfAlvZshhNYtr+h+IR8+kwKDPy9mw1HycQop
icgFlidHsgqE+Dp73WTF7wycPPBhg0MHF1viM3VPuXEw9dTMN6lDYpwM6Dd7
qsTAXUlSl4K0AMrHZUhUOgNtc4aLHUpViXls/8fbKcBFdbvANbVipG/40EJ7
zID0rsxDn4vEqLJ+s2xiMAfcVNLFwjgBfO29ZafW03A50zmidA8f0c6XKq9d
4CBHYa1KbzPxOWYH3JeL6PgQaS6su0LkpfK2UKqIgSvOyWGa6UQe77mm77aZ
C+bf4OxKov7fOEyNniTNwvqFMu+HakVo3m117mIeB+yGK+mlFQwcOcu7XvmX
BK/Qae9aVxP6dqg6yTFDDFHAE329J6oIu/V3i4+bGPpp017d1CT4/VJVdIY6
E2/W06akEnoQXZNqs1GCCruRZxNdPYg8H+fwQG89CwlR5boT33GIdQ2b69hM
5KOdC89sM+Dh5K5lzcKFTDzSP2LSdkaA9bPTfyyuIsPAZIjavFQEV63CUAuS
Aq7wivPr7VlIDZgqknWhoMHHq9VTlYFEGcVuzhplNMRNKmuJFOMTfXeH9Awq
tqgU663T5cBrimLsqy46NOxS7ww1EnltjceNxScp8Bh4aLGsW2ns9Wc21oWE
CzTxM+dmzD957v+Fb19YU3+znAaTi1f3qPsSfKJAcgqTFqH/HTeXI6+Ch4v2
pO6WFSI9ZV1/MJG7NM7V9gyrE/X/c3TnaBsDc3euVF59QIR1SfOLu/vJ2CZl
apI/Kkb2rUPfDpD5eOS3zro/VAS3079pZJoAK0tXhT0lq4LydmdqujcT8a33
6min1aCROUMw/IyFMJcFi3aaCpDwOftDgICFK3VGr2vnCzCYfyVzkRkNJyrd
5WyD+FB9vvXcNT0BCspt/JZOF+OZ70KKwR82fr76yMvzU0WXzIvbs1cS/TaR
f9D9jBjG8W1Pq4g8t4/zQ2aZvio+bQs7H5fDwo2XUjVa5qqYeM8pY2YWkU9v
fKZauoig5ESx/O3JAu9dzp6BjXwcqB1NXPWegWs1iWynq2IcjjAM3h/EBvf5
H2MGkXf7uh8r109gIjqMfv9Fg4jwHwU7TBu4uEx6/uLEFCZOLT3Y2fadDL62
n55zNRe6qpMu2pnQsMPuZfm36aqIa/32/sAMQlf3xp0o/Evk875pJqxgGtZS
TyXukBUhc3edysPpNEzftGy7hYoYRhGTpXaoU6EyV//xmh4ibx/4MfhopRJM
f310e65G1FfqxaywcDHMb9Rs0nVh4Kpu9lGJeGXUBN5dIrFODZplzMs2V6nY
ODPaeuoKLuRc1q2q/8xA1IH9YZNrNJDskvi7x4bwjZ3vBrXe0lD29pyGZQMZ
2R/2Cx51iXFp9Yl7Ka1UeEjurRGqC2HQEBYQ4ciC5vLqBLvffJg/dmFtVWJh
gsfRJ91nVDFN/2Ony1cm/Oyl/YSGfFx5T023fE9Fa0ZQ8pYNPKQyXXOTGyhQ
PX3WS9OHj5Sm6NVus2XRtKij4zFHjNwRpp+LogoWPzNT8DHiw9oy5uzNVBZ0
k7LjJZYKMMfb0Fa4hI5L9XLrYrRF+Hxvxr9/W+lYqKIuW/Oaje5VwU6GdVT8
uxkvpQA+6qduaZySqwAjxeyEP0SdMaUyap92KUPRLbpeRp8FyjQH9+zLJLz3
oERei5cFY8voSTWiP9RqXum7BDARt6dkRHYTD9uODmzoqeNB64pbfPJkMizr
Fi7rmM/Gk7J6nzUUFVwqyesKkCfO8+WNVRlEv9MCO8oUytmQjNcsfjafiSuJ
zfn7blEhSVOOP71YDPe/NO9jA0TdRne0p1szMaU671lpkBqmfPomc+CvApal
qJgl3lIDq36h/FY/efztSqq9YC9ALz1j32o7GgLXn5Vw9mNigLplrtwBZZha
RqqFnqHALj3LeeFKFozvRy++TOTmbMVVa4y/07HLlyXeeU6hYqD1yLa+ehVs
W27luZmuiutka++d64ToN0rO3SjJweQTRg0e2Qw47fm7efQZF5fC1n2P0VDC
lG4nmXfLReiZssXBKYOB28VL+pTXimFbrpWVk6CMRBfS+1u2InR2u9XGRBN8
2ferPoHw/wfj+k8pGpEQp5i8YBeDyC/ZWW/3qTHx9vZjl6BYLj6x32z+mc3B
42fPbm4IFaP8deiWr85U0H8bpLLy+HA8aXvoCZsJKVKbLDeFqJeYmHR6oDyS
lmBaxWQR0qyvOEip0P8vXLPXc92k2ep4J9W5bVESFxL7U7z9MvhY12a+6COH
DTu97f7OGiIED6isa4pWwsAv1ulHG4WwnJf9JTGIAfdJ0rT62WK0KzjnKPRz
YKPJWbPEUIRzmRvFSQSPG6iv+3/3Jz4NPJzbcIKDCIdXF00CVOGUbXswhHh/
kcvac1JZfEzrqX7Nnk2FxMOfZi+JHOBDGly5NoOGiD16DxUd+Xi/2HyF2zMa
XCQ8vlytFeAv512qm5MiMr9kOmg0CrAzd2bWnVQGKI1zxXlhXIS+ymM5WSvD
IrEweIs0F8ntFROOttHwsd/H3fOzCH/67N/Y+7IRXfHN6zSRf4/e4Mylr2Eg
/s9gh1oyHQUVV1smtDJgwfNI5R3k4KHp3M7f5lzMTTrltYDQxx2DJ5pvudFx
N6/3iY+fGCr3IvQWkfhYLzXJoofFxrlbE2qPbWDi17ylnLp3QnQcW758/wAL
Id9tVhf/EiJlnu1hr29cPLkzYbXqERE8p/1R12ygo+c+SbCRqNf0COeauxWK
eFw97X5CDx/H9sUXZB8jQ/HsC6GWKRNKOe+tRLpK8DQIiPmXoA5ezJVlzz4w
Yb9g/cwFfiwclos0rgoj/Ge1IMjNmYXZjPU7nhYw4ZZSvsFqIR2tB6K3it6R
4WLqv5aTy8fo3fvvbx8mYcLFAafLRJ460ffG8mOuMkTyS6dcXyzCArUJX1/H
C3Bvns9mrwY28DO4beEPMh60XLrwXU8Vjz1aYpNd5dG6VdL0bZEqfuv1b3us
QvBM5FNtZ2k2RnVCrsUS47kc2L2whcjhXf8m3rv8l4yW/rW35Y/w0Og+AX/k
WHBeXy6lGEga0+uVlVeGDyzlj+n9qlpG1PlGLtYuH/RUbqei+kxC7hclEVKu
NTc8lZdH125H/1CBEItTX6ytvk2F2wrtPW6DHMyvhdWC/WyESJySU/dSR9wt
7ymZvxlI092dGO8jwHBi6CXXEwpI5vlbjaax8bDe0K1Jk4Of7e9XxgwQ+nvv
YNC0n8rQ35dj/TqABa3MCyOXU+RQ+YZ2h/dGBPntW+mhv3iYVhZL3T5HBJq5
5NyjRQwMHfgsbzOb0JP4x48pSxj4B4rRRz0OzitESVi2cPHD0aq3J4IDkwnL
1Zzi+bj44aeMmNB9UuNdh617GZDU+11vSjxmLvjycxaRe3cP8/r1lcQ47pC+
OHgqH3PKLlXHm/GgtJEX4lzLwHCh5JPKfMLXbvsUYPmS8Jua895JL+LDjiIq
H4il42b18X0rEpi45hIaoEX4ew/StFT7GBFuThx68jOXBe1L1uvXs4UI6jx0
kLRWDhc64ix7CT2fUms5s47oa+NluyujFopx6MICmdM2xPs8P5OmnSYg6mZm
Tb0EDQtXM5Y1dBLrdfyqzPX7HBy9Pcfg8gkRVEp7H1sYE/3T9Gb5xanE+/VJ
/9TLVgRv9HFArK4qsm2Wb1mtR0VhX8032iSFijNastifQUF08ZcObu2I5dIN
Pq6PuxTR37XlVKSuAmYorN55/YgcFM2+h9/K52FSjdGF5lg5GG5+IW2RJ0L6
PrucDXQeTK11dTYR9bXtkGyvhr88ZK8qBdj5UMbGMzrf5771EdKY3+t6Pa/i
QjqhA0qpphbnqDBsoeXcvsmF160H7iXNJOi2/nV0q6KMzY/eg6VpClNIWH6k
fKBchThetUrpnwIff9tuxPZUEbp1dl8eLYAzdrzT1T5Ht1lUWDAn/7Ilcsu6
aTGVVkR9S80ZPLuY8BOl9yp+p85hYSf1zTvj30qwfVo16ekbIm9evNmSsEAe
0hF3xZVEbnD02O9GLhbDl+f3+0eWAPaJZcuFoyS0cXXCTxSwId8S/tXKmo8y
cuiyBMKfFvLCY4+lUaBRqFfbyODA5dTsc0sChGBRKl2/EuP5X55THr7Yr3yC
yMvt9yg61fJ46yH4QVYWIIfnktT1WQ6sta67s2+yYfCGr+b0hoF7Iv3JDMZ/
/vyikenl5h8MVNpt3t9mSdTjDKeH2f5sVN6NoPx7RMXOpes7NkoSff79aNZo
JhuyiwYNJzFYY/O/Y224pcwAZ2w+nd5u+rXwGR2PrMu2k5vFOJbZ+us3kzGG
jV30LmwvVgRpiWrEtcsUdHwJ9vY4wIdOvNpev+skNAtLxV/lmZA7o9vz6C4H
A+au8ytSKbhaIWPeOlUeL85nefrNZ0HhoplVvwwFD3aV/xggsTCkUHi0x0AR
5nPe/qn8LsR7yTsFMV9o2KuNyFVEHrqgyD50h8vDFMvd+i0n2Zj4XNKymSeP
8g6r1dFLmLg7sCLYpJWG2Bsdc09f4uPzseuNDjFcCPXuXvqcR0NDZaRk4HMq
Jr04WhJmzoN1qfzMQ8VsFDSsjPHg8tGxYEFC6Ac69sX5Kj0+yINsnKXJdTUG
rqv5dD+4qgTHU1nOHoU0uP6N3Jg3REOH3Cn6y+ccfCpSi7oTSUVzk8qM3Qo8
HF8zX34Z/ZflGUvpl2n3+JD+O5G5O5OC/gdSec83M5DffdKm3Y3Q27oJPIso
OqaZh1lQnvOxMOmBeI81A0kef6/snclCz9kTpL83WZiXV40YuhpGuXveztZk
Y7fqypFKM4InpfUMEqvo2BB+w/6cARl7z7vOLWWR8C6CJJv3hIrvCwJMudGE
00xxaZRdykWX4t/JIQFc5L8KE9x/zEJd2G0ZfcKPfNR06GZe5aJFN5Wmm6xI
5BbjlxHLBOhfmnPFrISG/Lw3kuY6LCwNCZ+ndYMEz6gr4aaE/rt7TfyUK6LC
K1WhuEyH8LOLyne0JzBQeNaBpHif8H/0V+4+dlSc3Bj5vIbgzYt7dJYmljDg
e3W7vJc0DYJBbGwbJoHpwHje/1OADA3ra7dnMiGqUYp6YCVCYbknw3cWCyK8
nd6swQd7wpNWwr2g8ZHv9UeXhIjwCHIumsDAgmo78VWGAI0xnsGTP7KQtKCE
0nmZ8CWXZn+mLpbH0tdyf+Xv0Mb44PqxXwseKovgTXPJ+iVLgrOhea+JFBcf
W3+bcCg8/G6suPshgfg8g8sTqreyEbrtZjzBSWjXefasj/AvOYd73Pec4OPs
zzfmz6/RoGof9PvABhGYh8tLqR0kFI3InmW8oGFx0cYFfTp0PLy0MEv1gBiq
Zc8PXiPycYXJ9NMf0nlYRJ0mvniChBlz3vu9+cSEolY3X7SVhP1lKevuSDLh
wapl1s0iI5qq35nkwsLtXrULasRxbg5t9V8OCqCXa/G24ioJDh9/bLjZKYsy
JdsRDRod6Y/0QhZKcxAYVvtLZ4gF0+vMktJ4gl/nPQo/dpHIUUkZ6woP9FiG
mL42flRHJnK0rKVyLhUN7dt3K8ynoPNVe2RzlwCWXLVzJVsInlVb4j9/vRoG
Qw9HbVNhwe9U2VbpQipGBGrMDxaEH6LP1D8YykH4y4sB6hsYuFBh2zSHR4bb
JT3JjSMUrHyfru83TQVzdk46NEmNhpDQdKWSOCJHc1QjyXJklEwLybk1jYf8
HWf1iwxJ2DbH/F9uPaFfV22fkkg0rH+1tqY3Q4xNDWVVufZ8aHd4bPpdKsR9
Z8ah6U7ycHr55pHxWSZUF91weKDBxpWa6x9VPVQx8/MuK49+RdAbpx4tI/Su
4bCm/bZIJrrTvh1x28SFw331210xVIgcF7rHigSIFO2Ps5/JBnnCdNKa+UKc
ufevZUctEyoX0Ol5l463HxyvP4kgwW2oKk6OJcTdTTzngUQq5E5fnh0+mY/Z
VdsZ3S/YSHn2dcPT0yLCD867KvNdAeVht17cJfJ4TFP+pJEnHKydc79ZU0xD
2GjRrhW/uCAb3VfwKSGP8fHwlj2cvkEevtRNcN21m4TLC44nkbOIfM8pezhl
iI6A/hubzWuoqJwcp5odzUTIm7kWCnM4kJm7W1OVyJ1qvtnfgwXS+LmHvtnw
IxWlnoM56so8jHxOPBrkxoa6X/JQwSRNLH5S18tlyqOmUku+fC/BqxPyRyO2
0aEiI6Vj+IfI03GqspGWdGTWrs2211HAKwZlfmkXC0ddbbg2gQK8Ul+cLPtc
BUX5sT9faVLwet4mpenKysi62X/jvi4XudMUEpTeknDp28y0vhcc9B8IR4qb
GJIjCoFJEiLIZmW91jpGgb7K83TaOyVi3peU7GxXQrDc7oRWfVVwF1+fd/AF
Dy8dM3iXrIU4sU0yakq+ClTS9zosllLDh6mDq5SVyGB174qW6BKiZkXIvcKd
dEwKfUVbWq4FC/9XrteNGPBbNJQ1RYsL1c5ERzMPRRQaH3wSelaEVekFcqFT
yMBIj7vkqBCuC0so/DAWtt87wf5FrJ/2tK/chEgePD5/TGARPP13Qw/74icG
tq+4fe4sj4b9+cLPl3wYKGmbnbtXkTO2fqIOhf2buQxUuwR6mRWTcZDm6F0d
wUe3BOUUtYwBKZtVB7SI/KGr42yySpkMP9UT00+9YeGVzt8l1jI8UHXXTzdq
5ULjRWCQOVHfDMcdDZR/fDw/orui3JuNgx0LDbxjRVj0cpPGymAavie9XqBj
yEefhw5xIjTMi5F61e6iCgO5tuuPDZhgGzWEZtxXRk3t9BdTCX9VlB2eEVlH
RYri/ECTE2yYd4t1ZydTYflm9E9RgQLY5U4x+kQun+jZ/SRFnQXzN42cd2+Z
aJZdftKW4LOiiXXzN5IpcFC+/siiWBmReotPHGriQKJbwTSX4MXu83Wb3aLU
Mf+akcN1Qt+/7ytqs9rHwsILkrr6BSzci2ja+pfNx7JtAra3iPApTavfvNfm
wqw6daB/KxOp7/KNlE6KwLpQJWw+TMfAm1XcEAciNwTdOGE+QsMUdw2bpfe5
qL7++dMjTy5khUd4dSYiBFz2VdP9wMZ9WhN1aasQ6elV5yf6ELh9woxwngi9
BSNeUrcY6B2qm+FSwUfkftmErU8puLcmZJJ3Awe6Sxm1FwnfWBv/uVe2hTfm
P69MXhyjfVOEuG71NwKuCsxXXmm/rCxGcbzsw/I7dJzZ/rFrShoP7CkzZGrt
uPD9ctXjI4WLo3vqtc+tESCW9CNup4CN9et2qn8zYGHVK1tx4SMBFA9eS6n+
TUL8c79jQwTP+JZP21R5gow1uUk3Js0mY0pCYbE/kctXWYS7bDJmI/K0peT8
9yT4+g+NNCtzYOR6btJBKh9bsmtOt/5gjfnJDD3fPVKruChWeGeb+IkKWmXL
9A+WTMypOGHw3ZvIIymuJTUGXNBv7BMl2ssjs3f0WUQhY2x9TDPaz9zbxYbg
+2zDyG9MaO9duOUSkSeH3sjbpmbx4Op/+YKWLQOIeM+asFMRkZ/IYbY/heDf
NGvaReRI5WkLmswrKaCe4uec+KmICwdZy9emC6ASOjf031lFWJVmsE4MquLT
k0GD1B0UHLy7dXZ1hBBNjaUrPwzQMOuYXSyJx0OfGL8L/hK6HGa5/VZ6j+X/
fl8yyzc7ec1RIWziz3x26eLD4vzsOAHRz+of5FPs1snjrnoC89Xn//aTN+ns
q3aUI/iy7I5umzsdqWtqdR/LkHHT8ZP1totUZIu+n/j87r88cvmY2hELQzpK
HT69idlBwtWLoVvuW5AhVfP+xKFBRTg8Hk7I+86Ag7F4ztpMEqLuXzU9UiUC
+dJbk6XXeChtSz6lu12ED9Gxp7+M0FFry1um7ERD4fe6Z33PGPi9PelTwDwR
Ls7+Yqo7W4To0k0G94M4ePt5pbWKNAspe2YORRD9HCqo+xrGZ6HRbknBUaJ+
ngRPaq0/SIH2jmTqAr4Ij7N3nL8WR+iN29vFX4QSqAsKkjm/iontPVMZ9WoC
3BfsWBZURsXKc0azYh6L4GZ68VD7fCq23ly6026UDXdO7ErXpzToSDaF8n6J
cLfqO0n6syI8w19+re3g4n7G1aXhhL8Lfs9t8bAQw2lXHOtPAwVeit1lCh85
8Nhnl+BH8Pu6w4rHNPOEoLuL4ncvpEE2+GC2lSYVqe7qauYNygisfDRnUxEH
t8MfleYYUlFj9aRFX6gK52kvX28g8krwaquBdhU1RPyVPZl3l4yaKbut9iwT
Y06XvVRqkhy+pbzcNESM9395h+/8+M1VER/0rTtF8dtJOCXXlNiwnIz5cUez
N3uRIVmz5MNhJzHSvK9zGw7REXdD81P+LCGWHUpcPcFKAXMucr8bP2aP9YvN
ijMm3ndF+FvOiJhykOCHa+8gY8kbq4dT4Wpas7aI0N/puj2GQUc7ZWrrvWIu
8vybk2dq0PG0+VSk4QT22PErb25x9w7jjmEDStuoXBMbOyZ7N94lchDJ4lHc
kmw+il1ogl6i/gs75L8+fM3F1Nell7f+oUBiX64JzonwPld0IPgoC6OyFyVe
zPivnmd0qcg7FwnGcGd5juXBWgFuWZFnmIqJvkk417tFzB97vsqdP6CVKIZ0
cd3Qs24e4i8aSDfuoo2Nv/luv9nXDibqeVmeXoYMrJFbYheVpIqmiz66r3cL
MDfR29XsPB/n/Bv7JEKJnLlA+ryuJAnkza5TTmlREWXquS9pBRMbf1Bv0Vey
IG0h3V2br44gQfr8ud8Jv+rl+cu6lge3yiPbvipTwE49vbwuQGFsf2l28M+E
1Cz2GN8a2fc4dsVTsFalzuTifTY29FVKWezhI/a90xtlFhViowVJ8qfJWHkk
wTNtjwJ2ttg/9H/Kg/8639/1n8iokI3aOu0KF6t9JpU0d7Jw/tXerTtNObhx
zWl4TRIT0RtSni605qH98K1uuioD8Qcen7WbxMeAcoU15yofMQX8KyNfVJHX
uWh0BeFHW3S/L4j/JIJVwO8InWEKbIZ1lHXC2KCmK/i21ZLx497OMAkfJpZf
zV7dFSCLww/dFsoVMfGnUfOshRIVjarvthpfogHqvrttrXj4kGT4I5vwYc5n
OXeVY+Qgmm88+50jD/u7OAWSTyiwIPWm6coLsNd89Zqgi3TkrjnrXb6WAdkz
Qc19ukzCt925IQUuVmpW/P5lTOjEau33HckMXFu8ek96NxP7TK+H6hH+oX1K
+bEj+kSO068oOLaOqGfalLe9BWSEKtmVJ7yg4MevQJkaAxqGX17l6z5loUB3
TSHbjQenfLutdcS8/fnb6bbVlIeGWT2+FGMGwkoyHCQWUzF8W3tzPFEH6dd+
uXlkKEJmV6z7lntcuDp2hp6yJ+rB6OzxkVPUsf1NS1Hmg8WETi8uvfVPcRMF
9IKtsssvcpAl9j1CCyX8pNCqzOYrHw9TbUSsTSRoDSQKuDWKY/3r8uaasvJP
EV48XFC4VofwxxdPNAetEmHQwqr7aw0dvKVR0xWJeethh/6YQZz3WW7P3fdl
ZFyiFw99ukHBupUvW566/dc/3e4TNzeXMvAnb5/GoQVUyJsrhG/azsTULK2+
O29ZCDqoE7zhDw+b5xd+VzktRsM8zpyGGNoY/zw78WU/zZyPnUeOLbN4S4fx
C6PiuA1cnFGr0bvfRseJCN+ak4u5uB77kjtIY+Kub8wy/kpV9HeXxK4KJvR7
3Z9JxjECRJ3teP+NooyG/aI7Pw8LcGem5ky/tUwsHTn42/YwD/V1Vp1n/3Gg
KrerbYTwJUM1f2KvmbFx+NPnvlWdFJgZfjRQKKLAh3bk6vo9NCQv2ymlvkGM
UPLbQaqZCk53aEsPfyFhw0Ybv9vbOLiqVx+w7DQDRRlP774k+Gz/hpEXr14z
EH7qe5SNCQ15q6N9sokcqNzIdjEt4+PTq+3+0i+JvCRqv7TgHuE31kzRunOd
g9YF9/a0dLMRGP/2e8lzwu8En6y4Scu3/F8/v5Sc3XV4ORsxtiSZyB4qflwu
kJBZSxlbz/VyvT0TBjm42BQt47iQibAXBXKvjzMQ8iy7cl+1ACtnbdNv+sLB
vOm/gpSInLFA4k7uRSJXcnIm2xTa0hC+5YrJ3NdCOIQdCblRx4Ge2mOuixwT
N7OcKVnrKfhq4RnY1c0aq7/NNLL1j3U0bFyQJ/g+l4oB43NGtJD/+G9fzoRT
N6PZcDhp/rdsuhDqhjlzXvhy4fVMM7tFh4pNT/u2Nw5Roa581LpMWROVvv5G
5f/ouP5zqvG+KhIeNRlN9Ofz8KOH7uLsysSPm6/vhhP9weV45PKecjAr8HLD
JSUOSKcdWr1a+Tji+SFJjkv4XXrJNjxj4e+8SAwdp+Lw4anRn3x5mH/F4E3o
QqLfHd9Lvb/EwXOz5CNHermEPg/Ln3rHRdMuz8+GUUKs5I8Yu7TyMNQ729px
dNDym5+IVRuvDF1Wd3xMtRr2Xo46uKWXyC3feuYt/sjFPHNVyS4DEbb6HWvu
yKVA+rtHgKUBh/AZR16YSqtifeBq9u4pQmxgKPX9KRVAz8vX1T6ImA+qT4qn
KxVHD733NiATuUbvfJnzQxounbpts3iTGIEKtzJGP4nxtGnRj9k/uAg70F/X
F8GAG4nVPNeRD9rJN1lfzNlYqrOWnG/Cw80H9F//tjJAc85zuv6Qh785zbSv
HizcPuyUWajHgu3OdUOVeVz0yeffChVywbn++M7ZXRxkdhQknJ3Fw+wAI53f
ZhysNDooHCIxoa76o2uI6Md2Gc25XYS/bxMfP7wojAfmTPdi5yM8uH/SuXL/
Og0DW2aYGCnzoWhN3r0xRR4RMg781GA22lMa1795RUX/LF2f83e4yEp6OOQ6
gw4xN6Z2w2waBvNWrJYhcujcwPVzKzcIkP57hg2d8PGJJdERR8oZ0Jjbt7h2
Pg231PO+PSB8NGOiuazqUxFOh7pztU6RkVEb0DN3MwM9gX/U861pcF5zWHw+
kIUkdbmZ+V007Nm2x3ZDORcWi/YZ/GSQ4Z/TRUsmdGn+qrRDD4n8dH1J2MiE
v8S8nCUpG/lRkT9905szQUwcYc2YJqlPzFvKdL7ZqBhve7MMX7BZiFWrOpZ0
hwXH+EsFl64QudSMMu17igipKgmpOTeYWPgyRKPSj6gjK90jeMzA3XXZBws6
ePhdMqvTMo+BwieyvHxPPn6W9n0lX6ZB2VRT+lIaAwbOy5z2E3qXyfAq25Ap
xrTYBz51S0j4HDDUdseUDa2cRex3ZcqYN3p8vv1RKvw+m9Q5+XARvCnM+eVS
0Vi/We63K0+f/19eaToUFXLGiIYtMzOCN2TSQe9c89Y2VogZJ9TOzX3AgtEv
Jz21DOHYfk2A6MPtladEsEmd2O1Zy8Zg8Y5hq0QRTm1uTNyuTgNxUg+8/5CR
Z7Bsoa8e4Qs3qLeTSFzovDx3of6wHNp3S7/6KMlD3VupuFpvFvZYWgy3R7AQ
03dng3UlCU79ozNqPylifSbH4vhcJSy+xy0OJKmO8Zd6qN2fRKKfBK8WFdUE
MODrZGEW4MUDI7yTfledC65d2tuC2RyEPUwxlQpjwW26nBv1IQeb/pTIrxAQ
vME+XvTXiIlpnwdTBmOUoKT3QWzeLRrbn3wUP90hdkiAxADbqW0VSvDkmly0
n8JA3Okd/spkOnbaPaz8qcIZ25/WSc6d+aeZC+Pko375bUxQZBlXJVWZmLvj
qWfEFA4EpwuX7+vnjf1+crUzrzfuBwcf1+17tM2Giolmpybca+PAgEP/UlPG
wraJzvxzhD881xelmCrDhbKobPqXKiYypr1+6dTDRFJ2yLcX5zl4U6wv/b2L
6LevEgPhXiLkrSla+/0HE2beZxyOfyaOP3jOp3MCCcMrBp0v6/Ph61oiyyPG
bWCrdPpELBOCuN6qvaNUnB/NfPFRmgHPLN/bsdNIULz4cCptKh2S19femu7P
woxn2Vc0ZtIx5cCkys0TqNiYNqOm0U0VObpbsoMJPz4lZKqXex1jLG9aFrSX
CQqJPOJ1+ajtd8KPqxSnKJEnQNN14eQ4PQXcnEaTzpnIh1ZfcdEBwj9A9RnL
kfB3crcd82elMNHhfVfYcVsIw8iW43byFLT13akTKwoxzbrk5nui/qSH23f4
UIQ4V+nbsUqRii3n5t77QuS9HbOy7v25TodMQ/jnnUoE3xZ+o2wdomD6s7Xb
ecR6yRUmzqB+JnRhvvsUahkdyqdctXqJXJ7fkGPrs5YNu7/Vn72iGVj/53rk
5YD/vt9hWsT9u0Xk///Vh6NinUVkBQdF3JGKT4S/FFUZKk/9x0ccbbRTUsTC
0/nyl1qOMnChIUyoV0jHii/qH6YRvmGFvkkn/lHx6ZDTiZhGDsL1U3J37GLC
xc54d4ohkcf3P+zh9DKR18U5nFnHRO+mSWI3GSb0Le4Zr9otRgUtJOY1kU+3
i1KXevzkYlROUaLmEwOz9hSfjFnGwIemRN49KzoUNjqucCY+z/hAb0ZqqhL+
7fMoqWIJsU79isazEQYi9vx5aytgoTsovyzHmIlBRo38cAMXf0L/1WslsZE6
bGbqU8kEufCM9eAmBvYyV3yyyWEgaKX01IZfNNSyLi+6pSUYG0/FR5cwvfvE
+1JIzTuIvF23qtP/LJFb/+f3rnub5mv/Jfp/ymP5+SNM6MlGzmeGsDAU9E3k
o8KAfYR7mdCBh7aBLsaTRUyMvOFxHu8l/t6n6v/uIQNLtWsqzoYQfj9x2QuJ
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
91c52Pu3mf0jz4X2kfD8w/8AE275Sg==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQbVSq9/VnkLKDYli8nXqPiINwFb+FcZ6Sw/3ze02q
lwk4iC+IsmsrlHHwKE66n/1P1CEz7Ns6aV9eB9/MbQ2lLqIOf2+e/Riz9f7+
YhZP2Ylpkg6SOw961LlJO/z5maPhLCfpcEnDvuNOv4RDOwvPS6lsPgeH5bFm
3BHiDhmSVwwcmyUcklidouPyJBwKvgefOnWT38F/H9OJhw8kHNSYTp7RWMZF
Mr+RV2mZU5mMg+iTm/0mzyQcwn5PXrtmg5TD+f0LnnQ4ijpckDLi5L4g6dCy
p5pl3W4Zh968m+e6N4k7CC+VXTDvJ4+De8c/RUt7CYfT2dJXph4VdeCfcz5j
gq6kQ5Dj8uerdYQcrGdXeBc5ijjYanCW6n8SdVh9pUbSY6ekQ838hM2Fu0Qd
tqssm74zXd5h46zgXXu9uRxsE2WuaxpzO6jce3MgexWPg5fQAb4FT3gdODUs
ta4u43FoMWJbovJb2mG5ygzz44YKDi9MUzxfqUg55Lcsc1LrFHf4d+cz6+0q
TgdY+LY+3Xmde6OYg9A0z0tTF4k5HMpy5maNEnHYzt+2Vy5bzGG5jrgai4+Q
g/nsVfx75oo4POMMCFxRLeAwteSPQugeUQc5bm3ljlAxB9Gfx1lsjgs7pIv6
vNoVKeNwa75xqcl/AQc7FmEDLTFRB9lOm90XGHkdWpiXXl6vL+yQPGP35938
wg5CEufuS2lIOGgdtTcDubf5JPPUyQ1yDvlNnD7F9aIO2UlN4pXuIg4LedwP
nFst4AAAr2DugQ==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{7.849479812113103, 5.356807948213825}, {6.421459652959424, 
         6.664180677955737}, {7.570072925763097, 6.665369018588282}, {
         6.763422908092217, 7.410592681697922}, {6.219611287276691, 
         3.3311325072138684`}, {7.9633104381870154`, 6.112449119040186}, {
         7.789015132075569, 6.469324732631497}}]}}}, {{}, {{{{{
           Opacity[0], {
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]]}, 
           Directive[
            PointSize[0.003666666666666667], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           TagBox[
            TooltipBox[
             PointBox[{8.850437314318158, 3.5501632148007025`}], 
             StyleBox[
              PaneBox[
               FrameBox[
               "\"Log of Carbon Intensity Total (tonnes CO2e/USD mn)\"", 
                LabelStyle -> {}, Background -> None, ContentPadding -> False,
                 LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                FrameMargins -> 2, BaselinePosition -> Automatic, 
                LabelingSize -> DirectedInfinity[1], StripOnInput -> False], 
               FrameMargins -> 0], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Pane[
               Framed[
               "Log of Carbon Intensity Total (tonnes CO2e/USD mn)", 
                LabelStyle -> {}, Background -> None, ContentPadding -> 
                False, {
                LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                 Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                 FrameMargins -> 2, BaselinePosition -> Automatic, 
                 LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
               0], {}], "Tooltip"]& ]}, {
           Opacity[0], {
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]]}, 
           Directive[
            PointSize[0.003666666666666667], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           TagBox[
            TooltipBox[
             PointBox[{9.312116646810683, 7.141664670115825}], 
             StyleBox[
              PaneBox[
               FrameBox[
               "\"Log of Revenues (USD mn)\"", LabelStyle -> {}, Background -> 
                None, ContentPadding -> False, LabelStyle -> {}, Frame -> 
                True, RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
                FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
                Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
                False], FrameMargins -> 0], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Pane[
               Framed[
               "Log of Revenues (USD mn)", LabelStyle -> {}, Background -> 
                None, ContentPadding -> False, {
                LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                 Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                 FrameMargins -> 2, BaselinePosition -> Automatic, 
                 LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
               0], {}], "Tooltip"]& ]}}}}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"Revenues(log)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
        "\"Log of Carbon Intensity Total (tonnes CO2e/USD mn)\"", HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 12.103724255530306`}, {0, 11.906159807943697`}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.08]}, {
        Scaled[0.02], 
        Scaled[0.12944271909999158`]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"D\"", "\"E\"", "\"C\"", "\"B\"", "\"A\""}, "PointLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.879156183332527*^9, 3.879325353198717*^9, 
  3.8793254366921997`*^9, 3.879354626723333*^9, 3.879419498053467*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"2855c943-879f-4944-9749-f37dfae0ac29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"finalds5", "[", 
    RowBox[{
     RowBox[{"GroupBy", "[", 
      RowBox[{"Key", "[", "\"\<Ratings\>\"", "]"}], "]"}], ",", "All", ",", 
     RowBox[{"{", " ", 
      RowBox[{
      "\"\<integralScore\>\"", ",", " ", 
       "\"\<Carbon-Scope 3 (tonnes CO2e)\>\""}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<integral score\>\"", ",", "\"\<Scope 3 Emissions(log)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879087986658277*^9, 3.879088006396925*^9}, {
  3.8790880395208807`*^9, 3.879088129596187*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"1d49fc1e-14cb-400d-a30b-da2a8c02da52"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
k53UHpe+1qMHxg7ZO3axmtT13RYxS8D7w/cK/5GgAXz5ul1CZVpcfPtb8Sfk
X5voH6Qy8Is707c9f27OJZ3rvNo9Qdg/Ad5lGAe0pqE2PwdtGcbaY+5sKCH7
of9KaoY3Z6c/JRK9Cey0ZdDiKDLBInPyU0Mt4AW9P08M6I7kt0Mde2iBP/ok
HKlKHeuX/KzWmunv3LQ3n0jZ1asdylxkeGFEHVMjWhPw4BamL6LyW6WS0znj
I44tZPLodkBXEZ+Zatn4w8LfkRVjnpD+FbVEUN9BR/R/kTig39FsvbQnjZfS
NKC32kjfVaq7UjNYzz5aJo+D6uRy/A/iprB8HtkH9B7A9GeXEFKG/ln6tnCp
QJ+CPPJd5u9BmXxuhPbGvczfZB7Qt0B/CwWA7NfiDSkLE3+O+v7RwPmkFYw3
Ede/63BLyvD1ddRf+oNN6A2g131qoJ86dR1cqMtyAWAJ9pjJyj0ddo37Qy5t
vNxn4lwV688zJYesEb6v/4bJr+kXlregATBewZ4R9qd28mFnennAyqIaI1Vs
PPN2/yaADzb7svVwfPm2PPWdGNlknyC/Bfl253RSF/oV+Cc5mOn/j356qL86
aoEf9ui3MEb5LehXYf/iYs4kkyXAT264fr4zf5FZMH8TFRGW653Fq3SS5zyi
d4yw3gLcnBF+3pruEcyddCPE1z/mphHGjzfVsF8Nfi9rTC+J+hb4f9mnSKKC
9bgYDPyQN3+VE11j1nSZWU+GR+w27qtD798IfZLnoyGHoxxmhG5wpI9FPAD6
LNjyFTmbmmkVOkFNXhctq9frrzNtI+J90DeNjjjSJTC/40x/vFi8tDWtIbCf
iZ0W1uOlz2Efutdt8+f7+xh+jJ3g0J7ecGn88etUFeDTjTVjrWln4LcoNUmp
bUIvW7vTEQI7DFmhJke/nb1n9taRpv7p/PKPgK/A/tv37SdZ1Klm8w0dmDzS
Lk2uQHtpd3XXPmD43Sb8WDXqINpzAp5o+rCuFWXy4hWzLzJ90k0po8fPaibP
Bh51of4gL5apwf607rG+A3WG379i9p3f3XWt6V9nu4/XWzD7dVVUzDB6SzB3
3YcgPm6yWZ9OF+0lUA/Bm34TDTz/T00ezLtdM+CAPa2QcSaXhASThsIEAy9m
ko/C9rXoxfDJt7mbu9ConUcKHPYw+tlx4JIDXSLKV9CnS/1t6fPiAUUNPmrY
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
xpOWOz0nzL8Qiv73J4v+oD2XjvQTsSCEMPlvwOL5K8xXD0P82FnF+PlO1H1i
DePRR/qOoC4cP4L+yNQ8Qv1pqWbzO3iuHMePgH+G9bhNnIC/SjAevFsdwekJ
4kW+fnfJJaDXGmrQL5GrzzjRkSCvvzF+94/1bUuZfdYX8e/x/lksX2VUMNp/
x5rN4PnrYD9ZxoaR49BfJQ3g8WOrsl4jfezH+NTR1mW4fxD0w3jT++QR8G89
ph/th7fzogwP/2D5C8faBX3i/l6gh2V5t5BfE9l4DTu4WtD0y+UbeIxh+GrW
lKk5xB7G+5XJo3Hj3on5QJ3UTN7t3RpJTkP7nYrtV+HNy9yegfU2HyTqvwUq
Zj/VcE8n0n6A/fhyvj7iSy3yd/yWWObOql0J/X/t7uURNtzqanh/w/tDNjzf
Aehr2vgSEv3w1dYKGhX7fUR4GFlx882WJa8wHlTcL4TLD+CvZ9Fm1OeZoAA3
If5yf2JDq0ICc3v0f937rof6bxnu99ClVTj9w3rnNdPH/PtXTF8a6s8bRlcy
eYX2+YTP78gUrx+jvTahvm/U4RT/PsRTrx+9ifutxXyqwVf1KaOfLOYf93y9
zgPj9R4qsJ8qDK9mSWPE8wsw/l1Dy1Bv4OcUNbO39IbmEZa/NRfxcuQtYyrh
QZCv3/fkob3jz/LL4vaf+8HtZcBzByuHkmtA72L+beXiEsLybRKDmT5NLqpA
mT9oj5rJn9nm+tQV6GGiGK+f8JrMyXSJGpLCzjOM3+7VDeMXW4OZ//5r9doc
T8L62eUcx/ztu5i/crnqHyLZw7DfQcHPCDuP0UrNxrfI248shf5GoH2w086Q
rjiQMnael5gPXPM52QnzraNl+7Vr/VOubwGfvFkWh/mHXfA8Sd+f5akkX8Bf
mNmnO1n6bX+1pGFiPGfjMbJsv/vXnuaof+ovukXmwPdDML9mhuYrz6+R2iV/
hb8natLtoElUbHYBOSfiB1jvkrwv5KeYH8zOh8wr4PJXYH+rpzPrcfkC7iBL
j5Y8vwnsnXUuLfB5P+Rvm0dRHO8Bvad930X2i/mFIF8NA2V6h/iWwe44slmc
LzsvEnKb63NY7yQrG04vgL8SDiK/m/TG+IlHmAOnN9CPTt1S0L7JwecNbhtz
fyPsR5OCKDJF1FeAV1YV5aB/KEfF4q+D3t5C+dQR4+29237n44X1cn9dlb6G
eNNwLfLP4SCWn1fxPzZe65MVGqI/YTTOt8PqCALinM5Qsf1scbcMjqc7i18M
iOtSl0rrBfToEz0K41vJLD+9aZvOv8hqOK8xGOk50Lss/Srmc4H9NsbanftX
Yf6rXa+RV9DOxPhmu4NPSQLIY1+UJ/91ziDL+u/br2rD8lUCrJ6kY76IFuV9
r0cFuD6xatifdgn2dWgB2As+aP+Vv1PA/QvgT0pu706ZPnqL/rAfFd7y54A/
am9/x/EU4Bsj2zRyV1xvYJ/fi7+RjU1mBi52Q//MmvhQAj9fV1fD5NVZuypU
ip+weOGOs6Qb2IuCfhX6PxkV34CuhXwB0X+4p+1T0lHcf9DXO4Zno31NxfwB
/1Ocn1n+xrkkIp2/AvzU6PED1NfFmN/01sWEWoj4k+XfFKlJEqxnqorR1+Kt
sr8K1q+/9z5u34J4P768Os/nBjx33Wgn0tss/P7r6LKU6aNZbL2XlVTKZP79
YZ7oH/Vzm4X5cadUjP/L/b6OeNAP/alfXsaT/kD/gWjPn7D5xPkX6NX1wy9y
F/ylptiOOvWdy1ewn1te3Ivxy/eo398+jCQSP8H8evt9JtL5QFj+Rj8c+X6D
/Jn7KZ2cDmgQ8mFvMMz39fJTHRA/EWZvb2/i7Ij2g78K7Ot++XH2XF+BfzDk
3QASFxeWkVxfxeSnRtinDsPPtBgeg/zu5BLF8Su0ext/IlGw/hW0GN9teogA
3G/RjMXfDDpXc6SMfzPQX3pAU8jjb5A/Vs7qMN8vkAenLQsx3+c/NeRrG1nb
akjvW+bb4zeiv2mS8X0yG/Itf4j+apv75FBll7x5dbW8PWmqVRPXJnK7RfuS
gzVc5XabPo9J0yz59/C93uby824tnaqXCVbx9qkh/vpHFsvtR3mxj25UkN/f
3qHFmg4d5f4yNy/wSFOMZ+rPV7O395fbm3K/LqljI7eXRdo+fWwu/56t7041
bzP6ri4/r6E17ucxUv79xrqd/K99lp8f6Ft1T9+l8niHD/paOb+D/P5/O8d0
2rlPfn+T3rz+T7rI7cnWZU4s+Cp/f5Ior6X2GKce8Ues5Papio6mvhXk9q3V
U5OvWcvtBL8l5HV1+fsrAu7UNxkvP9ev6DxqVyv5eZWCPqYFv+Xv93Nd28/V
T35/xu3qy/rPlttJJROWBw+Sf38b7O2a8vOiT/ljQ2PkNsv/bS23VwdlrjxS
LLcr/To/Vq2Yz0XIx2kit43LnrCurPieQa1Jvx0Oys//K68/TvVNbjcD/N9Y
fn+xT/O5PoPl9omIHosPtZHfd4N89Q1ym/m7/5PbFVsvq/FfiNzOnfC93d27
8n6/PzKjQaNo+Xng8k3D/LrJ6/l+LmmeNUp+vr1414/EVLm9pHhHz4Tlcltj
2fqaZSd5vLfUCads68ltlzq9By2rL7/ft53dOMdMeTy9ghzzW/aVvz9v9eBd
W8fLv78m4hWpPbCH9bep5vL76wa/Doyzlfv/VaItTidy+294H7sHUfL7Ydcy
7+3dJT9/m2kVeviJ3K7pGVLd00huL0862t1+lPz9BvU7jrz1VX6+t21JlakK
/u4E+dAX5baX0dr08U3l+Rr0z9/bK1BuZ602bffzlzy+Hqp6HkVV5O81vDdi
3UDFePo5+E0aN0R+DvFm01/BvD3FbGFqPQW/mL+4Nv3eFfn3cF7na3m5fSU1
06qNgl5cNqfQhlUV9PosSS/5jjzeGTr8rr3bckeIg0KeCuL8Uaz8/jh4f688
PybP38ttD7uUJu/ryf2x/IVl8nPIh5y6WH4u6TupbQnx1uvy8z6i/0Jqg3rT
c5DbaSL+4vIJ9L1i/0dN+e/UIMX8WD6asTwfD69asTE35Of3QZ48k9uLAQ8r
+FsdqJ++b668P8we0Ze/D/DgqoJ/ysJ5V4U+SNrct2S1Ql+x8yzz5P7b9BQM
UMX3JPzL5f/Hfcs+7pDXqxJ8sIX8nOUrBsvt76Cf7eX3V6i3Xz2yRSFfAe/G
ys/b6rv79rOUxwfTf+8mv28JeM5Afr+nGM/g9BET6BujkLc7vbXtnRTru3O/
xqP2QLk95ZLplgIvue0B+QJ5Cv4feqVg6Cm5XXwtucHgXLm94XGdXRUU9F5h
RK87D/vK7UmOzv6O1eT5ALl+vyQ/jzvhT2cr5C/gUwsFfXqBe7u5/PuEU53q
7DSUn/cX4HD/m3I7aIvpLSeF/p7W4U/sCgUeabRnhsueKQr9G6+52nyQ3J7q
X6Xak6Zyu3zR5HnP1XJ7/mzhz1Dur7P1g4O2ivnQzSFtcsMU+tD0b46pRm7P
sZk/00bBH02BP8fK/e2GeNZYeX9vGiSWH7xNbp+PcQkYNlR+//Jiw5ioy3J/
ztU+dxit2J9EOD+fKf8+a0WTmXU6y897dJjqX360/LxBtfufLd/Jz7vMeXzt
+niZX03WbOny/Zj8nMVHGijwnogv+fsbg3dc/qgjTxYo5D3ggyvqUvuvlDcM
D1RW4MUKwaTCbsV+gX9gtDy+P01bTzI/Kvc3asndQUsC5ffPw3rVkfsbX2v/
Wr9l8vOPoM9z5f66w3gU/CzZS1Kb5UP1Uex3xaXr2l2Rf19vfRWbOgr8wuSl
As+2VScnzeoht52g/keRQh6DfFHIi9cCewfqye9vya7kallB/t6tJQ81S3wU
8/PdPpPmy78Hf3zvTXJ7+tIJl0wV+i8U5KHieb3QFBfTXvJzFt81kJ+zeHGU
Ah8ErHsVNUFug/9xvJncfnS5Y9xTxX5OA/mTLM83dHePm7stFfghNqb3BoX+
PF3zeIz5Gfl96TwRX8/E9fd+5cjvP3vgkBeuWD9dec7yz/vK42HnQ67L6ynZ
81z/gz9yv/w9FegrG/l95k9T4M0xor9Dascn+D5OUMijYvBPVVSX/r2CvnLF
eBzXXyA/Byr2V8yXldpVQg+v2qewN1j+wB657QPx3/Hy9yA/2aSW3F+m/Z4S
CxuFfH21ZcVua/k5q3dyT35ucGbkr8Ay8nOwzztEKPCbwfARD0Yo9APgCwX/
Vti8Y4RegdzO7n3eKzBG1u+Xdm3r1c5Cfq4SyOVES4U+h3jpCfn5ejheHC7P
ryXYoz3l9hZYjwdy/8zfqJL374vb7TS3forx1NzR7LoCb9+EeiAK/mDxkUCd
/VPg+zgx/0BqS+cRpHaq6G+V2lJ+j9ReK+a3cn0M9KCQH+z8u5Pclux9qc3s
2x1y/xfAX6GQ10y+HJbfT4fxKPCjoE2WTgiV289F/xWXd/A9Bf5i9X7c5feh
PMZ9hfxYl3OnTM14+Xt9BLhlqVjf2ZBPEyb3Xzyk0rXoMarS81XYA58NvN8Y
xCvwy6ewc4UKepH8tZz/oa3Q/yweppjvDONLVa4q8K2DGF/h/Ab55b/k58xf
+14eH+Q/fVXguV2QH6awz9n5nQuaUu+DP0lqs/MmR+R2CuzHNbnN4um+8noy
fTlGB497yM/3iufh+H6I57c5fYvxOj5/kFdEfp/5Kzsr9L94XkBqZ8D3FPpV
4DZV2SHy+zcgP3CkAl/r4APmf1PsP8MHCnk7Uay/UGo+Cv0txY85vUM8r6m6
9POOOvup8D/cON6yv7tCnh7ZK/ydlJ/PhO8PV8hryDdWyHNmTzeT38+C9Wgo
t1n8KEiBN+E8oUKelkmuf7ObSh5vzKlB934o1gfOExwdpsAPYF9v/bc+Y/VP
tvx7vXXlw8zKVSocVMibq6I/nutTsd5Xqf3Ikp9fhfzUBjr0p9CnLL/zlfz+
Kh1+qQ7j1cjtiiz+rtPfR/n37HxdgvycnRdR4F3J3y61EyC/xUoeDzv/pFgf
u8tPq11uKz9n/KfQj1/B/1+iLr1/jeTf+wG/DFDYO9BW4FsmHxV45i7we2uF
PSLmb0nt+qCensrfawILslZen0RYjwc6/KKw/9j547kKe3DKjGt3FPrVDr7X
Tu6fnWfNkdvMvx4qf0+K35Uar8J+fCCe5+L6WIwfSe3HF5/ty/WXn7P47Dq5
/5//l75aKv/+GHx/hQKPwvcV/mg3wMvZcjsn4ePDBQr7caVH2uMNr+X+Z7kf
nOs+TtEW4+9S2wfWc7P8e4bvTeX2ZshPU+BZC8AzivmCfC/6oio93/by/Fk+
Q5z8PUYfXvJzd9jv17I8m6oj/3T5Wbf9HvwNznLbEA4wKfaH4VFv+ftdIJ5k
Jj/3Ore61TmFPmLnhRX0vVIwF7Y0VuB5MR9JameyeLfc/xtoF8nrIdUTLPU8
S57vC/E8n9Ru1XW1Z1eFf0IjwFuf03L/LH53Xn6uaw/o4i0pf0hqS/llpfTZ
S/l9qK+xrq2m9P4p9ENPT8HgUOirKoB/h8jPWb0tTx19t1Rduv+Jiv2E/R+k
/ud+tYACIXPk/ln85428fh7we4W9wOKzCvuWxafG6ugDhb6aKtaLkNonwX5L
0sFLqfJ+MvzwW6F/IF+p27/pkwK97Zff3yrm20ltax17ko1X4T/S9bc1gPkp
4gd3dPDU1uU/1y9X+P+6g/1rqLOfCv8N818q4jmMPxTPf5kbPEkO1ZGXU+T3
z4n1J7i8FuPPUpudb1P4k/MzTu3a9lNhT+ngK+huYYiiDfs9Swd/KuIPN6Ae
m8I+l/KlpPZ5MV+J6w/It1HIBxZfrq3AAzr4Qqp3UIp+VsrzZ+kB6fLzOiCv
t8v0mSLWzyrFn1fl369Ykpa78azCfgR+VdjHLH9UEU/5AOvjLz/fAPafwr6u
BfSoWC8pn11qS+eLpbaUL1dqfgr9NB3mlynPRzqPK7Wl/Fep3U6blOqvoH8W
j1b4ZxLFfEL+PftvufaKeKOy3tP/tR/Moarwd28Q6zuVkreJcv/s/KQifsX4
WcGP9wEv2an+Ob+jYn5ZqfE9l9upQAAK/yDLP2upo/8V9hWcnziq8DdI8f1S
66mI5zH5YKIpPZ+JCrwD8ktBz5fBf6iQ98xep/J4Wb21qXKb5Wcq/LXS+Vqp
rRsvkc7PSG2W3+KqI3+HKfACjH+wvL6s/oAiPjJCPO8gtaV6JXy+OvpLV76G
w3o31vFHKPxrn0F+dJe/x87HLpXp+bmY3yG1Wf0gRbyQyS+Ff4Tt/yWFPaCj
31l85p78/JwO/TL7VeF/+J/3QZ4p/BXTxfO3XB/C+irsEybP/eQ2O9+soD/p
fIbUThDzKfj4Yb02yPO/DL8fIr/P8Orkf8uHj4VL3xYq8HZ62a4TmyvGz/L9
9BT+Th38ESueR+D0BPTwR94fdh5RYc9bAv9WlN9n+mGd3JbyXaQ284co8LJ0
fofrC7DXe+j4rxT4dr9Y/0Zqh4jn56S2LdTnVvBTdaCPNvLznQUnrrVTxF9r
jM90iXqs4A84X3hW8XuxnorUlvKZSvFfgvy+VI+Av8/in3L/zjr+Xbaf8+U2
q8czWAdvK+K90vnJUu0CnfVeI+8X4xcLeXysnrJi/ex05qdLH0k6/Mj4LVbH
n6XgTxPx/FUpfkiWxwP54+/Gyr+PgeeP5P5ZPqbS3of80o868lWBd5k9plbw
vw5/O4j1H6Q2q5epyJ9h+eov/m3f6NrzO6B9Up7PHOAHU/k5k18KfNZcPE9W
ar/2KeKxOviJnd9T4Flmf6vk9mgwUN7Lben8ttT+H3wK++sht9fD91rr4Kdb
8vN+Yn2SUvzX7t/y/i/Em5X8qrPf7H1FPJnR31X5ebgiv5jpf/i9wh7I1rEP
hrPzR9rS+1vu3/4IRt8KPKNLH9L5mlL8q5AHarG+ean98pDXm8l/RfyM1S9R
+BOZfH0nv68n1kuT2rp4TXd8um3d9c8QzyNKbZZPl64qvR8KftT9vW586bcO
nmD+Ln0dvHRW3r8FYv1Oqc3OJ2xV4GWo/zBaYd/D9z0U/iz4vsK/oWsPnoT1
V8R3BsD+GuvYZwp+Y/5pax17WmGP6+LJgWJ+o9Rm9UFeyPNj8rBE88/10Z2v
rr7bK55fkdpSPSU+fhivIv9gL/xesZ4sn1zhnwN7+L3CP7AM9kNhv9YF/50i
X+KcTv4Go1+Ff0PXfmH0E6jz/JyOf2ziv+mR1WtVxMN6OwfNmR4qr6cuv9nA
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
FyvQoWEVx4x+iXgvKeA5SYXx/WT16y6HVG4k0+NLiyXpb1ScfwAPzzv6iYxy
PT76ezesFzXO+RXHt6zeYdfxZAbk4/cS67PGGVLJngV+OD/qCervYXh/0xa/
DVjf8TzWM6ttX8DtI+DPy1UjSSTEj1ZjPbv3s/uR76ctsk87iPyaH0MGjVlV
92NDvK+mMCsWx9OO3Xe1Zb42GP1Zq/C+gStuyZw/WT38o6n4vbL4/Z05j3g8
BOSrewM9OkHMtwZ6c0guw+thAX72XJ3N9TXwp+mME+jPXYf1RzWx77k/g93X
HBiM8TU9LatHOTApgiT0ObQ/IhPlXeOeV1E/+mO9ohZmGWTL9I4ru7UW5e2D
s8QMjocksXr2g24sIdRe9FcCvU3xNKIX2HEOVs+qpCjThmaI549gPTsdSOPj
XbQlLq5g4i+sd1Uf+cMx7APq8+FY3+tBl+fEUIzPC8sXXfuQF+I5P7SfDi+N
Rn9Pe6y35SX07wTzX4T18TLfmVGWD6IOBjzdddwmK15f81TEvCl3/e5y/QB4
c5JgfzJ74YNY77u2Hdffgvrt42TfiOMXsC/aJz/m+hbq5800rURnr7SesNIe
6789GHicrAB94Yv3pwTpVaTsPK8/2qunPwXz3wO+anW/GmXyYSDW701MqEJZ
fuyVYCYv9JvEknPX2nkm+iA+V897zvUd3D9hlZHG7W+g18VD3mG+2wjR/q4Z
xukP6CW1cRm8f3hBMMOH4V0M+XwBnyRckvEF0/euY9B/EYH412dNEc+fh+eV
jplSKV+W3d+1+wXpItpDYP8sfP+TnIz9eDjWHO/bWd/zItYP3IH1SWOTMjk+
BvsnJ6YSrwcG+nbSqlBu30O9NUO9e6RBn8+Dyn9h9Yrjx25PQH+vO9bHcrtX
gP6llog/iuvI9ZYB7xccjUd/WnO2nrt/FZnx+ozgXzA+HMj1OcjDatOOk1DR
PmX1mrtcJumAt7dgvcZ6e+9iPsVIJs8q5ey34foI7hsOSa+D+uURq39fbd/s
j3j+pyHW/wyNKs/XH+hpbssPPB4OeOjihLJU+j6r5zj+Cd9PuH/GMt2OSvUB
F350vhZt3o6y+LUz3jd8eWUgpxeob7f5SxTPpwV5nmQZjvbsPrzPblq3q/x9
sDeH3YnD/KpI5v9YtGFGJuKPV3h/hjrwCN4H1Rfrsc6Z8o3/nt33lHKH51M7
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
OvCW3f0y3j9if2fGcz84xDMHmySwvhz2v9r4I8W/nckezzeIJvuZQvodt1m1
7O/U52PhpORe7O/g31eavpL64/cvUX+JwuxGjN9hD4z10tmeIp5Y9z6P60tg
Hyr7VFC/tXvETwxY8Jz788Gf3vHpLot6ZYn0ojFD8rgeGfHmoN7nuH5YrGf0
Tt5PiEc+DQyhfrqa/bY/7CHbG4zfvFsl83eYP2l9FvPR4Ffm1+hxPhzzb9b0
Cfc7dHn6funVXhF8XvA9p6XucijWfx3Fl13/+leHn9gVF8/xE8K9iRNj+T4K
0S9oyCXKJ6+meoubkx4Q3jIh/dqaTQGEX+dQ/eqOX/K4f4rId790Yz4B+/2K
h7Z/DvyZ+4UUnXr0QU/1ZL0txPeq4ZNpoa2jrOxvoT/aXUHndyzxHf9Z6079
p28Sv7rgeRS/H//fduZh0jt9Q3oFw8d1kqKXAJ41L25M+zlZ7Jfaxa+1/DKW
b9y9Cv4+4LMj2//l+0IEfvnXnecT8YH/8EjW94h8rfMUssf9KH/Q9nwdjx/x
9q59Buyv4G8GNyii+MBF+NMOtnX/Yb4X5n1QD639F/1odofR9ywgvXHpkjLK
l/yP4uPmpxtTfcsc0vNbeFsz/4j9//xJMdsz8HO/3Iyj/Wuo0T88K+D7emCP
rz2qlrwntTw0yYnqtxedt+X/J/I37jf5+2AP4qsSuB4I9jZ+8Xu2L0Ku9DyI
+QXRf8z9Huv/ML536n0m/l8gxQ89j9Xy/TLYn9e6plG834fiobOTcvjvYf9a
pyfV95c2bW99L0cEldqPmkB8uElwGp2vmDCB324Oe6aj9w3r+5z81Qc6r1c8
blD/NjfCk32/2OjgmzMfEpmPBn9x4OFlvp8I+2246yGyp9UUXyXFFfD8YP7S
GuZx/xfgiZZdupIeawfVg2QuMuL8vtofN86a3o/wUQmdt1/V/u+1pt+MsO+T
Xem+vXzqJ/G2uYr9Cfx5iqpM2q7B6/gsgzfWzCeCHz4ypzfp+S/Qfqh9X8L+
B+exujaD9KO2ar9XbnW/U+so0mOO0NQnlV9iewj/3cw7iM8P8FZPlS/7V/jr
LbZljEcQT8csNtTJD5SYafN9sD/L4j/pnIcl0SFsz/H+/Uu164/1NnLMqF+f
PWtyqwS6D9ErjPRnjQoYL4h+b1205w3n/9rB8+wPEH9V3tXmQxFPnc4+zesp
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
CQmN
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
iZ+es+WQv7Sneqnp3a8zO/X8wfq/bGcpxg8A/5wc/Y3iN5z2l4zp8ZzVcsie
536M7OPkqgp2+c/Bn8MF/wLic/c31uDesJ7XKT/UzbZcmfqNwU75rBbQ2zFe
P6ZWqCnlL9JpvhIqRGO8ZONlzJ9+ubq4MvJ7YArW/3SJtm1D+68EeyjMZ/Yp
vR7i/MD3VT85luKlGejvr7zdbCjNjw35D46GDUiflFPhfos73b4xV6BPYb5k
pOXDEZQ/XU3xnDadrfmCVmfubv2D76tqI+BR1N8dKT54qkUe22nY9XtKCcaj
fNuPaiv6M1AP6NiO6uFGzkV/9VZMSn2O8r2a8tMuRUYc4xtB5K8kPChhE863
So2rietZ07hyHcrP7id7mZBhx6cIj4v7QPGkVw0qc1u1fQL7GaBrzF1hP0wU
1e9vLPjF0P/PoPjRxzfpbIrDF2eHVKon+FPTj/zjcSqUl4SSD0xTTwb+Xb55
AuVH45HfG+qENuaRMN4qpP/azP9B8+eG9Sd6r6cmsZIab/vP9KT6AudtxqL/
Avb4wpYklgr2eCTJ00lFOqsH+b1VSvx9cs4nivckBlH8asdzpokngb6oNT6H
/QD/9AjOr4fPjL8sFuqpBby+4p5302WRvfhC9XoCHv4xppjwxTAV5Dcikt+2
5pegPsKX+PGjXxWKD02i/TvL/Uz5uyETu69S0vO/51en/XznFFjfP+BhLFsk
DG/cLcL7taebYX0zxHsQP195xUoFfHbTmPyPyiVX2YvMVjujwyk/FJTynWni
UWCvmtpGsqXLBYDmRfPnNugR6Y+f+D1vDX0aE74yDUL7+DGqPO8A9uol7heq
ahXnSPX1gZj/dWiUYsmrQoA+j97XPvcaG++w8NZrjvW+wbszYsgeCPoV9Om0
AlPC2+uC8PvvBj1isNwPaxOeurPqAMUPVSifpUlZ7ag+tgf5f339q3JziHc/
R35ZZPesMcd43Fyqn/JeVYVHu9zwMXtH8bptFr9Z/PqOujM24/68khv6Icyd
OfermYz12Nu8jv9gGH8+o0L9oleQy/YC7U7x0SaX0pgGbwJ/K+59p3q/h5Sf
7fC2Gj914vGxE48JH2/N+0vrP5n8L1vTHBapjsfB+ltPyxfxl7DcRzI/6VD8
cgrG385nHH/IsB5rE9U7X/78i72F7/cj+R0RVIXfg+ddw3qbC549m/HmkK+9
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
2Xg3767y3ynp96sDH4ZWl+nHp4Oywwa5Sr83z/GtkbNbut6u25/jdWX6ad3Z
Wl8TC6XnNap/7l2lcJk+m1jBZ+NfGf8KnzfLX2YvHabt6B0tW7+Pee4RtaTn
uUI+4bl0fWhd69uzlsneFxBlHnBaomNTJm/ZtU1mvxou3jBH9vwV/W42iZbN
B/bXkdlTjAfJ7CXW/5pK65m9Y0/mDpn9yIT1+SbN1xiox5wim/8KB92b3ZLu
rym4j3oNpeue0P/hpjTeN+p6Tw2tqW/T0C6gT2R4wGGcU9zmRtL984OMpgeZ
SvffXzT0zEAZf9SsG21ct69s/gT1PHSKRK9U74/T0IgfZfYd662uSDTy4wzp
fZr9JhraA75vpXS/V041OxPZ/KJ/4CbNL+YfHynK0DPayuY34uyYCJn8YX7y
nKLs+GOk540C+Wsrvd8W6sEfS/djPNpTum4B/CTTzwtLLKeVeEh0V+F7m2/T
0kfNpN/3mpz8Ym+IdL1086rQ4I8SPXfnq2k7UyXaCya4oQx/DvjT92tNiU4H
vCnTP85v99/2leGdOcAfMvzXYU1Itq7MXltD/6IYia4J+qeSNJ95sB9JZp+x
HmKkRGN8ba2M/0Aeb0nX40/ofezWRKIDAL/J8FF9dT5YQ6O/uEp6HsY7P0nX
MR8SKtGDAE/Kvncj1Et8kugg+P0uLX+hvxY/T5do7F+0Wnr/bnV/D1F/QH3L
FZk+heu3ZfYe6uGzFGXn855s/l9vD/+ZItGYj5sl/R7jVTJ5vQb1D+8lGvXr
XS156yfRzxfViVgk08eVYX36SN+D+ecG0v3o742W6G4H7B0PXJLoFvD8g9Lv
b6rjXxr6LzyPy/AMxpel649g/mX+04ATh7yNTKTnYT3OB4lGf2K5dP+FLR39
t5yWrjsuDZnvKZP/2etmBhjK9L9Ol7L2u7G6/lO0v6CPZPoM89Gy8Q2H+ZfZ
uw5NdHMOZ0u0tj12Av4bKHteliAwMnxn5bTDwqmCRC/VbbRAV7Ze1aCe+ar0
/NabdibHJEi0i3o/q2hvDkf+vmwt0RGF/e8X7pLuN1LHu8X3AX8nS/dXhOvv
pOs9wD81lK5j/7ZG0nyPgH4NodL9V1ulxmUVSXQG7JdxlO4HfPNYZj/9DngO
6irzj9KhnlbmD2M9R6r0e4ynPJThZeDPwVr2RIZvcD+pjF809aTifGD/A0nf
o/w3lt4Xo86HltE/Mvm9q47/ifwG/H1FZp9B/tdLNPYbkskP9mPYI9G4HzNe
ojG/J9PHiVCvd1LGH7Be3SSaA7/5SHQY4I870nh3qfO5GnpwC0FhbJDGN6xE
ABzHpOsZkSuemMnmF/XBS4nGfKGrNH+2MJ8y+30E4ucyfx/141yJPjJ266+2
JRIN8dncLzL7/XP458Ey/8ob9OFD6f5MdT2iuJ4TB4U+lekbnG+Zv6rwMbPe
sEkabzGs9xhpvK5Lo3vWkvEvxMMG/yddXwPyslNRZrytV2rxy0yJLlbXs2lo
7Bf3XBpfa3W+W0NfUvfLEfX1mB+VF8n4F+tBXkrXte0RlGM5fJCuIz/Pk64H
Qz5F9n04P42k+UD9LfMXDp58435Shs9x/6wsPuYHv28h3X8K5EPmz7aBeK6M
3zT5sjL6XKbfn6nzEWXGXyT9ftyuvfene//bH50A+FYWb2Lq+KL4e5CnOBn/
w/z9kn7fBezvUml8WJ84R7q/EPqrycaH9Wqy92M9nb1EY/5vfVl+ko8H8zUH
/u0vo398UVlm/S7+kp7nqhWfQnwwQBr/US18OAjkXYaPNPsnNfQeiIcVS+MP
gPdlS9eRf2XypX19DuRvFBKN/Zp2ab1vy7+/F/dnyOxzwsRuayo7yvTRWJuS
O+Wk7wP9+7WVNN4M4fftemjp65HS/deA/2X+J+Y3mkm/x/jtUi288VEWv1DH
r/81/pPwvnSJpv3k0vuXAy3zzzT5CnF9YX6OSNc1+SYNrQf4RWYfbaH+TDY+
rPftpmUvfST6hpZ+Qf8wXPo9yp9sPa36nTHtJ7Pv0K+hQqrMHgGe/CzjB9AH
m6X3jQJ+3ChdXwbfL4uPH9eypxBPD5T5U5r6UQ39SF3fraGh3qpqY635Oiyz
f7h/RqK19YWDOp/7L3nT1HdpaGzXJPNvhqjrX0V5Bv7ZqsUvMv98CuwfXCrd
j/5D3L/5CfWFzD5j/vyMdD/Wp++U7sf9pHUkumoty/Fzm0u/3wH1ezJ//Ke6
PkS0n+p8k4bG+JdM3yP/FUj8vHTU+m4nZPYmHNZH/9/xKci37b7/b/mfpu4/
oaHvO/7MyFwh0ZgfUEi0dadrJp0cpfGkQXxK5h+1Nhmtar9SFp/N9PJZILO3
psAPH7TWb8e//Uusn+olXbdV10eJ+g/6Ra+Wnof9R+7+ez40/RY1NMY7ZfHr
g+r6Gg2N9fjHpedhPFD2fZp6fQ2N/t8fiQ5U9xv7lzxo6g//dT1Qvb9QQ98C
fC2bbz8Yr6csHgffI8OrmM8f9e/1h+kokMkb9mcIlp7XVl1vUkZfLpOuL287
eklbey39/1gavxV8j8yf0rZ/GL+QxcvrqPuzivpO3V9PQ2M91hiZvVPnizV0
F/CfZP4E4mcviV9nAr+Mla5vh/jEXxm/AV7VLSs/VWdKdDq8X0/6PdY7W/17
frXjgdr6D9dX5k+gfCyX5RPhfbJ8zVF1P2AN/QPqtb9J31+02GDioMdaeGWf
TP5gf1VT2fxq2VdTiHdWk64PBX3rqmVPZPH3m1rrqT3/2vKtLX8Yv4+S3o/7
1Yql6+jvHZDWL1LLn9SWF9SfhRKN9kKWz/MBeByopS/MZfEAre/D+LJMvrCe
7dq//d9n6v4IGhr9zaNa/BQvPa+clr3Dfumy+CDuZ9itZR9l9sxOS17s4fnO
0vejPZbp/6XAjzJ/EMLpO4dp2XNZ/PO8ul+vhsb9ZcO01ueMsuz6VNGyd7L4
uql6/0cZfSLDXxjfbS3R2K9N5m9h/FAW70L9qfNv+dPGF5p6qDLrtVSiV5xb
U/6JLL6I9U+y96G/4/5v/Yj1Rv/J+BvqcWV4AfGujN+1+SNHvV9afB7UP2/Q
wisyPA/1tSNvSfKhLV/Qn691stZ8DZLFD7TsaaKWPBxX9//R0Biflfkr2C9r
q0Sjfr8hPR/rZ2R41VHd/78Mf8jyMQu14mNYzz1Lll8Ff6er9PwNWvmfnUBb
yvwrmN+FEh0N3z9EordlHVmf1UqisT6mvIyfYf5+adknGT7+quVv4vx0la5j
/XWURPeFfiAy/YT9P2X1JqiP2gaVfZ4sP4LzIYvn6wI+lMVvM9X9NjQ01ofJ
8pmY35T5w6+08DI+f5kWv/0v+eWGwD8yfIL+qcwfidKKL+B+RVn8LlMLf2j2
U/1Lv2M93Yugf65He+CvAul97rD+mdL1+xC/l9nLvjA/37X01QXpfZhPOaWV
7/qq5f9fl36vqX/V0Lif6ql0fT7Ex69J11HfPvg3vl2ohc8Rfz7Qwg+y+O4N
2N/yR2s9R0rPX6bun6GhEV+fkO4vAPszXZZfGBUyVlcW/0J7vfXf/KDZv6ah
EU/L8MhMdX1rGf0vix9lavmTiHdk+Wns9x+nZb+LtL6Xq8quj2x9tfFIlJZ/
q50PRX3o9e/vxXiezP5hfkemX44A3piqNT6ZPQ7Qkjdfdf2yhk4A+ciTxU9g
fLL6GcR3xtJ4N6j7QfzLHmjHU7D/9QRV2fWSxUdmwvNPasVL7LXWT2a/7bTi
c+3U/Yn+Jc/a/hTyh8z+r4X9tKMl+dutFS9CPOEgXX8A6zlE9b+/T1Yvhnhe
Zq/1tPKnmnpuDR2rpS+1+QHtoSx+jP1lDCRaO164X8vf1Jb/MIjnyeItmvpl
Da3tT/x//K01Xu31RTxyUJqPLzDen//+vonqfjgaGuPjDWT+qhb/Yrz6vJa8
yvAN1ifH/1t+UZ9aBJX9Hpm/jOc7yPCq9nrV0cpfacs35lOm/vt7Nf0ONDTG
p6215F2mr/6D9fCW6N1aeO+0Fj1CC7/10Io//V/+pDZ/N4D4pCx/0lqrHkRT
P6yhMd/149/fH6IVz9OeX3yeLL+B9dQpyrL0IOn+rup6cnH9gd/masXPu8ji
r+r+Kv/SF5j/k8WfL4A96yDRG7XyA5/hff1keBIUvCxfgvEImb/gqoVHUN/J
6vNwP2t76Trmu7dLdG3wp2X5vZZa8m2rxY+tterrtPlBe70x3rNAohHvyuof
tcerjRc0/S/+tf4z1fsfysjrYBn+19IH2vpriGx/FdDob8nqDYeo+5doaPQX
ZPn4I1rxLdRXsnoG3F8gi8dshPWcL/FTH/X+aw2N8TkZ3h6gNT7t+Q3Qij9q
X9f0l9LQ6L/0kmhNPygNjf7nIul6By39navup/Cv9x1V9wPW0OifzJS9X2s9
tf1fbf2qjY/bacUzcH5k+FXbvmjrA38texailT/FektZfEvTv62M/XTWkjcZ
vtD0LygzXzL966DeD6+hteMNmG99Lc3XVvX5PBoa+7vI8Kt2fFEbT02B+f6s
JU/7tdZf5i9or+dG9f6OMvpDlq/W5t8hIG+//62vkZ+6/9u/R/kZoBVvr6c1
3/Za8yer19G2vxhf+vBv/eGsVc+nfR3rAWT5HeyPsPbf92vjB+18kTZ/aPar
i/Zaq/4rSt1/VUNjP8uq//4ejCfL4hfaeNBfq35K+/fa8Sf0PzpL92v2G2no
qup+Ef9aT9TnVrJ4HzxPVp+F/r7M/mjO5/nXemqv139a9Vn/I7/J4pk6Wvj5
tLrfu6g/tOrLNf0NNbR2PgzHE/rv92v6XWF/1YIiit/60f634HbLSB/vV2H/
3O/NbpB+zKF+AhX8w2n+BTyN/TFPrCD9pu7P8qn9a9rvGE/9QwxrqNhwiCcb
0f6pU5EG3BL2g5tT/5s1+yrzKjD+79SP6oK5Mcd+iY+pH+skg1LCC0tov/uD
ck/YiqgLdsoQBcuo26Y4cW4Aw/1KodR/xTOtEq89Jb32snB1f4hRSlzPuPl0
/kvfGZuwf7XXE9qvOjugR5n9cAVDk4g/FXReWOs7Ap7YHV5qUIT9kzc13zmR
9mtn0v5vJ6e/4u+hH0NafjBbCev1Hvsb9D/ZpDPt35yJ/exrNNtUKPoTsN8/
cv9ikr829P1LhhRSvZiw/tA+zOl8d9p/Opb6Jf52KCF8MYjOb7hrHCDWe8H+
ui/GyYTXq6vP8/s4nJ5fV90/zeI0sxizr+aYM7Sf/Wub34SffuJ5JJP73csl
/nGkfmQG+96xr1bHCq6q+2EO033BrNKdZlZS4f7RHevuj6T9zpHUb2H7hBsi
P2I/1tffRPsH/etm7r/IJqj9Y9gv2MKwhOIvh6kfpXduMeWbDGh/cUH5b2I/
E9iv6hy6Q8wfwH7P8vrJ4n5N6HdgteMJve8U9ccJjqjKT6nza7B/cuyNSuL+
WBhmyPSXJI+Dqd+C8mOI2G8E+tcEL8gT1xf2U8ZcDxPrY2A/uIdJtng/7n//
nUnre43W81vvSHYJ8o/h1B8ncNJtcT6A364e1+XYj3wp9Uewm1zCNP3AYP/h
cNc40X4C/3Kdj0zTzxX6ydx8c1d8HuyXNqn1iPTXXerPerbcY+qns1CF8uj5
6SPhOS8F7s8NHvtQrAebjQ3TllN8pWcQrvfuOgXslfr8Ouh/7pT4Xfx+4I+L
ERmsH5xv40zn89lOL2LlYT+eJe0/jnmbIa4P7J/d45dK+w3WKHD9t1/Q51i/
vgr3T59zOpVF9lx9PuFE93NiPhj24xve/iHyO/Brj8Ym4n5g2A59uTiK4nN7
UF5XjQ1tzDXxG5R/36kinoPveT/UT4xnwX79Spa/yvSbdG7wjB3o5Z3q4Yb9
tAY1mVuXa/oXQL+GjQMLxN/Dft3oiyqqxz9H+2ct9qaL+hf4rcOzaOavrm+B
/hPn3RLF9RPeF9eqjQPH86GsqP/dup/FiI+OviL5WHJOV+zfAvqpfu0vTLPf
HPrbTfO7z/Z5D/044yCdv5ow7Dfz9Ug46rGN+unfeZhJ+b5s6v+/ZHOaqN+h
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
D6WZni7X9HMD/kkoeiXyJ+jjylPTxfdjPOLdK+YD+rkm4r+7dYb3FPkb/I97
9WKY5jwxcN+4fm2uyc9if9bHCawt7Cc9R/6pS04syb8zxZtK3f+K9gLuH2iV
K563A/rJfu8PpukfCevzVWXOV7nZnXxaAeWj4zxLLvqPGL/Y99vpebsPiwes
x35sAf2G2FA/TGN635/plbkd5BOf0HlZI+4li/Ut8P4FnRRifgzwefhSTzFe
Av2wPuUXiDT2z39QRPHBVYRfL01+SfWzY0ke229OZQ4w/lMq1Kc5Q2LF/eWg
T5dWKBafB3gnf40Un4H4QY/jn1n4lNmuCzyon9q7qX6i/Ud/uZuveD/0V+vU
dTfZ50I8//yIWegPsf8pyLvT0b2Ex5ZR/6uwPt5s/s75TqXb8TyoZ88aBYj9
IgBvfdml9he+E38MDMwTz6sAf8Y4J0rkT8BD5htSyuiDQ2fV5/2MJnzi/GGE
eB384yFBj0T/Gs/b2vmb6tl2UD+wiG+p4nVhfr6ab+/CNXgK7L1ezzw2Jnex
wcQH1H9qz/JKHPbv3O6P/XQ/NzO0Fv1x5O+l4eL5R8C/FZ7PFfsPAl4afTJe
HB+et7vAT5xfiJ+MfKwj+n/gj1ab9LuMvxcz+yDZZ2d1//eXb8V4N9wfYaAr
8ivoo9bnMml/iy+dbzP5k7voT0N86X39dHYa4q1HyD56dPel/JQpxQMsxhtx
jI/bkb7rUK5YPL8E4jUDrpQnexKP9k/gkEQnTX4Bz9v6u1P8PtAvbvck+wvx
gkqripgm/gP442r4bTF/BPiuk+Md1h4+cDv105xd847YfxrPM9p7qUz8MuT7
Q7FeHp5n2OmB+L0wv2GLK3LNfkScT4Ot4njAHha9+CT2Mwf8uz5K0q9gjx66
RTI8n6ayCvDOgYPH7HirY3ELoN8QxPNu7IwT4zHvpkcm7NZLFf0T4I8mK1LY
7xjLOfetCf9vextE9Q1p1K/t4Oo/TNPvDeTPcWYh1TOaER6f6p4s+oN4/sxe
b5Kn39TfufNfJb3vHPVbjCz6JvrbeF549Gn2/OSIByfH4nhKHRP7UH/LeIzP
Tl6g14cb95nVvpwfxZOful0S5wfOF1q64z7Fz6bR+SuR96LF6xBvP5kVT/FO
ZzzPqX7xEDOuiT+CPigKL0f9SH9Tv8CC/9IpX5YZRPh7ZX6ZeoW9A9X7TfOp
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
+H3RklzxfzD+zeE=
        "]]}, {
       RGBColor[0.560181, 0.691569, 0.194885], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
8G0hHCwnBDF0aoX/A8AvJNc=
        "]]}, {
       RGBColor[0.922526, 0.385626, 0.209179], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQHftRNP4j5wYHLx4m7eRTao7nDHgOG3BtcEgSiLCc
aMPnuCb39rZc8w0OvdPzhHKFeR19QoFAcIPDItdtn2szdjo82wZUILvWwfq+
f+90OX8HmPyq8xJaax8IwvX3H/qqIfP/vAOMf/irRozo8f8OISD1lhscJkuw
hO3zOebw4ve+979TNjj4mHc6HhA/AVcP48PMJ8S3N42zWtUjCnfvp0u+SVWO
DHD37CmZLKG6VAMub8t1fbGCzlG4fRuKMiauNf0GN0//rgqbK/cjuPyXv1cq
JA0fwPmKQA2dM37B1V9fXGD7quUdXD7CcsuJsoldcH61yDr3xKmT4HyVYzv3
lpUpw90H0t/uw+yYI9GWKLFovYM00AFunotRzPOb8wFuX831zlM3AxDu2yrV
tbPD45RDwbznlfPkVzkArXuoteU4XJ59/vOGtrPXHKYApZ/rbgDLq6157/AU
yK002+BwteKlWqDONrj5uzx5mLqVj8L505y7cx6+QaSH+qw9X2xvisH58q2v
A29M3ucAADbaEnE=
        "]]}, {
       RGBColor[0.528488, 0.470624, 0.701351], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       PointBox[{{2400.68027210884, 262003.945}, {2559.3277310924345`, 
        65012.918}, {3094.0165631469977`, 207927.127}, {2786.0805860805826`, 
        88420.26}, {2348.783068783066, 12335.502}, {2188.849816849812, 
        294772.381}, {2275.7020757020737`, 246581.694}}]}}, {{}, {{{
         Opacity[0], {
          RGBColor[0.528488, 0.470624, 0.701351], 
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          AbsoluteThickness[1.6]}, {
          RGBColor[0.880722, 0.611041, 0.142051], 
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          AbsoluteThickness[1.6], 
          TagBox[
           TooltipBox[
            PointBox[{6354.481981981972, 174906.195}], 
            StyleBox[
             PaneBox[
              FrameBox[
              "\"Carbon-Scope 3 (tonnes CO2e)\"", LabelStyle -> {}, 
               Background -> None, ContentPadding -> False, LabelStyle -> {}, 
               Frame -> True, RoundingRadius -> 4, Background -> 
               GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
               BaselinePosition -> Automatic, LabelingSize -> 
               DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
              0], {}, StripOnInput -> False]], Annotation[#, 
            Style[
             Pane[
              Framed[
              "Carbon-Scope 3 (tonnes CO2e)", LabelStyle -> {}, Background -> 
               None, ContentPadding -> False, {
               LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                FrameMargins -> 2, BaselinePosition -> Automatic, 
                LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
              0], {}], "Tooltip"]& ]}}, {
         Opacity[0], {
          RGBColor[0.528488, 0.470624, 0.701351], 
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          AbsoluteThickness[1.6]}, {
          RGBColor[0.880722, 0.611041, 0.142051], 
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          AbsoluteThickness[1.6], 
          TagBox[
           TooltipBox[
            PointBox[{6388.956916099785, 3.703693281*^6}], 
            StyleBox[
             PaneBox[
              FrameBox[
              "\"integralScore\"", LabelStyle -> {}, Background -> None, 
               ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
               RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
               FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
               Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
               False], FrameMargins -> 0], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Pane[
              Framed[
              "integralScore", LabelStyle -> {}, Background -> None, 
               ContentPadding -> False, {
               LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
                Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
                FrameMargins -> 2, BaselinePosition -> Automatic, 
                LabelingSize -> DirectedInfinity[1]}], FrameMargins -> 
              0], {}], "Tooltip"]& ]}}}, {}}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
       TagBox["\"integral score\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Scope 3 Emissions(log)\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {4544.464285714295, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
    ImageSize -> {787.3125, Automatic}, 
    Method -> {
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{4544.464285714295, 7265.7142857142935`}, {0, 680342.112}}, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.08]}, {
       Scaled[0.02], 
       Scaled[0.12944271909999158`]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"D\"", "\"E\"", "\"C\"", "\"B\"", "\"A\""}, "PointLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.879087992267581*^9, 3.8790880069095497`*^9}, 
   3.8790880406159678`*^9, {3.879088071162101*^9, 3.879088130119233*^9}, 
   3.8793253556577663`*^9, 3.879325438693985*^9, 3.879354631815715*^9, 
   3.879419502146541*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"19383254-2c09-447e-80b1-321cc9f043d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering", "Subsection",
 CellChangeTimes->{{3.879087470052207*^9, 
  3.879087471625847*^9}},ExpressionUUID->"073a44ab-4398-4bdf-8e51-\
2576503cd162"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FindClusters", "[", 
    RowBox[{"Transpose", "@", 
     RowBox[{"Normal", "@", 
      RowBox[{"{", 
       RowBox[{"rev", ",", "disclosure"}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"PlotLabel", "->", "\"\<Clusters\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8790874828560753`*^9, 3.8790874872090693`*^9}, 
   3.879087915870224*^9},
 CellLabel->
  "In[130]:=",ExpressionUUID->"92c7b856-4e8f-4ef4-8e4b-91b35e430943"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Clusters\"", TraditionalForm],
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8790874895287533`*^9, {3.8793253588492517`*^9, 3.8793253626482267`*^9}, 
   3.879325440651579*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"ead02403-354b-488c-be4f-56ae4cb83a68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FindClusters", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"Normal", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"finalds5", "[", 
          RowBox[{
          "All", ",", " ", "\"\<Log of Scope 3 emissons (tonnes CO2e)\>\""}], 
          "]"}], ",", " ", 
         RowBox[{"finalds5", "[", 
          RowBox[{"All", ",", " ", "\"\<elevation\>\""}], "]"}]}], "}"}]}]}], 
     ",", " ", "nClusters"}], "]"}], ",", " ", 
   RowBox[{"PlotLabel", "->", "\"\<Clusters\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8790878827683563`*^9, 3.879087971433508*^9}, {
  3.879325404739996*^9, 3.879325408451941*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"409e672c-d644-4b81-b7c9-9919b8ed86e0"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"12.835595010063535`\\\", \\\",\\\", \\\
\"13.556045286054315`\\\", \\\",\\\", \\\"15.288778505172228`\\\", \\\",\\\", \
\\\"11.339926136864074`\\\", \\\",\\\", \\\"13.316821354014827`\\\", \
\\\",\\\", \\\"14.680882499631222`\\\", \\\",\\\", \
\\\"12.985874525519536`\\\", \\\",\\\", \\\"16.284651133378507`\\\", \
\\\",\\\", \\\"14.64581031162848`\\\", \\\",\\\", \
\\\"13.469154527580251`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"84\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Failure\\\", \\\"[\\\", RowBox[{\\\"Dataset\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\\\\\\\"MessageTemplate\\\\\\\"\\\", \
\\\"\[RuleDelayed]\\\", StyleBox[RowBox[{\\\"Dataset\\\", \\\"::\\\", \
\\\"partmismatch\\\"}], \\\"MessageName\\\"]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"MessageParameters\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 107, 7, 
   18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879325369820166*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"9f22c6ac-c3a6-4c6b-b820-c3c60e13d93f"],

Cell[BoxData[
 TemplateBox[{
  "FindClusters", "numclus", 
   "\"The number of clusters \\!\\(\\*RowBox[{\\\"nClusters\\\"}]\\) can only \
be either a positive integer or Automatic.\"", 2, 107, 8, 
   18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879325369877727*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"92781513-7e97-44c7-b834-a91c1486b462"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"12.835595010063535`\\\", \\\",\\\", \\\
\"13.556045286054315`\\\", \\\",\\\", \\\"15.288778505172228`\\\", \\\",\\\", \
\\\"11.339926136864074`\\\", \\\",\\\", \\\"13.316821354014827`\\\", \
\\\",\\\", \\\"14.680882499631222`\\\", \\\",\\\", \
\\\"12.985874525519536`\\\", \\\",\\\", \\\"16.284651133378507`\\\", \
\\\",\\\", \\\"14.64581031162848`\\\", \\\",\\\", \
\\\"13.469154527580251`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"84\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Failure\\\", \\\"[\\\", RowBox[{\\\"Dataset\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\\\\\\\"MessageTemplate\\\\\\\"\\\", \
\\\"\[RuleDelayed]\\\", StyleBox[RowBox[{\\\"Dataset\\\", \\\"::\\\", \
\\\"partmismatch\\\"}], \\\"MessageName\\\"]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"MessageParameters\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 107, 9, 
   18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879325369888753*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"3784c041-bcb9-491b-ae2b-1c35bbbd0f50"],

Cell[BoxData[
 TemplateBox[{
  "FindClusters", "numclus", 
   "\"The number of clusters \\!\\(\\*RowBox[{\\\"nClusters\\\"}]\\) can only \
be either a positive integer or Automatic.\"", 2, 107, 10, 
   18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879325369895146*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"269a9ce8-ce05-4064-80b2-29c14f271c9c"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"12.835595010063535`\\\", \\\",\\\", \\\
\"13.556045286054315`\\\", \\\",\\\", \\\"15.288778505172228`\\\", \\\",\\\", \
\\\"11.339926136864074`\\\", \\\",\\\", \\\"13.316821354014827`\\\", \
\\\",\\\", \\\"14.680882499631222`\\\", \\\",\\\", \
\\\"12.985874525519536`\\\", \\\",\\\", \\\"16.284651133378507`\\\", \
\\\",\\\", \\\"14.64581031162848`\\\", \\\",\\\", \
\\\"13.469154527580251`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"84\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Failure\\\", \\\"[\\\", RowBox[{\\\"Dataset\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\\\\\\\"MessageTemplate\\\\\\\"\\\", \
\\\"\[RuleDelayed]\\\", StyleBox[RowBox[{\\\"Dataset\\\", \\\"::\\\", \
\\\"partmismatch\\\"}], \\\"MessageName\\\"]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"MessageParameters\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 107, 11, 
   18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879325369900004*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"0507a85b-4d29-4dcd-a854-409b42b24e47"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 107, 12, 18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87932536990492*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"bee4aeba-b8da-48c1-8b65-09802811c65d"],

Cell[BoxData[
 TemplateBox[{
  "FindClusters", "numclus", 
   "\"The number of clusters \\!\\(\\*RowBox[{\\\"nClusters\\\"}]\\) can only \
be either a positive integer or Automatic.\"", 2, 107, 13, 
   18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879325369909367*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"bb981fc4-abc5-4f53-a0c2-202dac243b21"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindClusters\\\", \
\\\"::\\\", \\\"numclus\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 107, 14, 18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879325369913752*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"3a214e07-ea2d-4a0b-a3b7-c7004ab64240"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"FindClusters\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"12.835595010063535`\\\", \\\",\\\", \\\
\"13.556045286054315`\\\", \\\",\\\", \\\"15.288778505172228`\\\", \\\",\\\", \
\\\"11.339926136864074`\\\", \\\",\\\", \\\"13.316821354014827`\\\", \
\\\",\\\", \\\"14.680882499631222`\\\", \\\",\\\", \
\\\"12.985874525519536`\\\", \\\",\\\", \\\"16.284651133378507`\\\", \
\\\",\\\", \\\"14.64581031162848`\\\", \\\",\\\", \
\\\"13.469154527580251`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"84\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Failure\\\", \\\"[\\\", RowBox[{\\\"Dataset\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\\\\\\\"MessageTemplate\\\\\\\"\\\", \
\\\"\[RuleDelayed]\\\", StyleBox[RowBox[{\\\"Dataset\\\", \\\"::\\\", \
\\\"partmismatch\\\"}], \\\"MessageName\\\"]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"MessageParameters\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\",\\\", \\\"nClusters\\\"}], \
\\\"]\\\"}]\\) is not a list of numbers or pairs of numbers.\"", 2, 107, 15, 
   18867051726829653980, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879325369943431*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"21d3a782-0d94-4a29-ba0a-8ce588af2b74"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FindClusters", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "12.835595010063535`", ",", "13.556045286054315`", ",", 
          "15.288778505172228`", ",", "11.339926136864074`", ",", 
          "13.316821354014827`", ",", "14.680882499631222`", ",", 
          "12.985874525519536`", ",", "16.284651133378507`", ",", 
          "14.64581031162848`", ",", "13.469154527580251`", ",", 
          "14.203422111954021`", ",", "10.96805767619469`", ",", 
          "12.682564468352158`", ",", "15.114473233255682`", ",", 
          "12.619539447857836`", ",", "13.609935796425246`", ",", 
          "14.169850366695742`", ",", "14.144618275822447`", ",", 
          "11.33108328525672`", ",", "14.605840001704617`", ",", 
          "12.927747434212357`", ",", "14.075388311315958`", ",", 
          "11.79965745623778`", ",", "12.093751533250943`", ",", 
          "14.418710112243447`", ",", "15.10676538367734`", ",", 
          "16.71722001302866`", ",", "11.690534501931214`", ",", 
          "10.338505087460984`", ",", "11.560512238689066`", ",", 
          "13.543808527139669`", ",", "11.11671903273548`", ",", 
          "13.659145875708072`", ",", "13.832659710063766`", ",", 
          "9.603963034310201`", ",", "15.895678089674563`", ",", 
          "10.410145292729712`", ",", "6.6900904420661504`", ",", 
          "14.586081027437011`", ",", "11.489414004045505`", ",", 
          "10.035341175992759`", ",", "10.367021391501432`", ",", 
          "9.37552051729589`", ",", "10.596229801122186`", ",", 
          "11.558724818263112`", ",", "11.526003690934289`", ",", 
          "10.985574225635121`", ",", "15.156624295515494`", ",", 
          "9.194791512567399`", ",", "13.674635650473148`", ",", 
          "11.96965618508279`", ",", "10.704034111360237`", ",", 
          "12.006368818611064`", ",", "10.970187963985307`", ",", 
          "11.883333733625049`", ",", "12.633558944245745`", ",", 
          "10.738520548889277`", ",", "13.479791294787391`", ",", 
          "13.571418213681891`", ",", "10.138178574438141`", ",", 
          "13.885989420286421`", ",", "10.250464315779169`", ",", 
          "9.813899167001358`", ",", "9.317096792904756`", ",", 
          "10.925655112755772`", ",", "11.046331217172888`", ",", 
          "10.001467075562607`", ",", "8.167181143859343`", ",", 
          "10.582150694001466`", ",", "9.560059409594297`", ",", 
          "10.86588286467294`", ",", "11.256724010319324`", ",", 
          "9.009707664681361`", ",", "9.743826007412823`", ",", 
          "13.0978888814248`", ",", "11.979045337185642`", ",", 
          "10.824662318077008`", ",", "8.783722462496906`", ",", 
          "13.306765952377148`", ",", "9.830836265055781`", ",", 
          "10.589880273003379`", ",", "9.872925865573773`", ",", 
          "9.215160735334628`", ",", "11.889702140488602`", ",", 
          "13.585273492058606`", ",", "9.561813881880502`", ",", 
          "12.822091202512837`", ",", "10.914192717698912`", ",", 
          "8.86130658844262`", ",", "10.056706069463088`", ",", 
          "9.683551040669046`", ",", "10.15638860479659`", ",", 
          "9.509632041501606`", ",", "9.343219639513354`"}], "}"}], ",", 
        RowBox[{"Failure", "[", 
         RowBox[{"Dataset", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\<\"MessageTemplate\"\>", "\[RuleDelayed]", 
             StyleBox[
              RowBox[{"Dataset", "::", "partmismatch"}], "MessageName"]}], 
            ",", 
            RowBox[{"\<\"MessageParameters\"\>", "\[Rule]", 
             RowBox[{"\[LeftAssociation]", 
              RowBox[{
               RowBox[{"\<\"Type\"\>", "\[Rule]", 
                RowBox[{"TypeSystem`Struct", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"Company\"\>", ",", "\<\"ISIN\"\>", 
                    ",", "\<\"integralScore\"\>", ",", "\<\"TCUID\"\>", 
                    ",", "\<\"GICS Sector Name\"\>", 
                    ",", "\<\"Carbon-Scope 1  (tonnes CO2e)\"\>", 
                    ",", "\<\"Carbon-Scope 2  (tonnes CO2e)\"\>", 
                    ",", "\<\"Carbon-Scope 3 (tonnes CO2e)\"\>", 
                    ",", "\<\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"\
\>", ",", "\<\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"\>", 
                    ",", "\<\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"\
\>", ",", "\<\"Carbon Disclosure\"\>", ",", "\<\"Revenue (USD mn)\"\>", 
                    ",", "\<\"IntScaled\"\>", ",", "\<\"Ratings\"\>", 
                    ",", "\<\"Carbon Intensity Total (tonnes CO2e/USD \
mn)\"\>", ",", "\<\"Log of Revenues (USD mn)\"\>", 
                    ",", "\<\"Log of Scope 1 emissons (tonnes CO2e)\"\>", 
                    ",", "\<\"Log of Scope 2 emissons (tonnes CO2e)\"\>", 
                    ",", "\<\"Log of Scope 3 emissons (tonnes CO2e)\"\>"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"TypeSystem`Atom", "[", "String", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "String", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Integer", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "String", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "String", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", 
                    RowBox[{"TypeSystem`Enumeration", "[", 
                    
                    RowBox[{"\<\"A\"\>", ",", "\<\"B\"\>", ",", "\<\"C\"\>", 
                    ",", "\<\"D\"\>", ",", "\<\"E\"\>"}], "]"}], "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}], ",", 
                    RowBox[{"TypeSystem`Atom", "[", "Real", "]"}]}], "}"}]}], 
                 "]"}]}], ",", 
               RowBox[{"\<\"Part\"\>", "\[Rule]", "\<\"elevation\"\>"}], ",", 
               
               RowBox[{"\<\"Symbol\"\>", "\[Rule]", "Part"}]}], 
              "\[RightAssociation]"}]}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
     ",", "nClusters"}], "]"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\<\"Clusters\"\>"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8790879359950457`*^9, 3.879087972433138*^9}, 
   3.8793253699482117`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"85d2d5f1-9af0-4e41-89dd-2066e14a0695"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nClusters", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"FindClusters", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"Normal", "@", 
       RowBox[{"{", 
        RowBox[{"rev", ",", "disclosure"}], "}"}]}]}], ",", " ", 
     "nClusters"}], "]"}], ",", " ", 
   RowBox[{"PlotLabel", "->", "\"\<Clusters\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.879084923250383*^9, 3.879084945124851*^9}, 
   3.879087933148757*^9},ExpressionUUID->"71b48ad0-4374-4d00-ab83-\
2a7d7996ebd5"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAOsssyBN2I0Bxj+UEWNoiQEl5bjz1
dh9ALyi8FPHMJUDYJ///trwgQB9XytcX8yZA0UL1tVkFIkAWfCHrQgYjQLLE
uOciUyJAbWgV6X8HIUC0FaM4rP4iQMB57TfoYiJASZGe/x4DIkCqxWHbekYj
QCnep2vEcyBAIHxLWxGwH0Bq6XRiQqUjQFeYYWzUVSNAiPz9kn/zI0BVPaV0
LgMjQNMEZEolTSFA0+bLzIiJIEA7P7HfQPohQEoP4R6FXiFAJsudOPF/IkC5
yifSt54cQA0t5SE86SBAOlv0XIBNIEBIbfuS8xEhQNrxZdqWNCZAjb4zgkEX
IUBHmz2WQhIjQHvUqZCJliBA5QvLpPhFH0CxV0XaUeggQGStkxmWTCBAhEmi
JYq2IEAK+NzEKL0fQGb5gJzBqRxA2XHkDM8ZJkAcgpd4uBsbQLbJCtasqyVA
Ey+2o2z8IEAhR4dyH74mQMgDAija/R1Aw8zH+P8SJECJyHtYRiAhQFpexK58
MyZAU+x96vMOH0CiQLT8c6YkQDxXrqc=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     PointBox[{{10.39483364992049, 11.360394559266952`}, {12.102410851054422`,
       7.656578386151774}, {10.194564670928541`, 9.840969708454862}, {
      9.429109551036328, 12.443812727277455`}, {11.014158772546326`, 
      14.08339369233807}, {11.113437393225954`, 13.66876107458726}, {
      10.19392715181682, 9.285045165996298}, {10.692516269514174`, 
      12.206072645530174`}, {9.674911612104156, 16.038733637393307`}, {
      10.41665106567745, 10.52835107434402}, {11.152503504578783`, 
      14.003798092866912`}, {10.837060968542769`, 14.188971542107247`}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAA8jKOoXUBGkD/U3kG0VsjQNUftyHt
ChdA3t/w2IYqIEDSeCGBPk8YQOyHMltOiiBAB+KIpYErB0BKFkM3SCwQQHLW
2+4j2RRAhz8uU46CG0BOGiWRSYYYQAs6rQi8EiFAfVTZzOKDFUC7Mp8Sz1Mg
QItZc3SM+xhAhgy4oJILIkAcPkqoEroZQA3AHDvYBiJA2iK3k9/QEkDeFfac
T08eQMFEHB9XZxdABLbgb0LXIUAQUudiMwETQIycVmCsBhNATmfRuL2aGUBe
HpsRpKsjQA6qIqWDExdAYucnak7AFEC0Y2zQUPMTQL7beMIKpBtAEQh9mFpc
GEAIm3YZlzUgQNEVPcIinRZAc+prGAh7HkB69b8CQDQSQNLGxkNjYyFAqu1p
ZpaZD0CnRglsSjYXQBvTo7HlMRZArBo+FAAlH0AVxYwtFFgWQDvcC1MbFx5A
hbOPo1gZFEC5aAsjgQEgQL/3hf0=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     PointBox[{{9.658197823621611, 17.5311223622327}, {8.015361548347041, 
      17.455045084180835`}, {8.736312287462933, 16.58733330504497}, {
      6.1339451816921695`, 12.11507870684081}, {8.544980170797432, 
      17.313625720093544`}, {6.359140728759987, 12.404008877115016`}, {
      6.692988637711948, 12.437203663926411`}, {6.391642955770761, 
      12.038049749903001`}, {7.284590295929568, 15.84667221301095}, {
      8.00337594870101, 15.708072997449786`}, {5.6941664906295415`, 
      14.069826931783416`}, {7.434543735507264, 17.271188217934796`}, {
      6.928575473097698, 15.706493113854584`}, {6.275189801570579, 
      11.63242670366998}, {7.504068709694129, 16.32224265288664}, {
      7.1724212001964265`, 13.833351939745757`}}]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAo6bxCm1xHEAEUhbtwT4aQJmwYgJO
0h9Ag7jT2dUyHkDS5ulu4TMaQPP6xsXc2hZAz90M9/VEG0BzcmwEF6cYQFgx
SJaErRxAcMT+a5u8GkBZStIlVBQZQOD+1sOt2xdAYog3vPdiHUD0wCCtYPga
QOrqBcqj4BlAg8Ok9nlDFkBCNNhN/FQbQMmijJgfpxlA6ERdJKnkGkCcY3fy
7w0gQLf7W0e0pBlAILswehfKGkBG5t5s/7EeQJ/viQdC0hxAjNkinfVpGkAn
51/+KfMYQJHPPdrPoB5A4yM+o7D0HEDC0R7rivAdQAkhP3kTuRxAzJoJnmES
G0DTnqJB6toZQGtgz9G5vhpAyq6rV/C6IUBSPW2IGVkbQAwVDg/8ORlAxV1v
JHZQGkAJxRVj/hgZQK/MjHw=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.704448219303231, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Clusters of previous graph\"", TraditionalForm],
  PlotRange->{{2.704448219303231, 12.102410851054422`}, {0, 17.5311223622327}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8790849537402782`*^9, 3.8790855855984173`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"29aa516f-0264-4e98-86ef-0c7a77c6e208"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"1b6d7cc6-7822-4ee8-b5e6-586263c327a0"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Machine Learning ", "Section",
 CellChangeTimes->{{3.878617887960531*^9, 3.8786178922249804`*^9}, {
  3.8786180177480707`*^9, 
  3.8786180230148277`*^9}},ExpressionUUID->"9cfeceee-578b-479e-9e2b-\
6bb082aed526"],

Cell[CellGroupData[{

Cell["Dataset Preparation", "Subsection",
 CellChangeTimes->{{3.878618033222563*^9, 
  3.87861805478168*^9}},ExpressionUUID->"23ccf5ee-bcae-4dce-ad62-\
cf12062b8105"],

Cell[TextData[{
 "Prepare the dataset to use as an input for the machine learning models that \
we are going to create. In particular, we are going to divide the dataset in \
two new dataset: ",
 StyleBox["Training set",
  FontWeight->"Bold"],
 ", which includes 80% of all the rows of the dataset, while the ",
 StyleBox["Test",
  FontWeight->"Bold"],
 " ",
 StyleBox["set",
  FontWeight->"Bold"],
 ", which includes the remaining 20%.\nThe training set will be used to train \
our models, while the test set in order to understand the accuracy of our \
models."
}], "Text",
 CellChangeTimes->{{3.8788059084200363`*^9, 3.87880591594809*^9}, {
  3.878805982484206*^9, 
  3.878806133455037*^9}},ExpressionUUID->"6b2ba3af-bd0c-404b-9a30-\
d5bc7bfff9d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"datasetML", " ", "=", " ", 
    RowBox[{
     RowBox[{"KeyDrop", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Company\>\"", ",", " ", "\"\<ISIN\>\"", ",", " ", "\"\<TCUID\>\"",
         ",", " ", "\"\<integralScore\>\"", ",", " ", "\"\<IntScaled\>\"", 
        ",", "\"\<Carbon-Scope 1  (tonnes CO2e)\>\"", ",", " ", 
        "\"\<Carbon-Scope 2  (tonnes CO2e)\>\"", ",", " ", 
        "\"\<Carbon-Scope 3 (tonnes CO2e)\>\"", ",", " ", 
        "\"\<Carbon Intensity Total (tonnes CO2e/USD mn)\>\""}], "}"}], "]"}],
      "@", "finalds"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Drop", " ", "columns", " ", "that", " ", "are", " ", "not", " ", "needed",
     " ", "for", " ", "machine", " ", "learning", " ", "techniques"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nobs", ",", "ncol"}], "}"}], "=", 
    RowBox[{"Dimensions", "[", "datasetML", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Retrieve", " ", "the", " ", "number", " ", "of", " ", "rows", " ", "and", 
    " ", "columns", " ", "of", " ", "the", " ", "dataset"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"trainingset", ",", "testset"}], "}"}], "=", 
    RowBox[{"TakeDrop", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", "datasetML", "]"}], ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"nobs", "*", "0.8"}], ",", "1"}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Divide", " ", "the", " ", "dataset", " ", "in", " ", "training", " ", 
    "set", " ", "and", " ", "test", " ", "set"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AccuracyAss", " ", "=", " ", 
    RowBox[{"Association", "[", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Create", " ", "an", " ", "empty", " ", "association"}], ",", " ", 
    RowBox[{
    "to", " ", "fill", " ", "in", " ", "with", " ", "accuracy", " ", "of", 
     " ", "our", " ", "models"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.878715124656487*^9, 3.878715136895567*^9}, {
   3.878715194002536*^9, 3.8787152977820997`*^9}, {3.878715337211686*^9, 
   3.878715485597872*^9}, {3.8787155917356863`*^9, 3.878715703697961*^9}, {
   3.8787158328798227`*^9, 3.878715837466886*^9}, {3.878715876319783*^9, 
   3.878715876667737*^9}, {3.878715910812853*^9, 3.878715927813305*^9}, {
   3.878716260609582*^9, 3.8787162755669003`*^9}, {3.8788059306470003`*^9, 
   3.878805973430365*^9}, 3.878806341120471*^9, {3.8788063865547953`*^9, 
   3.878806441769845*^9}, {3.878806493253716*^9, 3.878806503942992*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"7d247cef-d508-4632-b82d-0c996ff173ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification", "Subsection",
 CellChangeTimes->{{3.878618143305781*^9, 3.878618144962409*^9}, {
  3.8786189939708767`*^9, 
  3.8786190030333223`*^9}},ExpressionUUID->"cd9d058a-068e-49c5-a54a-\
179c014ccdab"],

Cell[CellGroupData[{

Cell["Logistic Regression", "Subsubsection",
 CellChangeTimes->{{3.878805416699134*^9, 3.878805417721744*^9}, {
  3.878806962177305*^9, 
  3.8788069673045464`*^9}},ExpressionUUID->"919c1118-c19d-49c2-b1cb-\
cdc52c16953a"],

Cell["\<\
Train a classifier using probabilities from linear combinations of features\
\>", "Text",
 CellChangeTimes->{{3.878805704170437*^9, 3.8788057223306637`*^9}, {
   3.878805766632689*^9, 3.87880578974465*^9}, {3.878806943975576*^9, 
   3.878806946422574*^9}, 
   3.8793546422569942`*^9},ExpressionUUID->"358fc56b-581c-400b-a2cb-\
e1fe47c98ca6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cRisk", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"trainingset", "->", "\"\<Ratings\>\""}], ",", 
    RowBox[{"Method", "->", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "cRisk", "]"}]}], "Input",
 CellChangeTimes->{{3.8786185865414057`*^9, 3.878618597824006*^9}, {
  3.878618646892776*^9, 3.878618648994371*^9}, {3.878618877270843*^9, 
  3.878618880432907*^9}, {3.878618998083866*^9, 3.878619004451974*^9}, {
  3.8786191510115213`*^9, 3.878619159945651*^9}, {3.8786192237272882`*^9, 
  3.878619223941098*^9}, {3.878806954912199*^9, 3.878806959223152*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"e494084e-deed-4ffe-a42a-57f607634d26"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                    "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\""},
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                    "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\""},
                    "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["5261", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 5261, "ClassNumber" -> 5, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "Country" -> <|"Type" -> "Nominal"|>, 
           "GICS Sector Name" -> <|"Type" -> "Nominal"|>, 
           "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Disclosure" -> <|"Type" -> "Text"|>, 
           "Revenue (USD mn)" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["FromDataset"], 
              MachineLearning`MLProcessor[
              "FromNamedFeatures", <|
               "FeatureNames" -> {
                 "Country", "GICS Sector Name", 
                  "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                  "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                  "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                  "Carbon Disclosure", "Revenue (USD mn)"}|>], 
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 7|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {
                 "Nominal", "Nominal", "Numerical", "Numerical", "Numerical", 
                  "Text", "Numerical"}, 
                "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6", "f7"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         False, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

              "], "Type" -> "NumericalVector"|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 5261, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Text"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "FeatureChangeType", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 8728850163752787708|>], 
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>, 
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 2924601326459291273|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 3851032655214498899|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>, <|"" -> 1|>}, 
                    "MissingCode" -> Indeterminate, "Version" -> {13.1, 0}, 
                    "ID" -> 3021504372148671363, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Mean" -> {209.80690318178338`, 38.57264497138987, 
                    138.3376102159199, 2296.6337905542246`}, 
                    "StandardDeviation" -> {1432.0032489855246`, 
                    171.69843080857044`, 192.57826196052247`, 
                    9129.337299520432}, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 6370237675253593402|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3, 
                    "SetSize" -> {55, 11, 1}|>|>, 
                    "Boundaries" -> {CompressedData["
1:eJw1US1IQ1EYfcIMChbLhBk0GCwrCjMIZwZhDEHQsjJBwaQww8qCIAvPYDEY
FGGIZWXhCS5o2EEmMgTx/4lv6l4wWIQxxLLiu+/7/Mq9XM49f9/oSm5htcey
rCnrf3y6teXvmPvBymbdS1TeWZweaywW35jp2tVcpsn4+dfxTtxjbyG9W468
spkwyBee/A6stRyX2wGqaz8zm7+fjWafOBHOI/s7eyPzfQ/0HQO843rLXG45
FAJveOkZomtuhEINDodGrhiIBw7qDOnyF0yWBj/HZ2rcPzBzxh9D2znlXOCm
kHaYihrCMtsxQ3DIIwMvFbklJ3x5R1JwSMk/tIUHygvVgepCfUB9QX1CfUNz
QHNBc0JzY1J6wJL0Alt6giO9wZMeEZFeoT1De4fuAboX6J6ge8MfBK7o6Q==

                    
                    "], {-0.5, -0.40909090909090906`, -0.3181818181818182, \
-0.2272727272727273, -0.13636363636363635`, -0.04545454545454547, 
                    0.045454545454545414`, 0.13636363636363635`, 
                    0.2272727272727273, 0.31818181818181823`, 
                    0.40909090909090906`, 0.5}, {-0.5, 0.5}}, 
                    "Version" -> {13.1, 0}, "ID" -> 7348139182499282329, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>, 
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                    Span[1, 3], 
                    Span[4, 7]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {13.1, 0}, "ID" -> 
                    4988030652003068495|>]}, "Invertibility" -> "Approximate",
                    "StructurePreserving" -> True, "Missing" -> "Allowed"|>], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBmQFm/iFib1JlAgAAAAcAAAAHAAAAPlM1OXtLmz/JiPcwbAyAv1XkjbwG
1YQ/vL3MM3alqD9dV7Q3ltHiP2S57Fz+YOk/MnmDCDz5wj8EQ6YFpvefv++u
GnjfNYi/QC4jX10NcD/9dRoemfCSPzfG6DRwO6y/+Fp8ks9qwr/+dWRCD5jv
P1e44E2uMWU/lBmRez1vUr9Wme0jCTJhvzS4InKsPWE/ogrVuWjN6b+p6Amc
leHiP19FAIP8/KQ/Fsw7lzFi479b2o2x/7O7v8QbWFU9jta/WunW5/OI5j8Y
e5c5Toh6vzr5ex/nBYC/SjOPC+5Gob+BzmGl9zXgvwH8AegL5cS/qmysjusN
6z8sWiaoibijv7tSilO75l8/vMAEl/OHgj/6wqUCxqOTv5LfxWV4YuO/+WSv
W3RQuj+vRZXiiwHYvxzP5zepJOa/dwddW+vpnj/AldSzjP6mP7AL08UTf3M/
oEUKDPSctr9PbMjmPjTvP+rNfS3iL8I//6HrutiXwj+qZ+qwPl89vy+NAyQq
BlQ/cl4LGc2Ndz/G8Myp
                   "], 
                  "Precisions" -> {0.7323150115031848, 0.9950353534094927, 
                   1.150259857918005, 1.3081831054231352`, 
                   11.904267203841378`, 12.590913834400338`, 
                   21.78658982700742}, "NoisePrecision" -> None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.045734233435905304`, \
-0.025594359218476675`, -0.0029955448724701505`, -0.00014912358418741337`, \
-0.00003169670080297662, 0.00013678099790770116`, -0.00011712644515109536`}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 6433133221155465954|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 7.|>,
                     "Key" -> "((f1f2f6)(f3f4f5f7))", "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 7, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4144949927782571454|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                   "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                   "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 7, 
                   "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                   "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                   4144949927782571454|>], "InputDimension" -> 0, 
                "OutputDimension" -> 7, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"},
                     "ID" -> 5155317431342247400|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"Information Technology"}, "ID" -> 
                    2188803043977968913|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537},
                     "ID" -> 3337457535063725639|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {10.982}, "ID" -> 7636067744164728755|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {60.982}, "ID" -> 5343396232700824432|>, 
                    "f6" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {""}, 
                    "ID" -> 8991202013923146558|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {624.605427784142}, "ID" -> 
                    7410770998264477311|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.108837, "MaxTrainingMemory" -> 2954536, 
                  "DataMemory" -> 1220792, "FunctionMemory" -> 92272, 
                  "LanguageVersion" -> {13.1, 0}, "Date" -> 
                  DateObject[{
                    2022, 12, 7, 17, 32, 6.687891`7.577864173831745}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, 
                  "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-5.8464371569811195`, -5.8464371569811195`, \
-5.772442655506229, -5.719536211659443, -5.569781037675731, \
-5.547597831708812, -5.492452464861547, -5.490044807247233, \
-5.4488020625417395`, -5.375138296361131, -5.327882521015458}, 
                   "LeftBoundary" -> -5.772442655506229, "LeftScale" -> 
                   0.03699725073744542, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[38.91308053189091, 0.3782184306301033], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0}, 
             "ID" -> 8833432794738512184|>], 
           MachineLearning`MLProcessor[
           "Threads", <|
            "Input" -> <|
              "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "(f3f4f5f7)" -> <|"Type" -> "NumericalVector", "Weight" -> 4|>, 
               "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
             "Processors" -> {
               MachineLearning`MLProcessor[
               "ToVector", <|
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                 "Version" -> {13.1, 0}, "ID" -> 7001699027996678713|>], 
               MachineLearning`MLProcessor[
               "ToVector", <|
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                   "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                 "Version" -> {13.1, 0}, "ID" -> 4268131072254999855|>]}, 
             "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
             "Missing" -> "Allowed"|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
             "Mean" -> {209.80690318178338`, 38.57264497138987, 
              138.3376102159199, 2296.6337905542246`}, 
             "StandardDeviation" -> {1432.0032489855246`, 171.69843080857044`,
               192.57826196052247`, 9129.337299520432}, 
             "Output" -> <|
              "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 1927666520227175614|>], 
           MachineLearning`MLProcessor[
           "ToLowerCase", <|
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 8121204540162656102, 
             "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "RemoveDiacritics", <|
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 1964114494773798714, 
             "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "Threads", <|
            "Input" -> <|
              "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
             "Output" -> <|
              "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
             "Processors" -> {
               MachineLearning`MLProcessor[
               "Sequence", <|
                "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                 "Processors" -> {
                   MachineLearning`MLProcessor[
                   "TextToNominalSequence", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
                    ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", 
                    ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
                    "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {13.1, 0}, "ID" -> 613813152937597666, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NominalSequence", "Weight" -> 1|>|>|>], 
                   MachineLearning`MLProcessor[
                   "NominalSequenceToTFIDFVector", <|
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "NominalSequence", "Weight" -> 1|>|>, 
                    "Index" -> 
                    MachineLearning`SortedHashAssociation[<|
                    "KeyHashes" -> CompressedData["
1:eJw1lEuO1FAMRXvACmg2wAKQ/P8soSVGLIEBEiMGsH9xkpdSqlIp28++vtfO
159/fvyqt7e3v5+4ff/999/HFx6+rVqq2U5t5uas6uMQ9dFe5zNhJb3HMWvS
Km1rvToSKY8jNX27tJV0aV79ODRLoq/wmC31quPoyeyWtMycu46+HDZewFKJ
ohAHj6PWCogmCuTOGPHjyBUAd5tW+tToPicytTykamdkPMuf4gEcA+a2rxM1
rxNBhfBc7fIBHSGPIwBIYaECtFDvSUWYhUY3/lQt63g5TJXO0mFWFlAPJQ6f
smRRDl38dz6OCNeUdlDNRa4/xR2MQrsxzRHOv2i3lAVShyw+8trLoQjqFTOT
BdXtdhxaEwVHCN9bgrIPXM0IhcGrBQu0nPh4PyR2V18t65jBcn18xm6BcnSu
l1i1sXabIy6IQxfS0WU0fZsTLt1UmCv4rTlmOoRwujoNi+Vt3pQg1rhPgDTk
hqJKZnJKTozTRu6xZ6FgFk2P9CXeyw5qWXrJgj8ThvK2V2vQJunFkVTMbjuM
QGMkE5jG12Vuu9t0OK0zNSJxrcWx0yu5BK4YeHQwP/bsCvijTZKUDTP/fpMA
FPQuS9IR0afuTVZlcF2z0ZQ4draQrIRv3U9Pv7TL0nQVBeqqEyc/e8BSiTvy
LfyUPvHwydaynMviFLofHpgjppClUKc0a2NHcmaYcP7ZoFkIbB87lZh/bVBO
uVyb+dgvqIau/AwjcfSqaywGdNEBTcawH3sjH3O2AdfLGuaJZ4Ad8HrJEmy5
Vx57+/WuAaBrVaHEE89SQQMnIAR+WN7bDgSWTp1LzJUZOnV5wQ2KFAqyKSMv
HpZlDgaRyiAIiJ7/oUHtSA==
                    "], "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    ToString[#, InputForm] <> "Cn.i9)P$", "Murmur3-64"]]& , 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {13.1, 0}|>], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAwA+JZ+8T4F3B/tJdela8mWSvlsHur766IQAGHjdl5U6SU
3thPLz2z7Xc0p8OSKy+f6VwRdNDev3TKgWpJB9NNtkKqu2QcdugrPJST4XTg
X7O3SFiR1SHN7VRk234mh3ecys+/rXpqv8/RscLYTsiBcdn7A2u4n9jD9MPs
5Vx4y+1PNq9Dt/jeJ5zmrA4wPszejqrkPcbMEnB7YXyBlxtjDnH8hZu3Xz1y
j+JGTrg57gfXrLgchSm/dJPZ7ohURjgf5l8GCGhY3573N3bDPfuu5Gi7N884
HIxSD6beYvlob8h2kPHjuj9w/8DM3bCj8PInKWk4H+ZuWHjC5GE0zN4FPvYz
lqx7bQ9zb79YndlmJWGHd/8DjHc/kIXTMPUwfwMAf4a6Yg==
                    "], "Version" -> {13.1, 0}, "ID" -> 2566335944547631010, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>]}, 
                 "Invertibility" -> "Impossible", "StructurePreserving" -> 
                 True, "Missing" -> "Forbidden"|>], 
               MachineLearning`MLProcessor[
               "EmbedNominalVector", <|
                "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                 "Index" -> {<|
                   "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, "BOTSWANA" -> 
                    4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 7, 
                    "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                   "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>}, 
                 "Output" -> <|
                  "(f1f2)" -> <|
                    "Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
                 "EmbeddingVectors" -> {CompressedData["
1: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
AYwY2QUp9dHwDxWH4HQ=
                   "], 
                   RawArray["Real32",{{0., 0., 0., 0., 0.}, {
                    0.09429772198200226, -0.24127089977264404`, \
-0.5270462036132812, -0.24486297369003296`, -0.5337972044944763}, {
                    0.3855826258659363, 0.345225065946579, 
                    0.375460684299469, -0.6187008023262024, \
-0.9083080291748047}, {0.038637321442365646`, -0.39784038066864014`, 
                    0.4888850748538971, -0.3776519000530243, 
                    0.04570373147726059}, {
                    0.1278393715620041, -0.05385725945234299, 
                    0.7183319926261902, 
                    0.20311319828033447`, -0.020085696130990982`}, {
                    0.2800740897655487, 0.3026285469532013, 
                    0.013881713151931763`, 0.6868195533752441, 
                    0.08314655721187592}, {-0.8298808336257935, 
                    0.34320393204689026`, 0.0243590846657753, 
                    0.07180754095315933, -0.6089136004447937}, \
{-0.10904797911643982`, -0.2677527964115143, 0.5590679049491882, 
                    0.48168694972991943`, -0.6030200719833374}, {
                    0.22935371100902557`, 
                    0.18263663351535797`, -0.7634024620056152, \
-0.029437005519866943`, -1.0930653810501099`}, {
                    0.14211100339889526`, -0.2188272774219513, \
-0.5335532426834106, -0.15458126366138458`, -0.20572292804718018`}, {
                    0.4123682975769043, 
                    0.36278361082077026`, -0.48854225873947144`, 
                    0.04904557392001152, 
                    0.27460458874702454`}, {-0.10662871599197388`, 
                    0.2889917492866516, 
                    0.4839726388454437, -1.046645164489746, 
                    0.2283746600151062}}]}, "Version" -> {13.1, 0}, "ID" -> 
                 4560545129116418848|>]}, "Invertibility" -> "Impossible", 
             "StructurePreserving" -> True, "Missing" -> "Forbidden"|>], 
           MachineLearning`MLProcessor[
           "MergeVectors", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>, 
               "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
               Span[1, 54], 
               Span[55, 66], 
               Span[67, 70]}, "Wrappers" -> {SparseArray, Identity, Identity},
              "Output" -> <|
              "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

                  "], "Type" -> "NumericalVector"|>|>, "Version" -> {13.1, 0},
              "ID" -> 324326445301658208|>]}, "Invertibility" -> "Impossible",
          "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 4199606916556033440|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|
               "A" -> 1, "B" -> 2, "C" -> 3, "D" -> 4, "E" -> 5|>}, 
             "MissingCode" -> 0, "Version" -> {13.1, 0}, "ID" -> 
             18782000146286335, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {5}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 7688100530236977542|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 5|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       "A" -> 0.001329282187618686, "B" -> 0.005507026205848841, "C" -> 
        0.04044815799468287, "D" -> 0.5218382073680212, "E" -> 
        0.4308773262438283|>|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> 
       MachineLearning`MLProcessor[
        "KeyIndexSplit", <|
         "Index" -> "Ratings", 
          "Order" -> {
           "Country", "GICS Sector Name", 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
            "Carbon Disclosure", "Revenue (USD mn)", "Ratings"}|>], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {5, 6}, 0., {
      1, {{0, 1, 2, 3, 4, 5}, {{2}, {3}, {4}, {5}, {6}}}, {1., 1., 1., 1., 
       1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "LogProbabilitiesFunction" -> 
      LinearLayer[<|
        "Type" -> "Linear", "Arrays" -> <|"Weights" -> CompressedData["
1:eJw9kH9M1GUcxw92O9BBUIxLximSoZZBFKVcd9/newqDUxw/LmYywDxXiHWD
eYj8cLkmdxB5gUzJQYYRhOWGx3FMlPs+z4NC4UooxdSMxbis6FhR2NdwDRbv
2/SP9/f9fJ7v5/V5f/bE7ik1FQUqFIqy4KWPyVyx2Wo1V72qQvGm2ZL0ogU/
lUtKW1JJTw1xGt+lKaoQfjDgJ4/P9Dgz3jtG1NeekUiKi/KMBLaqfyVPPlnM
l6tL2MLckDC638bU176QwObVb2T/LYRyONiOF2QBLLwzQGY4b5oK9ffoZO+j
umX+AYMjd2kNxWXjKX1/ahutaOimsZp7/hz0NpU84WcwG3uihsCGPdZJMHfW
nKknZV0ChHtk/96tIq1R93mHvNzgHj4suiM+E4sWzOI/hTJVV8WyjKc38vih
JjHuB4nFX58XH1R/J7yj5Cxf0HHN8A32Z3oNmfXaaNXVMG5t80jyW9vZKxuO
khxHqnTpVi996dd9bN3cOq498THfOuVi3ZfPCTsa+1iOY1gCm/TlLZq1agWH
gzU89bqfhVe7lRzniGkjQ4/6+Un2sE6PVXE4cvEu3bHTZHf4Wdp6oYKVF877
c9C7zBThZzAbe6KGwNrdjSLmbj8Vp2s/0CFAuEf2SEGIeG48ZLDo6gZDQ5hX
HHApDYe90eKRoRFyfLMsBLU8yTKSE8XnDkyz8/XNYl3DFjZ3dz0/fec87Wpy
8DPOr8jPt1soWa3hi2n1urLBLnZCLCYu+0XprG+EFr7Wz2b35/IqWeLRAxfZ
t3vfI7mZ48xl11KwN1oklntnC4eD/eOCWwALn4yp5DgHrejw96ScPPSoLrJt
43Dk4l2ya8pFh9XBOoXJga/nKjly0CtrYxgcs7EnaghsvDPSgLke3180PcYm
QLhHdmPdhKg5kzW4s6/UEKlQGpwHrYb3x/aKW8fCDfmXSoRfVNGcS9/T5kWZ
tWoXyU7jR9SaM65vO/4vba5+lnzanydGFXio/fTbPODzv8mH3EaTel8Wb870
6CY+WMkWyQTt3aTnbyxzc6c3zvNN1JCwS53tuTmTqAdrKQ8lrrsxHA726PUc
Aha+e22dgHNquIOixzhaQx7WSa2/MThy8S71LJ6sOZQg7BtIoJWRxQJy0Pvj
bC2DYzb2RA2BvR/U7s+2JVrIlU9S/MI9so9cYcxuus32RPeIaXmjZGqNRsyu
VQv5gbtYb1oymclcL2T5fLR0dZ8UGLyDhBa062st45JWmKHBYwr6P3ycOuM=

            "], "Biases" -> 
           RawArray[
             "Real32",{-5.716137886047363, -4.352511405944824, \
-3.6987926959991455`, 0.4184072017669678}]|>, 
         "Parameters" -> <|
          "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 70, 
           "$InputDimensions" -> {70}|>, 
         "Inputs" -> <|
          "Input" -> NeuralNetworks`TensorT[{70}, NeuralNetworks`AtomT]|>, 
         "Outputs" -> <|
          "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
        "Version" -> "13.1.4", "Unstable" -> False|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|"Info" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwB+JJKp5AdMh+fbXMg/b7E0bpIULf27dkZ6nQUZrRSbeE
JT3ev8dJAwDM9zWW
            "], "Type" -> "NumericalVector"|>, "Key" -> 
         "(f6(f1f2)(f3f4f5f7))", "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "Calibrator" -> None, "Method" -> "LogisticRegression", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
        "OptimizationMethod" -> <|"Value" -> "LBFGS", "Options" -> <||>|>, 
        MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 0.487863`6.139842875545205, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[0.8345592707914701, 0.014037939481563939`], "Accuracy" -> 
         Around[0.5440746888595295, 0.01302169606479147], "EvaluationTime" -> 
         1.5200217154951593`*^-6, "TestSize" -> 2900, "ModelMemory" -> 12096, 
         "ModelUtility" -> -0.5157021969200489, "TrainingSize" -> 1000, 
         "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 2311648,
          "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[0.8345592707914701, 0.009926322201300228]}, 
         "AccuracyHistory" -> {
           Around[0.5440746888595295, 0.009207729589964228]}, 
         "Configuration" -> {
          "LogisticRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           0.1, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 5261|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 100000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.5867555142180376`, 0.02010644506318761], "Accuracy" -> 
              Around[0.419992238760501, 0.06962939267631489], 
              "EvaluationTime" -> 0.000031622776601683795`, "TestSize" -> 100,
               "ModelMemory" -> 12096, "ModelUtility" -> -1.1574176820634445`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 112296, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5867555142180376`, 0.014217403649734738`]}, 
              "AccuracyHistory" -> {
                Around[0.419992238760501, 0.04923541573132319]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.586663785808054, 0.007107949043054075], "Accuracy" -> 
              Around[0.4361015326168771, 0.02463536506232846], 
              "EvaluationTime" -> 2.1889963586716415`*^-6, "TestSize" -> 800, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.1557243245734639`, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.003981071705534969, 
              "TrainingMemory" -> 153984, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.586663785808054, 0.005026078968671967]}, 
              "AccuracyHistory" -> {
                Around[0.4361015326168771, 0.017419833692578608`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5861246453214242`, 0.006353596646981605], "Accuracy" -> 
              Around[0.4667334270210763, 0.022173108591490086`], 
              "EvaluationTime" -> 2.098587138277019*^-6, "TestSize" -> 1000, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.1552897377019389`, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 500496, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5861246453214242`, 0.004492671274004803]}, 
              "AccuracyHistory" -> {
                Around[0.4667334270210763, 0.015678755445028336`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 2.098587138277019*^-6, "MeanCrossEntropy" -> 
             Around[1.5861246453214242`, 0.006353596646981605], "ModelMemory" -> 
             12096, "TrainingMemory" -> 500496, "TrainingTime" -> 
             0.17856258358345647`|>, "Index" -> 1|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 100.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.5572178082503443`, 0.00621067434007511], "Accuracy" -> 
              Around[0.4628132257109344, 0.022148356815640983`], 
              "EvaluationTime" -> 2.2152886727969693`*^-6, "TestSize" -> 1000,
               "ModelMemory" -> 12096, "ModelUtility" -> -1.136893317930264, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 161576, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5572178082503443`, 0.004391609941608396]}, 
              "AccuracyHistory" -> {
                Around[0.4628132257109344, 0.015661253296479025`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.485641417593719, 0.006918330590323021], "Accuracy" -> 
              Around[0.42500752925794744`, 0.024572378787071716`], 
              "EvaluationTime" -> 2.188996358671642*^-6, "TestSize" -> 800, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.089972736216314, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 221616, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.485641417593719, 0.004891998474907738]}, 
              "AccuracyHistory" -> {
                Around[0.42500752925794744`, 0.01737529567022288]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2555403760059742`, 0.005891171350843548], "Accuracy" -> 
              Around[0.4719654408350401, 0.015365329596567888`], 
              "EvaluationTime" -> 1.4396340791066942`*^-6, "TestSize" -> 2100,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.9216992458363632, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 500496, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2555403760059742`, 0.0041656872113133864`]}, 
              "AccuracyHistory" -> {
                Around[0.4719654408350401, 0.010864928752899511`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1.4396340791066942`*^-6, "MeanCrossEntropy" -> 
             Around[1.2555403760059742`, 0.005891171350843548], "ModelMemory" -> 
             12096, "TrainingMemory" -> 500496, "TrainingTime" -> 
             0.4232157277216978|>, "Index" -> 2|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.1|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.6068596039593246`, 0.0773718251496379], "Accuracy" -> 
              Around[0.46970262467234347`, 0.022168439534232556`], 
              "EvaluationTime" -> 2.2535743732392292`*^-6, "TestSize" -> 1000,
               "ModelMemory" -> 12096, "ModelUtility" -> -1.177061034274473, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              216952, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.6068596039593246`, 0.054710142236088825`]}, 
              "AccuracyHistory" -> {
                Around[0.46970262467234347`, 0.01567545392297979]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.4342643021333312`, 0.08800767361211348], "Accuracy" -> 
              Around[0.4710094905958181, 0.028708180789419876`], 
              "EvaluationTime" -> 3.00161485618471*^-6, "TestSize" -> 600, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.0660447142974228`, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 252784, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.4342643021333312`, 0.062230822807577815`]}, 
              "AccuracyHistory" -> {
                Around[0.4710094905958181, 0.020299749311728166`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.9862644862541707, 0.03666978565229267], "Accuracy" -> 
              Around[0.495775510572053, 0.02029155523136279], 
              "EvaluationTime" -> 2.3077736422941293`*^-6, "TestSize" -> 1200,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.6867730658836596, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 500448, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.9862644862541707, 0.025929454099393307`]}, 
              "AccuracyHistory" -> {
                Around[0.495775510572053, 0.01434829630491799]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8345592707914701, 0.014037939481563939`], "Accuracy" -> 
              Around[0.5440746888595295, 0.01302169606479147], 
              "EvaluationTime" -> 1.5200217154951593`*^-6, "TestSize" -> 2900,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5157021969200489, 
              "TrainingSize" -> 1000, "TrainingTime" -> 0.025118864315095794`,
               "TrainingMemory" -> 2311648, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8345592707914701, 0.009926322201300228]}, 
              "AccuracyHistory" -> {
                Around[0.5440746888595295, 0.009207729589964228]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8490721296435619, 0.02334735024021866], "Accuracy" -> 
              Around[0.5235726194290193, 0.0217169979017203], 
              "EvaluationTime" -> 2.3649723133358664`*^-6, "TestSize" -> 1052,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5350684929342929, 
              "TrainingSize" -> 4209, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 9577952, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8490721296435619, 0.016509069677595984`]}, 
              "AccuracyHistory" -> {
                Around[0.5235726194290193, 0.015356236483320447`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 2.3649723133358664`*^-6, "MeanCrossEntropy" -> 
             Around[0.8490721296435619, 0.02334735024021866], "ModelMemory" -> 
             12096, "TrainingMemory" -> 9577952, "TrainingTime" -> 
             0.1092863113063541|>, "Index" -> 3|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.01|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.4967220269994868`, 0.14266963841520558`], "Accuracy" -> 
              Around[0.4676858793011964, 0.0221707445718778], 
              "EvaluationTime" -> 2.1502495499310894`*^-6, "TestSize" -> 1000,
               "ModelMemory" -> 12096, "ModelUtility" -> -1.6195376259531793`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              217360, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.4967220269994868`, 0.10088266879282462`]}, 
              "AccuracyHistory" -> {
                Around[0.4676858793011964, 0.015677083830729632`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.1884535869775723`, 0.12793690731530985`], "Accuracy" -> 
              Around[0.47430381627930696`, 0.02224042300550233], 
              "EvaluationTime" -> 2.318613496105109*^-6, "TestSize" -> 1000, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.4880145387198338`, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 252416, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.1884535869775723`, 0.0904650547266904]}, 
              "AccuracyHistory" -> {
                Around[0.47430381627930696`, 0.015726353923647993`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1740736750388558`, 0.055332090579028805`], "Accuracy" -> 
              Around[0.49633599889548674`, 0.015378115771179056`], 
              "EvaluationTime" -> 1.4706050899952081`*^-6, "TestSize" -> 2100,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.8630561891633802, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 500800, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1740736750388558`, 0.03912569646565955]}, 
              "AccuracyHistory" -> {
                Around[0.49633599889548674`, 0.010873969943672504`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8533657358424104, 0.014052513132589997`], "Accuracy" -> 
              Around[0.5534665196529994, 0.010738989117268422`], 
              "EvaluationTime" -> 1.3139230698005645`*^-6, "TestSize" -> 4261,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5379161613656486, 
              "TrainingSize" -> 1000, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 2314072, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8533657358424104, 0.0099366273287674]}, 
              "AccuracyHistory" -> {
                Around[0.5534665196529994, 0.007593612027909037]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8492194711994873, 0.023478439603292548`], "Accuracy" -> 
              Around[0.5235726194290193, 0.0217169979017203], 
              "EvaluationTime" -> 1.358051210209762*^-6, "TestSize" -> 1052, 
              "ModelMemory" -> 12096, "ModelUtility" -> -0.535271763958759, 
              "TrainingSize" -> 4209, "TrainingTime" -> 0.12589254117941673`, 
              "TrainingMemory" -> 9577952, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8492194711994873, 0.016601763855166953`]}, 
              "AccuracyHistory" -> {
                Around[0.5235726194290193, 0.015356236483320447`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1.358051210209762*^-6, "MeanCrossEntropy" -> 
             Around[0.8492194711994873, 0.023478439603292548`], "ModelMemory" -> 
             12096, "TrainingMemory" -> 9577952, "TrainingTime" -> 
             0.16735819889401554`|>, "Index" -> 4|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.0001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[4.607255866126396, 0.3083134748183359], "Accuracy" -> 
              Around[0.47188488435930487`, 0.02337087344308368], 
              "EvaluationTime" -> 2.4455185212720893`*^-6, "TestSize" -> 900, 
              "ModelMemory" -> 12096, "ModelUtility" -> -2.234122673830362, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              217120, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[4.607255866126396, 0.21801054877523313`]}, 
              "AccuracyHistory" -> {
                Around[0.47188488435930487`, 0.016525703093857067`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[8.655816289956082, 0.6492350818957129], "Accuracy" -> 
              Around[0.44076253038601587`, 0.022070075604469244`], 
              "EvaluationTime" -> 2.215288672796969*^-6, "TestSize" -> 1000, 
              "ModelMemory" -> 12096, "ModelUtility" -> -2.866316423446577, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 252624, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[8.655816289956082, 0.4590785289926621]}, 
              "AccuracyHistory" -> {
                Around[0.44076253038601587`, 0.015605900121219993`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2227395327114876`, 0.07914606459851704], "Accuracy" -> 
              Around[0.4965238985524683, 0.020254240869503438`], 
              "EvaluationTime" -> 2.3441017290394615`*^-6, "TestSize" -> 1200,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.9071516759437529, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 500496, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2227395327114876`, 0.05596471898183994]}, 
              "AccuracyHistory" -> {
                Around[0.4965238985524683, 0.014321911066611594`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8533697154202002, 0.014084285270661585`], "Accuracy" -> 
              Around[0.552743196088772, 0.010741361700464159`], 
              "EvaluationTime" -> 1.5498289169056235`*^-6, "TestSize" -> 4261,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5379282314798981, 
              "TrainingSize" -> 1000, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 2311952, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8533697154202002, 0.009959093623050615]}, 
              "AccuracyHistory" -> {
                Around[0.552743196088772, 0.0075952896975756716`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.849240297549017, 0.023494134940390852`], "Accuracy" -> 
              Around[0.5235726194290193, 0.0217169979017203], 
              "EvaluationTime" -> 1.3782039274503667`*^-6, "TestSize" -> 1052,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5352998289223678, 
              "TrainingSize" -> 4209, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 9577888, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.849240297549017, 0.016612862134462173`]}, 
              "AccuracyHistory" -> {
                Around[0.5235726194290193, 0.015356236483320447`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1.3782039274503667`*^-6, "MeanCrossEntropy" -> 
             Around[0.849240297549017, 0.023494134940390852`], "ModelMemory" -> 
             12096, "TrainingMemory" -> 9577888, "TrainingTime" -> 
             0.08886592039226171|>, "Index" -> 5|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.1366325109339155`, 0.045104343782960264`], "Accuracy" -> 
              Around[0.5009702324820644, 0.03637948418890273], 
              "EvaluationTime" -> 2.4934892726500266`*^-6, "TestSize" -> 1900,
               "ModelMemory" -> 12096., "ModelUtility" -> -0.8291703120543495,
               "TrainingSize" -> 10, "TrainingTime" -> 0.011726169411961113`, 
              "TrainingMemory" -> 216989.3333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1791548369564513`, 0.022618130740631244`], 
                Around[1.0941101849113797`, 0.020141120807237168`]}, 
              "AccuracyHistory" -> {
                Around[0.46641291911712934`, 0.016519959507341676`], 
                Around[0.5355275458469994, 0.015670626034512396`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.0823101153508006`, 0.03415728382388353], "Accuracy" -> 
              Around[0.4905037859451286, 0.024887261522296915`], 
              "EvaluationTime" -> 2.2702952622539914`*^-6, "TestSize" -> 800, 
              "ModelMemory" -> 12096, "ModelUtility" -> -0.778585037736192, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 252720, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.0823101153508006`, 0.024152847018781606`]}, 
              "AccuracyHistory" -> {
                Around[0.4905037859451286, 0.017597951387579188`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.9450412883382344, 0.02776770110685037], "Accuracy" -> 
              Around[0.516145013285822, 0.02225151770738168], 
              "EvaluationTime" -> 2.4138696118535783`*^-6, "TestSize" -> 1000,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.6425278454331963, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 500512, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.9450412883382344, 0.019634729750615098`]}, 
              "AccuracyHistory" -> {
                Around[0.516145013285822, 0.015734199062582124`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8453990694088364, 0.013357611613662675`], "Accuracy" -> 
              Around[0.5511445110863992, 0.01258547914082055], 
              "EvaluationTime" -> 1.51169348411126*^-6, "TestSize" -> 3100, 
              "ModelMemory" -> 12096, "ModelUtility" -> -0.5284037978451769, 
              "TrainingSize" -> 1000, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 2311712, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8453990694088364, 0.009445257752477058]}, 
              "AccuracyHistory" -> {
                Around[0.5511445110863992, 0.008899277644956054]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8502031032943845, 0.022808412774472715`], "Accuracy" -> 
              Around[0.5330241450032871, 0.0217043938579966], 
              "EvaluationTime" -> 1.4560360610403467`*^-6, "TestSize" -> 1052,
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5362662473146035, 
              "TrainingSize" -> 4209, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 9577824, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8502031032943845, 0.01612798334093153]}, 
              "AccuracyHistory" -> {
                Around[0.5330241450032871, 0.015347324078533047`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1.4560360610403467`*^-6, "MeanCrossEntropy" -> 
             Around[0.8502031032943845, 0.022808412774472715`], "ModelMemory" -> 
             12096, "TrainingMemory" -> 9577824, "TrainingTime" -> 
             0.09059208980422283|>, "Index" -> 6|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.5834074396810567`, 0.0031955182170087457`], "Accuracy" -> 
              Around[0.49614085557119036`, 0.03608571987316389], 
              "EvaluationTime" -> 2.167470353815779*^-6, "TestSize" -> 2000, 
              "ModelMemory" -> 12096., "ModelUtility" -> -1.1531778765618408`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.005011872336272719, 
              "TrainingMemory" -> 134901.3333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5838309407896394`, 0.0044812673093490105`], 
                Around[1.5829839385724738`, 0.00447729926829865]}, 
              "AccuracyHistory" -> {
                Around[0.46179851267339095`, 0.01566858454955257], 
                Around[0.5304831984689898, 0.015672464405374512`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5750919223132704`, 0.007020113451386405], "Accuracy" -> 
              Around[0.4348728555872925, 0.024627343191365808`], 
              "EvaluationTime" -> 2.124418344104054*^-6, "TestSize" -> 800, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.1483998279947492`, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005011872336272719, 
              "TrainingMemory" -> 172576, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5750919223132704`, 0.004963969826174226]}, 
              "AccuracyHistory" -> {
                Around[0.4348728555872925, 0.017414161373223113`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5266380078139148`, 0.005313367574070712], "Accuracy" -> 
              Around[0.463413673230472, 0.019438316959059655`], 
              "EvaluationTime" -> 2.283734309422956*^-6, "TestSize" -> 1300, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.1169589826784168`, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 500560, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5266380078139148`, 0.0037571182425621156`]}, 
              "AccuracyHistory" -> {
                Around[0.463413673230472, 0.01374496573660455]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 2.283734309422956*^-6, "MeanCrossEntropy" -> 
             Around[1.5266380078139148`, 0.005313367574070712], "ModelMemory" -> 
             12096, "TrainingMemory" -> 500560, "TrainingTime" -> 
             0.21395991448049495`|>, "Index" -> 7|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 10000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.5864876683738112`, 0.006356255839586687], "Accuracy" -> 
              Around[0.46081103087603636`, 0.022154731882449274`], 
              "EvaluationTime" -> 2.215288672796969*^-6, "TestSize" -> 1000, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.155518737646653, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.005011872336272719, 
              "TrainingMemory" -> 124728, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5864876683738112`, 0.004494551607128338]}, 
              "AccuracyHistory" -> {
                Around[0.46081103087603636`, 0.015665761149449686`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5855951462653477`, 0.00709924338108061], "Accuracy" -> 
              Around[0.4348728555872925, 0.024627343191365808`], 
              "EvaluationTime" -> 2.205717247686404*^-6, "TestSize" -> 800, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.155050090335687, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005011872336272719, 
              "TrainingMemory" -> 160024, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5855951462653477`, 0.005019923136055812]}, 
              "AccuracyHistory" -> {
                Around[0.4348728555872925, 0.017414161373223113`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5802532681305406`, 0.005761965951571388], "Accuracy" -> 
              Around[0.4621487527889235, 0.020227012703391466`], 
              "EvaluationTime" -> 2.4480769307724795`*^-6, "TestSize" -> 1200,
               "ModelMemory" -> 12096, "ModelUtility" -> -1.1515093110606376`,
               "TrainingSize" -> 200, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 500448, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5802532681305406`, 0.004074325197322126]}, 
              "AccuracyHistory" -> {
                Around[0.4621487527889235, 0.014302657845714545`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5629241707331911`, 0.002552843430105014], "Accuracy" -> 
              Around[0.5308112874774351, 0.012618545975694836`], 
              "EvaluationTime" -> 2.2844516691094826`*^-6, "TestSize" -> 3100,
               "ModelMemory" -> 12096, "ModelUtility" -> -1.1400803572929177`,
               "TrainingSize" -> 1000, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 2321312, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5629241707331911`, 0.0018051329007347813`]}, 
              "AccuracyHistory" -> {
                Around[0.5308112874774351, 0.008922659428128038]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 2.2844516691094826`*^-6, "MeanCrossEntropy" -> 
             Around[1.5629241707331911`, 0.002552843430105014], "ModelMemory" -> 
             12096, "TrainingMemory" -> 2321312, "TrainingTime" -> 
             0.21445605476446758`|>, "Index" -> 8|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.*^6|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.5867793475457725`, 0.0031791956380642235`], "Accuracy" -> 
              Around[0.4961429403100689, 0.037028592778387374`], 
              "EvaluationTime" -> 2.167470353815779*^-6, "TestSize" -> 2000, 
              "ModelMemory" -> 12096., "ModelUtility" -> -1.1553022248293376`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.003981071705534968, 
              "TrainingMemory" -> 110157.33333333333`, "ExperimentCount" -> 2,
               "MeanCrossEntropyHistory" -> {
                Around[1.5867797820626397`, 0.004496063803771927], 
                Around[1.5867789130289054`, 0.004496059289820295]}, 
              "AccuracyHistory" -> {
                Around[0.46081103087603636`, 0.015665761149449686`], 
                Around[0.5314748497441014, 0.01567403905276425]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5867708360459962`, 0.007108827590379262], "Accuracy" -> 
              Around[0.4361015326168771, 0.02463536506232846], 
              "EvaluationTime" -> 2.188996358671642*^-6, "TestSize" -> 800, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.1557918413010415`, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.003981071705534969, 
              "TrainingMemory" -> 147936, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5867708360459962`, 0.0050267001954432]}, 
              "AccuracyHistory" -> {
                Around[0.4361015326168771, 0.017419833692578608`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.5867167637511777`, 0.00759918173773388], "Accuracy" -> 
              Around[0.4572470048691059, 0.02646530161430541], 
              "EvaluationTime" -> 4.362670860958945*^-6, "TestSize" -> 700, 
              "ModelMemory" -> 12096, "ModelUtility" -> -1.1558195466167425`, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 500448, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5867167637511777`, 0.0053734329382205985`]}, 
              "AccuracyHistory" -> {
                Around[0.4572470048691059, 0.018713794237622636`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 4.362670860958945*^-6, "MeanCrossEntropy" -> 
             Around[1.5867167637511777`, 0.00759918173773388], "ModelMemory" -> 
             12096, "TrainingMemory" -> 500448, "TrainingTime" -> 
             0.3351414012779906|>, "Index" -> 9|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 10.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.368834592427111, 0.008820560621558754], "Accuracy" -> 
              Around[0.4822182920484434, 0.022238200608329223`], 
              "EvaluationTime" -> 2.3568991965473695`*^-6, "TestSize" -> 1000,
               "ModelMemory" -> 12096, "ModelUtility" -> -1.008442855378993, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              217192, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.368834592427111, 0.006237078229371223]}, 
              "AccuracyHistory" -> {
                Around[0.4822182920484434, 0.015724782451536398`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1714179801446565`, 0.016276176608151862`], "Accuracy" -> 
              Around[0.45437087919448227`, 0.028637496896469987`], 
              "EvaluationTime" -> 3.497689083781728*^-6, "TestSize" -> 600, 
              "ModelMemory" -> 12096, "ModelUtility" -> -0.8541851959379404, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 252720, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1714179801446565`, 0.011508994851414042`]}, 
              "AccuracyHistory" -> {
                Around[0.45437087919448227`, 0.020249768251702636`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.9910015213792528, 0.019389589805684827`], "Accuracy" -> 
              Around[0.4870142255162281, 0.022225804913769003`], 
              "EvaluationTime" -> 3.181475722071719*^-6, "TestSize" -> 1000, 
              "ModelMemory" -> 12096, "ModelUtility" -> -0.6880614855465232, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 500384, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.9910015213792528, 0.013710510436025293`]}, 
              "AccuracyHistory" -> {
                Around[0.4870142255162281, 0.01571601737185535]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8753850392440653, 0.036298279405637415`], "Accuracy" -> 
              Around[0.5360586264183236, 0.040504083237605286`], 
              "EvaluationTime" -> 0.00003549765271234818, "TestSize" -> 300, 
              "ModelMemory" -> 12096, "ModelUtility" -> -0.5683626903866362, 
              "TrainingSize" -> 1000, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 2311888, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8753850392440653, 0.025666759513130216`]}, 
              "AccuracyHistory" -> {
                Around[0.5360586264183236, 0.028640711923055066`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.864004186908349, 0.022801967965184047`], "Accuracy" -> 
              Around[0.5388521208307068, 0.021671202265388392`], 
              "EvaluationTime" -> 1.435883343799742*^-6, "TestSize" -> 1052, 
              "ModelMemory" -> 12096, "ModelUtility" -> -0.5522818620583115, 
              "TrainingSize" -> 4209, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 9577888, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.864004186908349, 0.01612342617258006]}, 
              "AccuracyHistory" -> {
                Around[0.5388521208307068, 0.015323854078321403`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1.435883343799742*^-6, "MeanCrossEntropy" -> 
             Around[0.864004186908349, 0.022801967965184047`], "ModelMemory" -> 
             12096, "TrainingMemory" -> 9577888, "TrainingTime" -> 
             0.08886592039226171|>, "Index" -> 10|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[13.038488389286524`, 0.9926406521255909], "Accuracy" -> 
              Around[0.4418435572943699, 0.022082600560661268`], 
              "EvaluationTime" -> 2.163626261142899*^-6, "TestSize" -> 1000, 
              "ModelMemory" -> 12096, "ModelUtility" -> -3.276212386911534, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 252624, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[13.038488389286524`, 0.701902936399442]}, 
              "AccuracyHistory" -> {
                Around[0.4418435572943699, 0.015614756602677438`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 2.163626261142899*^-6, "MeanCrossEntropy" -> 
             Around[13.038488389286524`, 0.9926406521255909], "ModelMemory" -> 
             12096, "TrainingMemory" -> 252624, "TrainingTime" -> 
             0.6749099132628529|>, "Index" -> 11|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.00001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[11.97241329723768, 0.9102444035024232], "Accuracy" -> 
              Around[0.4418435572943699, 0.022082600560661268`], 
              "EvaluationTime" -> 2.2669510844510388`*^-6, "TestSize" -> 1000,
               "ModelMemory" -> 12096, "ModelUtility" -> -3.190891560096386, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 252904, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[11.97241329723768, 0.6436399902536674]}, 
              "AccuracyHistory" -> {
                Around[0.4418435572943699, 0.015614756602677438`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 2.2669510844510388`*^-6, "MeanCrossEntropy" -> 
             Around[11.97241329723768, 0.9102444035024232], "ModelMemory" -> 
             12096, "TrainingMemory" -> 252904, "TrainingTime" -> 
             0.6749099132628529|>, "Index" -> 12|>, <|
          "Value" -> "LogisticRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[4.624688002147973, 0.2965997114105186], "Accuracy" -> 
              Around[0.4748448180268816, 0.017076607334990716`], 
              "EvaluationTime" -> 3.2486556457460178`*^-6, "TestSize" -> 1700,
               "ModelMemory" -> 12096, "ModelUtility" -> -2.237349343082758, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.19952623149688792`, 
              "TrainingMemory" -> 457088, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[4.624688002147973, 0.2097276672363507]}, 
              "AccuracyHistory" -> {
                Around[0.4748448180268816, 0.012074984846231873`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2321645032853796`, 0.09515159166552996], "Accuracy" -> 
              Around[0.4923714951761179, 0.023374949057491014`], 
              "EvaluationTime" -> 2.9403637649479994`*^-6, "TestSize" -> 900, 
              "ModelMemory" -> 12096, "ModelUtility" -> -0.9172941530305947, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 500496, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2321645032853796`, 0.0672823357073896]}, 
              "AccuracyHistory" -> {
                Around[0.4923714951761179, 0.016528584988441994`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 2.9403637649479994`*^-6, "MeanCrossEntropy" -> 
             Around[1.2321645032853796`, 0.09515159166552996], "ModelMemory" -> 
             12096, "TrainingMemory" -> 500496, "TrainingTime" -> 
             0.6164323857737838|>, "Index" -> 13|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LogisticRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 13], <||>], "MaxTrainingSize" -> 5261, 
      "PreprocessorEvaluationTime" -> 2.1953125*^-6, "PreprocessorMemory" -> 
      194128, "InputDimension" -> 70, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -0.8693687048950245, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.879423128329367`16.341342139803256*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.10564400000000004`, 
          "ElapsedTimes" -> 0.18693699999999996`, "ExperimentCounts" -> 
          13|>, <|"TrainingSizes" -> 40, "TimeBudgets" -> 
          0.15092000000000003`, "ElapsedTimes" -> 0.473193, 
          "ExperimentCounts" -> 13|>, <|
         "TrainingSizes" -> 200, "TimeBudgets" -> 0.2156000000000002, 
          "ElapsedTimes" -> 0.223014, "ExperimentCounts" -> 11|>, <|
         "TrainingSizes" -> 1000, "TimeBudgets" -> 0.3080000000000002, 
          "ElapsedTimes" -> 0.30732699999999996`, "ExperimentCounts" -> 6|>, <|
         "TrainingSizes" -> 4209, "TimeBudgets" -> 0.44000000000000006`, 
          "ElapsedTimes" -> 0.447361, "ExperimentCounts" -> 5|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"}, "ID" -> 
           4840131171699015203|>, 
         "f2" -> <|
          "Type" -> "Nominal", "Weight" -> 1, 
           "Values" -> {"Information Technology"}, "ID" -> 
           5042234179079910413|>, 
         "f3" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537}, "ID" -> 
           8143623558489070887|>, 
         "f4" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {10.982}, "ID" -> 
           7788679715678402894|>, 
         "f5" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.982}, "ID" -> 
           4867089090251939422|>, 
         "f6" -> <|
          "Type" -> "Text", "Weight" -> 1, "Values" -> {"Estimated data"}, 
           "ID" -> 1244584425521089410|>, 
         "f7" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {624.605427784142}, "ID" -> 824640885889355554|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 2.30653, 
      "MaxTrainingMemory" -> 12906600, "DataMemory" -> 8209648, 
      "FunctionMemory" -> 429728, "LanguageVersion" -> {13.1, 0}, "Date" -> 
      DateObject[{2022, 12, 7, 17, 32, 8.77978`7.6960586206536155}, "Instant",
         "Gregorian", 1.], "ProcessorCount" -> 8, "ProcessorType" -> "ARM64", 
      "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878619160734618*^9, 3.8786192245310097`*^9, {3.878715800641226*^9, 
   3.87871584525163*^9}, 3.878715887355948*^9, 3.8788055501495533`*^9, 
   3.87880572388905*^9, 3.878806815602689*^9, 3.878806970579384*^9, 
   3.878811612125744*^9, 3.8791490032180023`*^9, 3.879160963309402*^9, 
   3.879325459923882*^9, {3.8793329903141823`*^9, 3.8793329994660587`*^9}, 
   3.879354647755681*^9, 3.879417658845533*^9, 3.879419528852079*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"2c1ad0a7-4ef8-4fdc-934f-45b73284ece8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Data type"], 
                   TextCell["Data type"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{
                   InterpretationBox[
                    Cell["Mixed"], 
                    TextCell["Mixed"]], 
                   StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]},
                  "RowDefault"],
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                  Short[#, 10]& ]],
                Annotation[#, 
                 
                 Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                   "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classes"], 
                   TextCell["Classes"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{",", "\",\"", 
                 InterpretationBox[
                  Cell["A"], 
                  TextCell["A"]], 
                 InterpretationBox[
                  Cell["B"], 
                  TextCell["B"]], 
                 InterpretationBox[
                  Cell["C"], 
                  TextCell["C"]], 
                 InterpretationBox[
                  Cell["D"], 
                  TextCell["D"]], 
                 InterpretationBox[
                  Cell["E"], 
                  TextCell["E"]]},
                "RowWithSeparators"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"54.4", "1.3"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    54.407468885952944504`3., 1.3021696064791470349`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Method"], 
                   TextCell["Method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 
                 InterpretationBox[Cell[
                  "LogisticRegression",ExpressionUUID->
                   "d432b64b-ce40-440c-a871-efe743ed0aa2"],
                  TextCell["LogisticRegression"]],
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"L1Regularization\"", "0"}, {
                    "\"L2Regularization\"", "0.1`"}, {
                    "\"OptimizationMethod\"", "\"LBFGS\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                  "Verdana", StripOnInput -> False]],
                Annotation[#, 
                 Style[
                  
                  Grid[{{"L1Regularization", 0}, {"L2Regularization", 0.1}, {
                    "OptimizationMethod", "LBFGS"}}, Alignment -> Left, Frame -> 
                   All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                   Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                 "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"1.85`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"51.5`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.8345592707914700759`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.014037939481563939`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.8064833918283421665`3.", "\", \"", 
                   "0.8626351497545979852`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.8064833918283421665`3., 
                   ", ", 0.8626351497545979852`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Model memory"], 
                   TextCell["Model memory"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"433.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training examples used"], 
                   TextCell["Training examples used"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               TemplateBox[{
                "5261", "\"examples\"", "examples", "\"Examples\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training time"], 
                   TextCell["Training time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"2.3`", "\"s\"", "seconds", "\"Seconds\""},
                "Quantity"]},
              {
               ItemBox[
                
                DynamicModuleBox[{
                 MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                 DynamicBox[ToBoxes[
                   Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.12806995314408862`}, {
                    3.6888794541139363`, 0.07909775243698179}, {
                    5.298317366548036, -0.05652666107962308}, {
                    6.907755278982137, -0.18085151288839527`}, {
                    8.344980368770571, -0.16361113792434978`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.12806995314408862`}}, {{3.6888794541139363`, 
                    0.07909775243698179}}, {{
                    5.298317366548036, -0.05652666107962308}}, {{
                    6.907755278982137, -0.18085151288839527`}}, {{
                    8.344980368770571, -0.16361113792434978`}}}]}}}, {{}, \
{}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 0.08757870258506896}, {
                    2.302585092994046, 0.16698526705572236`}, {
                    2.302585092994046, 0.16698526705572236`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, 0.04702940687610861}, {
                    3.6888794541139363`, 0.11016959274475441`}, {
                    3.6888794541139363`, 0.11016959274475441`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{{5.298317366548036, -0.08634950091642177}, {
                    5.298317366548036, -0.027567527018229756`}, {
                    5.298317366548036, -0.027567527018229756`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.907755278982137, -0.19781537084976616`}, {
                    6.907755278982137, -0.1641706336656584}, {
                    6.907755278982137, -0.1641706336656584}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.344980368770571, -0.19149375783181508`}, {
                    8.344980368770571, -0.13648491583038533`}, {
                    8.344980368770571, -0.13648491583038533`}}]}}}, {{}, \
{}}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.0725280624560205`, -0.20502637074398353`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 
                    8.568076401730806}, {-0.20502637074398353`, 
                    0.12806995314408862`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.5009702324820644}, {
                    3.6888794541139363`, 0.4905037859451286}, {
                    5.298317366548036, 0.516145013285822}, {6.907755278982137,
                     0.5440746888595295}, {8.344980368770571, 
                    0.5235726194290193}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.5009702324820644}}, {{3.6888794541139363`, 
                    0.4905037859451286}}, {{5.298317366548036, 
                    0.516145013285822}}, {{6.907755278982137, 
                    0.5440746888595295}}, {{8.344980368770571, 
                    0.5235726194290193}}}]}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0725280624560205`, 0.4636881957317154}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 8.568076401730806}, {
                    0.4636881957317154, 1.}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4616913743633876}, {
                    3.6888794541139363`, 0.4616335639063777}, {
                    5.298317366548036, 0.4612937111216605}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.44290077276014667`}, {
                    3.6888794541139363`, 0.39584661003884514`}, {
                    5.298317366548036, 0.2275660584022458}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.47428171763658034`}, {
                    3.6888794541139363`, 0.36065203630533216`}, {
                    5.298317366548036, -0.013830718712767219`}, {
                    6.907755278982137, -0.18085151288839527`}, {
                    8.344980368770571, -0.16361113792434978`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.9149786823132444}, {
                    3.6888794541139363`, 0.7831951697371881}, {
                    5.298317366548036, 0.16047947500658022`}, {
                    6.907755278982137, -0.1585670592072203}, {
                    8.344980368770571, -0.16343762054226785`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.01}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.5276324229673335`}, {
                    3.6888794541139363`, 2.158231498444996}, {
                    5.298317366548036, 0.20109385995209952`}, {
                    6.907755278982137, -0.15856239582744822`}, {
                    8.344980368770571, -0.1634130967355649}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.0001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.12806995314408862`}, {
                    3.6888794541139363`, 0.07909775243698179}, {
                    5.298317366548036, -0.05652666107962308}, {
                    6.907755278982137, -0.16794649162029662`}, {
                    8.344980368770571, -0.16228001298838013`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4595791322922551}, {
                    3.6888794541139363`, 0.454313633948026}, {
                    5.298317366548036, 0.4230679371074928}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.46152255916111634`}, {
                    3.6888794541139363`, 0.46095982345453423`}, {
                    5.298317366548036, 0.45758513047795096`}, {
                    6.907755278982137, 0.4465585350565471}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4617063944143866}, {
                    3.6888794541139363`, 0.46170103039032273`}, {
                    5.298317366548036, 0.46166695286953624`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1.*^6}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.31395971535944034`}, {
                    3.6888794541139363`, 0.15821496383409356`}, {
                    5.298317366548036, -0.00903920945731053}, {
                    6.907755278982137, -0.13309144456550345`}, {
                    8.344980368770571, -0.14617766423108577`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.030679774997896203`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 2.567905628712156}, {
                    3.6888794541139363`, 2.567905628712156}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1.*^-6}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.266747752497686, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 2.4826051113823606`}, {
                    3.6888794541139363`, 2.4826051113823606`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.00001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5028157299974758, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 1.5314089096938954`}, {
                    5.298317366548036, 0.20877238159158304`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4616913743633876}}, {{
                    3.6888794541139363`, 0.4616335639063777}}, {{
                    5.298317366548036, 0.4612937111216605}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.44290077276014667`}}, {{
                    3.6888794541139363`, 0.39584661003884514`}}, {{
                    5.298317366548036, 0.2275660584022458}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 100.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.47428171763658034`}}, {{
                    3.6888794541139363`, 0.36065203630533216`}}, {{
                    5.298317366548036, -0.013830718712767219`}}, {{
                    6.907755278982137, -0.18085151288839527`}}, {{
                    8.344980368770571, -0.16361113792434978`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.1}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.9149786823132444}}, {{
                    3.6888794541139363`, 0.7831951697371881}}, {{
                    5.298317366548036, 0.16047947500658022`}}, {{
                    6.907755278982137, -0.1585670592072203}}, {{
                    8.344980368770571, -0.16343762054226785`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.01}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.5276324229673335`}}, {{
                    3.6888794541139363`, 2.158231498444996}}, {{
                    5.298317366548036, 0.20109385995209952`}}, {{
                    6.907755278982137, -0.15856239582744822`}}, {{
                    8.344980368770571, -0.1634130967355649}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.0001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.12806995314408862`}}, {{
                    3.6888794541139363`, 0.07909775243698179}}, {{
                    5.298317366548036, -0.05652666107962308}}, {{
                    6.907755278982137, -0.16794649162029662`}}, {{
                    8.344980368770571, -0.16228001298838013`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {"L2Regularization", 1.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4595791322922551}}, {{
                    3.6888794541139363`, 0.454313633948026}}, {{
                    5.298317366548036, 0.4230679371074928}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.46152255916111634`}}, {{
                    3.6888794541139363`, 0.46095982345453423`}}, {{
                    5.298317366548036, 0.45758513047795096`}}, {{
                    6.907755278982137, 0.4465585350565471}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10000.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4617063944143866}}, {{
                    3.6888794541139363`, 0.46170103039032273`}}, {{
                    5.298317366548036, 0.46166695286953624`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1.*^6}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.31395971535944034`}}, {{
                    3.6888794541139363`, 0.15821496383409356`}}, {{
                    5.298317366548036, -0.00903920945731053}}, {{
                    6.907755278982137, -0.13309144456550345`}}, {{
                    8.344980368770571, -0.14617766423108577`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 10.}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 2.567905628712156}}, {{
                    3.6888794541139363`, 2.567905628712156}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 1.*^-6}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 2.4826051113823606`}}, {{
                    3.6888794541139363`, 2.4826051113823606`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.00001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 1.5314089096938954`}}, {{
                    5.298317366548036, 0.20877238159158304`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"L1Regularization", 0}, {
                    "L2Regularization", 0.001}, {
                    "OptimizationMethod", Automatic}}, Alignment -> Left, 
                    Frame -> All, FrameStyle -> GrayLevel[0.84], 
                    Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.0725280624560205`, -0.39595735849751773`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 
                    8.568076401730806}, {-0.39595735849751773`, 
                    2.567905628712156}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                  ImageSizeCache->{330., {122., 127.}}],
                 DynamicModuleValues:>{}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  MachineLearning`MLInformationObject[
   ClassifierFunction[<|
    "ExampleNumber" -> 5261, "ClassNumber" -> 5, 
     "Input" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|
           "Country" -> <|"Type" -> "Nominal"|>, 
            "GICS Sector Name" -> <|"Type" -> "Nominal"|>, 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Disclosure" -> <|"Type" -> "Text"|>, 
            "Revenue (USD mn)" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
            "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["FromDataset"], 
               MachineLearning`MLProcessor[
               "FromNamedFeatures", <|
                "FeatureNames" -> {
                  "Country", "GICS Sector Name", 
                   "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                   "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                   "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                   "Carbon Disclosure", "Revenue (USD mn)"}|>], 
               MachineLearning`MLProcessor[
               "Transpose", <|"FeatureNumber" -> 7|>], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {
                  "Nominal", "Nominal", "Numerical", "Numerical", "Numerical",
                    "Text", "Numerical"}, 
                 "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6", "f7"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          False, "Invertibility" -> "Perfect", "StructurePreserving" -> False,
           "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
            "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|
           "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

               "], "Type" -> "NumericalVector"|>|>, "Processors" -> {
            MachineLearning`MLProcessor[
            "SynthesizeMissingValues", <|
             "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Distribution" -> 
              LearnedDistribution[<|
                "ExampleNumber" -> 5261, "Preprocessor" -> 
                 MachineLearning`MLProcessor[
                  "ToMLDataset", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Text"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                  "Processor" -> 
                 MachineLearning`MLProcessor[
                  "Sequence", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "FeatureChangeType", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 8728850163752787708|>], 
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>, 
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 2924601326459291273|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 3851032655214498899|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>, <|"" -> 1|>}, 
                    "MissingCode" -> Indeterminate, "Version" -> {13.1, 0}, 
                    "ID" -> 3021504372148671363, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Mean" -> {209.80690318178338`, 38.57264497138987, 
                    138.3376102159199, 2296.6337905542246`}, 
                    "StandardDeviation" -> {1432.0032489855246`, 
                    171.69843080857044`, 192.57826196052247`, 
                    9129.337299520432}, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 6370237675253593402|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3, 
                    "SetSize" -> {55, 11, 1}|>|>, 
                    "Boundaries" -> {CompressedData["
1:eJw1US1IQ1EYfcIMChbLhBk0GCwrCjMIZwZhDEHQsjJBwaQww8qCIAvPYDEY
FGGIZWXhCS5o2EEmMgTx/4lv6l4wWIQxxLLiu+/7/Mq9XM49f9/oSm5htcey
rCnrf3y6teXvmPvBymbdS1TeWZweaywW35jp2tVcpsn4+dfxTtxjbyG9W468
spkwyBee/A6stRyX2wGqaz8zm7+fjWafOBHOI/s7eyPzfQ/0HQO843rLXG45
FAJveOkZomtuhEINDodGrhiIBw7qDOnyF0yWBj/HZ2rcPzBzxh9D2znlXOCm
kHaYihrCMtsxQ3DIIwMvFbklJ3x5R1JwSMk/tIUHygvVgepCfUB9QX1CfUNz
QHNBc0JzY1J6wJL0Alt6giO9wZMeEZFeoT1De4fuAboX6J6ge8MfBK7o6Q==

                    
                    "], {-0.5, -0.40909090909090906`, -0.3181818181818182, \
-0.2272727272727273, -0.13636363636363635`, -0.04545454545454547, 
                    0.045454545454545414`, 0.13636363636363635`, 
                    0.2272727272727273, 0.31818181818181823`, 
                    0.40909090909090906`, 0.5}, {-0.5, 0.5}}, 
                    "Version" -> {13.1, 0}, "ID" -> 7348139182499282329, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>, 
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                    Span[1, 3], 
                    Span[4, 7]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {13.1, 0}, "ID" -> 
                    4988030652003068495|>]}, "Invertibility" -> "Approximate",
                     "StructurePreserving" -> True, "Missing" -> "Allowed"|>],
                  "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                 Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBmQFm/iFib1JlAgAAAAcAAAAHAAAAPlM1OXtLmz/JiPcwbAyAv1XkjbwG
1YQ/vL3MM3alqD9dV7Q3ltHiP2S57Fz+YOk/MnmDCDz5wj8EQ6YFpvefv++u
GnjfNYi/QC4jX10NcD/9dRoemfCSPzfG6DRwO6y/+Fp8ks9qwr/+dWRCD5jv
P1e44E2uMWU/lBmRez1vUr9Wme0jCTJhvzS4InKsPWE/ogrVuWjN6b+p6Amc
leHiP19FAIP8/KQ/Fsw7lzFi479b2o2x/7O7v8QbWFU9jta/WunW5/OI5j8Y
e5c5Toh6vzr5ex/nBYC/SjOPC+5Gob+BzmGl9zXgvwH8AegL5cS/qmysjusN
6z8sWiaoibijv7tSilO75l8/vMAEl/OHgj/6wqUCxqOTv5LfxWV4YuO/+WSv
W3RQuj+vRZXiiwHYvxzP5zepJOa/dwddW+vpnj/AldSzjP6mP7AL08UTf3M/
oEUKDPSctr9PbMjmPjTvP+rNfS3iL8I//6HrutiXwj+qZ+qwPl89vy+NAyQq
BlQ/cl4LGc2Ndz/G8Myp
                    "], 
                   "Precisions" -> {0.7323150115031848, 0.9950353534094927, 
                    1.150259857918005, 1.3081831054231352`, 
                    11.904267203841378`, 12.590913834400338`, 
                    21.78658982700742}, "NoisePrecision" -> None, "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.045734233435905304`, \
-0.025594359218476675`, -0.0029955448724701505`, -0.00014912358418741337`, \
-0.00003169670080297662, 0.00013678099790770116`, -0.00011712644515109536`}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 6433133221155465954|>], 
                   "PostProcessor" -> 
                   MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 7.|>,
                     "Key" -> "((f1f2f6)(f3f4f5f7))", "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Method" -> "Multinormal", 
                   "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 7, "Options" -> <||>|>|>|>, 
                 "TrainingInformation" -> <|
                  "Configurations" -> 
                   Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4144949927782571454|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                   Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                 "NaiveImputer" -> 
                 MachineLearning`MLProcessor[
                  "ImputeMissing", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4144949927782571454|>], "InputDimension" -> 0, 
                 "OutputDimension" -> 7, 
                 "Log" -> <|
                  "Example" -> 
                   MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"},
                     "ID" -> 5155317431342247400|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"Information Technology"}, "ID" -> 
                    2188803043977968913|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537},
                     "ID" -> 3337457535063725639|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {10.982}, "ID" -> 7636067744164728755|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {60.982}, "ID" -> 5343396232700824432|>, 
                    "f6" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {""}, 
                    "ID" -> 8991202013923146558|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {624.605427784142}, "ID" -> 
                    7410770998264477311|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                   "TrainingTime" -> 0.108837, "MaxTrainingMemory" -> 2954536,
                    "DataMemory" -> 1220792, "FunctionMemory" -> 92272, 
                   "LanguageVersion" -> {13.1, 0}, "Date" -> 
                   DateObject[{
                    2022, 12, 7, 17, 32, 6.687891`7.577864173831745}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, 
                   "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                 "LogPDFDistribution" -> 
                 MachineLearning`TailedQuantileDistribution[<|
                   "Quantiles" -> {-5.8464371569811195`, \
-5.8464371569811195`, -5.772442655506229, -5.719536211659443, \
-5.569781037675731, -5.547597831708812, -5.492452464861547, \
-5.490044807247233, -5.4488020625417395`, -5.375138296361131, \
-5.327882521015458}, "LeftBoundary" -> -5.772442655506229, "LeftScale" -> 
                    0.03699725073744542, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                 Around[38.91308053189091, 0.3782184306301033], 
                 "EntropySampleSize" -> 10|>], 
              "Output" -> <|
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0}, 
              "ID" -> 8833432794738512184|>], 
            MachineLearning`MLProcessor[
            "Threads", <|
             "Input" -> <|
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Output" -> <|
               "(f3f4f5f7)" -> <|"Type" -> "NumericalVector", "Weight" -> 4|>,
                 "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
              "Processors" -> {
                MachineLearning`MLProcessor[
                "ToVector", <|
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                  "Version" -> {13.1, 0}, "ID" -> 7001699027996678713|>], 
                MachineLearning`MLProcessor[
                "ToVector", <|
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>,
                   "Version" -> {13.1, 0}, "ID" -> 4268131072254999855|>]}, 
              "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
              "Missing" -> "Allowed"|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
              "Mean" -> {209.80690318178338`, 38.57264497138987, 
               138.3376102159199, 2296.6337905542246`}, 
              "StandardDeviation" -> {1432.0032489855246`, 
               171.69843080857044`, 192.57826196052247`, 9129.337299520432}, 
              "Output" -> <|
               "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 1927666520227175614|>], 
            MachineLearning`MLProcessor[
            "ToLowerCase", <|
             "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 8121204540162656102, 
              "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
            
            MachineLearning`MLProcessor[
            "RemoveDiacritics", <|
             "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 1964114494773798714, 
              "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
            
            MachineLearning`MLProcessor[
            "Threads", <|
             "Input" -> <|
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
              "Output" -> <|
               "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
              "Processors" -> {
                MachineLearning`MLProcessor[
                "Sequence", <|
                 "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                  "Processors" -> {
                    MachineLearning`MLProcessor[
                    "TextToNominalSequence", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
                    ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", 
                    ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
                    "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {13.1, 0}, "ID" -> 613813152937597666, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NominalSequence", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "NominalSequenceToTFIDFVector", <|
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "NominalSequence", "Weight" -> 1|>|>, 
                    "Index" -> 
                    MachineLearning`SortedHashAssociation[<|
                    "KeyHashes" -> CompressedData["
1:eJw1lEuO1FAMRXvACmg2wAKQ/P8soSVGLIEBEiMGsH9xkpdSqlIp28++vtfO
159/fvyqt7e3v5+4ff/999/HFx6+rVqq2U5t5uas6uMQ9dFe5zNhJb3HMWvS
Km1rvToSKY8jNX27tJV0aV79ODRLoq/wmC31quPoyeyWtMycu46+HDZewFKJ
ohAHj6PWCogmCuTOGPHjyBUAd5tW+tToPicytTykamdkPMuf4gEcA+a2rxM1
rxNBhfBc7fIBHSGPIwBIYaECtFDvSUWYhUY3/lQt63g5TJXO0mFWFlAPJQ6f
smRRDl38dz6OCNeUdlDNRa4/xR2MQrsxzRHOv2i3lAVShyw+8trLoQjqFTOT
BdXtdhxaEwVHCN9bgrIPXM0IhcGrBQu0nPh4PyR2V18t65jBcn18xm6BcnSu
l1i1sXabIy6IQxfS0WU0fZsTLt1UmCv4rTlmOoRwujoNi+Vt3pQg1rhPgDTk
hqJKZnJKTozTRu6xZ6FgFk2P9CXeyw5qWXrJgj8ThvK2V2vQJunFkVTMbjuM
QGMkE5jG12Vuu9t0OK0zNSJxrcWx0yu5BK4YeHQwP/bsCvijTZKUDTP/fpMA
FPQuS9IR0afuTVZlcF2z0ZQ4draQrIRv3U9Pv7TL0nQVBeqqEyc/e8BSiTvy
LfyUPvHwydaynMviFLofHpgjppClUKc0a2NHcmaYcP7ZoFkIbB87lZh/bVBO
uVyb+dgvqIau/AwjcfSqaywGdNEBTcawH3sjH3O2AdfLGuaJZ4Ad8HrJEmy5
Vx57+/WuAaBrVaHEE89SQQMnIAR+WN7bDgSWTp1LzJUZOnV5wQ2KFAqyKSMv
HpZlDgaRyiAIiJ7/oUHtSA==
                    "], "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    ToString[#, InputForm] <> "Cn.i9)P$", "Murmur3-64"]]& , 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {13.1, 0}|>], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAwA+JZ+8T4F3B/tJdela8mWSvlsHur766IQAGHjdl5U6SU
3thPLz2z7Xc0p8OSKy+f6VwRdNDev3TKgWpJB9NNtkKqu2QcdugrPJST4XTg
X7O3SFiR1SHN7VRk234mh3ecys+/rXpqv8/RscLYTsiBcdn7A2u4n9jD9MPs
5Vx4y+1PNq9Dt/jeJ5zmrA4wPszejqrkPcbMEnB7YXyBlxtjDnH8hZu3Xz1y
j+JGTrg57gfXrLgchSm/dJPZ7ohURjgf5l8GCGhY3573N3bDPfuu5Gi7N884
HIxSD6beYvlob8h2kPHjuj9w/8DM3bCj8PInKWk4H+ZuWHjC5GE0zN4FPvYz
lqx7bQ9zb79YndlmJWGHd/8DjHc/kIXTMPUwfwMAf4a6Yg==
                    "], "Version" -> {13.1, 0}, "ID" -> 2566335944547631010, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>]}, 
                  "Invertibility" -> "Impossible", "StructurePreserving" -> 
                  True, "Missing" -> "Forbidden"|>], 
                MachineLearning`MLProcessor[
                "EmbedNominalVector", <|
                 "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>,
                   "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>}, 
                  "Output" -> <|
                   "(f1f2)" -> <|
                    "Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
                  "EmbeddingVectors" -> {CompressedData["
1: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
AYwY2QUp9dHwDxWH4HQ=
                    "], 
                    RawArray["Real32",{{0., 0., 0., 0., 0.}, {
                    0.09429772198200226, -0.24127089977264404`, \
-0.5270462036132812, -0.24486297369003296`, -0.5337972044944763}, {
                    0.3855826258659363, 0.345225065946579, 
                    
                    0.375460684299469, -0.6187008023262024, \
-0.9083080291748047}, {0.038637321442365646`, -0.39784038066864014`, 
                    0.4888850748538971, -0.3776519000530243, 
                    0.04570373147726059}, {
                    0.1278393715620041, -0.05385725945234299, 
                    0.7183319926261902, 
                    0.20311319828033447`, -0.020085696130990982`}, {
                    0.2800740897655487, 0.3026285469532013, 
                    0.013881713151931763`, 0.6868195533752441, 
                    0.08314655721187592}, {-0.8298808336257935, 
                    0.34320393204689026`, 0.0243590846657753, 
                    0.07180754095315933, -0.6089136004447937}, \
{-0.10904797911643982`, -0.2677527964115143, 0.5590679049491882, 
                    0.48168694972991943`, -0.6030200719833374}, {
                    0.22935371100902557`, 
                    0.18263663351535797`, -0.7634024620056152, \
-0.029437005519866943`, -1.0930653810501099`}, {
                    0.14211100339889526`, -0.2188272774219513, \
-0.5335532426834106, -0.15458126366138458`, -0.20572292804718018`}, {
                    0.4123682975769043, 
                    0.36278361082077026`, -0.48854225873947144`, 
                    0.04904557392001152, 
                    0.27460458874702454`}, {-0.10662871599197388`, 
                    0.2889917492866516, 
                    0.4839726388454437, -1.046645164489746, 
                    0.2283746600151062}}]}, "Version" -> {13.1, 0}, "ID" -> 
                  4560545129116418848|>]}, "Invertibility" -> "Impossible", 
              "StructurePreserving" -> True, "Missing" -> "Forbidden"|>], 
            MachineLearning`MLProcessor[
            "MergeVectors", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>, 
                "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                Span[1, 54], 
                Span[55, 66], 
                Span[67, 70]}, 
              "Wrappers" -> {SparseArray, Identity, Identity}, 
              "Output" -> <|
               "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

                   "], "Type" -> "NumericalVector"|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 324326445301658208|>]}, 
          "Invertibility" -> "Impossible", "StructurePreserving" -> True, 
          "Missing" -> "Imputed"|>]|>, 
     "Output" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 4199606916556033440|>], 
            MachineLearning`MLProcessor[
            "IntegerEncodeNominalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Index" -> {<|
                "A" -> 1, "B" -> 2, "C" -> 3, "D" -> 4, "E" -> 5|>}, 
              "MissingCode" -> 0, "Version" -> {13.1, 0}, "ID" -> 
              18782000146286335, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "FromVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|
                 "Type" -> "NominalVector", "Weight" -> 1, 
                  "SetSize" -> {5}|>|>, 
              "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 7688100530236977542|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 5|>,
               "Key" -> "f1", "Invertibility" -> "Perfect", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
       "Name" -> "class", 
       "Marginal" -> <|
        "A" -> 0.001329282187618686, "B" -> 0.005507026205848841, "C" -> 
         0.04044815799468287, "D" -> 0.5218382073680212, "E" -> 
         0.4308773262438283|>|>, "LabelSplitter" -> 
     MachineLearning`MLProcessor[
      "FeatureLabelSplit", <|
       "Processor" -> 
        MachineLearning`MLProcessor[
         "KeyIndexSplit", <|
          "Index" -> "Ratings", 
           "Order" -> {
            "Country", "GICS Sector Name", 
             "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
             "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
             "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
             "Carbon Disclosure", "Revenue (USD mn)", "Ratings"}|>], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
     "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
     "Prior" -> Automatic, "Utility" -> 
     SparseArray[
      Automatic, {5, 6}, 0., {
       1, {{0, 1, 2, 3, 4, 5}, {{2}, {3}, {4}, {5}, {6}}}, {1., 1., 1., 1., 
        1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
     "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
     "Model" -> <|
      "LogProbabilitiesFunction" -> 
       LinearLayer[<|
         "Type" -> "Linear", "Arrays" -> <|"Weights" -> CompressedData["
1:eJw9kH9M1GUcxw92O9BBUIxLximSoZZBFKVcd9/newqDUxw/LmYywDxXiHWD
eYj8cLkmdxB5gUzJQYYRhOWGx3FMlPs+z4NC4UooxdSMxbis6FhR2NdwDRbv
2/SP9/f9fJ7v5/V5f/bE7ik1FQUqFIqy4KWPyVyx2Wo1V72qQvGm2ZL0ogU/
lUtKW1JJTw1xGt+lKaoQfjDgJ4/P9Dgz3jtG1NeekUiKi/KMBLaqfyVPPlnM
l6tL2MLckDC638bU176QwObVb2T/LYRyONiOF2QBLLwzQGY4b5oK9ffoZO+j
umX+AYMjd2kNxWXjKX1/ahutaOimsZp7/hz0NpU84WcwG3uihsCGPdZJMHfW
nKknZV0ChHtk/96tIq1R93mHvNzgHj4suiM+E4sWzOI/hTJVV8WyjKc38vih
JjHuB4nFX58XH1R/J7yj5Cxf0HHN8A32Z3oNmfXaaNXVMG5t80jyW9vZKxuO
khxHqnTpVi996dd9bN3cOq498THfOuVi3ZfPCTsa+1iOY1gCm/TlLZq1agWH
gzU89bqfhVe7lRzniGkjQ4/6+Un2sE6PVXE4cvEu3bHTZHf4Wdp6oYKVF877
c9C7zBThZzAbe6KGwNrdjSLmbj8Vp2s/0CFAuEf2SEGIeG48ZLDo6gZDQ5hX
HHApDYe90eKRoRFyfLMsBLU8yTKSE8XnDkyz8/XNYl3DFjZ3dz0/fec87Wpy
8DPOr8jPt1soWa3hi2n1urLBLnZCLCYu+0XprG+EFr7Wz2b35/IqWeLRAxfZ
t3vfI7mZ48xl11KwN1oklntnC4eD/eOCWwALn4yp5DgHrejw96ScPPSoLrJt
43Dk4l2ya8pFh9XBOoXJga/nKjly0CtrYxgcs7EnaghsvDPSgLke3180PcYm
QLhHdmPdhKg5kzW4s6/UEKlQGpwHrYb3x/aKW8fCDfmXSoRfVNGcS9/T5kWZ
tWoXyU7jR9SaM65vO/4vba5+lnzanydGFXio/fTbPODzv8mH3EaTel8Wb870
6CY+WMkWyQTt3aTnbyxzc6c3zvNN1JCwS53tuTmTqAdrKQ8lrrsxHA726PUc
Aha+e22dgHNquIOixzhaQx7WSa2/MThy8S71LJ6sOZQg7BtIoJWRxQJy0Pvj
bC2DYzb2RA2BvR/U7s+2JVrIlU9S/MI9so9cYcxuus32RPeIaXmjZGqNRsyu
VQv5gbtYb1oymclcL2T5fLR0dZ8UGLyDhBa062st45JWmKHBYwr6P3ycOuM=

             "], "Biases" -> 
            RawArray[
              "Real32",{-5.716137886047363, -4.352511405944824, \
-3.6987926959991455`, 0.4184072017669678}]|>, 
          "Parameters" -> <|
           "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 70, 
            "$InputDimensions" -> {70}|>, 
          "Inputs" -> <|
           "Input" -> NeuralNetworks`TensorT[{70}, NeuralNetworks`AtomT]|>, 
          "Outputs" -> <|
           "Output" -> 
            NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
         "Version" -> "13.1.4", "Unstable" -> False|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "FirstValues", <|"Info" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwB+JJKp5AdMh+fbXMg/b7E0bpIULf27dkZ6nQUZrRSbeE
JT3ev8dJAwDM9zWW
             "], "Type" -> "NumericalVector"|>, "Key" -> 
          "(f6(f1f2)(f3f4f5f7))", "Invertibility" -> "Perfect", 
          "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "Calibrator" -> None, "Method" -> "LogisticRegression", 
       "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
       "Options" -> <|
        "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "L2Regularization" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
         "OptimizationMethod" -> <|"Value" -> "LBFGS", "Options" -> <||>|>, 
         MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
     "TrainingInformation" -> <|
      "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
       Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
       "PreprocessingTime" -> 0.487863`6.139842875545205, "LossName" -> 
       "MeanCrossEntropy", "BestModelInformation" -> 
       Dataset[<|
         "MeanCrossEntropy" -> 
          Around[0.8345592707914701, 0.014037939481563939`], "Accuracy" -> 
          Around[0.5440746888595295, 0.01302169606479147], "EvaluationTime" -> 
          1.5200217154951593`*^-6, "TestSize" -> 2900, "ModelMemory" -> 12096,
           "ModelUtility" -> -0.5157021969200489, "TrainingSize" -> 1000, 
          "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
          2311648, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
            Around[0.8345592707914701, 0.009926322201300228]}, 
          "AccuracyHistory" -> {
            Around[0.5440746888595295, 0.009207729589964228]}, 
          "Configuration" -> {
           "LogisticRegression", "L1Regularization" -> 0, "L2Regularization" -> 
            0.1, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
          "FinalTrainingSize" -> 5261|>, 
         TypeSystem`Struct[{
          "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
           "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
           "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
           "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType}], 
           TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
       Dataset[<|<|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 100000.|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.5867555142180376`, 0.02010644506318761], "Accuracy" -> 
               Around[0.419992238760501, 0.06962939267631489], 
               "EvaluationTime" -> 0.000031622776601683795`, "TestSize" -> 
               100, "ModelMemory" -> 12096, 
               "ModelUtility" -> -1.1574176820634445`, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 
               112296, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.5867555142180376`, 0.014217403649734738`]}, 
               "AccuracyHistory" -> {
                 Around[0.419992238760501, 0.04923541573132319]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.586663785808054, 0.007107949043054075], "Accuracy" -> 
               Around[0.4361015326168771, 0.02463536506232846], 
               "EvaluationTime" -> 2.1889963586716415`*^-6, "TestSize" -> 800,
                "ModelMemory" -> 12096, 
               "ModelUtility" -> -1.1557243245734639`, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.003981071705534969, "TrainingMemory" -> 
               153984, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.586663785808054, 0.005026078968671967]}, 
               "AccuracyHistory" -> {
                 Around[0.4361015326168771, 0.017419833692578608`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5861246453214242`, 0.006353596646981605], "Accuracy" -> 
               Around[0.4667334270210763, 0.022173108591490086`], 
               "EvaluationTime" -> 2.098587138277019*^-6, "TestSize" -> 1000, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.1552897377019389`,
                "TrainingSize" -> 200, "TrainingTime" -> 0.00630957344480193, 
               "TrainingMemory" -> 500496, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5861246453214242`, 0.004492671274004803]}, 
               "AccuracyHistory" -> {
                 Around[0.4667334270210763, 0.015678755445028336`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 2.098587138277019*^-6, "MeanCrossEntropy" -> 
              Around[1.5861246453214242`, 0.006353596646981605], 
              "ModelMemory" -> 12096, "TrainingMemory" -> 500496, 
              "TrainingTime" -> 0.17856258358345647`|>, "Index" -> 1|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 100.|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.5572178082503443`, 0.00621067434007511], "Accuracy" -> 
               Around[0.4628132257109344, 0.022148356815640983`], 
               "EvaluationTime" -> 2.2152886727969693`*^-6, "TestSize" -> 
               1000, "ModelMemory" -> 12096, 
               "ModelUtility" -> -1.136893317930264, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
               161576, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.5572178082503443`, 0.004391609941608396]}, 
               "AccuracyHistory" -> {
                 Around[0.4628132257109344, 0.015661253296479025`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.485641417593719, 0.006918330590323021], "Accuracy" -> 
               Around[0.42500752925794744`, 0.024572378787071716`], 
               "EvaluationTime" -> 2.188996358671642*^-6, "TestSize" -> 800, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.089972736216314, 
               "TrainingSize" -> 40, "TrainingTime" -> 0.007943282347242814, 
               "TrainingMemory" -> 221616, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.485641417593719, 0.004891998474907738]}, 
               "AccuracyHistory" -> {
                 Around[0.42500752925794744`, 0.01737529567022288]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.2555403760059742`, 0.005891171350843548], "Accuracy" -> 
               Around[0.4719654408350401, 0.015365329596567888`], 
               "EvaluationTime" -> 1.4396340791066942`*^-6, "TestSize" -> 
               2100, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.9216992458363632, "TrainingSize" -> 200, 
               "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               500496, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.2555403760059742`, 0.0041656872113133864`]}, 
               "AccuracyHistory" -> {
                 Around[0.4719654408350401, 0.010864928752899511`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 1.4396340791066942`*^-6, "MeanCrossEntropy" -> 
              Around[1.2555403760059742`, 0.005891171350843548], 
              "ModelMemory" -> 12096, "TrainingMemory" -> 500496, 
              "TrainingTime" -> 0.4232157277216978|>, "Index" -> 2|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0.1|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.6068596039593246`, 0.0773718251496379], "Accuracy" -> 
               Around[0.46970262467234347`, 0.022168439534232556`], 
               "EvaluationTime" -> 2.2535743732392292`*^-6, "TestSize" -> 
               1000, "ModelMemory" -> 12096, 
               "ModelUtility" -> -1.177061034274473, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.01, "TrainingMemory" -> 216952, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.6068596039593246`, 0.054710142236088825`]}, 
               "AccuracyHistory" -> {
                 Around[0.46970262467234347`, 0.01567545392297979]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.4342643021333312`, 0.08800767361211348], "Accuracy" -> 
               Around[0.4710094905958181, 0.028708180789419876`], 
               "EvaluationTime" -> 3.00161485618471*^-6, "TestSize" -> 600, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.0660447142974228`,
                "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`,
                "TrainingMemory" -> 252784, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.4342643021333312`, 0.062230822807577815`]}, 
               "AccuracyHistory" -> {
                 Around[0.4710094905958181, 0.020299749311728166`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.9862644862541707, 0.03666978565229267], "Accuracy" -> 
               Around[0.495775510572053, 0.02029155523136279], 
               "EvaluationTime" -> 2.3077736422941293`*^-6, "TestSize" -> 
               1200, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.6867730658836596, "TrainingSize" -> 200, 
               "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               500448, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.9862644862541707, 0.025929454099393307`]}, 
               "AccuracyHistory" -> {
                 Around[0.495775510572053, 0.01434829630491799]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8345592707914701, 0.014037939481563939`], "Accuracy" -> 
               Around[0.5440746888595295, 0.01302169606479147], 
               "EvaluationTime" -> 1.5200217154951593`*^-6, "TestSize" -> 
               2900, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.5157021969200489, "TrainingSize" -> 1000, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               2311648, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8345592707914701, 0.009926322201300228]}, 
               "AccuracyHistory" -> {
                 Around[0.5440746888595295, 0.009207729589964228]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8490721296435619, 0.02334735024021866], "Accuracy" -> 
               Around[0.5235726194290193, 0.0217169979017203], 
               "EvaluationTime" -> 2.3649723133358664`*^-6, "TestSize" -> 
               1052, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.5350684929342929, "TrainingSize" -> 4209, 
               "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
               9577952, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8490721296435619, 0.016509069677595984`]}, 
               "AccuracyHistory" -> {
                 Around[0.5235726194290193, 0.015356236483320447`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 2.3649723133358664`*^-6, "MeanCrossEntropy" -> 
              Around[0.8490721296435619, 0.02334735024021866], "ModelMemory" -> 
              12096, "TrainingMemory" -> 9577952, "TrainingTime" -> 
              0.1092863113063541|>, "Index" -> 3|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0.01|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[2.4967220269994868`, 0.14266963841520558`], "Accuracy" -> 
               Around[0.4676858793011964, 0.0221707445718778], 
               "EvaluationTime" -> 2.1502495499310894`*^-6, "TestSize" -> 
               1000, "ModelMemory" -> 12096, 
               "ModelUtility" -> -1.6195376259531793`, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.01, "TrainingMemory" -> 217360, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.4967220269994868`, 0.10088266879282462`]}, 
               "AccuracyHistory" -> {
                 Around[0.4676858793011964, 0.015677083830729632`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.1884535869775723`, 0.12793690731530985`], "Accuracy" -> 
               Around[0.47430381627930696`, 0.02224042300550233], 
               "EvaluationTime" -> 2.318613496105109*^-6, "TestSize" -> 1000, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.4880145387198338`,
                "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`,
                "TrainingMemory" -> 252416, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[2.1884535869775723`, 0.0904650547266904]}, 
               "AccuracyHistory" -> {
                 Around[0.47430381627930696`, 0.015726353923647993`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.1740736750388558`, 0.055332090579028805`], "Accuracy" -> 
               Around[0.49633599889548674`, 0.015378115771179056`], 
               "EvaluationTime" -> 1.4706050899952081`*^-6, "TestSize" -> 
               2100, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.8630561891633802, "TrainingSize" -> 200, 
               "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               500800, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.1740736750388558`, 0.03912569646565955]}, 
               "AccuracyHistory" -> {
                 Around[0.49633599889548674`, 0.010873969943672504`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8533657358424104, 0.014052513132589997`], "Accuracy" -> 
               Around[0.5534665196529994, 0.010738989117268422`], 
               "EvaluationTime" -> 1.3139230698005645`*^-6, "TestSize" -> 
               4261, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.5379161613656486, "TrainingSize" -> 1000, 
               "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
               2314072, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8533657358424104, 0.0099366273287674]}, 
               "AccuracyHistory" -> {
                 Around[0.5534665196529994, 0.007593612027909037]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8492194711994873, 0.023478439603292548`], "Accuracy" -> 
               Around[0.5235726194290193, 0.0217169979017203], 
               "EvaluationTime" -> 1.358051210209762*^-6, "TestSize" -> 1052, 
               "ModelMemory" -> 12096, "ModelUtility" -> -0.535271763958759, 
               "TrainingSize" -> 4209, "TrainingTime" -> 0.12589254117941673`,
                "TrainingMemory" -> 9577952, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8492194711994873, 0.016601763855166953`]}, 
               "AccuracyHistory" -> {
                 Around[0.5235726194290193, 0.015356236483320447`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 1.358051210209762*^-6, "MeanCrossEntropy" -> 
              Around[0.8492194711994873, 0.023478439603292548`], 
              "ModelMemory" -> 12096, "TrainingMemory" -> 9577952, 
              "TrainingTime" -> 0.16735819889401554`|>, "Index" -> 4|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0.0001|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[4.607255866126396, 0.3083134748183359], "Accuracy" -> 
               Around[0.47188488435930487`, 0.02337087344308368], 
               "EvaluationTime" -> 2.4455185212720893`*^-6, "TestSize" -> 900,
                "ModelMemory" -> 12096, "ModelUtility" -> -2.234122673830362, 
               "TrainingSize" -> 10, "TrainingTime" -> 0.01, "TrainingMemory" -> 
               217120, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[4.607255866126396, 0.21801054877523313`]}, 
               "AccuracyHistory" -> {
                 Around[0.47188488435930487`, 0.016525703093857067`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[8.655816289956082, 0.6492350818957129], "Accuracy" -> 
               Around[0.44076253038601587`, 0.022070075604469244`], 
               "EvaluationTime" -> 2.215288672796969*^-6, "TestSize" -> 1000, 
               "ModelMemory" -> 12096, "ModelUtility" -> -2.866316423446577, 
               "TrainingSize" -> 40, "TrainingTime" -> 0.01995262314968879, 
               "TrainingMemory" -> 252624, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[8.655816289956082, 0.4590785289926621]}, 
               "AccuracyHistory" -> {
                 Around[0.44076253038601587`, 0.015605900121219993`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.2227395327114876`, 0.07914606459851704], "Accuracy" -> 
               Around[0.4965238985524683, 0.020254240869503438`], 
               "EvaluationTime" -> 2.3441017290394615`*^-6, "TestSize" -> 
               1200, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.9071516759437529, "TrainingSize" -> 200, 
               "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               500496, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.2227395327114876`, 0.05596471898183994]}, 
               "AccuracyHistory" -> {
                 Around[0.4965238985524683, 0.014321911066611594`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8533697154202002, 0.014084285270661585`], "Accuracy" -> 
               Around[0.552743196088772, 0.010741361700464159`], 
               "EvaluationTime" -> 1.5498289169056235`*^-6, "TestSize" -> 
               4261, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.5379282314798981, "TrainingSize" -> 1000, 
               "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
               2311952, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8533697154202002, 0.009959093623050615]}, 
               "AccuracyHistory" -> {
                 Around[0.552743196088772, 0.0075952896975756716`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.849240297549017, 0.023494134940390852`], "Accuracy" -> 
               Around[0.5235726194290193, 0.0217169979017203], 
               "EvaluationTime" -> 1.3782039274503667`*^-6, "TestSize" -> 
               1052, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.5352998289223678, "TrainingSize" -> 4209, 
               "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
               9577888, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.849240297549017, 0.016612862134462173`]}, 
               "AccuracyHistory" -> {
                 Around[0.5235726194290193, 0.015356236483320447`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 1.3782039274503667`*^-6, "MeanCrossEntropy" -> 
              Around[0.849240297549017, 0.023494134940390852`], "ModelMemory" -> 
              12096, "TrainingMemory" -> 9577888, "TrainingTime" -> 
              0.08886592039226171|>, "Index" -> 5|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 1.|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.1366325109339155`, 0.045104343782960264`], "Accuracy" -> 
               Around[0.5009702324820644, 0.03637948418890273], 
               "EvaluationTime" -> 2.4934892726500266`*^-6, "TestSize" -> 
               1900, "ModelMemory" -> 12096., 
               "ModelUtility" -> -0.8291703120543495, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.011726169411961113`, "TrainingMemory" -> 
               216989.3333333333, "ExperimentCount" -> 2, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.1791548369564513`, 0.022618130740631244`], 
                 Around[1.0941101849113797`, 0.020141120807237168`]}, 
               "AccuracyHistory" -> {
                 Around[0.46641291911712934`, 0.016519959507341676`], 
                 Around[0.5355275458469994, 0.015670626034512396`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.0823101153508006`, 0.03415728382388353], "Accuracy" -> 
               Around[0.4905037859451286, 0.024887261522296915`], 
               "EvaluationTime" -> 2.2702952622539914`*^-6, "TestSize" -> 800,
                "ModelMemory" -> 12096, "ModelUtility" -> -0.778585037736192, 
               "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
               "TrainingMemory" -> 252720, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.0823101153508006`, 0.024152847018781606`]}, 
               "AccuracyHistory" -> {
                 Around[0.4905037859451286, 0.017597951387579188`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.9450412883382344, 0.02776770110685037], "Accuracy" -> 
               Around[0.516145013285822, 0.02225151770738168], 
               "EvaluationTime" -> 2.4138696118535783`*^-6, "TestSize" -> 
               1000, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.6425278454331963, "TrainingSize" -> 200, 
               "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               500512, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.9450412883382344, 0.019634729750615098`]}, 
               "AccuracyHistory" -> {
                 Around[0.516145013285822, 0.015734199062582124`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8453990694088364, 0.013357611613662675`], "Accuracy" -> 
               Around[0.5511445110863992, 0.01258547914082055], 
               "EvaluationTime" -> 1.51169348411126*^-6, "TestSize" -> 3100, 
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5284037978451769, 
               "TrainingSize" -> 1000, "TrainingTime" -> 0.03162277660168379, 
               "TrainingMemory" -> 2311712, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8453990694088364, 0.009445257752477058]}, 
               "AccuracyHistory" -> {
                 Around[0.5511445110863992, 0.008899277644956054]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8502031032943845, 0.022808412774472715`], "Accuracy" -> 
               Around[0.5330241450032871, 0.0217043938579966], 
               "EvaluationTime" -> 1.4560360610403467`*^-6, "TestSize" -> 
               1052, "ModelMemory" -> 12096, 
               "ModelUtility" -> -0.5362662473146035, "TrainingSize" -> 4209, 
               "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
               9577824, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8502031032943845, 0.01612798334093153]}, 
               "AccuracyHistory" -> {
                 Around[0.5330241450032871, 0.015347324078533047`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 1.4560360610403467`*^-6, "MeanCrossEntropy" -> 
              Around[0.8502031032943845, 0.022808412774472715`], 
              "ModelMemory" -> 12096, "TrainingMemory" -> 9577824, 
              "TrainingTime" -> 0.09059208980422283|>, "Index" -> 6|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 1000.|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.5834074396810567`, 0.0031955182170087457`], 
               "Accuracy" -> 
               Around[0.49614085557119036`, 0.03608571987316389], 
               "EvaluationTime" -> 2.167470353815779*^-6, "TestSize" -> 2000, 
               "ModelMemory" -> 12096., 
               "ModelUtility" -> -1.1531778765618408`, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.005011872336272719, "TrainingMemory" -> 
               134901.3333333333, "ExperimentCount" -> 2, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5838309407896394`, 0.0044812673093490105`], 
                 Around[1.5829839385724738`, 0.00447729926829865]}, 
               "AccuracyHistory" -> {
                 Around[0.46179851267339095`, 0.01566858454955257], 
                 Around[0.5304831984689898, 0.015672464405374512`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5750919223132704`, 0.007020113451386405], "Accuracy" -> 
               Around[0.4348728555872925, 0.024627343191365808`], 
               "EvaluationTime" -> 2.124418344104054*^-6, "TestSize" -> 800, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.1483998279947492`,
                "TrainingSize" -> 40, "TrainingTime" -> 0.005011872336272719, 
               "TrainingMemory" -> 172576, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5750919223132704`, 0.004963969826174226]}, 
               "AccuracyHistory" -> {
                 Around[0.4348728555872925, 0.017414161373223113`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5266380078139148`, 0.005313367574070712], "Accuracy" -> 
               Around[0.463413673230472, 0.019438316959059655`], 
               "EvaluationTime" -> 2.283734309422956*^-6, "TestSize" -> 1300, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.1169589826784168`,
                "TrainingSize" -> 200, "TrainingTime" -> 0.007943282347242814,
                "TrainingMemory" -> 500560, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5266380078139148`, 0.0037571182425621156`]}, 
               "AccuracyHistory" -> {
                 Around[0.463413673230472, 0.01374496573660455]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 2.283734309422956*^-6, "MeanCrossEntropy" -> 
              Around[1.5266380078139148`, 0.005313367574070712], 
              "ModelMemory" -> 12096, "TrainingMemory" -> 500560, 
              "TrainingTime" -> 0.21395991448049495`|>, "Index" -> 7|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 10000.|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.5864876683738112`, 0.006356255839586687], "Accuracy" -> 
               Around[0.46081103087603636`, 0.022154731882449274`], 
               "EvaluationTime" -> 2.215288672796969*^-6, "TestSize" -> 1000, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.155518737646653, 
               "TrainingSize" -> 10, "TrainingTime" -> 0.005011872336272719, 
               "TrainingMemory" -> 124728, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5864876683738112`, 0.004494551607128338]}, 
               "AccuracyHistory" -> {
                 Around[0.46081103087603636`, 0.015665761149449686`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5855951462653477`, 0.00709924338108061], "Accuracy" -> 
               Around[0.4348728555872925, 0.024627343191365808`], 
               "EvaluationTime" -> 2.205717247686404*^-6, "TestSize" -> 800, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.155050090335687, 
               "TrainingSize" -> 40, "TrainingTime" -> 0.005011872336272719, 
               "TrainingMemory" -> 160024, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5855951462653477`, 0.005019923136055812]}, 
               "AccuracyHistory" -> {
                 Around[0.4348728555872925, 0.017414161373223113`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5802532681305406`, 0.005761965951571388], "Accuracy" -> 
               Around[0.4621487527889235, 0.020227012703391466`], 
               "EvaluationTime" -> 2.4480769307724795`*^-6, "TestSize" -> 
               1200, "ModelMemory" -> 12096, 
               "ModelUtility" -> -1.1515093110606376`, "TrainingSize" -> 200, 
               "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
               500448, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.5802532681305406`, 0.004074325197322126]}, 
               "AccuracyHistory" -> {
                 Around[0.4621487527889235, 0.014302657845714545`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5629241707331911`, 0.002552843430105014], "Accuracy" -> 
               Around[0.5308112874774351, 0.012618545975694836`], 
               "EvaluationTime" -> 2.2844516691094826`*^-6, "TestSize" -> 
               3100, "ModelMemory" -> 12096, 
               "ModelUtility" -> -1.1400803572929177`, "TrainingSize" -> 1000,
                "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               2321312, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5629241707331911`, 0.0018051329007347813`]}, 
               "AccuracyHistory" -> {
                 Around[0.5308112874774351, 0.008922659428128038]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 2.2844516691094826`*^-6, "MeanCrossEntropy" -> 
              Around[1.5629241707331911`, 0.002552843430105014], 
              "ModelMemory" -> 12096, "TrainingMemory" -> 2321312, 
              "TrainingTime" -> 0.21445605476446758`|>, "Index" -> 8|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 1.*^6|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.5867793475457725`, 0.0031791956380642235`], 
               "Accuracy" -> 
               Around[0.4961429403100689, 0.037028592778387374`], 
               "EvaluationTime" -> 2.167470353815779*^-6, "TestSize" -> 2000, 
               "ModelMemory" -> 12096., 
               "ModelUtility" -> -1.1553022248293376`, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.003981071705534968, "TrainingMemory" -> 
               110157.33333333333`, "ExperimentCount" -> 2, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5867797820626397`, 0.004496063803771927], 
                 Around[1.5867789130289054`, 0.004496059289820295]}, 
               "AccuracyHistory" -> {
                 Around[0.46081103087603636`, 0.015665761149449686`], 
                 Around[0.5314748497441014, 0.01567403905276425]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5867708360459962`, 0.007108827590379262], "Accuracy" -> 
               Around[0.4361015326168771, 0.02463536506232846], 
               "EvaluationTime" -> 2.188996358671642*^-6, "TestSize" -> 800, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.1557918413010415`,
                "TrainingSize" -> 40, "TrainingTime" -> 0.003981071705534969, 
               "TrainingMemory" -> 147936, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5867708360459962`, 0.0050267001954432]}, 
               "AccuracyHistory" -> {
                 Around[0.4361015326168771, 0.017419833692578608`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5867167637511777`, 0.00759918173773388], "Accuracy" -> 
               Around[0.4572470048691059, 0.02646530161430541], 
               "EvaluationTime" -> 4.362670860958945*^-6, "TestSize" -> 700, 
               "ModelMemory" -> 12096, "ModelUtility" -> -1.1558195466167425`,
                "TrainingSize" -> 200, "TrainingTime" -> 
               0.012589254117941668`, "TrainingMemory" -> 500448, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.5867167637511777`, 0.0053734329382205985`]}, 
               "AccuracyHistory" -> {
                 Around[0.4572470048691059, 0.018713794237622636`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 4.362670860958945*^-6, "MeanCrossEntropy" -> 
              Around[1.5867167637511777`, 0.00759918173773388], "ModelMemory" -> 
              12096, "TrainingMemory" -> 500448, "TrainingTime" -> 
              0.3351414012779906|>, "Index" -> 9|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 10.|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.368834592427111, 0.008820560621558754], "Accuracy" -> 
               Around[0.4822182920484434, 0.022238200608329223`], 
               "EvaluationTime" -> 2.3568991965473695`*^-6, "TestSize" -> 
               1000, "ModelMemory" -> 12096, 
               "ModelUtility" -> -1.008442855378993, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.01, "TrainingMemory" -> 217192, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.368834592427111, 0.006237078229371223]}, 
               "AccuracyHistory" -> {
                 Around[0.4822182920484434, 0.015724782451536398`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.1714179801446565`, 0.016276176608151862`], "Accuracy" -> 
               Around[0.45437087919448227`, 0.028637496896469987`], 
               "EvaluationTime" -> 3.497689083781728*^-6, "TestSize" -> 600, 
               "ModelMemory" -> 12096, "ModelUtility" -> -0.8541851959379404, 
               "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
               "TrainingMemory" -> 252720, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.1714179801446565`, 0.011508994851414042`]}, 
               "AccuracyHistory" -> {
                 Around[0.45437087919448227`, 0.020249768251702636`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.9910015213792528, 0.019389589805684827`], "Accuracy" -> 
               Around[0.4870142255162281, 0.022225804913769003`], 
               "EvaluationTime" -> 3.181475722071719*^-6, "TestSize" -> 1000, 
               "ModelMemory" -> 12096, "ModelUtility" -> -0.6880614855465232, 
               "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`,
                "TrainingMemory" -> 500384, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.9910015213792528, 0.013710510436025293`]}, 
               "AccuracyHistory" -> {
                 Around[0.4870142255162281, 0.01571601737185535]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8753850392440653, 0.036298279405637415`], "Accuracy" -> 
               Around[0.5360586264183236, 0.040504083237605286`], 
               "EvaluationTime" -> 0.00003549765271234818, "TestSize" -> 300, 
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5683626903866362, 
               "TrainingSize" -> 1000, "TrainingTime" -> 0.03162277660168379, 
               "TrainingMemory" -> 2311888, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8753850392440653, 0.025666759513130216`]}, 
               "AccuracyHistory" -> {
                 Around[0.5360586264183236, 0.028640711923055066`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.864004186908349, 0.022801967965184047`], "Accuracy" -> 
               Around[0.5388521208307068, 0.021671202265388392`], 
               "EvaluationTime" -> 1.435883343799742*^-6, "TestSize" -> 1052, 
               "ModelMemory" -> 12096, "ModelUtility" -> -0.5522818620583115, 
               "TrainingSize" -> 4209, "TrainingTime" -> 0.0630957344480193, 
               "TrainingMemory" -> 9577888, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.864004186908349, 0.01612342617258006]}, 
               "AccuracyHistory" -> {
                 Around[0.5388521208307068, 0.015323854078321403`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 1.435883343799742*^-6, "MeanCrossEntropy" -> 
              Around[0.864004186908349, 0.022801967965184047`], "ModelMemory" -> 
              12096, "TrainingMemory" -> 9577888, "TrainingTime" -> 
              0.08886592039226171|>, "Index" -> 10|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[13.038488389286524`, 0.9926406521255909], "Accuracy" -> 
               Around[0.4418435572943699, 0.022082600560661268`], 
               "EvaluationTime" -> 2.163626261142899*^-6, "TestSize" -> 1000, 
               "ModelMemory" -> 12096, "ModelUtility" -> -3.276212386911534, 
               "TrainingSize" -> 40, "TrainingTime" -> 0.012589254117941668`, 
               "TrainingMemory" -> 252624, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[13.038488389286524`, 0.701902936399442]}, 
               "AccuracyHistory" -> {
                 Around[0.4418435572943699, 0.015614756602677438`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 2.163626261142899*^-6, "MeanCrossEntropy" -> 
              Around[13.038488389286524`, 0.9926406521255909], "ModelMemory" -> 
              12096, "TrainingMemory" -> 252624, "TrainingTime" -> 
              0.6749099132628529|>, "Index" -> 11|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0.00001|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[11.97241329723768, 0.9102444035024232], "Accuracy" -> 
               Around[0.4418435572943699, 0.022082600560661268`], 
               "EvaluationTime" -> 2.2669510844510388`*^-6, "TestSize" -> 
               1000, "ModelMemory" -> 12096, 
               "ModelUtility" -> -3.190891560096386, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 
               252904, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[11.97241329723768, 0.6436399902536674]}, 
               "AccuracyHistory" -> {
                 Around[0.4418435572943699, 0.015614756602677438`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 2.2669510844510388`*^-6, "MeanCrossEntropy" -> 
              Around[11.97241329723768, 0.9102444035024232], "ModelMemory" -> 
              12096, "TrainingMemory" -> 252904, "TrainingTime" -> 
              0.6749099132628529|>, "Index" -> 12|>, <|
           "Value" -> "LogisticRegression", 
            "Options" -> <|
             "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0.001|>, 
              "OptimizationMethod" -> <|"Value" -> Automatic|>, 
              MaxIterations -> <|"Value" -> 30|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[4.624688002147973, 0.2965997114105186], "Accuracy" -> 
               Around[0.4748448180268816, 0.017076607334990716`], 
               "EvaluationTime" -> 3.2486556457460178`*^-6, "TestSize" -> 
               1700, "ModelMemory" -> 12096, 
               "ModelUtility" -> -2.237349343082758, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.19952623149688792`, "TrainingMemory" -> 
               457088, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[4.624688002147973, 0.2097276672363507]}, 
               "AccuracyHistory" -> {
                 Around[0.4748448180268816, 0.012074984846231873`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.2321645032853796`, 0.09515159166552996], "Accuracy" -> 
               Around[0.4923714951761179, 0.023374949057491014`], 
               "EvaluationTime" -> 2.9403637649479994`*^-6, "TestSize" -> 900,
                "ModelMemory" -> 12096, "ModelUtility" -> -0.9172941530305947,
                "TrainingSize" -> 200, "TrainingTime" -> 
               0.015848931924611134`, "TrainingMemory" -> 500496, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.2321645032853796`, 0.0672823357073896]}, 
               "AccuracyHistory" -> {
                 Around[0.4923714951761179, 0.016528584988441994`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 2.9403637649479994`*^-6, "MeanCrossEntropy" -> 
              Around[1.2321645032853796`, 0.09515159166552996], "ModelMemory" -> 
              12096, "TrainingMemory" -> 500496, "TrainingTime" -> 
              0.6164323857737838|>, "Index" -> 13|>|>, 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["LogisticRegression"]], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
               "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
               "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory",
                "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
             TypeSystem`AnyLength], 
            
            TypeSystem`Struct[{
             "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
              "TrainingMemory", "TrainingTime"}, {
              TypeSystem`Atom[Real], TypeSystem`AnyType, 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real]}], 
            TypeSystem`Atom[Integer]}], 13], <||>], "MaxTrainingSize" -> 5261,
        "PreprocessorEvaluationTime" -> 2.1953125*^-6, "PreprocessorMemory" -> 
       194128, "InputDimension" -> 70, "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -0.8693687048950245, "VariableBudget" -> 
       True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
       False, "NaturalStop" -> True, "AbortStop" -> False, 
       "LastReportingTime" -> 3.879423128329367`16.341342139803256*^9, 
       "RoundPartitioning" -> 
       Dataset[{<|
          "TrainingSizes" -> 10, "TimeBudgets" -> 0.10564400000000004`, 
           "ElapsedTimes" -> 0.18693699999999996`, "ExperimentCounts" -> 
           13|>, <|"TrainingSizes" -> 40, "TimeBudgets" -> 
           0.15092000000000003`, "ElapsedTimes" -> 0.473193, 
           "ExperimentCounts" -> 13|>, <|
          "TrainingSizes" -> 200, "TimeBudgets" -> 0.2156000000000002, 
           "ElapsedTimes" -> 0.223014, "ExperimentCounts" -> 11|>, <|
          "TrainingSizes" -> 1000, "TimeBudgets" -> 0.3080000000000002, 
           "ElapsedTimes" -> 0.30732699999999996`, "ExperimentCounts" -> 
           6|>, <|"TrainingSizes" -> 4209, "TimeBudgets" -> 
           0.44000000000000006`, "ElapsedTimes" -> 0.447361, 
           "ExperimentCounts" -> 5|>}, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> 
     None, "Log" -> <|
      "Example" -> 
       MachineLearning`MLDataset[<|
         "f1" -> <|
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"}, "ID" -> 
            4840131171699015203|>, 
          "f2" -> <|
           "Type" -> "Nominal", "Weight" -> 1, 
            "Values" -> {"Information Technology"}, "ID" -> 
            5042234179079910413|>, 
          "f3" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537}, "ID" -> 
            8143623558489070887|>, 
          "f4" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {10.982}, "ID" -> 
            7788679715678402894|>, 
          "f5" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.982}, "ID" -> 
            4867089090251939422|>, 
          "f6" -> <|
           "Type" -> "Text", "Weight" -> 1, "Values" -> {"Estimated data"}, 
            "ID" -> 1244584425521089410|>, 
          "f7" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {624.605427784142}, "ID" -> 824640885889355554|>|>, <|
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False|>], "TrainingTime" -> 2.30653, 
       "MaxTrainingMemory" -> 12906600, "DataMemory" -> 8209648, 
       "FunctionMemory" -> 429728, "LanguageVersion" -> {13.1, 0}, "Date" -> 
       DateObject[{2022, 12, 7, 17, 32, 8.77978`7.6960586206536155}, 
         "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, "ProcessorType" -> 
       "ARM64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
       "Evaluations" -> {}|>|>]]]], "Output",
 CellChangeTimes->{
  3.878619160734618*^9, 3.8786192245310097`*^9, {3.878715800641226*^9, 
   3.87871584525163*^9}, 3.878715887355948*^9, 3.8788055501495533`*^9, 
   3.87880572388905*^9, 3.878806815602689*^9, 3.878806970579384*^9, 
   3.878811612125744*^9, 3.8791490032180023`*^9, 3.879160963309402*^9, 
   3.879325459923882*^9, {3.8793329903141823`*^9, 3.8793329994660587`*^9}, 
   3.879354647755681*^9, 3.879417658845533*^9, 3.879419529339849*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"12434ae0-cf74-4975-9f41-e0c11be80081"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cm", " ", "=", 
    RowBox[{"ClassifierMeasurements", "[", 
     RowBox[{"cRisk", ",", "testset"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Test", " ", "our", " ", "classifier", " ", "on", " ", "the", " ", "test", 
    " ", "set"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<The accuracy is: \>\"", ",", 
    RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}], " ", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "the", " ", "accuracy", " ", "of", " ", "our", " ", "model"}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"AccuracyAss", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"AccuracyAss", ",", " ", 
     RowBox[{"\"\<LogisticRegression\>\"", "->", 
      RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "the", " ", "Confusion", " ", "Matrix"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.878619179671941*^9, 3.8786191833045883`*^9}, {
   3.8786192222213593`*^9, 3.878619249704307*^9}, {3.878619342065884*^9, 
   3.878619346687873*^9}, {3.878619378625424*^9, 3.8786193862338676`*^9}, 
   3.878805729554159*^9, 3.878805819596631*^9, {3.878806143346759*^9, 
   3.878806195391272*^9}, {3.878806763106118*^9, 3.878806811062291*^9}, {
   3.878806841172628*^9, 3.878806863962813*^9}, 3.8788069741147137`*^9},
 CellLabel->
  "In[159]:=",ExpressionUUID->"f50b7281-5b28-4bee-886b-6e43d141e559"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The accuracy is: \"\>", "\[InvisibleSpace]", 
   "0.5809885931558935`"}],
  SequenceForm["The accuracy is: ", 0.5809885931558935],
  Editable->False]], "Print",
 CellChangeTimes->{3.878806864557898*^9, 3.878806978447228*^9, 
  3.878811616421514*^9, 3.8791490567506323`*^9, 3.87916097154554*^9, 
  3.87932546563844*^9, 3.87933300270362*^9, 3.879354650633625*^9, 
  3.8794195338214293`*^9},
 CellLabel->
  "During evaluation of \
In[159]:=",ExpressionUUID->"33bcdd30-bbb6-4b72-bd3c-a8cca597691a"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGwI+2BNLB4auln0b+84+Yqrx2YZ5b+0TOqVLVLhf
2c+6OL9ElPetvYo7+9PeuAf2GTLz1z07VWS/u4PT/qbyG/tHR/NuJPQ/sXeZ
9qLv3OejOM3BZe+iqR5zQ8Xf2T/juWB3cPIb+xM2fIv8Qp/D5R9Wiaxzf3jL
Huaj+mNcGzlfvbHX9L+xVvTTc/v3/tv+HvG6QbQ/CdFem6q28KW8tffjvq0f
8O6lvbG3gLRl8QOS/UUqrcFS33Lt3Fv7edmyhucbX9trTSoNPNDzhOb24qJx
2QsAtcS0Bg==
   "], {{0, 0}, {5, 5}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0014992503748125937`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "D", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 1.}], 
         Row[{"Row fraction = ", 0.0014992503748125937`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "\"D\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.8`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.005997001499250375`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", "D", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.8}], 
         Row[{"Row fraction = ", 0.005997001499250375}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.2`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0017064846416382253`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "E", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.2}], 
         Row[{"Row fraction = ", 0.0017064846416382253`}]}], "Tooltip"]& ]}, {
    
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "\"B\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.008840864440078585`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.9`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", "B", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.008840864440078585}], 
         Row[{"Row fraction = ", 0.9}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["50", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "50", "\" examples of \"", "\"C\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.04911591355599214`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.9803921568627451`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{50, " examples of ", "C", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.04911591355599214}], 
         Row[{"Row fraction = ", 0.9803921568627451}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["569", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "569", "\" examples of \"", "\"D\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.5589390962671905`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8530734632683659`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.6753709198813056`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{569, " examples of ", "D", " correctly classified"}], 
         Row[{"Precision = ", 0.5589390962671905}], 
         Row[{"Recall = ", 0.8530734632683659}], 
         Row[{"FScore = ", 0.6753709198813056}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["390", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "390", "\" examples of \"", "\"E\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.3831041257367387`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.6655290102389079`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{390, " examples of ", "E", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.3831041257367387}], 
         Row[{"Row fraction = ", 0.6655290102389079}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003436426116838488`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "A", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.003436426116838488}], 
         Row[{"Row fraction = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003436426116838488`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.1`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "B", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.003436426116838488}], 
         Row[{"Row fraction = ", 0.1}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003436426116838488`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0196078431372549`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "C", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.003436426116838488}], 
         Row[{"Row fraction = ", 0.0196078431372549}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["93", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "93", "\" examples of \"", "\"D\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.31958762886597936`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.13943028485757122`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{93, " examples of ", "D", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.31958762886597936`}], 
         Row[{"Row fraction = ", 0.13943028485757122`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["195", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "195", "\" examples of \"", "\"E\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.6701030927835051`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.33276450511945393`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.4446978335233751`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{195, " examples of ", "E", " correctly classified"}], 
         Row[{"Precision = ", 0.6701030927835051}], 
         Row[{"Recall = ", 0.33276450511945393`}], 
         Row[{"FScore = ", 0.4446978335233751}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "A"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "10", "\" example\"", "\"s\"", "\" of class \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{10, " example", "s", " of class ", "B"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "51", "\" example\"", "\"s\"", "\" of class \"", "\"C\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{51, " example", "s", " of class ", "C"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "667", "\" example\"", "\"s\"", "\" of class \"", "\"D\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8530734632683659`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{667, " example", "s", " of class ", "D"}], 
        Row[{"Recall = ", 0.8530734632683659}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "586", "\" example\"", "\"s\"", "\" of class \"", "\"E\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.33276450511945393`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{586, " example", "s", " of class ", "E"}], 
        Row[{"Recall = ", 0.33276450511945393`}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" classified as \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " classified as ", "A"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "B"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "5", "\" example\"", "\"s\"", "\" classified as \"", "\"C\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{5, " example", "s", " classified as ", "C"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1018", "\" example\"", "\"s\"", "\" classified as \"", "\"D\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.5589390962671905`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1018, " example", "s", " classified as ", "D"}], 
        Row[{"Precision = ", 0.5589390962671905}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "291", "\" example\"", "\"s\"", "\" classified as \"", "\"E\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.6701030927835051`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{291, " example", "s", " classified as ", "E"}], 
        Row[{"Precision = ", 0.6701030927835051}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{4.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"C\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"D\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"E\"", BoxRotation -> 0.], TraditionalForm]}}, {{4.5, 
       FormBox["1", TraditionalForm]}, {3.5, 
       FormBox["10", TraditionalForm]}, {2.5, 
       FormBox["51", TraditionalForm]}, {1.5, 
       FormBox["667", TraditionalForm]}, {0.5, 
       FormBox["586", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["1018", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["291", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"C\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"D\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"E\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->13,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->228.,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.878619184460875*^9, 3.878619347255011*^9, 3.878619387156837*^9, 
   3.878715848704851*^9, {3.878715890521706*^9, 3.8787158953838463`*^9}, {
   3.878805538696899*^9, 3.878805553604134*^9}, 3.878806818221781*^9, 
   3.878806864604879*^9, 3.878806978492092*^9, 3.878811616470173*^9, 
   3.87914905680276*^9, 3.879160971694542*^9, 3.87932546568084*^9, 
   3.879333002746861*^9, 3.879354650698729*^9, 3.879419534040506*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"f9af8137-acf3-43e0-87a5-050ea248edd2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RandomForest", "Subsubsection",
 CellChangeTimes->{{3.878805416699134*^9, 3.878805417721744*^9}, {
  3.878807059832753*^9, 3.8788070612150183`*^9}, {3.878807108181322*^9, 
  3.8788071113366137`*^9}},ExpressionUUID->"af039915-bf9f-4d39-af0a-\
2865838c6fc3"],

Cell["\<\
Train a classifier using Breiman\[Dash]Cutler ensembles of decision trees\
\>", "Text",
 CellChangeTimes->{{3.878805704170437*^9, 3.8788057223306637`*^9}, {
   3.878805766632689*^9, 3.87880578974465*^9}, 3.8788070565323973`*^9, 
   3.8788070963390427`*^9},ExpressionUUID->"accec003-1c7f-4fff-8f86-\
6d6171f252b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cRisk", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"trainingset", "->", "\"\<Ratings\>\""}], ",", 
    RowBox[{"Method", "->", "\"\<RandomForest\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "cRisk", "]"}]}], "Input",
 CellChangeTimes->{{3.8786185865414057`*^9, 3.878618597824006*^9}, {
   3.878618646892776*^9, 3.878618648994371*^9}, {3.878618877270843*^9, 
   3.878618880432907*^9}, {3.878618998083866*^9, 3.878619004451974*^9}, {
   3.8786191510115213`*^9, 3.878619159945651*^9}, {3.8786192237272882`*^9, 
   3.878619223941098*^9}, 3.8788070698448772`*^9, 3.878807113159953*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"6853ef91-287f-4ced-be7c-af92b49c909c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                    "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\""},
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                    "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\""},
                    "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["5261", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 5261, "ClassNumber" -> 5, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "Country" -> <|"Type" -> "Nominal"|>, 
           "GICS Sector Name" -> <|"Type" -> "Nominal"|>, 
           "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Disclosure" -> <|"Type" -> "Text"|>, 
           "Revenue (USD mn)" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["FromDataset"], 
              MachineLearning`MLProcessor[
              "FromNamedFeatures", <|
               "FeatureNames" -> {
                 "Country", "GICS Sector Name", 
                  "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                  "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                  "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                  "Carbon Disclosure", "Revenue (USD mn)"}|>], 
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 7|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {
                 "Nominal", "Nominal", "Numerical", "Numerical", "Numerical", 
                  "Text", "Numerical"}, 
                "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6", "f7"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         False, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

              "], "Type" -> "NumericalVector"|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 5261, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Text"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "FeatureChangeType", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 8728850163752787708|>], 
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>, 
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 4012203223801137025|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 7247984987659546603|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>, <|"" -> 1|>}, 
                    "MissingCode" -> Indeterminate, "Version" -> {13.1, 0}, 
                    "ID" -> 4113760982813578529, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Mean" -> {209.80690318178338`, 38.57264497138987, 
                    138.3376102159199, 2296.6337905542246`}, 
                    "StandardDeviation" -> {1432.0032489855246`, 
                    171.69843080857044`, 192.57826196052247`, 
                    9129.337299520432}, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 3752698420053720059|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3, 
                    "SetSize" -> {55, 11, 1}|>|>, 
                    "Boundaries" -> {CompressedData["
1:eJw1US1IQ1EYfcIMChbLhBk0GCwrCjMIZwZhDEHQsjJBwaQww8qCIAvPYDEY
FGGIZWXhCS5o2EEmMgTx/4lv6l4wWIQxxLLiu+/7/Mq9XM49f9/oSm5htcey
rCnrf3y6teXvmPvBymbdS1TeWZweaywW35jp2tVcpsn4+dfxTtxjbyG9W468
spkwyBee/A6stRyX2wGqaz8zm7+fjWafOBHOI/s7eyPzfQ/0HQO843rLXG45
FAJveOkZomtuhEINDodGrhiIBw7qDOnyF0yWBj/HZ2rcPzBzxh9D2znlXOCm
kHaYihrCMtsxQ3DIIwMvFbklJ3x5R1JwSMk/tIUHygvVgepCfUB9QX1CfUNz
QHNBc0JzY1J6wJL0Alt6giO9wZMeEZFeoT1De4fuAboX6J6ge8MfBK7o6Q==

                    
                    "], {-0.5, -0.40909090909090906`, -0.3181818181818182, \
-0.2272727272727273, -0.13636363636363635`, -0.04545454545454547, 
                    0.045454545454545414`, 0.13636363636363635`, 
                    0.2272727272727273, 0.31818181818181823`, 
                    0.40909090909090906`, 0.5}, {-0.5, 0.5}}, 
                    "Version" -> {13.1, 0}, "ID" -> 2082886514676041914, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>, 
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                    Span[1, 3], 
                    Span[4, 7]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {13.1, 0}, "ID" -> 
                    3471102231048770802|>]}, "Invertibility" -> "Approximate",
                    "StructurePreserving" -> True, "Missing" -> "Allowed"|>], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBmQFm/iFib1JlAgAAAAcAAAAHAAAAPlM1OXtLmz/JiPcwbAyAv1XkjbwG
1YQ/vL3MM3alqD9dV7Q3ltHiP2S57Fz+YOk/MnmDCDz5wj8EQ6YFpvefv++u
GnjfNYi/QC4jX10NcD/9dRoemfCSPzfG6DRwO6y/+Fp8ks9qwr/+dWRCD5jv
P1e44E2uMWU/lBmRez1vUr9Wme0jCTJhvzS4InKsPWE/ogrVuWjN6b+p6Amc
leHiP19FAIP8/KQ/Fsw7lzFi479b2o2x/7O7v8QbWFU9jta/WunW5/OI5j8Y
e5c5Toh6vzr5ex/nBYC/SjOPC+5Gob+BzmGl9zXgvwH8AegL5cS/qmysjusN
6z8sWiaoibijv7tSilO75l8/vMAEl/OHgj/6wqUCxqOTv5LfxWV4YuO/+WSv
W3RQuj+vRZXiiwHYvxzP5zepJOa/dwddW+vpnj/AldSzjP6mP7AL08UTf3M/
oEUKDPSctr9PbMjmPjTvP+rNfS3iL8I//6HrutiXwj+qZ+qwPl89vy+NAyQq
BlQ/cl4LGc2Ndz/G8Myp
                   "], 
                  "Precisions" -> {0.7323150115031848, 0.9950353534094927, 
                   1.150259857918005, 1.3081831054231352`, 
                   11.904267203841378`, 12.590913834400338`, 
                   21.78658982700742}, "NoisePrecision" -> None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.045734233435905304`, \
-0.025594359218476675`, -0.0029955448724701505`, -0.00014912358418741337`, \
-0.00003169670080297662, 0.00013678099790770116`, -0.00011712644515109536`}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 7813766679320217419|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 7.|>,
                     "Key" -> "((f1f2f6)(f3f4f5f7))", "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 7, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4503155047815583877|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                   "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                   "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 7, 
                   "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                   "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                   4503155047815583877|>], "InputDimension" -> 0, 
                "OutputDimension" -> 7, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"},
                     "ID" -> 9054002198889522994|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"Information Technology"}, "ID" -> 
                    111132265781554143|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537},
                     "ID" -> 345609698028463116|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {10.982}, "ID" -> 2847955718844691890|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {60.982}, "ID" -> 8279278174017998872|>, 
                    "f6" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {""}, 
                    "ID" -> 2733924562406810284|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {624.605427784142}, "ID" -> 
                    6335781326903152349|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.078601, "MaxTrainingMemory" -> 2953528, 
                  "DataMemory" -> 1220792, "FunctionMemory" -> 92272, 
                  "LanguageVersion" -> {13.1, 0}, "Date" -> 
                  DateObject[{
                    2022, 12, 7, 17, 33, 13.056956`7.868416926221628}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, 
                  "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-5.8464371569811195`, -5.8464371569811195`, \
-5.772442655506229, -5.719536211659443, -5.569781037675731, \
-5.547597831708812, -5.492452464861547, -5.490044807247233, \
-5.4488020625417395`, -5.375138296361131, -5.327882521015458}, 
                   "LeftBoundary" -> -5.772442655506229, "LeftScale" -> 
                   0.03699725073744542, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[38.91308053189091, 0.3782184306301033], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0}, 
             "ID" -> 8833432794738512184|>], 
           MachineLearning`MLProcessor[
           "Threads", <|
            "Input" -> <|
              "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "(f3f4f5f7)" -> <|"Type" -> "NumericalVector", "Weight" -> 4|>, 
               "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
             "Processors" -> {
               MachineLearning`MLProcessor[
               "ToVector", <|
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                 "Version" -> {13.1, 0}, "ID" -> 7001699027996678713|>], 
               MachineLearning`MLProcessor[
               "ToVector", <|
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                   "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                 "Version" -> {13.1, 0}, "ID" -> 4268131072254999855|>]}, 
             "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
             "Missing" -> "Allowed"|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
             "Mean" -> {209.80690318178338`, 38.57264497138987, 
              138.3376102159199, 2296.6337905542246`}, 
             "StandardDeviation" -> {1432.0032489855246`, 171.69843080857044`,
               192.57826196052247`, 9129.337299520432}, 
             "Output" -> <|
              "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 1927666520227175614|>], 
           MachineLearning`MLProcessor[
           "ToLowerCase", <|
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 8121204540162656102, 
             "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "RemoveDiacritics", <|
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 1964114494773798714, 
             "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "Threads", <|
            "Input" -> <|
              "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
             "Output" -> <|
              "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
             "Processors" -> {
               MachineLearning`MLProcessor[
               "Sequence", <|
                "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                 "Processors" -> {
                   MachineLearning`MLProcessor[
                   "TextToNominalSequence", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
                    ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", 
                    ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
                    "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {13.1, 0}, "ID" -> 613813152937597666, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NominalSequence", "Weight" -> 1|>|>|>], 
                   MachineLearning`MLProcessor[
                   "NominalSequenceToTFIDFVector", <|
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "NominalSequence", "Weight" -> 1|>|>, 
                    "Index" -> 
                    MachineLearning`SortedHashAssociation[<|
                    "KeyHashes" -> CompressedData["
1:eJw1lEuO1FAMRXvACmg2wAKQ/P8soSVGLIEBEiMGsH9xkpdSqlIp28++vtfO
159/fvyqt7e3v5+4ff/999/HFx6+rVqq2U5t5uas6uMQ9dFe5zNhJb3HMWvS
Km1rvToSKY8jNX27tJV0aV79ODRLoq/wmC31quPoyeyWtMycu46+HDZewFKJ
ohAHj6PWCogmCuTOGPHjyBUAd5tW+tToPicytTykamdkPMuf4gEcA+a2rxM1
rxNBhfBc7fIBHSGPIwBIYaECtFDvSUWYhUY3/lQt63g5TJXO0mFWFlAPJQ6f
smRRDl38dz6OCNeUdlDNRa4/xR2MQrsxzRHOv2i3lAVShyw+8trLoQjqFTOT
BdXtdhxaEwVHCN9bgrIPXM0IhcGrBQu0nPh4PyR2V18t65jBcn18xm6BcnSu
l1i1sXabIy6IQxfS0WU0fZsTLt1UmCv4rTlmOoRwujoNi+Vt3pQg1rhPgDTk
hqJKZnJKTozTRu6xZ6FgFk2P9CXeyw5qWXrJgj8ThvK2V2vQJunFkVTMbjuM
QGMkE5jG12Vuu9t0OK0zNSJxrcWx0yu5BK4YeHQwP/bsCvijTZKUDTP/fpMA
FPQuS9IR0afuTVZlcF2z0ZQ4draQrIRv3U9Pv7TL0nQVBeqqEyc/e8BSiTvy
LfyUPvHwydaynMviFLofHpgjppClUKc0a2NHcmaYcP7ZoFkIbB87lZh/bVBO
uVyb+dgvqIau/AwjcfSqaywGdNEBTcawH3sjH3O2AdfLGuaJZ4Ad8HrJEmy5
Vx57+/WuAaBrVaHEE89SQQMnIAR+WN7bDgSWTp1LzJUZOnV5wQ2KFAqyKSMv
HpZlDgaRyiAIiJ7/oUHtSA==
                    "], "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    ToString[#, InputForm] <> "Cn.i9)P$", "Murmur3-64"]]& , 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {13.1, 0}|>], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAwA+JZ+8T4F3B/tJdela8mWSvlsHur766IQAGHjdl5U6SU
3thPLz2z7Xc0p8OSKy+f6VwRdNDev3TKgWpJB9NNtkKqu2QcdugrPJST4XTg
X7O3SFiR1SHN7VRk234mh3ecys+/rXpqv8/RscLYTsiBcdn7A2u4n9jD9MPs
5Vx4y+1PNq9Dt/jeJ5zmrA4wPszejqrkPcbMEnB7YXyBlxtjDnH8hZu3Xz1y
j+JGTrg57gfXrLgchSm/dJPZ7ohURjgf5l8GCGhY3573N3bDPfuu5Gi7N884
HIxSD6beYvlob8h2kPHjuj9w/8DM3bCj8PInKWk4H+ZuWHjC5GE0zN4FPvYz
lqx7bQ9zb79YndlmJWGHd/8DjHc/kIXTMPUwfwMAf4a6Yg==
                    "], "Version" -> {13.1, 0}, "ID" -> 2566335944547631010, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>]}, 
                 "Invertibility" -> "Impossible", "StructurePreserving" -> 
                 True, "Missing" -> "Forbidden"|>], 
               MachineLearning`MLProcessor[
               "EmbedNominalVector", <|
                "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                 "Index" -> {<|
                   "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, "BOTSWANA" -> 
                    4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 7, 
                    "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                   "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>}, 
                 "Output" -> <|
                  "(f1f2)" -> <|
                    "Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
                 "EmbeddingVectors" -> {CompressedData["
1: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
AYwY2QUp9dHwDxWH4HQ=
                   "], 
                   RawArray["Real32",{{0., 0., 0., 0., 0.}, {
                    0.09429772198200226, -0.24127089977264404`, \
-0.5270462036132812, -0.24486297369003296`, -0.5337972044944763}, {
                    0.3855826258659363, 0.345225065946579, 
                    0.375460684299469, -0.6187008023262024, \
-0.9083080291748047}, {0.038637321442365646`, -0.39784038066864014`, 
                    0.4888850748538971, -0.3776519000530243, 
                    0.04570373147726059}, {
                    0.1278393715620041, -0.05385725945234299, 
                    0.7183319926261902, 
                    0.20311319828033447`, -0.020085696130990982`}, {
                    0.2800740897655487, 0.3026285469532013, 
                    0.013881713151931763`, 0.6868195533752441, 
                    0.08314655721187592}, {-0.8298808336257935, 
                    0.34320393204689026`, 0.0243590846657753, 
                    0.07180754095315933, -0.6089136004447937}, \
{-0.10904797911643982`, -0.2677527964115143, 0.5590679049491882, 
                    0.48168694972991943`, -0.6030200719833374}, {
                    0.22935371100902557`, 
                    0.18263663351535797`, -0.7634024620056152, \
-0.029437005519866943`, -1.0930653810501099`}, {
                    0.14211100339889526`, -0.2188272774219513, \
-0.5335532426834106, -0.15458126366138458`, -0.20572292804718018`}, {
                    0.4123682975769043, 
                    0.36278361082077026`, -0.48854225873947144`, 
                    0.04904557392001152, 
                    0.27460458874702454`}, {-0.10662871599197388`, 
                    0.2889917492866516, 
                    0.4839726388454437, -1.046645164489746, 
                    0.2283746600151062}}]}, "Version" -> {13.1, 0}, "ID" -> 
                 4560545129116418848|>]}, "Invertibility" -> "Impossible", 
             "StructurePreserving" -> True, "Missing" -> "Forbidden"|>], 
           MachineLearning`MLProcessor[
           "MergeVectors", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>, 
               "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
               Span[1, 54], 
               Span[55, 66], 
               Span[67, 70]}, "Wrappers" -> {SparseArray, Identity, Identity},
              "Output" -> <|
              "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

                  "], "Type" -> "NumericalVector"|>|>, "Version" -> {13.1, 0},
              "ID" -> 324326445301658208|>]}, "Invertibility" -> "Impossible",
          "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 4199606916556033440|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|
               "A" -> 1, "B" -> 2, "C" -> 3, "D" -> 4, "E" -> 5|>}, 
             "MissingCode" -> 0, "Version" -> {13.1, 0}, "ID" -> 
             18782000146286335, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {5}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 7688100530236977542|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 5|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       "A" -> 0.001329282187618686, "B" -> 0.005507026205848841, "C" -> 
        0.04044815799468287, "D" -> 0.5218382073680212, "E" -> 
        0.4308773262438283|>|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> 
       MachineLearning`MLProcessor[
        "KeyIndexSplit", <|
         "Index" -> "Ratings", 
          "Order" -> {
           "Country", "GICS Sector Name", 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
            "Carbon Disclosure", "Revenue (USD mn)", "Ratings"}|>], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {5, 6}, 0., {
      1, {{0, 1, 2, 3, 4, 5}, {{2}, {3}, {4}, {5}, {6}}}, {1., 1., 1., 1., 
       1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|"Trees" -> {
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1k81u1DAUhe8gFoyACIYuKphFq2nLAqFONySZxM6vLbEtT1CkAiuQBiTE
C/GcfPc0yLLje+7/uc755x+3Xx6Z2c8nHLd3v4fj8e7PpzXCx++/7r/eH28+
fFsh/eV4ZgerLFi2nt0iTdw6bpW9txL5hDPzLUEatJ0l9p57tlfY1txq9KPN
aDPniUXOxJqx/L/dPhIlKFMjfcXO6GrldHlP5oDdTnKjiJMNirdHf7B3oD1Y
4mzxbO0a7cq2nK1dyKZULYmaOqxK4k22BhvQrcEy2AiayBVUX7YzPDPoRIyk
KkYyeqRZ/URFidh4Ra9VcUfERP4tUqTvWf24T43Os0/iasdybhuwTJ4tNgmP
oDoPmkGWz6Q6nC3vokE/qu4gq8TeWUG2gywit8Y26K8XluaF2YdvQ7RBDASh
XnGF7F2+1KQb6hpYnnkkove2wd6RElZfLJoI0pI5yLcl/iVdDPhfSu/MeOxa
DEV5t+AJn0q1d2IlgjozBd7ZTrn1vMG33Pz1rew5/WV7LFaSPCrWRnJnT8k4
qYYI+oYcG83vCk3Q1GrxMGm+vfjuFWfWmyvJ5dU46/OCO7OF3oJ/faI+m0kc
p+X9+R9SY1voXzhXDVfEK+xGb7hUzn+y1Gic
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1:eJxNV3s81PkaHtKaNqS2NBU1bpvajemiprDvtN0mqqWbicq47dF9ioqj3SZp
syXJIqfNMWQZtWowaSi9M2gMkwyiUdFklPsaSaar87Wfk3P+md9n5vf7vZfn
fZ7n/Y51wIGNwQYUCiWLfLBTVnnMMIqDmFunXA41PgOeX1OWkv8IOdTYML2s
DQQ/n7RzClQhwz/B0oXXBrTrKwr9V+8CYdGMcNPmKpDc8XC9O1QJQtvmnPWc
NNA5lLdrtc8hnPHhxpIjTei56We31B+vQnjeNl+PEhWE8GwkC+Sl0BHJKl4a
kYmaDSnWcqt7INFmpl6OzwNuY6Lk/cA9oHx9bMWc9BoUmnB/qiD3BZ7snato
KlSfdRyulSuQ8jq/6EFjLnhSd6TePZyNnA1xaeolj4DmaPesav8z1L/tXDab
1gjm8pdTjZ/KgGO89G6CgRI1Rwyzdu69jxo3h+V+v6nAfHj9Mw2pNySsLm14
eQLQ9r7yKCNxafZhGxYrxCDMtJ/L39oICp9K4ay1N4G6cPPWLmcxhjM8zq6d
FwF0qbr03fVqjDmwf9Na0xejfVCTZh3ptJWA7lfdRfqFClTPNPrFy6oV6WYl
EqqgFc3FuokD/pcwRBUtvHg6AVma1+KpmZVo/izT8TK3AlQeSRWJzytQ1xwR
t3JnPfB93F8mkfodTPCySXsVKo7ONwrMVUN8013eIMGLZvprr+XbBkgx/+LB
+WYNKmouVvbbq4G+18sw0L0NqMOivx6p7yNjxbp9FsI61OzICueur0KhnKte
JGkCjqtWd3RDPnK/MStnkXx07xMhF9KVQHESbm8j+HTIp9K+JXhKnyp5MQwE
Xc52XjWZw2d8U/4VsNnuhw5kRAVrFh7XArs9VpzedRv1F+8ufBhWCCLdUJSl
XQ2qwkw23n9UDbo33MO5LwRAWclQaTOlSKMOls7gKZG3e6YgSSBFwaTfOZ/8
8yHe+atXVhFk3nknkhu9W0bzdTR0T3MnfNJ0FYvD9jSN4q73e+1TQuJKBxYV
ZCdXgsBvvqFZuxTDr54Pcr72GCnbM5xv74uFcK/ETGtSLz+BmZpA+tRHNbfq
nQhucVRVspLMr5a57VGzHPXKfKemF2nAzfM4I/5VCoKSjef3p1Ugq2J1NZ28
L+Ba956GPFB8Z7BopB6904+qB4SvQqtBq49npcA+c0pn0Z6Nqqxj31tPK8WQ
hj+Ki4meeDKe8VPzXjR3n7fmsnEj0Krdq3b1p4Bkl7yUTXjOoIaa+Md1of6T
cs7BdzJkvQtCblAeaAx6Tp0sKEXuRc0ue34tMlxZ45UkH4vS6l+ygMxF8M7U
dKgB4udwwhe6K1BgGIKrSTy6bzKd/lstqD46Fn8X9Bg49bO3JSmfY3jRZXVP
xk3oiDootaU9Bn0j81tHMmed3YfKV24ScLA6F+t2o3wUF8aAxXNP0qcif+iQ
q2M5Ut0emi34qR+FUb/bPqyTjeKRMmEcq77nKejZm5aM4MR7UJxkT+JTbmT/
qfPQjs7Rodsyx53Uxx7o8ltiJEPu119E7J56B80NzZ38Cb87OH1PqHoJen6k
XfiN8CnG88gnf8UVECl977mMLUHe/ITsQkYp8Azb28fYVKFnUGK5z49ypFtN
/aUeb43WzTR27PNzFaPA5NO0eMP7KFkXOucXcpXm+7A2VZYh21Q45FthxPr8
/Od5SztDKp8T/lOD5lz9vTd+lGfh76K7D2a8Beb67Ts8d30CztqGgvIAGTAc
y6N8Emsh/MKfG+e43gEpb+uh04Rf8bcfxp0fyTdJYBH7YzaIorfMiyXfPV22
rY9eVAJq6ZgtdKKPz7h81g3rhzV30u4XADV4TXSdivD97W2Tc5sTQXrm2HuD
aAXy3+cuGcEz5M0rV+pZAWrW8O88mf7naP38uoZZlw60g+KXPYtDrmvQwXLK
hyCCq+gSdeaCdRqQXp1Wq1JUoqhP4LDmfSlSK8VWvMQmlA7OShi5xofuHegj
8UROCwIldx4gK9P9scK9DBXJe8enEp/y5Le5U9Nlozibp+iZLjItxPxpP6Nn
rQqZXbwx2fI2kDr4HwgidetzNu3uPlEE/GNO86dflgG91WQoN1SKnOUHpkwn
/sqduDRqksdJELYvrcpdrQa2/eFxHUZNxNfT9x0n77M7DeVnDe6j6MOOJBfb
Z0DxCv4nDrSM4kXJsV3yTXIWdFw7cbiA6IlbrzPZS/aag0v0zIg9dZBy5sSb
FBIn3s3HZkRfKl5D/Yj/Ozgm/3FyeSFSN16MoZpcg/j6ucrB+hb43Ff4PN3E
xn0ypG35dOO6dw12mIbs/VRQhlL3WbzqF9lA8Tya0jLOE4UHe324NyvwQ4Xl
+8UbxrL4UQyX1qX3MKTto/cVgRKF06ghswYGQLV+YN503//FF/UHs/e/ewFs
6aKNI3xTzeva+UrdDuzepkvr3F+CZHzEFI55PbISLAcjw5pRv2O2bRPZdyrv
x1HyeSJQTz/2z5/oYuD0WnxluD8WJNcmuY3sq5j05MkBW8tG9x33ozuzrK8U
PXtN/EbySPZEdvv+9RxpWjvRm7wmUGdJ7y/IbwXBfPm/35D+Yxwj555e14Ce
14dw5SISJ6fs6IjeHdzarl77oAX+27GrXcWJwLCwc2V8KUJRjdna6MBcYKca
ujacKAH2mtv9+0hf8TenX222qUVeldKhlfzOUvzj6M0JGUC/KDD2MiB+0eh7
REPu863XGG1oIz6wuOFgP+E190F2QizRPXumnVlLZwMICz3GHUlpAuaF9OvO
zbkQYhAmXtRZCqqXsw/Pte1GRcmhNPn7YmS9cbn0mvQTXpDc8fadAkU2u7dZ
zysAieGc8c69ecAbfq1pNr6HCt7yIR/SP//Q1o5vm9JAUrP53eF4Gaqs5qSZ
EPxYq9XagWAZenobR94gPhMf7M23IjrlTZw7aZmfBoWSjDTvtHJgHV/1OuK7
k8BSj10s3DKTFbJlVkIReZ7VVJDz8Oc64GRoNF2kb168gGtL/FC1KoTZR/oT
YsDU9zsK8XM/McO2O3ztbwPXtlBm2qnF+CeB02uIvztMdOMOLHsIrp0zL9Sd
NGDF2AQso6bcQ6bzRIEf0TP3mE5iQ+I62E3ijJy7HG75RFoSv0/pka3Yx8wA
6lqfpklrS0ARa7bN0vQCctYvaTwWJwV6gPDZCM4Sm+9xi7QNheHdK9i8NKC4
/qSKFVcDR1zz7RKjLBB9AZP7zWqBzq982ftV8+jc2FlmOyomyoC1Tpj2IPXf
wPTIlBtZ1yCT43x+wsNssm9cuzftkWKHuDRtZC+ytu/b3NP2HDuwZJyOVoHU
IeoX0VNSgS8YKtpA9grzqPfNH0b26BPLlsmKu8A+cH1xZ1wp0gOKQyfbPUed
pCXnVegfwHpt3zTmZSGEm3jhHsIv3gQ588ZrRNbeGacnD5P4Xgbj7beQ883J
GZvzx7dgiFzslNPXMBqXSh0jHDxQhfSwpKKNFiIIcQjMcHTSALOvf8w3ZP+x
fzhjuMpXOponRXk890qHFtRj59cuAy0wYv8hHKRKgTHhX85mZA6691/qkwuK
kO8fmPM339/uy24+Rfb0YD87rojoKE+dcZL4PrPmo1EzOX9Q8n5bZUH0r2mR
hU0kPBPJev14RLfShXFfHrHUoqhTenShphodXLvCAqbcR+o5x7+eLq9CWszK
wnPkfGM+O/RWEokrst2pXH37JqiyzW69EF+GDuNDSgvfctB0/yHvLKhG9e9l
wS2OMlSvl625/LIazQt6o+paW1G6VKOq7K1Gngkvs/mQEsPn26zcNeMlmDMu
Wtj1vkDd8eUG5dPFkGL/pbaopxZijld1M2rkYD7hzLr/v6/q1AaOnBd5Mba6
K931qI9cuiee1MW7lZOTLyN5Ztnc6EsrQ2GrR0acsRpo3/ffsSbvx89Xpxf0
tKJghiJT9XUZ6jan1nynr0BaR1LxwMFS5Jwqr31iVYuqdH7rSF0ixdyGRLJH
NbWumvemVUjhBy89N3wF6IeyvP7+XzA0IdKvsx8okaF3lv96Fzz72lcvOChF
Vd7jnlWcZhDYh57zmVQM/KvVEdo3PSjqX2BquJv47n/9ijI7drfRlAZU9wuP
lIwZBEkwRK/w0oDKeIw8abgS1EG003+xcvE/4nHm6g==
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fRuB/B0NwhEBIGGAohIb9
C2EQFm/wFuEQHi/xChEQEduQ1ZEQGauxBlEQFbGRxXI0/HVMREdmx0Am/3FG
/3Ys/HIGx0FcxEN8FEFRJEBC5EN+JMI/+On0/uHEyIlcSIKkSIbk+O50ToGU
+Oa0ToXUyIY0ToO0yITUTof0+OpU/uKU/uwM+OSM+OgU/uDMyILkzopkfu+k
fufseOsceOMkfu3cyIvEfuU8eOl//MKJ/NwJXQAJXBDxXQiF8czx/NRxXQzF
sQIrUQIlMRwjUApxXBXVUBpl8MRl8dgVUQ7l8cix/dAV8MCxXAkxXRlVcN8x
fM/RXR010Ad9URO10BTNcNe1cceNUAd1cdvRXA9RXR8NcMsNcdNRfMORfd2N
EYAmuOZIvuqIDkQEt0BLNEd4X3E4t0JYt0FbtEYYX3Zot0N79EQod0BHXHJI
d0IQLroHOiOEL7gruiC4zzuYz7kbuoM+a/iMrV6QeuOvTvuP+qE/Tvm3TnoA
BuGXBuKnTviHBmMIjnsojvm7jnoYjvibRuKrFmIRDnsURmMMDvmLDnosxmE8
JmAiDviz9nsS9nku9noy9ngKpuKTdnsadnk6ZmAmZuGjdnoOdng2tvuDtvm9
5uGd5uOttnoBtviNNnsxluO1luCVluKlluGFNvm5NvqZNvipVuGJ1vux1uKR
1nkr1nod1mMDNuKh1ngLNmEzVvuBVvm+VvqeVviulns7dmAndmE3buAm9uCO
DuIQ9uK29uGWlnk/DuCmlvqGlvgwFvsojuC6FvmaFvoYjuMETuIUzuAsFviq
TuOK5vuyzuE8LuKSLuCi5vmC5vq8LuEyruCc5visruKMruG0ruOUZvukbuE2
HuExZvkOHuKE7uIe7uMBZvq4ZviYpvuopvmInuCwnuOQnuKgnuGApnq/pvgF
JnufJvk1JnqvJniP3mG3xnuX3uMDxnmnPmKHPmG7PmObvmCrvuIbxvo7fuAn
xniLRnuzRnmTfmOjRvoP/mKDRlgY7vUigzETMzM4QzAc12mY1yokQ3GoQ3OI
w3Kww3CQ12igVys8IzAiIzE10zAyV2mAkzIKozIaVyou47G/ozMGY7KfY7Gv
Y7OPVygOl6u3l6mX47OnkzABlyohE/EfLlEPJ2Z3L1Y3L1JXL1QyLlBypmAX
z1dnp2QqzlOQ5yot5yg9Z6uT07GjZykDZ6qDM7K9ZygLs3IKpzIbszMXc7Od
czAnp6utp6mNpyoP87IFWzIf87O1A1mABdmQjdjKhViERdnShdnCU1SMxdnc
NRnoEqzEymzmkizF0izDyWrqSSrLiSrHCWri8qzA8arIcQrwWFVhVTb2GDXy
aDV0NTZwddZ3DdbzKNVibdb1SNXhCNXlcNVjfdbxMDXgUNX2EDXmYNXyIAWw
CWt6oJpygJqxv2q4n5qzr6q7j1qxNbuzB9uwLau5t9qxl6q6M9uzA6u4pzqy
Eyu7h4LYXZXcTV3YlRXdVd3YRRXcWT3Zi8MZpPLupN7sw3Luy37sz7LuqAHs
oIEcxDJur9Jup8Fsq1IewqEcxpJuoxJureIewZEcxWIezaJupTEcyyIex8Ke
wPFsqUJuoYmcxIJurskMVAE3U35P4yI21XQ20QzOZD7P4mzOYV4HKI8bay7n
cT4XcCEbKbcbKpcbKKfrK4cXcwnraSnrKruXMZvr6F9D5VTT
           "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMbGOPxJEv8AuuHLkW8YBWlIpLkVokxIv4Jt7qECWOPZ7YnhyG
Z3cvTdOsOzFd/z4tS/+57CW4zutjmsfbeX6N07gch1bArxgGywYXJiYyI0cj
hTWph5TGztWUhQB7HuYFFCtRoCaAknwgX7LdXgzhAmQeRSVOLgf6B1ml1omq
AMUJIgUF+TDGjem49tpK/PuI1iaXa+voGkKr9ExulqKJ/ahr01qUf+Sqwgnl
VMfwAUL+D7HAFCM=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9km9r1EAQxudEwdMarCgUe3CUq74R6bXQJpvkNsnuJeDb+gkqVH2lcAri
J/Xr+JvnTgnZ3fn3zMwzc/bp++3nB2b24zHH7d2vYbe7+/1xjvDh28/7L/e7
y5uvM6Q/HKV1FmyyyracjT3j9cgWvCc00WbYG97Rrq210XrLvEsbiDrnjuje
2ilytKUlpBGEJRFH3BvFOn6HPYA44OPYoxXy6bhP7CWWZBf2jpiKDL2tsWQi
BiG84K6EUtlrPGd2RTWneJR4PkHvtQSsEcwaW1CtQXVWwhrQT6q8VD/e3aU9
tTm2kb/jvEDX4VGQo+LO5HDMDZx4zROaczI06ty9GnC8K6+/RBrI2nI38l+p
x0SNiUjXdOQMdkZ0C/IaXaEZLMWzR/dgjfgnPJJsLh8jddThDJf2RljOZY22
BNuZcMQr2PAuK3VaaK61OizIG+hjULcD3vtJTqA6csCv1xexXoPtDGV6yELu
8XVOO03V2V4RkVRfQDdoa9bonIv3Olv0W+WoVcl4mMEref3bg63ejjsqR9bO
jMj5MJstc1gwK+/S+ctiKlKH74uzcIy03+Ee20Yz8bwtfEShFni32s5a9aQD
Rvo/m6g9yeJhv6edZrrf2ygP/30fVsrk8/e9mYuHqEpHoSS7wV4x/ajtCNqe
BstCM++5e14e50hH7LRz9JCMJ5p6w+2cP1eN3sHM/gLBJHJx
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f+/TuB/B0NwhEBI7MJuhEJo
rMFahEFY2FEth0NSJEN4REBERHEkRMZfR/YfR8FvJ0FURHI0RHR0xEBMRHAC
hPcvx0JshHMcxMVPx8MPh/V3x8c3h3FChPZXJ8I/COXECOkvDuHPDu7kSIFP
DuaUSIVsyI6PTo0PptMgLdIBTo8MeG8rI6R3zoK3zoQ3zozX/qtXzoqX/qMc
yInV+K0X/qVcyI08yIvSKIPnzocCKIhnzo+n/qknLoQi+KHC+K7H/qaiKIbi
+KpS+KIS+KyS+KRH/qiH/qCyeK/KqIJyKI8KeKdKeKuKeKMHfq37fqUAVMVE
TEI1VMcIjMQ9v1QN1MRd10I3dMcd10Yd1EU9vNBtN0R9PFcDPNMtP1UjPFEg
GqMJmqIjOqEZHuumO6A5HumGW6AlHqoVWqMNHqg97qst7qkd7uq67+iab+uq
bykIN3XFN3TZndEF13XJXXHR19QDPXHBfXDevXDOV3XWvXHGV9QXl3Xa/XDK
/TEAAzEIlzQMFzUYF3TSQ3DCQ3Hc53XMw3HU5zQKZ3XEYzAaZ3TYpzUWp3TI
43DQ4zEBJ3XAJzQZxzULszEFUzENxzQDRzUdR7Tfh7XPM7HXh7THBzUHczEP
87HbB7TLC7DT+7XDC7EI+7QYS7DdS7HNy7DVe7XFy7ECK7HZq7DJe7TRu7XB
u7TeO7UO67HOG7ARO7TW27UJm7EF27QVW7XGW7Ta27DK27EDm7XSO7HCm7QH
e/EV37APG/USr7AfB3AQh3AUx7DcG3QY63UE67TMa3UcJ7DUD3ESp7DE97HY
a3QaZ7DIZ3EBF7HQ57DA5zHfq3UJq3QN1zHPl3EFVzHXKzXHK3QDN3EPy3UL
yzTbS3UbSzTLdzDTdzHDizXdi/QACzXNCzTVj/AYT/AU8zXFLzDZz/Ac8zTJ
czXRc/QabzDBs/UWszTenzHO7/AeM/UBHzHWM/QJ0zXG0zTaXzDKU/UdP9CN
3fkTv1CN1fkbUyQYI/0HI/wXwz1ZIDnMFRiMkxSO4RmcIRiSExWaYTjUoTjE
EzTYYTnI4zXQ4zTAEZicKRiRkRiZURidMdjfUdnPYxWNY9TXoxWTsZiUo9TH
I9XbsRmHIxSX8djL8ZmQiZiAw9XTw9TDQ9Xd/zAxk7Cbh6irBysZB6mLByol
U7EwizA1B6iz+ysN0zId0zPIGdnJGdjR/dTBfdXemZiZWZiV2ZibfdTO2dnW
OdjGvdXaOZmLvdTKPZWHednS+djCPZSfBViQ3dXchdjM3dTUXVWUxdjEZdnY
xRnokmzkEmzoLirFzirNIDVwGdZ3J5VjedZzR9V1B1VkJVZmFdZxe9V2O9Vy
AKuyrWq6jWqwJmuztWq4Fqu7laq5peqwLuuxhao6iPXZgA3ZXO3ZgY0YyAA3
U2M2YVM2VRW3YzM2UXM2Vgu2ZGW3Ymu2YSUHqqIbqS0bqoIbqLzrqyM7sZzr
qazrqozrqDNrqwu7srRrqZRrqgd7cgM3shd7s6RrqA/7cjlXsB/7cw7ncgCr
ayIncSAHcTCHcDTHsISraSiHcTirqrgDNIIjOYpVVMyVVdSVVMQVNZbjWNgV
VMjjOYHlVdDlVMCTOZ0zOIVlld9Tmc/TmNdllMelNZOzmNuzmcullNMllcPz
mN3zmc0ltIALmdWLuJjFlcXFlNlLuJRFlcnLmNFFtJKFtZ6FtIoFtZpruJYF
lMHrmN75lc75lNZ5tYmbeYAHmcZbuJO7uJXbmNrbmco7mNJ5lMK5ldy7mcz7
uYd7uY+5lNQ5lcQ5lNjZdYiH+Y+z6Qiz6jTP8CiP8ThP8CSzKJEzK6Ez6RQz
KoEz6CzP8QqvMr7P8yIvMZ4vMK7TK44vM7bTKZbTKqavMYavM7rTKJpT619D
9rai
           "], "LeafValues" -> CompressedData["
1:eJxNUEsOgkAMhWlf4pIreAu3Lt1iPABEJG4wARPjTT2OnX5mGEih7et7b3oc
X/0jNU2zHST0w+e8rsP32klyW7bnvEz3y/Ke5mk9ja0UfxIAtkdfyXJkP7AA
sj6sZeiIDAcCyVA+DnJYPhTj9oFPhSAKK2mdYLJaIyiV4pRD65QMSZRz2ver
BBSYEWFcqNpi2H6qL7MbfjgsejXFOlyKIkVZTJjgYj52WS5KzKFXO6isZUN7
cV2DXiQfpY+V6JQkrZKRSkj+Bw0VFSE=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kt1u00AQhacQfgwoKk0rVS2oRQaExE16AbY3zsabtS31tjxBkQpctVJa
qeIleGa+OamqVSY74zMzZ87sh583F7+emNntS8zF5X3abC7//ihwzq/vrn5f
bc6+/9nB+4f5ZMFWVtvS3mB7yzbagrMm+opItrlF4r19sWQtZ5/YCnwP6ozY
gLcmXimzxuv0H7FR2JHvc2vsHX6JX6mXY9ZCd8Q/c2up1oEeQZyA9+7J9rgl
kBGmtbIbe21TcU42wS/JqrhlzrZqhFUFNuAnbkt8/w12qtuUjFJTeuwFszR0
ddtYoayA39lT7AS2fiLoXqhT7GA72JJoUpXMfbTn+N+IzFHmLUhnlqRpCyqD
S7aL7aTfSnp4xSNqRmK11PIuUbsIwi3JbeD0Vaw/kt8QrTVx0G58cwP6DtJ1
kMI+d4Ut8J3lqDzfR3rwAjr49rxOq6237OG9+gV6ZVV4Jo0y/lovJRBb4LmO
R6gws0PxLTk9FUdNeqD9FHBakLVlvEfEmcy07Z55fDNb5afcI7oVdiyOPRMM
fNmFnXszOjbwC6BW4t5Io+2GO720liqt5h40Q3rUs3qYtlaXrE1kZfl7qbUJ
f70en+j1eO//L8dfgQ==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
Ewn+D+FylVk=
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rb7dW2bdu2bdtud1/fTzKZJG7SsUqLIAC6
hPqHKo17FA4IaNyrauh/UbpD1+YtmwdkztHq/x9I4H8HQVAEQ3DUYE2GQEhk
ZTaGQmiURCmEQVjkRC6EQ3jEQExEQEFHRCTYBRwZ+R0FUSHn819Hwx/ndXTk
8W/ndizkcgIkRGzEwS/ndFzkcDzEx09n9w9ncyIkRiZkRhJkdUZkcVIkQ3Jk
dgpk8ndn9DenRCqkxlenQXpkcFqkwxen92en8ydnwEen9QencRak9nvnQFak
cjZkxzun9Fun8Bsnd27kQUEUwmvnxSvnw0sn8wvnRwEk9XMn8TMXRhEUxVMn
djEk8hMXx2Mn9COXwEMncGmUQXCGYFmUwy/8RnlUwHlcQEVUQhVURWXE9wPH
833HdTVUR3f0QA3UxD3H8V3Xwh13QW3UQV3Uw213xi3Hdn00QEM0wk3HcmM0
wQ3H9HXH8DU3RTM0x1W3wBW3xmW3RCtE9yVH80W3QVu0Q3t0wAVH9XlHcUdE
didE8jlHdAAi+KzD+4y7ohvC+bTDuid6YTf2oDfCeCdCuw/6oh/6YwtCeQAG
4pQ346QHYTCG4IRDeihCeBiC+7iDeThGYCSCegqCeBRG45jHYBwCcdRjccT0
eMCHbU3AREyCdMh/NRl/dNC/NRW/NA3TccAzsN+bMBOzsM+zsQALMQc/tddz
MQ8/NB/ftcfftNtftcuLsBhLsNNLsQIrscPLsN3Lsc1ftAqftQ7rsRqftAYf
tRYftNXvtQHvtMUbsdlvtclvtNGvtcGvtBUvtQ3bsQMvtN7Ptc7PtAtPtdZP
tBePdRqPtA/7cQAHcQoPtcYPtNqHcBj3dQRHscrHcBz3tNJ3dQJ3tMInsdy3
tcy3dAZnsdQ3tcTnsNg3dBGXsMhvsNCXcQd3scBXcBXXdQ3XdB03cBNXNd+3
MM9XNNe3MceXdQ+XdB8PMNsX9RAX9Bzn9Qjn9BhPMMtP8QxnNdNnNMOn9QKn
NN0v8Qon9RonNM3H9Rbv8B4fMNXH9BGfMMU/MdlH9RlH9AVfMcnf8B2HNdGH
NME/MN4HFegD+oO/GOf9GmthjPdptI1RBskgDMq9Guk9CsbdGuFdCslQTMed
Cs0wTMwkDMtwTMQdGu7wHOZ4jMCIHOpIjMztGuJtisKtisotisbojMHNGuyY
HORNisWNis04jMsNGuj1GuB1is8ETMi16u816ufV6utVSsqVSs4VSsbl6uNl
SsGU7O2l6uVUTM00TMsl6unF6uFF6u70zMCFysgF6uZMzMz56uos7OJ5ys4c
LMXSzMlcDPBc5WYe5uUcdfZsdfIs5eNM5WcBFuQMFWUxFuJ0FeY0FeFUdfQU
dXBxtndJtnMJtvVktfEkleFElWN5luUEtfZ4VWBFtnKgWroSq3OcKrMKW3is
mrsqm7kam3qMmni0arE2G7s167AuW7AlG7keG7oBG7g+63uUGnKkGnGEGnO4
6rkJm7IZ63qY6rg5a3uoanmIaroVa3iw2rAt27E9e7MPO7Ajq3uQqrkTq7ob
O3OgAtiFVdyVlT1Aldxf3dmDFd2TFdyL5d1P5dxXfdmPAzmI/TmAZd1HZdxb
pd1LgzmEoziaQ9lTpdxDwzicIziSJd1dJdxNxd1VxTyGRd1FYzmORRzIwg5Q
IXfWfxu9JOs=
           "], "LeafValues" -> CompressedData["
1:eJxtUEEOwjAM22ZH4rgv8AuuHLkO8YBNlInLkDYkxCv4MmnTphzoWrfx3NTJ
fnoMt65pmm2nMIyv47qO73OvwWXZ7vMSrqflGeawHqZWyY8CSIIi0AlhDEVB
dDAt/fQfE6XAxFCkHIVZlcg0dO+qnjSNa8VDE7KcWV8RM5AZ9dYmGj+iskXT
dgfQdOgiQKVWWkmZofqU8gqzTdBpOJnLg0tZmlEd0u3Ce/O3+KiDd8tcthbB
MnwBtZwTog==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkctKA0EQRSsioskYsnARNBCCmI0LiQs78+hMz0xmwG38gghRVwpREP/e
0zeh6e6qunXrOXv92rydmNn3Oc9m+1vt99u/lwuU58+f3ftuv3j66KHVPEPz
ltnKKuvsyq6ttcaW3LXNsZbCUnPYl/w5b0Bz4F4ntRqvlhNgNcgBzhqWA6mQ
GiuOtg5+dpQysJT/gMY85TFCh71UhgLZIx/4jbI1xGi5kR0j5WQqsKS8NSdV
JS3MAl+HX41cqYN7bLHTDLkWL/AHewAJdikkVpTSpUOOGYKyFrYg04h8QzQP
ayLmVP61JTBypMDvNY3Yh+MGoubgHV4Zt6dOB0SKp9aUW013rGob+U3A4kwe
0XKQAX5nNlOnc0Xs1IHTRDt8veLleDhNxwmP+1pRQ6E9tXiNxW9hJEil9hFU
/Rqfud1hH2PvOIndggXV2ee0kiaq6TCdvrYz1ZTizEfEPtUevDYcN5poA15b
iNsuVX9Av+HG7v8BkKZR/A==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
YWJT+6S7VRNwnrDVbfuK8H8r6kxE
           "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Ztt6+2bZuv1ta2bdu2bdu2fc+2P8lkkrhxh8rNgwCd
Q/1F5UbdAwIDG/WsEvpvlGrfpVmLZoGZc7T89wsb/HMQghKM4AxlGCEIST+a
KBShCUd4wtBYUiOFpaFcDRSBiHQikEjU1x/VU2Si8FtRiUZd/VIdRScGMYnF
T1UjNnEoQUniEo9c5CY+tfVDtZSAhCQiMVmpqSQkJTVpSEZyUlFDKaiu76qm
lFTVN1XRV1VWWirpiyoqHenJQAVlJBOfVV6ZKacslNUnldFHlVY2svNBpfRe
OchJSb1TCb1VHgpSiLzkIz/F9UbF9FoFeKWiCqAwxShOEYropQqrKAF6oUJ6
roJ6pgJ6qlKUoSxPVJrHyq9y5NMj5VV5KlCRPHqoqjxQJSpThfvKrXvKpbvK
qerkUA1qUovadCC77qgOTWlGXbKpHllVnyxqQGbdVkMa0ZhbasJNZdINZdR1
ZVBzWtCSVlxTe66qNVfUhstKr7ak0yW146LS6oLSqCOpdV6pdE6d6U5KdSGF
zqor3UiuM0qm0+pBT5KqF0l0Sr3pQ19OKrH+I5FOKKH6M4DjGsggBnNMCXRU
8XVEQziseBrOCBJZXI1kFIeU0EYzhte8YSzjOKgTHFAcjWcCE4mtGcxkErG0
X5OZQkxNJYamMZ19iq69iqZZzGYxS5jDXPYoqnYrinZpHvOJrAVE0kIiaqcW
sUMRtF3htZRlLCectukQK1jJVq1iHetZTVht0Ro2ay2bFEYbtYG97GODNrKJ
0NrMFtZrK+u0m22E0lptZwchtUY7Wa1drFII7SG4ViqYViiolms/Bwiig5iW
CR3mCEslX6KjHMN9sY6zSH/8JKc4zRkW6jlnOccCPeQ8F5ivB1zkt1/hKvN0
icv88rn66de4zg1++Bx999n65rN0k1vc5g5f/S5ffKY++z0++QzdZ7o++jR9
8Kl6xBQ95glPmaz3PknPmKh3/oKXTNBbH69XjNMbf8s7IlhEe89r/80fPvCR
T7zyL3xlrD4zRi/9G98ZrV/84IWP0nP/yTMfqac+Qk/ceeyhLLQJzOyRh7SH
HsSC2nA98GAW3Ibpvoewez5Ud32I7ngYu+1hLZwN1i0fpPA2UDd9gG54f0Wy
fopjkS2KRbVoFsuu+3+65tHtqsewK95XMa2PLntvxbZeuuRxLZ71VHxLYBe9
hy54d533bjrniS2JJbVkltvyWHJLYRnsrHdVSuuiM57KUlsaS2udld7S2WkP
1CnvpJPeUSc8o2WyDjrume2YZ7Gs1l7ZLIfltHbKbm111Nsol7XWEW+lw57X
8llLFbIWOuT57aAXsANe0PZ7c+3zZgqwwrbXm2qP/w8SzI0o
           "], "LeafValues" -> CompressedData["
1:eJxVT8EOwjAI7cYj8egv+BdejSevM/uALdbFS006E+Pfy0pBSyh9PKC8Hubn
cO9DCOtOwjC9TzlPn+tekjGtjyXF2yW94hLzce6EPEtgJgA91FhcTEHB211Z
Ac7ZQQOMZ+3XGVCht4Y6DZKtXPO62Kq6Xt+D14r/byBTCG5i1UHcfEWP6y4Z
2TxsUkumhNg1dPQTRs67oC/GzBIu
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkktPAkEQhNvHQSIhHDiQQEII0QsXPcAyCws7u7ObeNVfoAnqSSOaGP+9
XxdkMo/uqa6u7pnpy+fj67mZfV+xPD7/xsPh+e+pg/Hw8bN/2x/ul+9nWF8s
heW2ttLGrJVt7Ya9sMQsbY6nYQ8WbYX/0kbWgg+2AzHGV2HfCV3bxrqga3y5
4grWjWXirxkDolZYJXd9uDxry8hsodMtpwZMBY8zr2BwdTUZnH3FvGHtMxvw
1+ASN66ugC1DfbAea4Y/F845OswIb8Y+5rQhpg9/jdXD69WMiXLWyPCKbxmu
ZA0y6XbN/ZAZqCPYjOiElaTZ1TVgtmQtUNvYFHXOlXM/gcmZt+zeB8cfT96J
pFpKVR6lcwN/hbKKTAOilngnWKWyOKJV3bVeYcHequtRWit1Yyb2gTrSMIJQ
rsczu9etuWr1TkepzvEGvb7X0jKjMvWVP+rGFXvlW2XtClsL6THHejLQU6xE
FeHU2cCLR7F7zpxaeqon0ak1/qFecKff0pz+20waXHumV27sgtguv2Cmns2F
z+BJ4nVFI3At5xH+Gu7W/gH2CVsq
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufbtNm2bbvNxm72Vtturq27fJ192bZt27Zt2/jeqz8zzzyT
sV2P4I4BQO/ArwgO7RsUGRnaPyTm16jRvU9YeFhkwWIR334vg28OIApRiYbU
wKITg1GMJpC66kFPYhKL2MQhN3mISzxcOYlPHX1RDhJQWwlJRGKSkJwUJCUZ
n1VLn1RTH1VDH1RdKammVKQmDVWVlWy8V1rSkZ4MVFFmspCRTLxTZb1VJb1R
Rb1WkF6pgrJTXi9VTi9UVs+Vi2cqo7zkoxnNearSyk8pFaAghShMLWpThKJU
pgpPVIzilOCxSuqRSlKOEipFcZWmDA9VlgcqpvsqqvJUIIgiuqfCqkghVaKg
7qqAqlKNO6pBdfLrtvLplvLqpmpyQ3l0XblVh1yqSz2uqT5X1ZAG5NQVBRNC
Dl1WdjUimxqTVU3IoqZk1iVl0kW14IK605JWnFdr2tGeNmTUObXlrEI5oww6
rQ6EE0EY6XVKHTmpdOpEZ7qQVieURseVWl1JpWPqxlGl1BGlUC8i+Zlf6E0f
hpBc3/E9hzWYviTTISVVP/ozgCQaSGIdVCINIqEOKIF+IL72K55+JK5+Io72
Kbb2KpZ+5Td+J6b+JFB79Ae7FUO79Bc79Tc79A//8h/bFV1DiaZhDGebomqr
RjCSKNqiAI1hLKWtjI1jPJuV3yZges0bJjKJyUxhAQuZyjQ2aR7TQbOYzUbN
YINmsl7yObiv01zW6ouv0WefzydfrY++iMWs0guWsJRnfPBlvPdLXGY5K1jJ
Kg5zhNW885U6yBrWskLr2MJWlms9y7SBjWxiqd76Zt74Er32bbzyHbz07bzw
xXruO9nFbp75Hp76Ij3xhdrLAu1jvvYzTweYq8c+R4eYrUd+lGOc46HP0nFO
cooTPPCZuu+nueczdNfPcMfPctun65af5wLTdJGpuulTdMOvcJXJuu7XuOaT
9Ijr3OAmt5ioqz5Bt7nHFb/DZR+vu4zTJb/PRX/AQ8bqgo/ReX/ME0brnD/l
rI/SGR+p54zQaR+ulwzTK4bqlL/lpEe3GPaf3vGeD3zkE/8qin3mC+KE/6Pj
7hzzv3XUsSNuFmB/6bD/qUP+h6JaNDvov+uAB1pMy215LJbFtt+03+NYXPtV
+zyexbdflM0SWEJLZIntZ+31n7THk1hSy2q7PZnt8h+V1pJbCktpqWyIdnpq
2+E/aLsPVhobpG0+UOksvWWwAdrqGW2L91cm66fMlsU2e19t8u+10b9Tdsth
G7yPclouW++9tc7z2lqPVD7rpTXeU6u9gBW0QlbYitkq76GVXsSKWnet8G5a
7l1V3LqohJW0ZV7KlnpnLfGyttiDrKJ1UjmLUHmrYIs8XAu9ki3wjqpvla2K
VbX5Xt1qWDWb52Ga6zWtltWxOd5Bs722zfL2mul1bYa3Uz0L1XRvq2kebCHW
0KZ6F5vijayxNbGm1kadrZk1t1Cb7K3Vwlppkre0VtbaJnpLTfA2Nt5bqK01
1zhvZ2O9vXWwMOtozTTGmyrcmqiTNVaENdJob6hRHqKR3tVGeLC6WXcb7g3U
w3raMK+vXlZPQ/1/1EHq+Q==
           "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMTOOxxJEv8AuuHLkW8YBWlIpLkVIkxO9xHDuJoozlZcaTnOb3
+IwhhP0gME7fS0rT73aU5L7tr3VbHtfts6xLOs+DFJMAMUOPR4Aja5bBKgB8
hluuMZaSVlSjjRuHi5KtsVE9kUAAUQ6mQkXI+HAiM3HtmJBts32AuTZm13aC
k+Tqs6k+sq0xh9zxuLrIOPg3ZdsCLCFqi9xVUSVQ+7duyx9oURMX
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kstuE0EQRSskRLFjRUFsELbkRCZewCJkAfOwZ3p6pnsktuELghRgBZJB
ivI3+VROXQNq9aMe99aj6/LLz9uvz8zs1wnH7d1D3O3uHj9PED79+H3/7X53
8/H7AdITR2HZNjZaZUe8tqzeOpuyKkto1lbbtV5uO7PGJtwNmA1nYytrLfI+
twVSC9O1lawAs9unaBK7hf+Y7dJg7+xQ3s5Z4N2iC7C0RPWIEXnD2aMtwWRQ
/uqVZSm+zl7DM/BqsHbgRrJJoCK+I6tGfo5mTd4Br4hvAW/GklmR6B1sx9wl
kUt0A7gL9gB2VJwZ2Iy1wX6G/41i1/Ame696PnAnZRmwFPDO8UlkO9gb5T5I
jrZEdwFTUDVRuEp59Hpv8JyJw7UZ1FwZvFCPC3tLnzt6t4ZlLZa5svPl1WdJ
rfa+jw3M3gHPtiBOQlNgGdUxj+PRRjtRraO9okavO9gllg7/U/HVYAPe2a7s
pboY1Octlk4/MvAq8K3ViUa6GfK+szX2hXRRWaxAjVpee09dWztA1xP/UL3y
6hb8zVI/FZWL9zHgkcFXmh6Pvq/6H9c59qhMa7rkuO3fKbmiuowckH2eWuW8
UtRWszelrsSMJU11/z9epUlcCj/RTzSai9b+AP8uY30=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
FwfUwuQ=
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fQOB/B0NwhEBIXMN1hEJo
jMFYhEFYjMJo2OEgj0R4REBEREIBFERk5HFSJEMUREU05HZs5PJfR0cM5PQf
x8Rvx8Iv53AcxEU8ZHd8JMBPZ/MPJ8R3J8I3Z/VX/4MvTowkyOLPzuzkSIEs
yIpPzuSUSIXUyOjMyOCPToMPTot0SI8MSO9MSOf3zoh3Tuu3TuM3Tu1sSOUc
SOnsSOHXTu6cyIVXzo08SOaXTuoXzovnzof8SOJnTuxC+McDMBCFUQRPXRQV
UBHFUBwlUBJlUBalkMilkdBPnMCPHd+PHM/lENcPXR4PHMeVUBn33RlVUBX3
HNvVUB3t0B41EMv1ENN3XRN3XAu3XRt1EMN1Ed23HM310QA33RAt0QqN0BgB
iOpARPENN0FTRHYzRPJ1R/Q1N0cLRPBVh/cVh3NrtMFlt8Ulh/VFh3EHhHZH
hPIFh/R5d8I5B+GsQ7gLuqIbuuOM+6MHeuK0+6EXeuOU++Kk++CEg/u4g/mY
6aOGj9gaBGkohmEw/moI/uiwf2s4fumQf2oEfuigv+uAv2m/v2qfv2gcPmsy
pmA8JmAiPmmvJ2GPP2q3P2gqpmGXT2A6ZuAojmGnZ2IW3muH32k23moO5mIe
3mg5VmA+FmAhFmG7X2ubF2Orl2EJXmmLl2KzX2qTX2ijV+IAnmuDV2E11mAt
1mErnmk9NmALnmq9n2gjHmsTHmmdN2OtH2qNH2i1t2E77msHdmKV72kXdmOl
72oP9mIf7miFb2s/bmm5b2qZD+IQbugwjmCpr2uJr+k4rmqxr2iRL+skTuE0
zuACLuksLmqhL2iBz2G+z2Oez+siLmGuz+kyzuoKzugqTmuOT+kGbiIrs/EW
TuoN3uI27uAuTugJnuIe7uMBjmu2j+khjuoRjmiWH2OmD2uGn+ElDuk5XmC6
D2qaD2iqX2GKX2Oy9+sd3iMjM/EDPuIHfuIT9mmS9+oz9ugLvmKiv2GCv2O8
d2ucd+kXfkMw/mCn/mKHxnq7xnibRhtMz60aZTIYg3OkQzAkQ3GEtyg0NysG
YzIMw3K4w3GYIzI8I3CoN2mINyoSIzMKN2iw1ysqo3GQo3Og12mA1yoW1yg2
47C/Vysu47GfUzM+VykVVyoBEzIR/2Ffr1BiJmEfL1dvL1NSJmNyLlVKLlEK
LlYvL1JPL1QPL1AapmV3z1c3p2NXz1MXZ2Bnz1VmZmGQ56iTZ6ujZ6mDs7M5
WzAHczIXc7MxZyoPZ6gkpysv8zE/p6kgC7G9C7Cdp6qtC7M4p6iNi7AoJ6sY
J6m1J6oEJ6iVx6sUS7MMy7KlG7KFy7EBx6k8x6q5K7AiK7Eyx6gqq7EKRyvQ
o1SdI9XMdViDNdnUI9TEtRjg2mzs4WrkuqzHYarPoWroIWrgwarvRqznQQrg
QNV1E9ZxUzbjANV2IGu5v1qyFYdxOFuzDWt6KNuyHftzANuzA7uwKzuynzox
iDXcV9XdR9XcmVXdW1Xcjb3Ym93Zg5XdSz3ZU5XcQxXdh33ZjxXcXeXdTeXc
VQPZRWXdWWU8iKU9mKU8hCUdpBLupBHsqEmczJHsoFEczTFsr/Fsp7Fsq+Ie
x2JuowlsraKeyCJupSmcysJewGlsqVlsoUKezhlsrpkMVEE302w2VQHPYX7P
5Tw20XwGKJ8bK68b6V/QGUjZ
           "], "LeafValues" -> CompressedData["
1:eJxNUDsOwjAMTWpbYuQK3IKVkbWIA7QiVCxBSpEQx+Gm+FuSwYmf/Z79cpif
431IKa07DuP0PrU2fS57Tq51fSy13M71VZbSjnNm8MuBiNCO3Jo4IG+S8tbh
qOV6k7WBNpJSrQibrkta2UkQqQLRqmR5Ah8jgySdCMYVosEKBR9AuoFOwM5h
7ODeGMp/S7yWc7tgm260/m8wSuiW0J04mmUHs8eIWAIcAAgGcyZICHd/STHc
1X9BpxQD
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkklLw1AUhW+1CycCgmCp4kBVhC6qC01i0zQvwwO3Cu4rOKwUqiD+e797
KuG93PHcc09y+vz58LpmZl8bXA+Ln7BcLn4fN3HuP75f3l6W17fvPbwnroHd
2cymNrKAVVq0XbzGWiI3dmkVVkdFazWR0lKqasutUJd7mc3JVurueEeyqVAb
vEB1Z1tUtIplnBE1bjVkW9U5Up/+UnMDTx9U762JOKce3Z3tEB1xr+a21Bf/
OFNOZ0eWkMk557aJ74h7sMhsjFeLe9TEAEqrPTrQOzEIeL7tMTMSu8aKdiZO
AYTAbO92FhPOCbYj+H45HbVYlDYEfy59AvEgNUvOkPqAEr5XhX8lrSo2jUz0
Ordz8pntw2bMDp10db0b8A41vZAfpUAh1RtxrMXAN67pXuk7p25C5BycbaKJ
vtTA1u1AX60AKRGy753iV7obcB2rAqvh8VzK3VO/635HNLULsS7RqhKDGbEM
zJb4THtFIQ6kfhQj/4dcp6BMzjNFFf/DUm2ZUNfXdj65pjfAPcLqD1MKVAM=

           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
bL5W+1xhL/wXC1G0Bg==
           "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Zt2+6rbfvV2tq2bdu2bdu279n2J5lMEjfuENA8CNA5
1F8ENOpeODCwUc8qof9G6fZdmrVoFpg5R8t/v7rBPwchKMEIzje+E4KQvOM9
oQhNHvIihcGVjbCEIzwR+KOsRKS+ohGdSEQmCvX0W3X1S1H5qTqKQUzik4BY
xCYutfVDtfRdcfimmopHDX1VdSWkmhKRmC+qqiRUUQpSkpQAfVYyklNZn1RJ
qUhNGtLyURX1QRX0XuWVjvRkICPvlIVMlNNbZeaNyuq1yuiVSuulSik7JfVC
OchJLp4rN89UQk9VXPnIz2GOUICC1KM+hShMMYrzRMVUhKIqShE9VmGVoCSV
qEwpCqkcBVWaMjxSWR6qgB4ov8qTTxXIq/uqyD3lUQBVqEVuVaUad5VL1cmp
GuTQHWXXbdXklrKpNnW4qayqSxbdUGY1oCHXtZlGNGYgg2hCU/ryH9fUjNa0
4aqac0UtuKyWtCKTLimj2pJBnUivdrSnA+nUkbS6qDS6oNQKpDPnlUpdSKmu
dKM7KdSb5DqnHpxVT3qRTGeUVKfVh1NKon4k1kkl0gn1ZwAJdVwJNJj4GsJQ
jimehjGco9rICEYymSmMYjRHNIExjOWw4moccXRIsTWeWDqomJpIDB3QJPYr
uqYyjQVE03RmMJ+omkkUzSWy9mkWs4mkOUTUXkXQPMJrj8Jpt8JqIYtYzBJ2
KYyWsoydWs1yVrBDobVdobSSkFpFCG1TcK1hLVsVTFu0jvUE1QaCaLNMm7SJ
jUJb2Mo25LvYzXbcd/DHd/LbN+iX7+Gnr9cP38s+1um77+cAa/XND/LV1+gQ
q/XFj/LZb/DJj/HRj/PBT3CSVTrFSr3305zhLO/8Ipc4x1tfofMs1wWW6Y0v
1WWW6LUv1hUW6SoLdY3rvPIFeuk3ucVtXvgd7jJfz/0e93nGcx7wzJ/y1Ofp
IY94zFw98Sc89jl65LP10GfpBS95xUw98Bl6zXTd9ze8ZZru+VTd9Q/c8Sm6
7R+55Z+46Z+54V/4ymRd90m65j/4SX4rYL/4TQpLaX9wglhQmyiBmU3QVR+v
Kz5Olz2YBbckltRCWEiLbpc8lIW2cBbexiqMjdFFH62wNkoXPIJFtJGKapHs
vEe2cz5CZ324otgwnfFodtqH6pTHsJg2RLEsrsWzwYptgxTHBuqkx7cElsgS
2wCd8IR23PvrmPfTUf9PR7yvklkfJbfeOuy9dMhTWWrLZtktjaW1LHbQ09kB
76kM1kPprbv2ezdltEyW2bpqn3fRXu+srBaoPZ7Dcloe2+25bJd3Um7rqJ3e
QTs8r+Wz9tru7bTNC1ohK21lrLBt9RJW0tqqiLVRUStmW7y4bfbW2uSttNFL
2QZvqfVe1spZC1W18rbOK9pab64K1kxrvJJVtqZa7U0UYI1VxRpplVez6tZQ
K72BVvj/pRS1FA==
           "], "LeafValues" -> CompressedData["
1:eJxlUMsKAjEMbE0GPPoL/oVXj15XxPMu1sVLha4g/r1pktYFQxvymJk03U/P
4b4JISxbccP4PpYyfs47SS55ecw53U75leZUDlOU4lUcGCwG6GGQB1r2wDoK
s2vohlKrRMdQ7TFJUB1qyNQkvNXBDQ6bSn0W1Gw8EKuYpoRGdoS+hUwAjY7o
EHZAp/hKvjQT+upiRKtF2WRXCi3RKtHfX/ze/gU/wBKK
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk0tvE0EQhNs4SMFJLPM4WMGCIBMTlItzgH15dnf2MRLX8AuCFOAEkkFC
+W/5cXxdiUYzu9NdXVNds/vu2+/r70/M7M8hy/XNv7jf39x9fcbmy6+/tz9u
91eff07Y3bMUdmwZa2atvbKZ5dbxVlptW95bS4yaOYCJNuHZsz+yqY3KNjwT
sdEW7DPY5mKoQL21QGQNT0NdTlUAG6ntOMEjU0ZJ9Y5dqbW2Azu1N9LjeB8D
o2NEewo2MltmLl2tvaQugU/2Ho0F50W0F9I9oCvCnNNZRawHF4g7V9SuJ3pG
rgHfsTrrhFzOXJDvYDhXB445YdZyINiVmF6joANXy7MBLTVo78S1rWCv1L3X
jGTyx16WPB+8G+RUJe3OMCPb46N7uOW9kFMNXL5v8aAVd2LfUrEjktRppi56
HKnJRPsgXMNwjzv0ei8L3UHD3Ol2B/sEv3c6cOop2Ex57/OEvOMfmGrpjfg8
or8Hf0Z08+hc5L5KMsfKuP8bKlYgE9+EfymdnF/h2RzMVoyR95kdyvGPVBSo
rBR3r9ZiLO3SnhPPqSnhWaqyV8cjp3a6dVewpqeRGcB5bJSShboo5FiFvqAb
8q/OTx91IyNduReBeJDfU04tyA9SsgFRsJ5zZqYKv6FgL+S43/mcMyt0RrlR
Sqn/VxfgDvStJDgT8SXR/xWsZ+c=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
ZcMuI6rm+VZ5fwc3CKkXHhpM/J3EP7qo+meyKtd6yP1HXQdqm1nbqlWt4PdT
xdVJjChkLOpq+0jiEZy8uMBlvQztLxa2d5JrOWXfEc2cQsNhgQneEUDf/mXT
rxeb0E9dLZs3Igu6ZTrtYwgO7MrpbjEljYO+Ki/rZLg6y1EwJ270pNRGEO3f
NqbYvAI5dJ2eV/oylH5sZxn9aET1CJOML3elQLWaGt9H+rV2LtXy6vqPlx2t
ToaWb/NOnXxxHeTT+u46TMlARtPev/3IfCpPSfpF59dUVAXuH+22WgKcN5u2
WM9Tg+VnJ1nhqjzU6o+3b5N69strINjR9dpO8RZ4tJ7eaMIrz7z20kIVmd+W
jF30nvQX9oLmKMgQgWXKtwOa/x1+TX/8Oo7Eqe3/tJ604XeCn6KqvvlT7elc
VGeHOnmQ/saKoUkcZM2DfpJajznoH/0SlTlzG3VOywfrPX8W111THySBRfH0
jQqU1pbNCSXzO7c67OOuk3UgvLB5szdZ/WIKR57TKUU19eP6X3UUKBBxWrqV
bSA8vjGrSS8Hum2e5TQQf9I9zfdOeHAflMHLi1YTPjkXlk4Tk3rB7rPtpk8f
x9TiaX/mQnTw8VwUuM04YbshGtjOds8DIqQgOcJ/s3ytCv4PUXJJuw==
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fQ+B/B0NwhEBIFEQhhEJo
xEFc2GEQG7kcFjkdDuERATksR0dEREJkZPdfR0UUZPMfZ/VvR8MvZ3EMZHZM
xMJPZ/IPZ/R3Z3A8pHdKpHN8JEBCJMI3J8c/SOuvTobESOMkSO0vTorPTuVP
TukUSOGPTu5USI00SIt8yI90SI8PTuYMSOr3zoyMSOJMSOx3/sdZkBXZkMhv
nQfZkdBvnAM5kQu5kcCvHd+vHM95EdcvHccvHNsFEMvPHdOFUQRVGMCiiOGV
WIViKI4SKImJmIRSKI1nHoIyKIuuiO5yKI9KqIwKiOaKiOqnjuInjuwqiOTH
7oJHDkBVRHQ1VEcN1MRDd0Yt1EZbtEMdRHAgGqMu6qE+wvuBG+K+G+Cew7kR
wvquw/iOm6AlWqEpmuG2m+OWQ/umW+CGQ/m6W+OaQ/qq2+CKQ/iy26MDOuKS
g7sTgvmi6QsOwnnD52ydtdQNf9UdPdATvdAff3TGv9UbfdAXv9QPP3XaP3TK
3zUAA3HSg3DCg3Hc33TMX3XUQzEMXzQcIzASnzUanzQKH3XEHzQG73XYY3HI
43DQ4zEB73TAbzUZU7Dfy7HPbzQV07DX0zEXr7XHMzATs7Dbs7HLr7TTc7DD
LzUP87EAL7Tdi7AQz7XNz7QYT7UES7EMT7TVj7XFj7TZK7DJD7Uaa7DRD7QW
65CcKbgeG7DB97UR97Ted7UJm7EFWxGJkbkN27HOd7QDO3EUx7ALt7XWe7Eb
t7TGe7DaN7UPN7Qf17XKB7DSB7HCh3AYR7Dc17TMV3UcJ/AVV3QSp7DUX3Aa
Z/ASr7DEZ3ERl3AOl7XY53EBl7TIF3UZV3AXF3QV13ALt7HQ17HA5zXfNzDP
NzHX53QHZzXHZzTbp3UPp3QfDzDLJ/UQj/AYTzDTz/EUJzTDxzXdzzDNxzTV
LzDFRzXZrzHJR/QGh/UWhzTR7zDB7/EBB/URBzTenzDOnzHW+zXG+/QN3/ED
PxGOezXavxCae/Qbu/UHfyEYwRicowyO9C6NMDncOzXMOxSC2xWS2xSKWzXU
WzTEYRiWmzXYmxSeETjIGzXQETnAGxSFUdnf/zAa16ufYzI616mvY7CP1yoW
YzMO16i3EzIu47GXVys+VykBV6qnVygRl6uHlykxlyoJlygpFysZF6m7F6qb
U7IoizEVUzMNFygt07Gr5ys95ykTM7OLMzAj56qz5yjIs5WFWZmNs1SQM5Wd
OdjJM5STudjRuZmX05WH09TBU5WPU5Sfk1WAk9TeE1WIhdnOE1SE49XW41Sc
JViRY1WSY1SaZdjGpdjao1WW5djKFdjSo1SeI9XCI9Tcw9XMlViZw9TUQ1WV
Q1SfDdjE1Vidg1WDg1STtdjYtVmXAxXoOmzkAarH/mrofmrIvprCqWzEQDZm
E/ZlPzZlH7ViazZjczZwb7VgS9Z3L9VzT7VhW/ZgD7VjdwWxM9uzmzqwqzqy
i+q6E+u4s7owSLXdSbXclTXdjd3ZUTXcQT3ZXr3YTr3ZVn3YRtXdWv05gKM5
hgM5iCM4koM5hNXcSkPZUsPZQsPYXFXdTAFuqlFsoipurMoO1FiO42Q2UiU3
1Hg20ATWV0VP5CTWUwXXVXnX0TRO52quYTnP4EzOYlnX1mzO4VIu41zWUhnX
1DzO5wLWUGlX10JW0yJWVSkvZkkvYQkHaDmrqLgrq5hXsKhXchUrqYgrai3X
cTt3cD03cBM3s7A3spArqKDLawvLqYC3Mr/LahvLKJ9LK69LaSdLKo93cTdL
aA+LK7eL6V9JN4C9
           "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMbDO2xLFf4BdcOXIt4gGtKBWXIrVIiMfxN+zYcRpFjtfxTI7j
q3+kpmm2g5h++JzXdfheOwluy/acl+l+Wd7TPK2nsZXkTwwzEbEeUk/9Glum
PFaz9sgyQHLlAFwqeRIZJgApRu3KJBkMm0kEnUqW1sD6yAmRU+KgQ54osIUe
vAIXYpTAdVdw4CrdSuohc88pOI3AodJV17niummnlbhN+W8ECOYEYG7Q2DCx
+6UCutvCVW1I+QOlRhSZ
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1ks1OG0EQhNtJhAIYFMUXFCyjCNkHLuBL1uud9e7s7KzEFZ4AJH5ORHIi
RXkXHpavy6CRZnqqa/qnen7e/755/GRmf76y3dz9i9vt3f/bfS7XL38fnh62
y1/PI26vbMFG1rJvbG3HWKUNVmHXtrLEynaG9xLs0pbWcY5tD6S1aA3cFdy1
Ta0gQgXjSvdsCzwF/CN8Db6GiIF4M72d6+Vg5/Aq2BdEm+HtYFXYAxzP0MGu
wE6shzUFT/YDe805tS/cs7IlML9nVbwPHlk9p68J1rFqcH9U5I1qbHQmOJ/h
bOyAihzzVyWsM7yRPjLoWFHGeCP1B/K2IJW6DPAbrFKVR+5+85qzaq7xdJxr
+KUiFPAmUi2Q2xX8hpXtEHU9rldfEMV1SGjVKs/wjmVVnaTiroNCOtRSJmmG
vTJ/7C2+pIlN6SppugNYoep8D/adrK7nAjuyR6Ks0MTVavUnNjDHyn+Az3M0
VHXKa6/vEHYAu6JH771U3gSv0S9wtRIxJsxzpT7mmn6lDkoy7PrM76oHsBFo
oWydtO7hnOhndMwqw6nlqaV9ULc+593se9CsGnb3Qnr1/LVzdVTyYkG8U3Xb
Mt+ZflWnnpealM/e87WqfY56Pps3AOxkpQ==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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

           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27bdXs2rbdu2bdu2bdvefX0/yWSSuEmHKs2DAOgc
6h+qNO5eODCwcc+qof9F6fZdAloEBGbO0fL/P4fA/w6CoAiG4PiG7wiBkLAv
IxRCYzbmIAzCIg7iIhzCIyZiIQKKOBIiQ46Ivy7sKCjkP46BqCjoaIiO3y7g
X87vn87nH87r2Mjj787teMjlNMjp+EiAb87hhEiExEiClMjur06KL06Gz87m
5MjqT06Bj87iD06F1Mjs987ktEiH9MjojMiEDMjgd07vzEjnSqiMLMiKbEjr
t07j7MiBN07tnMiF3MiDciiPvEjl186PV86Hl07pAiiIQiiM0iiDFy6CYkjh
okju507m4kjqZy6BkkjiUkjsp07kJ07oxy6LR07gh47vCojniojrB47jKojt
sRiHqqiG6qiBJojlmqiF+66He47p2qiDu47huojuO47m+ojq226AhojiRojs
xojkW47opmiGAETwKIR3c7TATYdzS7RCa7TBUIT1DYdxW7RDe4T2QAxCB4Ry
R3RCIDqjC7riukP6mkO4G7qjH4L7qnvgioO5J3rhsoO6N/rgkoP4ovvigunz
7o8BgM/ZGgxpCP7qrP/ojH9rGH5pOEZgJH7qtH/olL9rNL7ppMfghL9qPL5o
AibiuD9rEj7pmGdhMqZgKqbhqGfgiD9qOj7osN9rJt7pkN/qoN9oLuZhB3Zi
PhZgDV7rgF9pIRZhvxdjOV5qn5dgr5dij5dht19oBZ5rJZ5pFVZjl59qp59o
LdZhh9djCx5rAx5puzdimzdhMx5qqx9oK+5rG+5pi7djs+9qF3bjPC5gD/Zi
Pw5gk/dho+9og29rvW/pIG5qnQ/hMG7oCK7rKI7hOE5gra/pJE7hNM5gja9q
ta9olc9ipS9rhc9huS/pIi5qmS9oqS9hic/rCq7iGs7pDd7iOm7gJm7hFc7q
Nu5gsR/jLu5hkc/oPk5roR9ggU/pIU7qEU5ovo/rCZ5ino/pGY5qrp9jjl/g
JY5otg/rNQ5plg/qHd5jpr/iAw5ohvfrI/Zpuj9hmj/jC/ZqqvdoinfrB35i
snfpF35jEAfzD/6iIHdKMDIxM0EyFXcoCLcrJENxkoMyGIMzBLdpordqgrco
NDcrHDdpvMNwnMNyrDcqPCMwIjcoOdcrEiMzCqMyJmNxjNdptKMxOtdqlGNw
pNdohFcrNlcpDuMyHlcqARNyuONzmFdoqBMxCZdriBNzsJcpKZNxkJdqoJdo
gFMwJRervxcpNReqn9MwLdMxPReorzMyA+erj+ept+cqC7MyN+eol2crG2ep
p7MzB3Oyh2equ3Oxm2coD/MyH6erqwuwi/Ozs6cp0FNViIVZhFNUkZVYlJNV
jMXZySXY0eVZkqVYmpNUjhNVhmXZwRPU3uPVzuNUgWPV1mNUmaPVi71ZhVXZ
xtXYjAGszlGqwZqsxdps7fps5Tps6Xqsy5Fq4RFq7uEKcAM25DA1YmM281A1
dRM2cVM29hA152B14iC1YEu24kC1Zhs28gC1ZTs2dH81cHvWdz/Vcwd2ZF/V
dR8FsjO7sCvruBtru7dquZe6swdruqd6sodquLuqu5v6sC/7sauquYuquj8H
sLOqeCArO1BDOJQzOYvDOJxTOJUjOJKT2UmV3FGj2EGjOYYVPZYV3F7j2E7j
2VYTOJHlPYnl3EZl3Vpl3Eql3VKlPI3T2UIz2FwlHaASns3ibqZinsOibqr/
AJlaQN0=
           "], "LeafValues" -> CompressedData["
1:eJxNUMENwjAMTGNb4tkV2IIvT75FDNCKUvEpUoqEGIZdOcdO0jR1LvbZOfs4
vYZHDCFsB5hh/JxTGr/XHpfbuj2Xdb5f1ve8zOk0dXD+YISxRHTjxAdkkN2K
+w1UhnTGII1GJiYiIBJ4tBoBtgRlRq+Zlx32dv2Liqqh0IQL3zM9RQ1ZPNPz
c1GqfM8pjeXNpQJJKSKu0y/aCHOMhKZMD5pRBOMyxbJdG+301bnZS9RKN0G7
obSgq6E2bf4D6k0T+Q==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtks1KHEEUha/GRdRWAgGRYbKQlskiLiYb+6e6p7u6ugbcmicwYOIqgYkQ
fA8f2O8eh+JW3brn/p6qq59/738dmtm/j2z3D//jbvfw8uOYy92f58ffj7vv
t08H3F7ZgjVIYRd2btl6i1ZbiyVaBVKht+hb9AVS2sQ+cO/QOrDBZrQtZ899
SUQhfFJkRmvxyEhEakV3ltgPwDIrslZ4ecRnRSb8BhtZHt0gFZZEXK2cYZ8x
2Yl6+0bNhHdCT/SQyT3S60p+Po3X7dFq7F/xidwCeG0bLBN+BXJN/Kyeo63R
HFuhB3UV1dNW+BpsIc3vlTpzPs7xWLJXYiWA+T4S6/MVdgTmeZyhS81wRKZE
rxEtYhnEZtR0GR/PO5DPGd6IxVK5s3oYhczycGZGbMHOmH/C4u9aYpvFqc8R
OBOVMoi/YWcfiG1Yp6y1pmxVO6r3pJtzVWqOURmCeglCJ2o5P4H4xj5h83lu
dJbIoIr+LjPL2UpEJDE3a39nNIl5f8NCcVeaf9LPa8Rgp5k7/dKsXk41r/c3
0IlnWipPUJWtfnRWlRqk1g8r9P8W+oNf1HsD0u9ZbrGuyFuK52u9ZlbcG/eV
YxM=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
wLbKYqbDRC0EP57870Sih0zDgNWBdS3wX1TMptM=
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rbbq+2bdu2bdtud1/fTzKZJG7SsUqLIAC6
hPqHKo17FA4IaNyrauh/UbpD1+YtmwdkztHq/x9I4H8HQVAEQ3B0QmeEQEjU
RVGHQmjYVRAGYVEMxREORRweESAXdkREQmzEwV9Hxh/HQBRExW9Hwy8X8k9H
xw8XdEwU8HfHwjfnd1zEQyZkRnwkwFdnxBfnc0IkQmLkdRLk8WfndlLk8icn
Q3LkdArkcEpkdyqkRhpk80dnQFpkdTqkxwdn8Xtn9jtn8ltn9BtnwWsXQlZk
Q3ZkcD6kdw7kxCvnwkvnxgun83PnQV6k9TOn8VPnRwEUxBOn9mOncmEUwSOn
dFGk8EMndwmUxANXxn2Xwj1XRGmUwV2XxR1XQDkk822Xxy0n9U0n8Q1XwnUn
9jUnclVUQ3XUwFXXQU0k9BUn8GXXQm3E9yXH80XHdT3URwM0xAV3RCPEcWPE
9nnHchM0xTk3Q3O0wFnHdEu0whnHcGtE92lHcxu0RTtE9Sl3QHtE8UlH9glH
8nFHdAC6wAC7ohvmYT66owcmIYKPuSd6ow+OuheOOLz7IpzHYTz6Iaz7YwAG
YhCGYTgOO4wPeTAOegiGIrQPOJRHIKT3O4RHIrhHYTTGIJj3Oaj3eiz2OIh3
ewImgt5leKetyZCm4K8CMRXT8EfTMQM7/Fsz8Uvb/VPbPAtbPRtbPAebPReb
/EML8F2/8U0LsQiLsQSv8QZLsQwP8VXLsQL38EUb/VkrsQqrsQYbfAfr/Unr
vBbr8FHrsQEbsQm3cBub8UFbsBVr/V7b8E57sQ/bsQNr/FY78Ua7sBur/Vp7
8Eqr/FL7cQDncQEr/UIHcQiH8VxH8Ewr/FTLfRTH8ETH8Vgn8EgncQrLfBpn
8VBLfQZL/EDncF+LfU8XcQmLfFeXcUcLfQNXcBULfFvXcB3zfUvzfFM3cUNz
fV1zfE2zfVV3cUWzfFn3cUkz/QAzfFGP8BjTfUHT/ARP8QzPcV5T/RIvcE6B
PqspfoXJPqO3OK13eI9JPqUP+IiJPqlPOKEJ/o7P+ILxPq6vOKZvOKpxPqIf
+ImxPqwx/oXRPqRR/oO/OCjhgEZ6v8gg7M4eDMp9ispoDMbgDMG9CsM9Csnd
GuFQHO7QHOZdCsudCsfwjMCIHOodisTtGuIojMxtGuytGuQtis4YLMfNGuiY
jMXYHOBNisO4LMmN6u8Nisf4TMCETMO07OdETMXU7OvE7OMkTMr1Ssbk7O0U
TMl16uW16uk16uHV6u5VSsf07OaczMCVyspszMgVysTlysws7Opl6uKlCvAS
ZedidXYOdvIi5WJudvRC5WFedvACtXc+tnN+FmBBFmJhFmUxFuF8tfU8tfFc
tXZxtvIcleBstfQstXAplmYZluVMNfcMNfN0lWcFVuQ0NXU3VmJlNvFUVWFV
NnY11megqnOKanCyGrkma7E267AuG3qSGnii6rse63mCGrAhG3G8GnOc6nqs
mrAp63iMmnG0ars5W3CUWrIVW7MNO7Eza7kta3qk2rE9a3iEOrAjq3u4qnmY
AtiFVT1UVTxEXTlYlT1IlTxQPdmLAziQvTlAfdhfFd1PfdmP/dlXFdxH5d1b
g9hLgeypweyhIRzKYRzO8ZzAERzJsRzHUeyuch7Nsu6mMeyqMu6i0g5QKXfW
RHbSZHbUJHZQSbdXCU9hcbdTMbfVfzWJMOU=
           "], "LeafValues" -> CompressedData["
1:eJxdUEEOAiEMRGgTj/sFf+HVo9c1PmA34sYLJqyJ8SH+17aUdiOEMrTMdOAw
P8d7DCGsewrj9D7VOn0uAx2uZX0sJd/O5ZWXXI/zjpJfCpCARkIATLTRIMSL
I0+QFLQLVpGEwJYRkZZ0IldR9FWUkbQSSAQ0HWGZnrgSM3xfmU7shhQhuIsN
UL6dQN+mTromG4rJCVuz/x20hpB8k2+JrmhNmlrsqv3f0CXR9Ky5oB88gBPX

           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkktLA1EMhVPpQmstLkUFEaWgbqwLO3dmeuc94Lbu3FWoulKogvjv/XJa
SjJ5nNwkJ718/Vq+7ZnZ9z5qufqtNpvV3/MBztPnz/p9vZk9fgzwXlBXltvQ
CnS0YOeW2hT7znqb28hmltmRNdaS67BL4sFqvic2wa7sGFyOXxCdg1yAKsAe
CJmSC0QzIikdMjA31AZ1zMjckino01jCLIGqazKdDejZ8+3tArsXuga5QLfo
jsgpfSO/BbUTPO9ygvYuiT2APgTbMuUZUiA9FbWNQfuMU7tEJ0RqdEMuwfdJ
U/IjOjTauuVbII1mGut194IiHRKxarHjvQPvR1jNwbU7ZCLeeiY50xZDvCkT
lfQK4s23Woilxu7BR+yO1zpxmor9uXirNFWKF3c8+uSV7tGJGe+cIbk4m5Ip
xE6ra/V6J4jdVNmgC2bUR/VPsQLiu2yv2uH5hZzfoJuVqi/1ptdXmsLfPRQ+
0/1rKqJ282sE/d98q1K9fC6/Syv2a/G5RTvTrbBR2aBZM+35D2CPV1g=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Zt2+6rbfvV2tq2bdu2bdu279n2J5lMEjfuENA8CNA5
1F8ENOpeODCwUc8qof9G6fZdmrVoFpg5R8t/v7bBPwchKMEIziEOE4IAtaYN
IQlFaMIQnRiEJRxSFFyVFZ5KikBEIlFRfxSZ36qgXyqvqETjp8rph8oqJrFo
RRnFprQykok4xCUe8UlCKSUgId9VUt9UQokorq9KzBcVU1KSkZyiSk8GUpCS
VKTms9LySUWUhsL6qEL6oHS8V0G9UwG9VX69UWYa04Qs5FNWsvFa2clBXr1S
HuUkF7nJrXrkUh7yko+cqk0O5acABSlEDbKrMNn0UtUoQla9UFGKUZwSlCSA
KpSiNM9ViWcqQwWyqCzleKryPFFmPVYmPVJFHiqjKpNBD5Re95VO91SVu0qr
O6rObaVRTVLrlmpxU6lUh5S6obpcVwrVJ7ka0JBrasRVJdMVJdVlJVFTEqsZ
zbmkRGpBQl1USy4ogc4rvtrSjj3spT0d6M8AOhJPXelGJwI5p86cVVydURdO
K45OqTt9+Y8e9OSketGb2DqhWOpDTB1XDB1TdPUjmo4qqgYSRbOZwyAGc0SR
NYShDGM44xjPYUXSCEZySKM4qIgazRjGEkEHFF77FU4TmMgUprJPk9iryexR
WO1WGE1jOjOZxS7NYKdCa4dCabtCaptCaC7z2MFO5hNci1nCAhayVYvYomDa
rKBaShCtYCXLMG3ScjYKrWI125Fv0Bq2so21rGO91rNOm9mA+1ptZI02sVp/
fJW2sFK/fYV++XL99GX64Uu1i9189yX65ov11Rfpi+/js+/nky/UAQ7y0Rfo
gx/hKEWtmB3jON/5wQlOcoe7nOK93+Sdn+YMZznHDd76fJ3nAm98nl77RV75
JS5zhZc+V9eZo6vM1jVm6YXP1HOfoWd+i9tM11Ofpid+j/t84rE/4CEfeeSP
eMxTnvGEhz5VD3yK7vtkPec1b3jBSybpFRN1zyforr/ljo/Xe8bpHWN128fo
A6N1y0fppn/mCyP1lRG64cP1jWG67j/5RVpLZ7+55sEsuA3VH4bIGSwxSNhA
mQ1QEAtqV72/rngIu+z9FNFC2iUPZaHtP4WxsHbR++qC91E4C2/nPYKd8946
670UySJbFItq0SyJJbXoFsN66oz30GnvrpgWy2JbN8WxxHbK41o8i28nvasS
WQI74QntuHfRMe+sox6oI95JyayjDntyS2EddMjbK6WlsoPeTqktjR3wttrv
6S2DZbLM1kb7PKPt9dba41ksq+Wy3JbNdnt22+WttNNbKoe1UE5rrh3eTHms
sBWxvJbP8lsBa6rt3kQFrbG2eSHb6o20xRtqszfQJi9uJayabfT6KmmlrLTV
0wavqzJWR1WtrK332ipn5a2CVbR1HmBrvZKt8cq22mtplddUFauhlV5dK7y6
1bBqWu5VVdNq2TKvbUu9ipb4//PKvRA=
           "], "LeafValues" -> CompressedData["
1:eJxFkDEOwjAMRdvYlhi5ArdgZWQtYurUilCxBClFQtwe299ppdRJvu3n35zm
9/BMXdetBw3D9L3UOv1uR73cy/paSn5cyycvuZ7nXsVRgzBjsQhJHCzYRoyP
EyRTyVNWa5VeawoapNU5SyR6ZNO9B0FJhteVfGxwiBycJCXMos2fcxn3Bokc
AatOkXGyUA9s/NBugQnm3RnAUdjc4kTbXOHmI5T2NC7h5Wj3Y7k/hVESiQ==

           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9k91u00AQhcfQIkqiKNAb1EZFldNIXDW5IU78txuvLXFbnqBIBa5ACkhV
n4zX6zcnAVmzu/N35uzO+Prrr7tvL8zs92uWu/vHuN/fP305Q/n888/D94f9
6tOPDO0vS20bu7DeXtnKOqv4Nnwl58S3RE92Yo0Fvs5a9DFajXSWEdlaQcSA
FkCpbMFe2I5vbRN7D1IP/j/bhIyAp0DOwYic3pLdEBXZkzydYr1aUsUtEojx
vSByo4rJcmwbrDWywuLnngy3DopqYVBTf2AtYf6B/I4KU/BruDreFslZSzRn
3apagX7JWtmcyNpmdobP8UvQ1mA5h8A6Y9/xRpecG7uhmteNqp3w3GD16I7d
ufmtk/QdmT2Y0T7aSExLvUQl/5q9J6LEG6n0DtucWy2p2LFXvGAQxgHLmTTc
6QqsHkuvVwzwmhKdKeNQI4OtI3gXB/VjxHmJLRfSFdKSn3QT786tutHbqbj3
Wr2L50iNL6rTPjPegxPdcYH4PDV0uIHFGqQBvdY7v1Ftv23QKy5Uba43HKjV
iuMAswm2SMb0yMt5zpGZ7p3/59Yoc8KaJK1m9NCL7ugPwvR6t5o1n6VTInZ6
u5weJ03EGJZRM1gSvdU8+QRWms4g3Kh/xafn5bG/GadGNxvLO8I3yJeIm4H3
DJifZ6w=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fTuB/B0NwhEBIjON4hkJo
jMU4hEFYtEQrhEN4NEYTREBE2A0gR8Jf10NkREFUREMKpER0xMAfJ8Zvx0Qc
5HAsZHdsZPMvZ3VcZHE8xMdPZ3YCZHJCJMI/yOgfzuDvTu9vToKkSOdkSOuv
To4vTuNUSI2SKIXPTu00SIt0SOUcyIn0yIBPTumMyITMSOHsSO4sSOasSOps
SOKPTuwP/se5kMi5kdDvncB5kBf5EN8FUBD5Ec/vHNeFEMclENuFUQRFEcvF
EdPFEMNvHd1vHM2vHdWlEcWvXAdlUBblUB6VUQUvXQEvXAnPXRHPHNlPHclP
HNEBiODHropqqI4aCO9Hro2aqIWHDucHDuv7DuN7rou7Du36COU7DumGCOHb
boRABPctB3NTNMNN0zcMN4d13S1wzVJrtMFVd0Zb/NUV/1E7tEcH/FYnBKEj
fumyf+qSf+iiv6sLvumCu6IbuuO8e6A/BqAneuGce+Os++GM+6Avvuq0v+iU
P2sgPmkERuKkB2EwhmAohuGEP+q4h+OYP+io32sURuOI3+mw32oM3uiQX2s8
JmAUR3MiXmk6ZmASJuOgX2oKXmgqpuGAn2u/n2kmZuEgDmGfZ2M+FmAO5mIe
nmqvn2iPH2u3H2khFmGXF2MJlmKnH2oZlmMv9mEFHmiH12El7msV7mk17moN
1mK772ibb2ur12MDbmkjNmEztmAHbmqLt2I7bmizt2GTr2ujr2mDd2K9d2Gd
d2MPrmqtr2iN92O1L+sALmmVL+owjuApnuEojuE+Lug4TuAuzuskzmmlz+oU
TuMMzuI8LuAczmiFT2u5T+kiTmqZT+gSLmOpj+sKjukqruE6juoOjugGbuIW
Dus2DmmJD2qxD2iR9+se9mmh9+oB9ughHmGBH2O+n2Ced2uud+k5XmAoh/El
duod3uMVdug1tusNtukttmqOt+gDPmK2E/ETPiM+N+sLNukXfmOWv+IbNuo7
fmCmf2KGN2i61+sP/iIu41FYp2mOQgMkgzEcwzM4QzAs1yokQ3Gq12iKQ3Oy
V2uSw3CiV2mCVyoCVygSl2u8I3Kclykyl2qslygqFysaF2mMozMGYzIWF2q0
43CUY3OkF2iE52u452mY5yoB52ioE3KIZ2uw/2FiJmFSJmM2ZmdypuAgZ2VK
pmIGZmRqztJAz9QAp2F/p2U/p2N6zlBfT1cfZ2IWTlNvZ2YvT1VPT1EPT1Z3
T1IO5mQuTlQBFmQ352ZX52EX52U+TlBn52eQx6sQC7Mf+7MIi7KTx6mji7EC
K7I4S7CDS7IUx6q9x6g0y7AsR6udy7McR6mtR6qNR6gSh6s7h6kyqzCAQ1WX
Q1SVg1WNg1SdNViTA1WLA9Ta/VWbddjK/dTSfVWP9dmADdnCgWzEPmru3mrm
XmrqxmzCpmzG5mzinmrBlmzsHgp0K7ZnB7ZmdzVyGzZ0WzZwO9Z3N3VkV3Vl
N3ZiF9VzEDuzs+q6C+s4SLXdSbXcUTXdgzXck9Xdi73Zh9XcQVXdlwFurwFs
pyoezIFsq8oexEpuoyFsrYpupeFsqQoewfJuoZFsrnJuprIewzJuqrFsotJu
rAmcyFLezkmczPXcwCmcypJex2kMVAk3UnFP5ww21EzO4mzOYTEv51zOY1Ev
5Xw2UBEv5ALWV2HX0yLWVSEv5hLWUUHX1jLWUgHX1ArW0EpW1ypW02pW1RoG
aC2rKL8rK58raSMrKq8raBM3cwvLK4+3MrfLaRvLKpfLKKdL619DW3bC
           "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMbGOPxLFf4BdcOXIt4gGtKBWXIKVIiJ/xPJzYTqpEE3u8ZXyc
X+MjdF23HQTG6XNOafpeB3FucXuucblf4ntZl3SaeyF/AgyACGAxCFwOssuF
UkSxMkusvsYFMlFY4kCUH2q15XIFePGuoVoGvPe1i10P1kawr7SfWUmrqAOM
45rQqJ04z4Vtg/ssJjCH8gq6VpMP/7TuwybW/eVUCwSX48thn6W2tgC0uXaA
rtYFwFLINvQHM+4UeQ==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkltLw0AQhadSQW0RRR+qFKRII+iD9sXc02yyCfgm9RdU8PKkUAXx3/vt
sSy7O5dzZs9MMnv+XL3umNnXHsdq/eM2m/Xv0z7Ow8f3y9vLZnH/PsB75Chs
xs5taHeWWGqxVVbb0s64W8tsTKywxibcV8Qy9jUIz31jnd3aJbYH62CFOhle
wvJwPF4N8hwrx45sZHOxPdxSq2E7ZTsymbYj2sILakr8nHohluG14Cre8tZz
1pw9mVpqnRie20lFrY4ysYO+lOyxHZILjBz/gvyELkOVXKiOSKx6TjqXerVh
VeATcJXyQcOAs+Fs4cZ6r5SidDuHjtVrgimWt1OskClsun0pkVdq9mEGI6yS
yhHRSgpy7BbVvR2ps0YqI+JjkN12Xgn4oLiQRm+74BZ01mz7dmBj0EtYtZ2I
mUuZl8ZOk07It5piwA9UOXzbFl0H5OZ889BzpJkveKXTHP+/cg8/zLLAajXz
8C8N4VX8XUuiNZWn8Jx6K5j+BGSqFzr1VWpmoZeeqpn9AX4NU0s=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
bfYui7D9DxUzdSQ=
           "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27aNV9u2bevV2tq2bdu2bdu279n2J5lMEjfuULl5EKBz
qL+o3Kh7ocDARj2rhP4bpdp3adaiWWDmgJb/fkWDfw5CUIIRnOOcIAQhOcJR
QhGa7vQgDGHJSz6kcEQlGuGppwjUVUQi4YpMFOroj2rrt2opOjWVkUzEICa/
FIuU1NBPxSYOcfmh6opHfBKQkO+qpkQkJjkpSEJVJaOKvikpX1VZX1RJn1VR
n1RBqUhNGtLyUeWVjnL6oLJ6r/RkoIzeqbQyk4WclNJbZeWNAnitbLxSdl6q
pHJQQi9UXLkoptwUVR6K6LkKKz8FaE4LClJIhSnCMxXiqQqqKMVoQgEVpwTl
KM8T5VdJ8umxSvFIpXmoMpQlrx4oj+6rAnXIrYrk0j1VojJVqEpOVacG1cih
uwpQTbKrFtl0R1l1W7W5pSyqSz1uqj431JgGZFZDGnFdmXRNGXVVGdSU9GpG
Ol1RWrWkFW1pR2vSqA2pdVmpdEkpdVHtuaAU6kBynVdHzqkTgSRTZ5LqrLrQ
lSTqRmKdUSL1pBfzmE9v+nBaCdWXBBrMEP6jH/0ZwCnF10kN5ITi6bgGcUxx
NZQ4GsFIjmoYw4mtI4qlwxrFJCYzmjEcUkwd1FjGEUMHNJ79msA+TWSvomsK
0TSXqJrKNKYTRXs0k92awS5F1ixms1Nz2KFI2q6I2qYIWsBC9rKPRSxmOztY
QnitZg1btZRlhNNywmoFK9miMFpFaG1WKG1SSK1lHRu1ng3awHqF0EY2sU6b
2cJW1iq41iiYthFUqxVEO9nFKu1hpXazQqblQsskX6r9LNFhFusAi3SQQ7gv
1B9foN8+X798no4xVz/9JKcobWXsNGeIbFFsjn74Wc5xnguEsJB2kUsEs+9+
mStg3/wq15itr36dG4gvfpPP/ppPfovb3OEuL/no9/jgL3jv93nAQ975LL31
mXrEDD3mCW/8Ka99up4xTc+Zqlc+RS99sl4xSS/8Dc/9Lc/8He/5wFOfqCf+
kU9M0Ge+8Z0vPPbx+so4PfIf/GSsnF889DH6w2j9ZpQe+Ejd9xG658N1182C
2DDd8aB224fqlg9RcBusmx7KQtsg3fAwdt3D2jUfqKs+QOEsvF3x/opg/RTR
Itll/0+XPKpFsySW1KJbDOurhBbTYlkfXfTeim29FN/i2AWPa+c9np3znjrr
PZTAuuuMJ7LTnthOeTed9GSW3AIsh6WwlNZVJzyVpbZMdty7KI2ls/SW1o55
Zx31QGWwjHbEO+mwd9Qhz2wHvYOyWFbLZtntgLfXfm+nfd5WOa2N9nouy215
bI+Xst2e1/JZa+W3krbLC1hBa6VC1lI7vbAVsRYqas1VzJpphxe37V7CtnlT
bfUm2uKNtdnLWjlrpE3eUBu9vFWwirbBG2i919c6/x81gKka
           "], "LeafValues" -> CompressedData["
1:eJxdT0kOwjAMTGKPxJEv8AuuHDlS1Ae0olRcgpQiIX6PE9stQorGS8bj8WF8
dvcUQlh2At3wPpUyfK57Kfq8POY83c75Nc1TOY5RmhcBBsBgfQIStGpRgR3Q
2MSJnE2JEqSm1BrgVYPkT/5rao9VgH0dyBfZKlgK59kUbSNsarUdf7wquc17
dIuyJ1aRaog2rt/tlkBo0LybpfVy/E0Qe6osU6ndL7ZIElY=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkklrG0EQhUuODDYWAicXgUKEEbIOOTg+ONOztaZng1yVX+CAl5MNciD4
6H+er5596OpaX9Wr7os/z/v7IzN7OUHsb/+lw+H29fcpxq+nv3cPd4frn48T
rDdEsJJT2cw6+2EZWot2hlzbJfaIVVu0HdpoBfdgjR3bF+4LqlpiFf6CaGkb
S+TnIH4nc2Yr7EjmaD3eM7SM+JzsNVpE5vhK25LtyH4imA0Vn5E+U6v6lS2w
ExWFsBrqfRLHisQbWSNZnXAazexTD+Qfc8/sXNwyRRIZM84CK6Kd4q+Jt8w+
gF/CqhR77z5HbsCZyBPomdACesdElXo7t1z5mfye55he8X5utJnhI9P3fk3f
AEKPXIKZ2xUng61zuKJPjj/YN7Kj+DvroLe4pC4JeU7Wik6V9ASbAa3R1P6i
Uyp2ICT0BEPn7bPtwAxsYCMGC71gAMcra20ufbx8oT/ie5gza83xvp+0eZ+s
086m5C6JlfpFhXbg9V+JvnsC0R5tCY6/0Zp7FLOeXgmZMV2FpxaDVq8b8Tfq
slVOpEOvnh33oD9c6a/6NB3IhV6yUYa//w52BXbFcW8r5q2q/gN6x14d
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
6EyoJXpkd9z2Hu4ng4oc3kZSv/8DK5RgCQ==
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42r3atu2bdu2bdvYfX0/yWSSuEnHKi2CAOgS
6h+qNO5ROCCgca+qof9F6Q5dm7dsHpA5R6v/fyCB/x0EQREMwZEdORACIZES
qWCXcSiERhiERXKUthwO4REBf13KEREJiVHSkVHCCVHcURAV0VDM8VDU0RED
MRELfxwHsVHEv13Yv1zIcVHQP13A8ZHfCZDPP5zXiZDH353bSZAUyZDL35zT
X53DX5wCn53dqZHNGZARaZDVaZEOn5zFH50eH5zZ750J75wVb50Zb5wFr53J
2ZDRr5zBOZELXdAVuZEHL90UeZEPL9wY+ZHeBVEIz10Az5zOT10YT9wIRVAU
xVAc1VEDJZDWj10BJVEKj5zGpVEGD53aZVEO5ZHKD5zS953CFZHclVAZ91wF
d10Nd1wVt53Mt5zUNZHEN53YtZDItVEHN1wX9ZDQ153A9dEADRHf1xzPVx3X
VxzHTRDblx3LzdAcl9wCLdEKFx3TF9wa590ObRDDbRHd5xzN7dEBZ90RZxyA
0+6EU+6Mk47qE47ibuiOKIzKHuiJ9/iAXojsJ3iK3uiDvuiHvdiH/hiAndiF
gQjEce/AIETySET0YETwEAzFMIT3MYfzcIzAUYf1EYfxKIzGGIzFKqzGOIzH
HMzFYYf2BITyIU/EJEzGFEzFLMzGQU/DdMzAAYf0fofwPs/EXgf3Hgfzbgf1
PMzHIizGAizELgfxTtM7DC/BUizDcmy3tc3SVv/VCvzRFq/EZv/WJq/BVvzS
WqzDRv/UemzABv/QRmzCZnzXem/BOn/TWn/VNnzRGm/Han/WKn/SSu/GCu/B
cn/UMn/QfhzABVzEQRzCWbzXYbzTERzFUr/VMbzRCZzEcbzWEr/SKbzUabzQ
Yj/XGTzTIj/VOTzReTzWQj/SJTzUfTzAZTzQFVzFNdzXPdzTddzVDdzRTdzW
LdzSAt/GfN/BXdzUPN/QXF/XHF/TQzzCbD/GLF/VTF/RMzzHDF/WC1zSdL/B
NL/EK1zUVL/GFF/QW5zXO5zTZJ/VR3xCWJ7RZ3xBUAbjV5xWEJ7SN5zUJH/H
RP/ABP/EL5zQeP/GHxzXXwjjbIz1MY0xONrkKB/VSB/RCB9WcIbgcB/SMIdk
KB7UUIdmGB7QEO9XOIZnBEZkZO7TYO/VIEdioPdooHcrGqOzO3swBmMyNuNw
gHcpFneqv3coLuOxMwMYnwnYhE2ZkImYnTmYmNuVjduUhFuVlMmYnCnYz2mY
kluUipvV15uUmhvVxxuUlunY2+uVnhmYkZnYy+vU02uVmWvUw1nY3VnZzavV
1avUxTkZ4BLMxdzMw7wsymLMx/wsyJXq7BUqwOXq5GXq6ELs4MJs7yJs56Vq
6yVq4+Js7cUqyVIszUVqxMZs5TIsy3Js6fJs4YaswIqsxIVq7sps5gWqwqqs
xups6vmqwXlq4nqsyblq7FqszTmqw9mqy1lq5JmqzwZs6Blq4Omq72mq56mq
6ylqxuZsx8lqwZas40mq7VZsw7ZszYmq5Qmq6fGq4XFqz7HqwDHqyE6s7tGq
5lGq6pGq4i7sym6s7BGq5OHqyWHqzT7sxaGq6CHqy8HqzwHsx0Gq4EAN5ECV
dyDLeYDKur/+A1D6Cvg=
           "], "LeafValues" -> CompressedData["
1:eJxNkD0OwjAMhVP/SIxcgVuwMrIWcYBWlIolSC0SYuXk2M4LaapYsePn96WH
8dnfKaW07iz0w/u0LMPnsrfkmtfHnKfbOb+meVqOY2fFrwVVEdtaVhxFhG0T
K3sgy5iZiO2K7dx59C6J5gjsOWa5GKsO1GiwUW4kIRCFIGogiIpUoqJsDoWt
TI05bqW4YNh7K3EwGHFw4SkbaQPfeEMtUtFgHvSt9U8GVU2gpFIBOoi5/i08
WKrQvh99uhND
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk9tqFEEQhmtVxHgIUS8iYdgQ1sRbE9CeU8+xe8Db+AQRol4prIL4ej6Z
X/07NFvTdey//qq9+PLz9usDM/v1BHF792fc7+/+fj5C+fTj9/23+/31x+8b
tH+IS7u23loLViIH7r1Fu7Jsp7ZYhXW2EVvNd1n9I7ckz8Sts0f20i6IrdB3
WGp7y63EE6hVYmk5szXkd+gV2R+QEX/ipUzEjqwTKxRdC9FsW3A8JCpRrROW
QGyLViMXPF7hDN+GPiL2iayamGTH1FiE0G29PSejwuJZrU7AE+0duaN6yugN
yBtlvlZuRvcqhTK9zvnKQ+SXuXs/AxgWtIC/VI+D9KQMl0k1B71T0Neg153Z
AV9Sh8PKhEcGonZg7ME8C4XHHRAEseps7sh3DvJaaeTMIPB6jWr2/F6seLfi
32dRiImErVOGT9A5uMJ2ruhCMY24XPiW6Mfagmeq/YZ5T9qFARRBbNbCm8TU
4SRskyYaeGGSr+G1DrvvjVfaqguv4Dz5PEftUF63q2KyjWp5jw16hz1w26iD
RpFZ+9nK4hvyXnM+A92JsqNw+H47xkvtXWInEjVL2Q7b0sF0Zps75EYT8m3J
YjuK0wgPs7a6tadsT1Sn2V5R7UYdjciWr2/NY/2vIl5n9TDjoK5aRdVC+x8C
fW8/
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
WVY=
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f8/ROB/B0NwhEBIbOc/DoXQ
mMCJDIOw+I4fCIfwKIwiiICISI8MiITISIdEjoKEthM4KqIhOmJAToiYiO+/
judYiI04iOs/joffjotfjuOfjo8fToDvju1E+AeJkQTJkQJJkQzfHMtfHdNf
HMMpEd2fHc2fnAqpEdUfnQYfnBbvHcXvHNkZEcmZkQVvnQlvHNFZkQ2vXRDZ
EcGvHN45kBO5kBsvnQcvHM7PHdZ5Ecb5ENrPnB9PXQBPHMqPXQiPHNJFUQwP
/RXFUQLlUB4lUQoPXBb3XRr3HMJlENx3Hcx3TFdARZzBWVRCZRzHCdw2XAUB
qArrlo+gGqqjBmqiM7qgFmqjI6Q6+Kv6aIC6+KObrocb/q3rbohrDsRVN8IV
/1JjNEFT/FQz/NBlf1dztMAlt0R7dEArfFNrfNVFt8EFt0U7fNF5f9Y5f9JZ
f1QnfNAZB+G036sruqEHeuKU3+mku+OE36oXeuO4d6MP+uKYN+Go+2EapqM/
BmAg3mgYhmMQXmswXmkIXmooXuiIn2sERuKwJ+CQR2E0xuCgn+mAx2K/n2oc
nmg8HmufH2kiJmGvH2oyHmgK7msq7mmP72q3Z2CX52KnZ2IW7mg2bmsObmmH
b2q752E+FmAhFmGb12Orb2gxlmCLr2splmE5VmCzr2mTV2IdrmoVrmijV2MN
LmuD12K9L2mdL2oDLmgjzmutz2kztmArzmonzmiNt2E7TmsHTmm1T2oXTmiV
j2sPjmml92KF92G592OZD+AgjmqpD2GJD2Oxj+goDmuRj2GhD+kkDmqBD+gU
9mu+T2Oe9+kczuMCLmKu92qO9+gSLmO2v+AKruIO7uIadusGduk6dmqWd+gm
buE2tmumt2mGt+oe7uMN3mK6H+AhHmGat2iqH+MpNusJNmmKN2qyn+E5XmCS
N+glXmGi12uCX2O812mc32GsP2KM32O0P2CU12qkP+Ez1miEV2u4V+kbVmqY
V+gnfmGoh/E3/mCIE/AvlisEQ1IwQDI4l2mwl2qQg3Ggl2iAFysUQzMCI7K/
w7CfF6mvwzIcF6qPw7O3FygSIzMO4zIKozImY7GX56unozE65ykG56qH56i7
Z6ubY7OrZ6mL4zE+Z6qzZyjI05WQifgPp2kQpyoxkzApkzEFU7KTk7Ojp6iD
JysVU7MVJykN07IWazMd0zMTM7O9JyoDM7KdJ6itxysLs7KNx6m1s7GVxyo7
czAnc7Emxyg387AGR6ulRykv8zE/R6oUS7MAC7KFC7G5C7OZR6ipi7Aoh6sY
i7MEh6mJh6qxSzLQQ1SGZVmJlVmOg9XIFVmeg9TQFdjAA1XfA1SFAazG/qrK
fqrnvqrrPqrO3qrjXqrtnqrlHqrD7mrEbqrLrqrH+mzALmrIzqrpINVwJwWy
MZuwKau7o5qxg6q5vZqznVqwraq6JQPcRq3ZhlXclu3ZWu3YSpXdUh3YkZ3Y
Qv3Yn0HszC7sykruzW5sropupu5sqgruwfLuyXLuxbJuojLuw9Luy1JurJIe
wIEMVAk3UnE31GAOYTEPZVE3UBHX13DWU2GP4EjW1SjWUSGP5hjWVkGPZQGP
43jWUn7X1CRO5hIuZT5PYV7P5VROYx5P5yzWUG7PYC7PZE5X12xWUw7PYXZX
VTbPY1bP5wIGaCGraBErK4sXM7MraRmXcy0ragUraA3LayVXMZPLaTXLKqPL
KINLax1LaT03ML03cgu3Mp03Ma03M41LahtLKLWLK5WLaQeLaid3MaV3cw/3
MoWLaB/38xALK7kLKZkPMKkPMokLKrEL6F9CoYy3
           "], "LeafValues" -> CompressedData["
1:eJxNUEEOwjAMG00sceQL/IIrR64gHrCJMXEZ0oaEeB8fo03i0k5qViexneyH
5/meuq5bt/k69+/jsvSfyy4/rvP6mObxdppf4zQuh2GTwW++gCQqqtByIDkW
RKVgKcOQZEnYp/jHgCxZjnoVAjDOAA1XdsY7jgkLOcks9be1xwCqBBrGQF61
HqEb9XksQMTVrDL8N65Il7yvmZDTxGSoBBQFx/d9lS06Xt17vkpFJbTRlsA5
W11RtcM9s+gHI/EUxQ==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kklLA0EQhUvx4BKD5ORBBIkhiKeAOJOZ6cz0LA1e9RcouJwUoiL+e796
iTTdXVX9Xq198fRx/7JrZp/7HPePP3G9fvx9OEC5e/96fn1eL27fdtC+OY5s
zyq7ts5aC9Yj9xYtsxVSrhWQk5UgGu7GprxH0B1I38kGtApUiTbm7uDUtsTe
i5+DH9g57EJM583txkbgnOnxWju1MzCJPXCOiRSUT4M94x44I1GWW08uBfYK
rUfP8JYh+8p4HXjZ5OdykK1iN2gVesvyWgq0Shl2qraA1SvPCLsmmvekUS6e
7RjrSl1ylFdf620Jo5avJPtym5tne478n3kjZJBW4Ke3ibLzCAtspeLNeAuK
n+nVe7Lpt/cvIZX0JdGlS1mjrINwMztRZXN81KxNli0Rk+ZSY19xTu0QVKVp
N0IGLJkmN8XmvdlB80ymqvN4i7qS54mmkylqLqmlgpI7afZzVd1qui1SUndq
zdKZkQrca9SENjkW/INCMSPsM/Beb76N44xek2n0H5Pm6bH8/43E7NR35xX8
76BpF/YHnQNf6g==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufLtr3Ztl2b2+y22szN3XVd3dVdtm3btm3btut7r/sz88wz
AS26BLUOA3SP9AtBwb1LhYYG960V+VcEdu4R0iYkNFf+tv//ngb/OwxhCUd4
ylo5i0BEdrGbSERmA6UVhahIpRSN6CxiMTGIiasmsYhNFaoSh7gUpwTxiE8A
qfmpBCQkET9UUolJQipKKCnF9V3F9E3JSE4KUlJUX1VEX1RYn1VIn1RQaUhL
OtKTiQL6qPz6oAy8V0beKZ8yk1dZyEo28qgABclODnKSi7fKxxvlVm5yKQ95
ea2ceqUcyk92vVQ2FaIwL1SU58qqImTRM2XWUxXjiTKpJBlVigx6rPQqTRnK
Uo5HqsxDleeB0um+KlCRtAokje6pEneVWncUoNtKpWpU55ZSqgYpdFPJFUQt
alOHcYynLvX4l6HUJ5n+Iaka0JBGNGYAf9KEptxQf5rRnL4kUTAt6E1iXVdL
rimRrqoVIbTmitpwWQnVlnZcUgK1pwMX1ZEL6sR5xdc5daYLXelGKGfVnTOK
p9OKqx705JTi6KR6cUKxdVx9OKZYOqp+HNFv/E5MHVYM/UF0HVI0HdRADmgw
g4iq/fqLv4mifYqsvRrCHkXSbkXUMIYzigjapRHs1Eh2KLy2K5y2aTRjCKux
hNFWmbZoAvNZwEQmsVloMlOYinwu7ps0jY2azgxmskGzWK85zOanr9MPX6vv
vkbzWK1vvkpffaUWskJffLk++xKWskzLWM4KluqTr2QVa/noS7SaxVrDIn3w
hXrvC7SO+VrPPL3zjbz1udrEZrYwR1vZyRvfxnZ28Npn65XP0kufqRe+h72E
tXC2j/184zsHOMhxTjBDhzjMEabruU/TUabqGFP0zCfrqZ/kFLe4zWme+CQ9
9ok6w1ke+TnOc4GHPkEP/CKXuMx9v8FNxusK43SVsbrGGF1ntO75KN31kbrj
I3Tbh+sOd7nl97jPA276J274Qx7xmOv+nBc84SnPuObDdNWH6oq/5BX/6iOv
uezvuORveMs/uuhDdMEH6z1/6wN/6bwP0jkfqM984ax/5Yz/qdM+QD/4Q2Gs
v37iiN91yjGz33TS++mE99VxD28RrKgVsz6KaJEssvXWMY9iUS2+JbBoFt16
6ajHsJjWU0c8lsW2HjrsceyQd1c8C1Vc66aD3lUHPKElsryWzxLbfk9myS2J
7fOktte7aI+nsJSW2XZ7Kguw1JbGOmuXd9JO76gdnta2ezpLbx20zTPYVm+v
jNZOmayttngW2+xtlNVaK5tltxwWopzWSrktl23yltroeWyDt9B6z28FLFjr
vKCt9cK2xgvZam+uVd5MRaypVnoTrfDiVsIaa7mXtFLWSMu8tJWxhlrqDbTE
y1sFa2JNraIFWn1Vs0pW2araYq+nRV7FFnpdLfA6mu/VrYbVtHle2+pYkM31
2qpltTTHg1TX6tlsr6lZXt8aWA3N9IY2wxvZdK+uxlZN07yZTfXuNsWbW7C1
sMnezSZ5S2tlVRVibayttbaJXkUTvJ21t07W2Sqrg1XSeO9o4zxQY72LjfGK
Gu0V1NXKa5SH2kgvpxHew4Z7WfW0Mhrm/wFBEPL1
           "], "LeafValues" -> CompressedData["
1:eJxNT0kOwjAMLBlb4sgX+AVXjlyLeEArQsWlSCkC8Xu8UqTEju3xzGQ/Pvpb
6bpu2Uroh/exteFz3klxmZf7NNfraX7WqbbDuJHmSwIzEaEU0kwkJTPHm2AV
aSQD+JRLtGTRegSf5p5VsK68kHODcMKSNBTtlDAgF86oCgoBufRqMrp6gD/x
WAh+c6IGKFbZZaEJ9EMlcVpKq/57Xp3zSh57sBL+k1CwqbsLGJJEwxeg7hMd

           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkk9P3EAMxU1ZWigrVHFadZeiqtALF/YAySbZTCZ/RuqVfgKQaDmBtFSt
+u35+SWykpmxn5/fePz14eXu1zszez3kd3f/L+529/9/HnH48fzn8ffjbn37
tMfpL7/KNlhvjQ2YnyrbYoPl7DqLihaWQGzwFza3a/tENOCv+WdWsrZ2Cjbj
y0GV7FrW2lYgvoOckd+rTg/rN3lau5TPmU7grfgXVN4q7pWj9me2D2uN5TAf
4K+JHBOZw1GTEWyt2JK6C7Tm+FowJZyRaJjuF/AOYupUd4U2v1ljn6nUq/qC
NeOGAYznRdA33HkAGVStgneQNt8H1hXKvep7VsclcjvYoqqeq3el7SnSTIo6
aQ/0IYHxXvZSVXHqpH8J1jVEql9I+ZUdCTNmBO5fo3whZd6ZCNs5voZaGZbw
tpPqwGlNfqLCMTljzaV9FJNn5GC9564xse/Vq316NOelZtyt0Xsv2M9gTpqd
sZ+udKvo2PWkN0z2BeQHYj5FLdYJm0BVetOCHOctFAnqwThDc1C1WBtl5+Di
VHXL12heGu6SgUqaCp/afprXEouagg0aek5vXAFZ+A==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1:eJw9VnlczGsXH2WZrGOJcfW6ihLitohJOKPFncoyetXN1oKSLOWmjKUay6VU
mkiGKwbJkJisbZzJaJr2qahpNdMoE3VNadMN79P7+eSf3/P5/Z7f85zzPed8
v+cYbg909R1GoVBCyUO+OuHdR6oYBN+6VdFdt0DL/L1aoq5DBu2mYc3aQqQ+
VN68MNAC1O/10uK0JjSbn7Y/et1wprJyhHcrORe0Uu/zX+Qca4vjjF06+ejR
t9DBxbkFzEf/2Gj09S2Y3jzgd3uqGpnOhVUeSxrAY9vevGEufyPTVU8rfChB
0/z5Jsl/lKHCXFtHq89FRfuCazNSZGjOe11lUlMIoi6bNwFyMSovhAh5DUpU
KgaC2xgqFLpnl1pGqIEX6jU6wr0KIrs3lU4PEAJN2jJtVH0usDqD363rSwPZ
5rCT7gTHrPAkzjx6FbCcWkvPy/OQ8mZt2i6TIuA2fMkxJd95Ya8Wf/6SB/QY
P9rtqjQwp48VU4anw6ym0CzLsA4UlY13OrUjjeD5x7Gp9S3IUlrXeMS9hyB2
wJ19/c3ArAj12BByFzVXr9RLjzaC3CYpv47co1mf2S12VAH3wE33yU5Pgdkf
uWLLthrwHmc7dee5j+id7nL2SZQY6PY978b1vgXW+rM6jlvEwBwpCz5mIUZq
he/JMtcrwLJo/qdJrQJaqImcYixDOqtVuKRJitT3S02uuFWAqU37jTrXfJRJ
kvdtjksB5hrh9dKka8Bn7NnCTS4HAe8Ey7MsCThp1cdnuhWiyChgk+HCx5BR
t0HPzawZ/O0/O44yqAZ+Tyb9hE4xmpeN0uypqwPBYe7qqBUXwftz3KiE7kQI
mvk4Y2t1J3qcdjaLzz0PHnbNWwP+8xFlDdm4IFCNs8I424yM3oN2O0tu1fAc
ZlXtdmQ/eY3aYfOuHTW4C8z5PSxLrQh4X9tLbpG8s21jnL/ZSCHoaBFOPJYB
gnC3rKYROcCjf/pUfOUZiBbvv57KVCA9eeBYlHU4cpV3GDlt5cC3N7PJl8qQ
6Xb27DOBCjPUyUlXeenA6Nw42XJUHlCPyh9c/ZiNFOmAK2/ONWRJo9Z//DUP
mOt/z7le/Bg8lqnPwzMhyP1MfHc1S0Hx6uvXlTtrwb+98mhjYxPSl9W8T/LO
h6G8KyrOjCgg9uhmjqwXzQLoqzNonCJ7CUL28WPDY8Qg4gW3COangumkJS/9
LiByYv+VPsyuQcreObRqmwakaExVfuZNyO2OPfeY4OZFeNGaetow6Mor5az1
GmQobKewCyTIM2oOSQ7ORdHX7dHwZwlqywvM1STvDJrnjjuun0Do9mfvybtd
IJx3tqxfVYoie4s7iX53gNErsQt5WQWakysLThHcdNv4xtAtJdDX6Df7uX8W
ityONt/gSMG8I2BDDMkvaxXNwemFGJTFG1ISq+4Bv2xRR8MrFfTVxO5QDdYZ
bb9j+twslJ2jyhOL0oHttH2iMb0WBImJdUzqS+Tw1znn/ycPxHZ2j1ImtIK3
z1rt1Ox04LAdHjxsT0fuktoPsepKZMp2HXo64SYIArW60cSu0HLMfeuEVyiv
snA6S965t27L4giv+SM6CjYS/JRxDtMG/R+yO8RnJn2MZGKTHEyDaE+v7ylC
pgFl2dLQGqStLHx/gvzPtbc98mbqO2S4RObr6D9BStW67VKSJwF/xuwTJs3A
jZlW1enzCFj9ptO8zheBoPrgvnxOBVBHhG09t0CNrOVZH5ieleB/X7dvS4gc
xJbKCeu5BSA+eEqafpQPDJPFnQGbc5Af36NivZCDxmqEsk8vGyhcX5vYH7cg
KDn739n5JcB23YuK94XI0J1Ra9xagkrr5XdV7pnIvZ4aXL77FXKoOpXlJG7K
I4yW8ahFrW5hxJi3mcg+9MuV9D1E3yqWes6eLgTOjJUBhfs0KJr5uSXmRhF4
jKiZe5HgYTXsW6AzPAN4IW3+H8bJUTQ/Jp7X2gZ0B/2gIvI/x/DGYt9iNXJu
HMl6u7QaGL85CASkjplLjhk6rXyFlJXXtLW0dqQ8D3LwS1NAEHfiphtkf0hn
+Gta10y6IEd5WSxNl6yRDqxLAqkEaZR3mWWRNdAXfHfxtITnINwdotGG5GLG
tLxs/+dS5P/hFv5bfClS/uu5LnZTLYrnWQc6puQgpctvqqAuG2iR9BUWREdn
HbyY6TpVBNSLkY+iRilAuXdkcqUVkrpfK19EdJh7MHGZH/F/KO8Cb8P2M5AO
3nqq3YN+9/3xwa7f7i0M8Z3ZvxO9d5J9G0zYL3yCbKue4Af3nyFl1Ng4R1UJ
Ki5vOrfZqhM0l/WzFIdlyLE8c9Ge5Jk7e8eJ3zbfBJr3FCkSPRmqt1l7ztjb
GiSDnBM2dXh2MZrKvMZPILosPDc39RaJv1IY7/mlKRUoFgX301YrQLv86IDa
PxlkM8dRjJOegqZkoN6H6Lpc8jdlsG/OuiQYtWEY0SUHxsfy4y+Aa/yyqIWs
Wr0u54hpcpQdrvDf9o8KRaWbfCbvVKPiRpt/vVE5CuZtHV1I9I5yf1HUKf8q
5Pbdk/YSvptmv1PqtUt+xpHz1Wf090dioLTs/zp8lRD9PdoXB/FrgNllXKPb
8uwnLz3GdoZ0lyuRsnZ670z7AhRc3SjdQfykul6KpI5NBVqmj13qCBEwGQ6H
DF0ykfGXx9zxBLdpxHi15/InP3nc15UbI3ZKRBm/oMI2PgGVxjXdiZoGZL33
GrOf9EFzIwP9NZeykT/JOXdQtzgpr62v6T5B0w36ZzpcCL4TwcnzmgtR2XNc
PMGvEPuiV98+S/g7pPfCQLYJPykHNHxoPP/nbRjqU0NxpnRaOHmdSYMg0PaM
8+UBR7t30TKiA+yaQ2FVJK4ZcQsYNrSnwPCwjpvw5s7Pc6ZtOtabSZwjLbJu
WVWVIqPaKi+B+C3SXro7kZ+HSqdtdsY2avSPuXxmsA8EvZJkM8nKuVUQ+H9e
sV6mFbmIkasSt+mx8yGo3PJjDckTNdog+u3pQhB03W/oq2wEj6i9nnGrniHd
WvXRbJkGFDeM523SeY1D/Y2fzvSI/eUZatZ/Uh22K/upc0P8G+p/3Av92c7B
YpRHtt01iSoBVulk/up9tSAMCbv6mcRRaVv6bX64CNiHvj/Q1ZegQn3yzgri
L2tRuMugbmT4LLTuuUvuL/Fy6SV+UTNaLuln1ALTLMk3sOUFMIRP5WGkPwiy
+vMOb0wAZeqyfYNzEGWODUv+OhpoTi3jzxF+UoxOp8d/T0H6+mGCppZcFNJn
uBwk5xi+I/sHecEe42Jzz0qEwgSJWVaHGHnbejcPxsF8zsLTB4gd/5zvlbt/
rUf61awH+RWPgLdtT6PapxT5ZUGTA0l982Tho5cnS5Df8NJxyg8V9pUYRbjt
jwHKAcnzF0fSUUF/emnC9HzkNjvU2uaqQdRhOU4nIB1YJzKvR5B5wnsu1X36
lkZg1Pzd0VBJ9Ki7Ufe1swQzIsLDhcw3SFudlhEwMh24l0O9tpM6Fuz0G7uh
u+knTs2yq8MG5yqG9/iZoU5yELmzF30waAXzgHrb6l/I3PTJetpIx0KkcKwe
mY+UgPbYpAcXSL1yejMm1Vc1oXLDvQEz5xLkmfz45D+vBDXxl495LCpBhixw
u2F7M9IOMgwDvxQg9XKcJDahEsxT3NvpC5XIys6fvneQL9+sOyeSuZD173L9
1I5i4HNX1YYSf4XykwZXyh8DfQ5798k1j4E7YJaUIn0P/wMuzR92
           "], "Children" -> CompressedData["
1:eJwViWOUEAoUBudm27Zt226z22ozN/eQbdu2bdu2bft+7/Vn5syZ5M06BbQM
AXQN9z8CAnsWDw4O7F0j/P9RvmO3oFZBwdnztP7zexj8cQhCEorQvOI1YQhL
VSooHOGJTnlFoJyiUVYRiYRURpGJQlRKy1VKv1VSv1RCMYhJLGKTmjTEobji
k4CfissPxeO7iikhiUhFUX1TYlJQRElISjIK66uS80WF9FkF9Ukp+agC+qD8
eq+0ZCAj75SO9OTTW+VVJjLzRnmUhayUpRzZyM5rleGVcvBSuZWTXMpFTuUm
D3nJoYJk1wvlIz/ZVICseq4sKkRhnqkIT1WUJ8qsYhSnBJn0WBn1SCUpRQY9
VGkeKL3uK53uqTxVSKu7qsAdVaQSaXRblbml1LqpVKpGdQJIqRrU5IZSqBbJ
1YJkqk0driup6lKP+iRRUwJpQGI1pBHXlEhX1ZgmJNQVJVAz4uuy4qk5cXVJ
cRRES1rRmtnMoQ1tuajptKM9Y4mtDnTkgmKpE53pzwDOK6bOqQvBdKUb3elH
DPWgJ38RXb2Ipj5EVW+i6Kwi64wi6bT+5h8i6pT+5aT6ckIRdFzhNZBwGsFI
BjGYYwqrIQxlGGF0VKF1RMM5rFAaRUgd0mgOKoTGYDogtF/jGM8E9mkieyWf
xGSm4L5H09itqezSb9+pXz6DmezQT5/FD9+u7z6Xb76UZWzTPObz1bdqAVu0
kM1axGK++BI++yZ98uWs4A4ffSUffDVrWMV736h3vpZ1bNBZ1rOB9TrDRjax
Tm99M1s4xRvfyjZOcJLtvPa1OsoOdrJGu1itI+zmla/SHvayj5V66fs5wAod
ZLle+DIdYqkOs0TPfbGe+TGe+iIdZ6Ge+AI99vl65Kd56PP0wOfqvp/jnp/n
Ahe5xBXu+hxdZrbu+Czd9qvc8mtcZ6Zu+g1u+E1uMUPXfbpuM03X/C73mKr7
POIxD7jqD7niU3TZn/CUl1zyZzxnsl4wSRd9oi74BJ338Trnb3hLckth73hP
MjvrH/jIOIW1sfrEGH1mtM74F77yje9gZj847T855aN00kfqFyP0G0cM1wkf
puM+VCEstB3zkHbUhyiUDdYRH6QwNlCHPZwd8vAWwSJaJItvB32AIlsUi2r9
dcCjWXTrp/0ew2JaX8WzWLbP49he/1ex7R/t8bi22//WLv9LO72PElhCS2S9
tcMTWxLrpaTWU9u9h7Z5d231lJbKuinIUlsay2lbvKvSWrA2ezpLbxkso3VR
dstkmzybbfTOymydlMWy2gbvqPXeQes8h6319lrjuWy157Y8ltfyWQNb5fmt
gLXTSi9ohaySVba2KmxFrKi10QpvreVezIpbK5WwkrbMW2qpl7LSVsaWeJAq
WlkrZy202MtbBWuuRd5MCz1QC7yKVbWmmu/VbJ4HWA1rourWWHO9keZ4Tatl
tW22N9Qsr2Mzva7N8Ho23RuovtXXNK+nhtbIGltdTfUm1tTqaIoHWjNrbpO9
tiZ5C5votTTBW1ora23jvabaWg21sQCN83bW3qprrFdTB6uqjtbJOlsVdbFu
NsaDbbR3tVFeWSO9krpbDxvhFTXc/wO2gfT0
           "], "LeafValues" -> CompressedData["
1:eJxdUEEOwjAM6xpb4sgX+AVXjlyHeMAmysRlSBvSxO9J2rSaaNWsceLY3Wl8
988YQlgPGvphuyzL8L0dNbnP62ua0+M6f9KUlvPYKbhpICiwFQURQuhHRKNE
OyQB7aG1UGgLltCJ9IOK56tXc8HJJRHUCSy7ZNaSS6hqtezD4aCbADp1a6A6
jkYVZtfwWEj8U4vuR9q0rFleJaiC7U1o8u7MYWfsFHxeGVD/0s5/I2RY8AOd
WxMS
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1OGzEQhScUUKNGUSq4iAoqRIHcElDb/ckSx17vSr2FJ6AS0KtWCpUQ
79CH5psDsmzP/5k59uzX35uHHTN7+shxc/cct9u7l9shys8//+4f77eXP34P
0P5zrGxmtZXWssbchY0s2gF3wL7gzlbZsTW2QYrsBnu0M7smIqHN8RzbWnav
UxIfbWk9to11xLhUKH7FClhbIhJyjb9G69mJndELfJ7psQkp4p3gcTlRZQNC
xNcq71y5h9gTmQ0xHRN0WBO3157blIw99li9LeitoV7N2kU+5J4S9Ql/q2lr
Va+RB9TthDQBqdGUjV2oyxafT38CUkZzNkoi3jIcLaBlOonohWZbgtgyQWVf
0cdYOvFQKHuiWUs8a1bQfFkxnRgp6Cdz+oTeZQXWEPvCvmPP3L24ruirU6dz
an/Dcy7MK3w1OJG8tfgKTP0ZT5Dei7dS/RTiyPvfgLaml0bLX3LFHM5JJzyP
r8SWv0yJdQKfWS+W6KkR9pHt82eCbFmZGWxnL78vR89kLvlNb/+hlzQiK6tu
BWPe84yoU94tIYd3nFbMjqgXyRqQF/TXrrFHOvigHzEUqxm+jqgXuJPeKdsX
vU0S8/7ar0aTXsA=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
8hHpNnv2HtUc+C+gWYL1
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rbV9u2bdu2bVu7r+8nmUwSN+lYpUUQAF1C
/UOVxj0KBwQ07lU19L8o3aFr85bNAzLnaPX/DyTwv4MgKIIhOGqiFkIgJOwa
CIXQSI4UCIOwkKMjHMIjEiIjAvL6r/P4jyPit3P7l6Pgp6Pih3P5u6Phm3M6
BnI4JrI7FrI5NrI6DuIiHrL4qzM7PhLgixPisxPhkzM5MZIgKTL6ozP4g5Ph
vdP7nVPircsgFVIjDdIiPwogHdIjG7LjjTMgIzLhtdM5M7IgK9L6ldP4pVP7
hVP5uXMgJ1L6mVP4qXMhN5L7ifMgL5I5H5L6sZO4IBK7FBK5EAqjCIqiBBK6
GBL4kYvjoeP7geP5vkvinuO6NOL4rmO7LMrhjsujAmL5tmO6IiqhMqrglmP4
pqvihqvhuqO7OqL5mqP6qqO4NurgPh6gLuphKIahPhqgD/qiIRqhKZrhiiO7
MSK5CSL6siO4OVqgF8K7JcL5knuiFVqjDdqiMwJw0e1wwWF93u1xzh3QEWHc
CaF91qF8xl1w2j3QFSF9yt3QHSF80sF9wsF83EF9zL1x1EHcD/QADER/wEds
DcJgHLZ0yH81BH900L81HCNwE7cwEqNwBVcxGmNwwL8UiLE4hMMYh/GYgZmY
gInY70nY55/a6x+ajCmYimnY4+nY7e/a5W/a6a+ahdlYhMWYgy+ai8/a4U+a
h/lYgI9aiA/a7vfa5ndagrdahuXY6qXY4jdagZXYhM3Y7NdahdXY5DXY6LXY
4Fdah/VY75da5w3YiBda6+fagq3YjT3Yhmfajh1Y46da7Z1Y5Sda6V1Y4cfa
i31Y7kfaj4da5gNY6gda4oNY7Ps6gnta5Ls6imM4jhM4h/NY6JM4hdNY4Ds6
g9ua71ua57OY65ua4xu6gOua7Yu4hGua5cuY6aua4Su6huuY7sua5huY6kua
4oua7Nu4gwu6i3uY5POa6HN6iEcYzrN6jCfIyVx8imeY4DN6jhdIzTR8idOK
x/h8hdcY7zf4hM8Y57cY63cI9HuM8QeM9keM8il9wUl9xTeM9Al9x3H9wm/8
wDGN8E8M91H9wV8Mc3QKRiiGJkgGZTAO9REF4WEN8SEN9kEF5wENcgiG5H4N
9D6F4V4NcDj2d1j28x6F525FYERG4i71dRT2cWT29k71clRG4w719HbFYEz2
cCx2d2x28zZ1dRx2cVwGeKs6OwETMTETcos6ebOScJM6OhWTMhk7eKPaOznb
OQXbOiXbeINae71aOS0zcp3Sca3SMwNbeo1aeLUycZUyc6WyMCubOxubeYWa
OjubOAcbe7lyc5mqswbzMC/zMT8buTwLsCAbuiwLcalKc4kauDCLcLHquyjr
uRiLswRLcpHqeqHquBRre4HKcL5qeZ7Kca5qeo4qcLYqshIrswqrcpZqeKaq
e4aqcbqqeZqquiaHcqpqsTbrsC47cIrqsT6bc7IacJKqeKIacoIasTGbcLya
shkre5wqeawqOlAt2JIV3IptOUatOVptOErlPVLl3I5l3Z5lPEId2YmlPVyd
GcAu7MpSHqZu7M5e7M0eHKqSHqKeHKwSHqTi7sN+7M++HKhiHqAB7K+iHsKB
7KdB7KvB7KMi7q3C7qVCHsaC7qkRHMlR7KEC7q7RHMNAdlN+d1U+d9F/jRcg
7Q==
           "], "LeafValues" -> CompressedData["
1:eJxdUEkOwjAMbDNjiSNf4BdcOXIt4gGtCBWXIrVIiEfwZ2I7SSuS1MvUE49z
GJ7dPTRNs+yS6fr3aZ77z2Wfkuu0PMYp3s7TK45xPg5tAr/JCClUI0i+LAXt
M4wsRfTEY8dypmXIXje2bPdWRiJsLoCAQGZSEIIqAYzlt1OKFimY/6013hQa
gWUlKAj/BKDSskxjlJFtPBujdpAqgGtnpbRZTzpBGUqComCm1WcscVjfS2SV
4LVG+wGN/xOQ
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kttqFEEQhkvNhZvEsB7AgEnWZTzdCJsLnUPPzkx3Tzd4G58gQtQrhVUI
PpJv6dd/Fhmmuw5//VVdVesvP6++3jezXw85rq5v/W53/efzAuXTj9833252
lx+/30P7y+GssRP+xrK9sMFqvqd2ZiO3t2P+ZNEubEb/YAec2bZ4E7fTfWQ9
d4e1tgDWYUtYJmJaLDWS4w9gHpMr4xttw90Sme2dHdoDZZn4KqQK1CsqGmAY
bcUZsbaq5ZRzgtORL6v6nioT2htZN6ogYi++Q/ANmbf8SdUM6B57B0uCea23
lswD9hnOpFqjpC22FdgebwDZ2zPi1/g65anIOhLl7RHYS6Rk56o38G2IGvSy
vGevQFd0c8RSOl76W6qLyp/VqRXeIETplBd7ef8Z3gtbcnr5MigvLexzJEVm
5I08QYyjLI18s+rIcHVUHpTbwempfcL+XiwddmdPiCp9ykgzaG8v8ZUutOpk
md1z9SFoFhme2hbcFVhvb1VDD3bWtBaa11Jbs4AvIR2AqXlxyxnFWXYmqr5Z
0ygMr6Xd9XxSd7PetNXkHG8qE+81uUj8CXKEedTcltLivktlj8vOeGLC/60q
8Xc7Xe+5B23Hsbrfw1H2qVbOho0fuXu9etIEvNBOs/gH3tpomg==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1:eJw9V3tcjOkXrw2NW8ZlNbakGzvrVviloW3PWNQkZUIZ90EUFVEpqxitS1qb
qcjIbVKSiNL9eqZSTVej6xRlmimNJFOsRm6/Z/7IPzOf93ne55zz/Z5zvud5
TXYfWr9XW0tL6x75UW9Z1bc5JBsZEVs9o+uakREZ99CqPQXYa/X+u5IiQ16q
/uSueDEywzd5W3CqUP3csGOauAi4g35WJ+nNQK/tXmaU+QBE3wpcGk4VgsyW
vmJntASCdOdM7snOhdSnf45JTm4E42nbeG7jOkG6cPKfPsPdkGq2o9ouPxPo
rLG67xs6QK16fSxTngWSdOcvE4JKUBxBkcRUpwEteJTB+A8VyLv6uLOH2B9Z
F2XdV8X3JALjjNnMF2SdwixqpoIYRRm6k08u6IecPR8iGUdbUZxHWWWc+B7o
NInWxkcfge550nWKdhOyN91wsSL7xuMtLo2xUhD7xzfV7ioDISeb8zGtFcTN
t+kP/IqRYQpBD78owNhkbUAwscv/WZG2geAIcs6/2U59i9I5IW/76kTIm7tm
aEt/J1LnU3NsEhXAXV2VZtG5Hdid/vWzzJ+icu4nS4WiE9gMdpZ2WCmmGoWV
CJTt6Fv+6uO+hUrkHFC8bSY4OPv/17XvUjSwPUczthN7fMc9FXarXiK79LQ3
taET1dLIM0FerT94FvQVr/Rh3AZ+3uZRLT9LULLi1uyXps9QoO/e2nQ8Fajl
r/R1XxRDkvx7dfjjpyjT21toqVsG3IXmfktsa5AZQ3FufVyJwhOuefLRBSC4
HKXgUcTAp715UxObBTnztO8u3NCAfOpdP6fcYuT/Zr4ydkAAKou84za+XZB0
cpzFBF4ceO6N0XWyUYFgdV5+/IozQMMxobf3RYCQa/L2HKQBZ1X7zMa5nWC8
J2PZl4MFILU4uzbK9QOIDNg7L/TXA9NQ8FWxKxksE4OutBpWouSoPk+LJ0LV
qrEuPGYFqkKjm2yvNaOgf5CrJvWStODF58RoKlMZ8nXawfhs4O+u2Hr9eyX4
FhrW9Di8BJrRR0PBoR7w7Pq6KV5YjVTvyKv9mwtRrEoPjM+vQO6676fHnRYj
2++/iXb6ncCwX1zn/VMFCj9SXx8eTAPKPxY62R5ylA74r1WRc1LGFX8D0R3g
1oRYho9tAFm8j4M2OT/Cb8Fy26JvjlOY6sRtd6ZeLwbW1p/6d94tRlmHjrmr
UxUKq21zDch6TsMK1cO2NmStdppsnVQEHCfr5uAIEXAnfvPXvCfR0Y0xjX4G
vHnha00/NUGS/j/COQ6ZIBltX53+ogPpx343a14RBfTwur1G5L0ws4/LqE5N
wHLsu76HnA/r+q3JtbIUfWktN/RXp4Dk0unhELdmkOTdYeSRvGnpz5B/niFH
mpezVeCVEtQ67lew4nwRsCZtp091TQDff21aBzvrUHoyJrhjCqm/0N1rcpOe
g7CxLmRfihSkNnODPWoUKBlzdV9+L+mPa7e/GXlVo9ah4OjmmYPAHPPI/cAT
GXB7Tn0ZcFRgUFqc22qPYmSlXpZNXRaKLG2Pqw+nKyBV8Xa0Bl9QwsU/9FCF
/KGelL9tc8HT41wFj8TLN0tmmK5TonTivW17InqR8vaUw/C7Ukj63v8p75dH
oCWeucmc7OcoEm5c56eBbPO1lVlzu0HsYLFRN6oKjJNjI+XKAqRUXjSon1kG
LI7t1ID0Esy5PPtMVbcQkpwt2Sf3ZEPSIfYcwY0CkA1QV7VZtwB/4Zqj7xxL
kBWfFulOcGr9HiK5kFELDLNRprNpbUTP9BxO70mBHHv3mleSSrTUax+wOP0f
jPSPTC+AUWlbhZzYzl16ucSfSYSHivAQNisieCLJ40i9iC9c7sjvI/nzY3Tm
kX+ajt0Ya7d25Endh71rCa+Wyrt6erWoRW9o5hL89KQXf1WmXQZPl2tB0V5i
VF8pWtLonwXK9V9qNTo38jyij5bcx2+ZOxrA0i9MNmZtFXLLx7evLZRAzqHD
Rkb7y5ElWO1oMCoCuGu3uEUb3gPp/Pypi0MGiM53/WVOcFpOC071sstG6dYi
uUa3KNT+BRG9+Wj5fDD/LL8SKfahFDlZp5Yd/nCD8Cmrt95hNiMJWDGBGxfS
SP6YNn6O9o0oNMso73WQoLrx54RppUQnG5pvM6fVoGdIjUiq4dstdb+bpl57
qD8dTk4ALoaeFpB4qBeMa3TiEbn6H303M/rAM6os50DgfUiVXY59ROp4BKe6
+rFFa/ctEEmH9SJ0pUDN7Ot7t+sx0I+M+5xX+BT5cGZx+I46ZC/ymdH0Tx1y
5My/FxGcyqcD6Yp/s5F3etexl6TOjQcMJ0ab30TG2tkXDVyrMIi7nP1Bi4+U
1kDt7YtPgCx8a3BLVDZSDh4PdTqqzfS95JP9jOgr1yrr4Xk7JbJvfZO+P1uG
1FcnUlwAf+hCmL28oOSzBJQPtG9q+kk995GJIelbmn3TvcbAZGSI+5ed8JYA
52D20tlkTvge9IkuGV2C7KXphQnLVUDRsXbS5E3yyPRGB9F19tT6i842b1A4
KfbIursFIP76IGHx0hMoXfUqyzbrGTBu/dZXpwz/0ScM1wlba0n9i45tMRnd
EQ908/lTPcm8oa556D6LxCHZVbriHrMRPQ/FbSlOeQBMsUdg5qTbwJPp9rJJ
XsTOPZe+DxWD1say7ldEV3nXD1fmeNeh7/C5iaX/PgHeubg7XyylwM7225zW
KkHhtc9pjaGppL63FBgRHvmPE0/dLe+CETviwIwoO4/SH/pn7CTdGbLxEvC5
E3WbdYpxpL8Y7nGz3z2uQlmNS2JMczJwJ7zWsxvb9CPvXP3Cce6zWpAVPd5m
b3f5D7zG/tasqmmtyA04G1C+phQFhuvcPS3lqP79XOb0nDYQuQUI2oX5KDFw
vvkksBzY/F8DTN92I/PQo+33dEtQeEt9RNMHyhar1aamXcAbup6+41w1cn+d
FMkNqcURfhibzIsGfduQOeyOXPc04KFXZ0JjDap2syRL2rOBURRZOUTqUHJW
VppiJwXZlfu685bUE/28s+roPCkGLfvaUu2jRC0H4wtzoBDUC7oaS0m8qeus
9eYnizEp/FhiRkgt0Lx+qdiRK4YRP6qJ12VfZkgwrPCZk4ZX4ytCXRftNGA6
vdZOIM+CI55//dEl+fG+LNR/4mbHHFBxG6R9pK+VjKX/+8WnEbgdo66tc70M
wgr/vJtkbjIsP9YkTa/D1APyuDkm8cDqiTR5RuIx7reuj8rtAFF1pliqPo+c
I722mnnEuf57w2uKCMSUuJWHJTXIi702miIow6Q8GnNURily0xzDM86LgGNE
pZoTfrkFjXZL7GuRn1nVtl5dgznZuUFdQ2KUHU1bk+hzAYIGjXTfEnueYlbK
vj6ir8KuDBNyjnZI1L38YC2ygwIn+PdUoNoqfb5mXbrrJ9MNJSVInR71ZuzB
CyC+r/Xdv57wz3LYFny2BJOEQwzrnEqkPnJc9P2UGLmjxcNvKkhfPZmk623w
itzfGhsv6T0F6W67oRziPyn2PWfq1g7g8Ide5hI95jHTAwK86sHXv7xAdITk
Zc7G1/6CVsj5e3fWtenkvrjnzAZN/pRX36ssU0qR/7A/lkrwq06u0H7ySwZQ
9/tv6SV4hCmuTz/PKUWe9l9/HCT3XvHze3n2RJdFs5Sl2UnNyHlyKjqH+GMN
+r10VqcA/Ync5hM5l2p0qdHFvwTpB6tnKnRI3EHjrTXzlJaZdn+WWo6S6Dq+
bSXBuaCkoeh8NbK9dZoukzyxkimlG5a2g2VocvcZhQipvf2HvIlf33OG4T8T
fDTz5Cm5Hm0oXv7BCu/IUeS4iDeKxE2ZwlVq4mOIaryiFymQE1Q96WM+uefu
8ksVEj4FZsMxK0nclPi5zPlVcmSHuY3fG1uJgpfvWiKI37ApYWNTD4iRrzrz
2G5pFbKC/WbLdpagij5+QDPfmLS2tK0f5JikrT/liFEtjtz/1dyV7KiOQrSc
V/FU4z/1nEOBGZnrI3wwhtoebif3GtbTMyvzyJwRPyiv+PS+DDy9PtkbNLYB
dfKqBE+ST9/CbdkuBDer/Py63lll4NtxuKWN6CXt/fDk/WTf8r+mSUVnO0BZ
cFM9jlYPqsAnWygKMSo9DLUukvzz4xJ8/Egd0Z4PzNXEQc+SxWi+U0TwRfYd
5Ri03n1NOr0G+RuLbttdeA7iOfczOEQf+R/4f84kOvd/t5oFFQ==
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fSeB/B0NwhEBItEFbhEJo
5EJu2GEQFuEgZ/Bfh8cfp0MEREQkREZapHcUpHNiJEFUREN0xEB8JEBMxEIc
pPVvp3FspPYvp3JcpPRPx8MPp/B3J/c3J0QiJPM/SOqvTuIvTorPTuxkSI4U
+MefnBIfncipkBofnNDvnQbvnMBvHd/pkQEZEc9vnBOZENeZkQWvnRWvnAPZ
kB0vHccvHNvPHcvPHNN5kBcVUQn5kB9PXQ5PXAClEcMFUQiPXRglUBJFUBSP
XAwPHd3FEc0PHNX3XQr3HMV3HdllEMl3XBa3HdG3XB4VEME3Hd6VEc43HNZV
UBXVUB2tEMY1UBONEYDrDu1rroXaqIO6COVGCOl6COH6CO6rboArbojLDuZL
ppugKS4aboZAtIR1wVJztMB5/9U5/9FZ/9YZt8Zp/1I7tEcplmYHdMQph+NJ
d8JkTEEQfqozfqgLvqsruqE7euCEJ6EnemECvqk3vqov+uG4++CYv+ioP6s/
BmAgBmEohuGIP2kwhuCwP+qQP+ig32s43umAR2C/R2IURmMM3mqfx2Es3miv
X2s8XmmPX2oiXmi3n2uXn2kqpiEkQ3E6ZiA4n2omnminZ2GHH2s25mAu5mG7
H2k+FmCbH2ohFmGrH2gxluAv7msplmGLv2I5VmAf9mMl7mmz72oV7mg1bmsN
1mId1mMTNmOTN2CjN2KDb2m9b2oLtmIndmGdt2Gtd2A7bmiNr2u1r2mVd2Ol
r2oP9mKFr2i5L+sADuIGbuIQLmmZL2OpD+MIjuIYjmOJL+oETmKxL2KRL+gU
TmOhz+AszmGBz2u+z+k8zmqeL2Cuz+gSTmuOT2m2r+AqruE6TmqWT2imj+sW
jukpjuo27uAujmiGn+Ae7uMBDmu6D+khHmGaH2OqD2qKD2iy9+sZnuMFXuIT
9ukV9uo13mCS92iid+st3mGCd2m83+MDduojdmict2usP2OMv2C0t+kbvmOU
t2qkf+AnfuE3tugPNmuEN2m4N0rYoGE2hhok12uIg3Gw12mQQ3Cg1yo01ygM
w3KAV6u/V6mfVyo8IzAiIzEjMzEyVygpl6uvozAqlykaozMGY7KPlyoWYzMh
E7G3lygOFysu4zE+FykBF6qXF6in5+sfzlNizlUPz1ESzlZ3z1IyJmc3p2A6
zlRKpmJqpmFXz1AXT1daTlNnT1WQ07OTM7CjpygzJ6swizALszIbJyk7c7CD
Jyonc7G9J6idx6utczMPxykv8zE/C7AQx6qNx6ggR6u1R6mVR6qlR6goi7GF
i7O5h6sEh6kkhyrQQ1SGZTmBE1mO5TmW49jMFdiIjVmRldjUlVmFVdnEg1WN
1RngOmzsGmzkWmzommzgQarv2qzngarLeqzPAWrI/qrrBqzjfqrtvgpgH9Vy
bzVhUzZjINuyHWu6OVuxNVuwl2q4Jau7p6q5h6q6Dau4u9qzA3uxNzuymzox
iJXdVZ3ZhZXcRRXdld3ZWd0YpArupB7syfLuqHLuoD5sr4EcxLLuy35sp/4c
wDJuq9Juo8EcwqFsrVJupZJuqWEczhEcydEcwxJuoeIexWJurqIOVBE3U2GP
ZyE3VUE30SQGaBZnczIbq4CncCqncTpnML9nMp8bKa8bKo8baA7ncjlXMLfn
cQEXMpfnM6frK4cXMbuXcTGXcCnrKZvrKqvrKItrK7NrKZNXMqNr6l/iPFrQ

           "], "LeafValues" -> CompressedData["
1:eJxVUEkOwjAMbDNjiSNf4BdcOXIt4gGtKBWXIrVIiC/xSpLYTkOleok9nrEP
w7O7h6Zp1l00Xf8+LUv/uexjcp3XxzSPt/P8GqdxOQ5tfPxGQwElfSTdUU1M
PBV/0SA5EGD6EYhc2LA5yWixdsVwq6YBSpFZS7OYkcDCpToggE4RGEY7XZw3
UzcytSpOirDWKOicGQOEkJdh9Ew72T2EZZLBfEvW97D3pKxSZZR/Z/Slq5Vz
CCuhPqLEM2gE/AD47BQq
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtktFOGzEQRSfVViKwREQpUkCIgFL62vBQkqx3s+v17kq8whdQCdqnVkor
Vf2K/nLPXJBle2Z8fWfm2tdffz68vDOzXwcsD09/4n7/9PdxjHP/4/fzt+f9
7d33Ed4/lrVVVjJn9sEaS7Zl7fAH67Fz23DaWwBXEI0gDln9dG0T5tpaeTu7
sE92IntkNV7F2jAKYgFO51twP9kNVsG9xMnAzY9gN/jO0pIvww+cOnPELmBq
7Qh7SUUzUCUcS6IdowWxIuZVHsKTgWnEXXG6Y0xtDtYzDaAX6sKZe/YOdI1V
sTvjMXcHrKSKvK6kSkvwrsSc/VaVLll7ak/Sr0WJCHolBbdwbKRNAFlj13bN
HJGllCbJLtVbeNNnw/TeW/wM3ii/IeKVJ3XyqkcnjadMV+xKZxPiOZbHdrxD
JHeQ1q5dDctE974oU6u3mGIvxZijZiUNgjJ7v9mbCgX+jDsFDLXeYQuTK9ZI
0Rw1VuBylPlMzF9oAWIOMtp7GCOv0mvsqCpX1gJkTTVeR7Qx+6newf+Zo67U
c6Oqgv6K/wKvsOG0h78kPsIuxVvTc8efC3bOnknRM/3sVhxJ7zjoxsAcs86l
XqEMAz/Xuz/C818bVW9u/wG6h17m
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
qFZE0fkm+RnUpN77/wfdPGp+
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rbuNq2bdu2bdvdfX0/yWSSuEnHKi2CAOgS
6h+qNO5ROCCgca+qof9F6Q5dm7dsHpA5R6v/fyCB/x0EQREMwXEABxECIbER
JR0KobECKxEGYbEQixAO4REDMWFHQEREglzCkREFUVHcf13Mf1zUvx0Nvxwd
P13EsRAbP1wF313YcRAX8RAfaZEO35wAX13ICZEIX1zQn50YSZAUyZAcn1zA
H50CH5wS753fqZDPqZHXaZDH75zb6ZHLeZHTGZDDb50RmZAZWZAVOZHdb5wN
2ZHNr53VOZDFr5zZL50LuZHJL5wHz53R+ZDB+VEABZHez1wRhVAYT53ORVAU
xVAc5ZHWT1wCj10aJZHGpZDaj5zKZZDSD10W5ZDCD5zcFZDM953U91wJd10Z
d5zEVVEN1VED9VAft10TdZDYtZDItZHQt5zAdRHfNx3PDdAQwxDXN9wITdEM
190Y19wEVx3HzdECVzwELdEKvdEHrdEG7RHbbRHL7RDTlx3DlxzdHRDNHRHV
F90JnRGAC+6Cbojirojs847k7ojoHojgc+6Js+6FMw7vvgjngQjr0+6H/gjj
Ux6Akw7tEx6EwQjl4w7pYx6Kow7h4RiBkRiFI56L0RiDOQjuwx6L6QjmcRiP
Qw7EBAT1QQfxREzCZNAHPA1TMBX7De+ztdfSDMzELPzVHv/RbPzWbv/SLv/U
PMzHTv/QDi/Adn/XNi/GVn/TFi/BUnzVZi/DJi/HRn/RKnzWBn/SanzUeq/B
WnzQOq/DWq/HBrzXGr/TJrzVZrzRFmzFNrzWau/HdrzSDuzELrzUbrzQKj/X
HjzTXjzVPjzRSj/WCj/SIRxGJEbmERxFaIbhch/DCZzEMh/HUj/UKZzGW7zD
GTzQZVzBWZzDedzXJdzTBdzVRdzREt/WYt/SVVzDa9zUIl/HHdzFDdzEQt/C
At/GfN/QPF/XPdzHQzzCXF/THD/AbF/VY1zRLF/WTD/BUzzDDD/HdF/SC1zU
S7zCNF/QVJ/XG5zTFJ/Ve3zAH/zFR3zCD/zEZ3zBZJ/RV5zWJH/HRH/DBJ9S
oE/qF07oN45rvI9pnI9KMELyiMDDCspgJINwrA9pjA9qtA8oOENwlPdrpPdp
hENxuPdqmMMyHPdoqHdriMMzAndpsCNykHcqCqOyCIsyGqMzAzMyBmMyCZNy
oGMxMXcoNuMwLrcrIRNxgOOxv+OznxOwr7epj7eqt7eolzcrGTcpJTcqOVOw
pzeoh9crFdepu1Ozm9Owq9MyHdeqi9MzwGuUiZnZ2YWZhauVm3mYldmYnavU
ySuVgyuUk8vV0bnYwcvU3nnZzgWYj/nZ1kvVxktUkItViIvU2gvVygtUjMU5
kvNVgiXZg/NUiqXZlHNVhmVZl/VYjuVZk3PU0rNVgRVZiZVZnbNUhTPVwlXZ
3DNUjdPVzNNUg1PV1FPUxLVYm3XY2JPVyJNUnxPVgA3Z0BPUiIFq4PGq78as
5yas63FqxuZswZbszrGq41bswI5szTFqw9Fqy1Fqx5FqzxGq7eHqxGHqyqHq
zADW8hB14WDV9CDVcDdW90BV8wD1ZC/2Zh/25wD2ZX9VdT9WcT9Vdl8NZB8N
4VAOYm9V8mBWdC8NY09V8HCWdw+NYHeVczeN4miO4VgGsqvKehzHs4vKOECl
3Vml3En/AeBwJuo=
           "], "LeafValues" -> CompressedData["
1:eJxNUEEOgkAMhG0n8egX/IVXj14xPgAiEi+YgInxFz7Z7bYju7ClnZbptIfh
2d1T0zTrLpuuf5+Wpf9c9jm4zutjmsfbeX6N07gchzaD32xUobzIp3wdUAQs
DjLhVcDmMAVtS7X/pqJigSRIUnKqsaF1X4FKAJsCAqLhgHYTJhHHE+xALV3s
Zcpc6i+QasVqNnmpQVl00PsMPpXYibE1la6uMQicWLiTqt9/qxyFcrms2O0P
wqITow==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk1trFEEQhSsa0MRxIBFkMV4i60bf3PXB6bllbj0NvsZfECHqk8IqiH/L
X+hXZ5alu6tPn6o+p3r29ZefN1/vmdmvh0w3t3+G/f727+cTNp9+/L77drff
ffx+xO4fU2WNXdhsI2ttj6wEqWxiN1my+zaAFRbAS3ELkIHomvNoT0ESuYFf
Z2fibg/VLmD1ZL2D4cjAbrZnijPl97aDP5EZQXtrmT2OcCfdMsFMYLld2RGV
A7m9MgYqRKKW8QbOubBBZ36Pr7NYL+zSHsN1BWuhfstWN3qtUchSLar+E2mI
RB0/Z3TKWUYSe2B1B9fa9/it4EX0juIlFJeMczSv7a16NKqW9zXpplMY46Gf
NZhHLbWO5fw98bL3Xri6XIoy7grSkQ6KJrrYUCvxApesS3wCGlkD+xYNyTZg
p8QdJxlI4NZJ2md5KOA0nDZCXelKLgvqPYB9Bt9fvmTdKs+7X6kbrn+lfnSM
lrFSn/x910TBnpPvvCC/SR2s8VQwe+eWeaZqLr8Vo5SqWn3yaNSrLA6DfWD2
0/rQz5a14jvJ5SLKfaEeNfIU5TDT62z0DrMqL7639kr9yPU1+/d5jI4glQUe
rkA20rlT7qjX6GEseqO95P+SScHydXRiTPYfS+lqRA==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
MrsnrqxG1pJd8qOfq5H7mOETQfrfaBibu9ukHSVeNUonsl9V42Or9ePWZpeK
tFdKFHtu3d/FSB+re0uWUIV+lr2hwvBQYK7Y9+He+gqUiN76HMtPBO7KlASt
T+Gk5r+4/6kcOQqmeM9bMXBuG7+rdStCReCcJceby9HP3lYYWkl8quPpDK1O
+Snrz04n+clmJR2IJPEopqzyqfSsQObPnvxe8v4RHjFmCP5t90kB1tqnQztM
7mBo0HaL4B45juCoe4K1yfCSSKT2fyeqIzrDPdXTq7MuD5mMHwt9lHJkt+jd
cPWIAsa0ljNafNDm/r1mnLsKOaFfLPrPK9D8qLO7/GMuWHez3l0mcVh/Wxs3
mHMBRuZndxQvMmVW0WheGnPh4ot3K9Fv99D8be9aUeHy6upwvxwGSoL/TuTV
Q5ql+wuJoQmD93mFoevyNygK3yBsYj9GzZ7hn5KJP+wuLn2VRHgss162++au
Z6g645I9cDkedOhTz2njUzs57YwzLkVOck/UGbFidI6NfL9ILL0rnfKygSW8
VHBki2bUp7I3NVv8Q3xiaJ57+9uoVqD/4SY/KeoDVp1y1WLie+j3/uFcJP5L
9BN/8SJyL5hQ+qX6VCH+D2L5OlM=
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fROB/B0NwhEBIzOJshkJo
fMcPhEFYREFUhEM625Ehh8dfR0BEpHUkpPEfp/Zvp3I0RMdSLEMMxMQSpHQs
xMZCpHAcxEUhFMYvx0NapEN8JEBCJMJPp8Y/SIwfTu4kSIpkSObvTupvTuLk
SOwU+McpkcipkNBfncBpEN9fHM+fnR6fnAEfHdcZEceZkBlZkBUfXADZkB25
ENs5EMvvHdM5EcPvHN25kQdvHc15kQ/5EdVvHMWvHdkFEcmvHNFFUBRVUQ3F
UBxVEMElUBKlUBovHd4vHM5lUBbPHdblUB4VEcYVENrPHMpPHdKVEMJPXBmP
HdwBCOZHpqujBhYArgmrFmrjoaU6qIsHnoN6+KsGaIj7ro97/qO7boQZ+K1A
NEYTNMUdT0AzNEdHdEIL/FJbtENL/NRtt8Itt8ZNt8EN/9B1t8c1f1cHfNNV
f1UQvuiKx6MzPqsLPqkrPqobuqMHeuKyR+GSe6E3+uCiP+iC3+u8++Kc+6E/
BmAg3ums32oQ3mgwhuCMh+K0h+OUh+GkX2sERuKEX+m4X+qYR2MMXmgsnmsc
numon+qIn2giHmsSJmMKpmIapuOwH+mQH+qgH+iA72u/Z2KfZ2GvZ2OP72ku
5mG372o+7miXb2unb2kRFmOHb2q7b2ibr2s5VuA5XmAlVmEt1mGrV2OLr2kN
rmqzr2iT1+MmbmEDNmITLus8LmkztmArtmEv9mGjt2MndmEHLmqDL2i9z2ud
d2Ot92CNz2k/DmC1z+ogzugsTusQDuMIjuI4TuAYTmmVT2qlT+gkTuE0zmCF
j2u5j2mZj2qpj+gcDmuJD+kCLuISDuoKruIyDmix92uRr+EG9mmhr2OB92q+
9+g27uApnmGed2uu7+Ie7uMBHmKOd+kRdmq2d+gxtusJtmmWt2qmt2iGN+sl
XuELNuk1NuoN3mK6N+gd1muaP+M91ukDPmKqP2GK12qy12iSV2uiv2KCv2G8
V+knfqE5V+o3/mCcm/AvhDqsSwPMwqwkgzExkzA4QzAao3OsQzIKVygUQzMM
w3KMlyscw3O0l2mUI3CkIzEil2qElygyF2u4FykqF2qYFygGYzIO5ysW52mo
52qIY3Ow5ygu43GQ43Og/2ECJuQAz1Z/J2I/z1Jfz1RSJmMfz1BvJ2cmTlcK
pmQqpmYvT1NPT1UapmU6pmcGZmQPT1F3T1Y3T1JXT1QXZ2ZnT1A2Zmd5VmAO
5mSQizMXx6uTizI38zAvx6mjxyofxyg/R6sAC7KDR6kQR6q9C7MIR6idh6ut
i7GNh6m1S7Akh6oUh6g0B6sMy7KVB6mly7GFB6oiB6gqq7G5K7GZK7OpqzCA
/dXE/dTYfVWdNViTfRToWmzk3qrNXmronqrHHmrg7qrPbmrAhqzvrmrEQNZz
Y9Z1F9VxZzVlkGq7GWu5k1qwJVuxo9qyHWu6NWu4Dau7g9qzvcaynTqwI6u5
E0ezrYLYmV3YlQM5iFXdjQHuzipuo8ruwUruyV7szYpurT7sywrux/IewP5s
pXJuqbJuoTIezNIeziEcylJurpIexhJuphFsquIeyWIexaJuoiIew8JurEIe
x/GcwImcxBkMVEFPZgFPYX430lRO43Q2VD43UF7XVx7PZG7X0xzO5Vqu4zzW
1ULWUS7PZ04vYA7XVnYv4mIuYTYv5XKu4DLWUlbX1ErWUBZX1ypW02pWVWav
YSYHaD2raBMrawMrKaM3MoMrKr0r6F9Gr2zH
           "], "LeafValues" -> CompressedData["
1:eJxdUEkOwjAMbDO2xJEv8AuuHLkW8YBWlIpLkVokxLv4II6XNCKp7cbLZCaH
4dndU9M0605c179Py9J/Lns5XOf1Mc3j7Ty/xmlcjkMrya84ZmIizqZBvC5W
U89+1gZmC5b420yJE0FKCQSIKZb8sOElgyAP8HTBdBTYtfEZg6BDeQw+FJR5
QzGOmyzXwEVIHqaiVxZCbqU8oAt4DlAxEJXIiZSL4DYXdNiBTLZpj+vrxyxE
q8e1XoCCbZUH+StY8w/CvBRX
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1uE0EMhV1IUGmaqC1coLCCRoGAhFrEBWR2J/sz+yf1tjxBkVq4Aikg
Id6CR+7no8ryjMc+PuOxZ/Xt1/XdIzP7fchyffM37fc3/74+5XD188/t99v9
py8/Djj9Z2ks2Fvb2omVSGcD0toZmuyJ1ZahH0HVaIeMWEtyGuIZqNzWWD1r
TeZE9g62iD3gHbHmdqRoYZX2nrwlawK3gsk9PbHMFuSWYBJ7Ijensi2xmkhD
JNqMfSeuDkTAs0VH5Tn2Mdxr9tFekBXtjZj8js7e4fG7jznVREYqa8SfQJZw
F1TkHZgSH5EOzwRNZEX5Avoa6Tg9t3P16RkMR+J2XK0O9jol7IW8jqzQRrVU
6EssxzXCZ6A2vHcDc8Tnb2r1uqlufqV3drql4E2BdUHmiH4AGcAtNaNcNVXI
OZp0a6RG78Bary3ss+aU2wW+Ci3xDWRXWAM1DPJ7J/3GSv3q1I9K9Q12ClOu
l7Sa4RyG0Q7E4L8oR3xePRMJVDql5lr4GboDs2FCrVgXDxMtmIx3yWfkrw10
ZbBL9TTyG0v1MwnhGSW574mdajK92H2ODb2tYWjw+p84fviRPVXk2BHGVtGA
DNKtphyI92LKsCJ6D1ZTX/w=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
C1CcT+hvRELypmXhbo3ofzA4hm4=
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rbutq2bdu2bdu7r+8nmUwSN+lYpUUQAF1C
/UOVxj0KBwQ07lU19L8o3aFr85bNAzLnaPX/DyTwv4MgKIIhOMZxPEMgJEqj
DEIhNBIiEcIgLOxyDofwiIuyjoAyjonSjohSjoSSjowoiIpokGPgr6Pjj0v4
t4v7l4v5p2Phh2Pju+Pgm4s6HuIjAYr4qwv7iws5MZIgL/IhKZIhM7IgOVLg
s1MhJQr6kwv4o/M7NdLgg9PivfM5HfI6PfL4nTMgI3L7rTPhjXM5K7LhtXMj
O3I6J3L4lXPgpbM7F7L5hbP6ufPgmbP4qTM7PwrgiQuiEDL5sTO6MIqgKDL4
kdP7oYuhOErggdO5JNK6FNL4vlO7LMrhnnvzrssjHdOzAiqiEiojJEOxCqri
GFK5GqqjBVqiBmrijlP6tmuhIVL4lmujDpK7LurhppO5PhrghpP6upO4ERrj
mpvgqpvjipuiGRL7shP5khP6olvhgjvhvFujDRK4LdrhnNujA+L7rOO5I+L6
jOO4MwLQBbHdDd1x2l1xyrF80j0wEIPQEzHdC71xwn1w3P3QFzF8zNHdH9E8
AFF91FE8GJF9FJE8BEMxDMNxxBE9AiNx2BE8CuE9DdMxGmMwFuNwyOE8HhNw
0FNwwIGYjLCeiDDe70nY59De61CeipDe4xCegZk4guCehdnYh/2Yg7nYimCe
h6CejwXY7SBeCHoL4EWwdnkxlkBaimVYjr9aiz9agd9aiV9ahdXY6TXY4Z/a
7h9ah/XYgO/a5o3Y6m/ahK/ajC/a4s/a7E/aho/ajg/a5B3YiV3Y6Pfa4N3Y
g3da771Y57c6gDc6jNda64NY40NY7Vda5Zda6Rda4eda7uM4gZM4hdMQjDM4
i994pnM4j1u4jWW+gCu4iot4qqW+hCW+jMV+omt4rOt4pEV+qBu4iYV+oAW+
r/m+pzu4i3m+hw/4iPt4gIe4q7l+h0d4jCe4ozm+rae4pWd4jhe4qVe4oZe4
rtm+pll+jTe4qre4opm+rPe4pBm+qOm+oE/4jC84r+84p684q284o2k+ran+
gSn+iV84pck+qUn+g784oYk+LpAMzhAMwmMK9FEF5RFNcDCO92GN8yGN9UGF
5gHF4n6F4T6FZTiGZwTG4F5F5B6N8W5F4i6NdmRGYVSOcjSO9E5F5w6N8HYN
d0wO8zbFZhwOdVwO8VbFY3wm4Bal4mYlZCImZhIO9iYl5UYl4wYN8nol5zql
4FoNdEoO8Bql5mr1dxr2c1r29SplYEb2cRdmYmbWY31mYVb2dn5m40r1cj5m
5wrl4HL1dE72cC52d252cx7m5TJ19VJ18RIVYEEWYmFWZCUWYVGWZwUWY3GW
YmkGeLFKcJFKcqE6e4HKcL46eZ46uizLca46eI7ae7baeZYqswrrcqaqcoZq
c7qqcZqqswbbeqpqcorauBZbe7JauQ5bepJaeKIaMFAt2YoNOUHN3YjN3JhN
OF5NOU7NOFbNOUZN3YJNPFqN3ZptOUqN3IYNPVLt2J4dOEIN3JkdOVydOEz1
PVQBHKJ6Hqyu7MbuHKS67sUeHKg67snaHqBa7q8+7Mt+7M9BHMyaHsAa7qeB
7Kvq7qMhHMqx7K1h7KVqHsXh7KkRHMmq7qEq7q7RHMPK7qZK7qqK7qIJDFAF
d1YgO6m8O+o/tsko6Q==
           "], "LeafValues" -> CompressedData["
1:eJxNkEEOgkAMRWH6m7jkCt7CrUu3GA8AcSRuMAET4zG8sZ22dJhAaZnfP69z
HF/9IzVNsx4k9MPnvCzD99pJcZvX5zTn+2V+5ykvp7GVnz8JYMhisCwCeSqv
ZKXSQj9aEmuDRpURbB/RZqXpXATYYyKAxIrsPEJKbAqOfTMokWAupcdUZDKE
ocFxncOhA2VzcPMK5OQcE6k/sZ8e/Hv6eh8IQEqkI5V0z8ccg3Alqch+lZta
Qsv0B+0FE7g=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwdkMtKA0EQRe+IiJqoIQExmE0wunHhY5GemfT0pOcFbuMXRIi6UhgF8QP9
L083RdfU495bNTV/+dy87kn6OsRttj++77e/z0ckTx/fu7dd/7B8T8j+eFdq
lcpihWbEpTpVOiMaUyu1kpdTRrchT7UmMmACp1ENbsS3IHNkBR0fcS2oE16N
eViZhqjlse50SfWWZ7AJ9X0do9LqBmwOu8NKdB51B9rTa/CBn7NRjto1vAT8
mrzSgq8FsUCvjCrTiPF4i26NXkbnFLShGrYassWKWsaEC1Dn4CbMMcw3msM2
TPIwZ1wpgzGOajXzUh0wseN/B/QqdBy+AR/0cvTChRwKNnoDOqESuiO64a7h
ko6NLFGle/0DF0QzfA==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
rVMG/wEfZDrN
           "], "Children" -> CompressedData["
1:eJwdk1V0FgQARu8BpERFEBAbVEBSkJIevdEb3RssqA3+DcZoRneP7u7uLqVU
GpUuBTtBQi/Dh/udc8/3fPNExIVGpQHiM6ZOaHhiUCAQnhSWKVWCYxMioyMD
xUvHPP+PppLmf9KSjheYw1zSk4EWtCQjmWjAfDPzIll4CZ3nf871ZeZYmCK8
QlZeJRsFmW12XuMDPiQHOXmX98jF67zF2/zrLHPzBk99kyfO9LEzfOR03yHF
f5zmQ6eah7w8cIp/+z5/Odk/neQf5iM/E/3dAvzmR/zqBH+xED873p8c548W
pRgfU5wS/GBtPqEk9x1rKUpzz6qUoSxVGOOnlKMilfje8nznaO9agTuO8rYj
rcwIbzncIIZ506FWY4jVSfaGNbhuTWox2GsOMpiBhjDAq9bhinWpR3/r08/L
9rUhjQilj81JMozeNqYJTUn0W5vxjb382p5eMsFWtGYgg2hDvO0Jpy0B29HD
i3Y3gg5csBsdieS8nYkiznNGc9ZYzxhDJ7p52q52oYtd6exXdjKWGOPoTg8C
9CXaL43nC/uQQJQ9ibQXiZyyNyft6AmTOG4HjxlhP8LtzwA+t72f2c7BtHUo
w0imjUcdwhFbe9hWDmcEIxnFIWczmjEctKVjGccsWnjA8UykufudwD6buddJ
TGYKe5zKdGYwjabuNoVdNnEmjd1pmDsMdbuN3GZD5zGf7exgAQtZwUq2uohl
LGeLi1nCUjbbwE3Wd6P13GBd17uKdW5lNWtYSx3XsZ61hriBjWwh2DXWdrWb
WOVmVlrLFdZ0GzVcbnV3Us1lVnUXu9lDkHvZx1KruJ8DLLGyBzmU2kAlF1vR
w1RwkUdYaHkXWM5nFMOUlQ==
           "], "LeafValues" -> 
          RawArray["UnsignedInteger8",{4, 5, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 5, 
            5, 4, 5, 5, 4, 4, 4, 5, 5, 5, 5, 5, 4, 5, 4, 4, 4, 5, 5, 4, 5, 4, 
            4, 4, 4, 5, 4, 4, 5, 4, 4, 3, 4, 5, 4, 4, 5, 4, 5, 5, 5, 4, 5, 5, 
            5, 4, 4, 3, 4, 4, 5, 4, 4, 4, 3, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 4, 
            4, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 4, 5, 4, 3, 3, 4, 4, 4, 4, 4, 5, 
            5, 4, 4, 4, 4, 4, 4, 5, 3, 4, 4, 4, 5, 4, 4, 4, 5, 3, 5, 4, 5, 3, 
            4, 4, 4, 5, 4, 4, 4, 4, 5, 5, 4, 5, 4, 5, 5, 5, 4, 5, 4, 4, 5, 4, 
            2, 4, 4, 3, 4, 3, 5, 5, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 5, 4, 
            4, 3, 5, 5, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 3, 3, 5, 4, 5, 4, 4, 
            4, 4, 3, 4, 4, 4, 4, 4, 5}], "RootIndex" -> 1, "NominalDimension" -> 
          0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkstLw0AQxqe2Fmtr8HGpIj6I1ougPWhfabJJdgNe69VLhaonhSqI/72/
mYZlNrPffPPO5evX4m1LRL53uBbL33y9Xv49d3g8ff6s3lfr4eNHg9cLV1cS
8TKTkclcAq+AHiSTSMYykBy8hSUXJ6Ucc09AYmztGlf+AHYTmclUUumBprAd
uDM9lnM5RWvAHlrOXSwZyIQzJZLDEoGUxA14OOlLgaYe6llKB6wyhuc7QCIQ
D3IPP+Wr1V9xq9XXJ1glGViJ5o2vonEqs+Tk9xa5spgPVKBoAao1JNin1ved
5Q6c2KoPdFoygz42LxfMZZMrmJTWRSF7cmR4WkfVGCWaZgtyAzpimre2h7n5
T62yplXUB2tbtZkc8nbWeZeMKVPT7Inl69u8A3hMnVpJgVTImBMRs8CeMMXY
+qrYSCbbckbWBNbA6lCGA8nJnuDXAp0QuYd/qCfqZJ+j+SL8JvA22SLbpLO/
YdO/su+QxOo4gDOzTsa2I08lup3rmunNZ0wMvWOYGscR98Q2r3uYE6Mi3z8U
+1PC
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
4PyV6/fdzWLQ8WT/qDpShv8Dnm6SXQ==
           "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Zt2+6rbfvV2tq2bdu2bdu279n2J5lMEjfuENA8CNA5
1F8ENOpeODCwUc8qof9G6fZdmrVoFpg5R8t/v67BPwchKMEIjlTdQhCSwxwh
FKGZzBTCEJYMZCQc4XGl5I8iEJko/FZEIlFZv1RJUYnGTyUlOjFISCJ+KCbf
FYdYVNQ3xearKigu8fii+HxWeX1SAj6qnBJTVkkoow8qrfcqpWSU1Dsl561S
8EYllIriSk0xpSEt6Siq10rPKxXRSxXWC2UiH/nJTBayUkjPlYNnysZTZeeJ
CionuchNAT1WXvKQX4+UTw+VVw9UgGIUpyCFKEwe3VduFSGX7qkod5VTJSjJ
HeVQKbJrMNlUmjKUpRy3NZDyZNV/9KMCFalEFjUks26pMjcVQBWqckPVuK5M
qk4NrqkmdcmoWtTmqupwRRl0WelVj/pcUgMuKp0uKK0a0ZgmNOW80qgZzTmn
1GpBKrWiNS1JqbNKoTNqQyeSqy3taE8ynVZSdaAjp5REJ5VYgSRSZ7pwQl3p
SUIdVzeOqTs9SKCjiq8j6kVv4umw+tCXuDqkOOpPbB1ULA0gpg4ohvZrEPsU
XUMYyjCGs1cTGUE0jWI0ezSS3YqqMUTRLkXWWMYxnkiaQETtVATtUHht1yS2
KZymMo0FLGQ6M5jNHLYqrLZoJps1i00Ko42aywaF1nrNYz6htE4htYjFHOAg
S1jKWoXQMpazgY2sILjWKJhWsorVBNVqBdEaTGtZxyqhlVrPCsmXaxPLtJ/N
bGEr7kv1x7fx27fzy3ewk13sZol++h5++GLtZZG++z6++UJ99QX64vP12Q/x
yefpox/lGEEsqB3ng9/lHic4ySlOM1fv/Qxnuc07P8d5bvDWL/DGL/La5+iV
X+Iys/XSr/DCZ+kqM3WN6zz3GXrmN3nqt3ji0/XY7/DIp+mh3+cBzgN/yCO+
84PHPGGqPvOUZ0zRfX/OPX/JK15w1yfrjr/mDZP0gbe8Y6Ju+wS9Z7xu+Tjd
9LH6yCdu+Bhd99H6wleu+Teu+ihd8Z/8YqQu+28u+Qhd9OH6wzBd8KES2Hk3
O+dDdNaDWXALa+EshJ3xwTrtIS2UhbZTPkgnPYyd8IE67uEtgqWxtBbRIlkC
O+YDFNn6K5pFsaMe1Y54Px326BbDYlos+0+xra8OeR8d9DgW13rrgPdSPOup
+NZD+z2h7fNElti6K4kltWTWTXs9ue3xrtrtKWyXd1FK66xUFqjU1kk7PZ2l
t8yWxTLYDu+o7d5BGa29Mlk7bfOsls2q2VZvq+xW1spZDstpuSy3lbEt3kZ5
LK/ls9ba7K2U3wpYQWupTd5ChaywFbHm2ujNtMGbqqg1UTErbiWssUpaI633
hiplDVTa6mud19Nar6vyVkeVrIKt8dqqaLW02ivbKg+wKlZTK72qrfAaWu7V
tcyrqYbVtFpW2+pYXVvqVbXEq2ixB2iR/w+cysEO
           "], "LeafValues" -> CompressedData["
1:eJxFUMsOAiEMRDpNPPoL/oVXj17XePSwG3HjBRPWxPj3ltICTYa+ph04Lu/p
GUMI215gmr/nUubf9SDBLW+vNafHJX/Smspp2UnyLsAAgwXlsNw1oOa0gpkm
YH3aCUMonY1eMxFEqAaQ1lqzLbLBxOirlehsGIUb3fIsPglGDciFDDBJMIar
xigAfW5jR4oilAVVq4Tc38r+XFfQpKuQsdKHjrJ/pFL+uagSog==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1qFEEQhSsawQ2bYdWbgIEQhqwXXujeOLPz3zPdDblNniCBqFcKqyA+
gy/tVydLUd1d1adP/fX148+7ry/M7NdrlruHP+FwePh7v8K4/fH76dvTYffl
+wnWP5bOJqtttr311iKdLfbJMnJqJWvCn+wS70urWGtrLICK9spOsEc7Q7cg
Z9uA/IAG9B3WAN/AbQBdoyX2xPsKmeGtieE8PXwjnmfmCzhmK8BmXidFbThN
eBpk5rxFIvcNWnLfs09kubc1HCv2Bu8AZmU7XiRkLVwk0kjkDG60z6o0wrwQ
Z5JE8B4zoR5lAO1cWVrhj/B7TzynJMReNfbkPnO6QCvilborFcM7mZV9sDes
50Tfqf4s5i2+lpuG04JkZdjBUiABZAfDc2aeRaFZ1LLd8poKuj6QRYClA9WT
4w5vr477O59CYL9CF83p/XG6UXzZrrFbrIoq1sfc5+NsBpCJHHvqzdz7NN9y
N6krI7brJTxrTb3iPCrSR/2bkXdneD2PQawTGkFH9d0nM+gn+Dw2dqO+Dkwp
6Se0vEvCtuplgx006Sv9KxefWqH/4F2cVFlPHY4M7BVsjXqw1Uz8B43q0KLO
bfBE+w9/Yl9/
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
f41kYcc=
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42qbV9u2bdu2bZu7r+8nmUwSN+lYpUUQAF1C
/UOVxj0KBwQ07lU19L8o3aFr85bNAzLnaPX/DyTwv4MgKIIhOD7hM0IgJD6i
lEMhNCIjCuwwCItwkEs6PEr4r4s7Aoo5Ior6jyPht4s4KqJhCZYiOgo7D/Ii
BmIiFgo5NuLglws6LuIhG7Ljp+MjARLihws4ERIjE/I7CZIiI/I5GZLjuzMg
BfL6m/M4JXI7FVLjq9Pgi3M5LXL6s9Phk9Pjo3P4g7P7vbM5M7LgnbM6K7L4
rTP7jTM5BzL6tXPilXMhNzL4pdM7H/LjhRejAApiPhbguQthHtK5MNK6CIqi
GIqjCZqiBEqiMdK4FEqjEVK7DMqiFlL5mVO6HFK4PCqgIpK7EpL5qZO6Mqrg
iZO4KqqhOhL7sWuiBhL5kRP6oRO4NuqgLuK7HurjgeO5AeK6IeL4vmP7nmP5
rmP6jmO4GZpjBmaiBaK7G7qjJVqhNdqgMwLQFu1w2x1xy+1x09F8wx1w3VHd
CVF8zZHdBZF81V1xxRF92RHcAz0xGVPQC70xFMNwyeHdB33RD+F80QPQH2F9
wWE8EINw3oNxzqF91kNwxqE8HCE9FiE8AsE9EqMwGsEciDE47aA+5SA+aXoc
xuOE4QmwJmISjls65r866qmYjj+aht864l867J865Fk46Dk44NnY7x+ai+/a
52/a66/a44VYhC/a7c/a5U/a6Y9ahuW4jQ9agZW4jCtYhdU4imNYg7XY4SNY
h/XYgZ3YgPfa7i3YiE3Y5nfa6s3Y4rfa7K3Yhu3Y5Dfa6NfahVfajT3Y4Jfa
ixc6gIPYh+faj2da76c6hCda58da68NY40da7Yc6jge6gIs4gZM4hfs6j3s6
jbta5TNY6bNY4XNY7jta5tta6ktY4lta7Ju6ihta5Fu4huta6Ou4gWta4JuY
76ua5yu6g7uY63t4g7e4jweY44d4jheY7Ud4jCd4ist6hkua5Yua6Qt6ifN6
hXOa4bN6jTOa7tN6h/f4gFOa5pOa6hOa4uOa7GP6gq9Iw7T8hu8Ix/D8gZ8I
wqP6hd+YZPAP/mKij0gwJviwxvuQxvmgyAMa6/0Kyn0KxuAMwZAc470KdCiO
dliG5h6F4W6N8i6N9E5FYETGZCxGYmSOcAxG4Q5F43YNd1QO8zYNdXQO8VYN
9hbFZhwO8mbFZTym5ibFZwIOdEIO8Eb19wYlYmL2cxIm5Xr19Tol41olZwr2
8Rr1dkqm4mr18ir19EqlY3qWZhlmYEYWZwn2cCYW4gplZhZ2d1Z283JlY3bm
4DLl5lLlZC529RJ18WLl4SIFOC/zMT8LcKE6uyA7eYE6er4Kc546uAjbuyjb
uRjbeq7aeI5KcrZauxRbeZbKcqaqswZbuhzLswJbeIYqcroqsTKbuwqbeZqq
cqqauhqbeIpqshaHcwRrsw6HcrLqsh4be5Lqc6IGc4IasCEbuREHchAbswmb
shkberwaeJyac6xasCXruxXbswPruTXbsC3reozaMVB1PFq1PUod2Ym13Jld
2Y0B7MKaHqkaHqHqHq7uHKYe7MleHKoBHKLe7MO+HKx+HKRqHqj+HKCq7q8q
7qfK7qtK7qMh7K2K7qVh7KkK7qHyHsnR7K5yHsWy7qYyDmRpd9V/n7ce7g==

           "], "LeafValues" -> CompressedData["
1:eJxNUDsOwjAMbes8ibFX4BasjKxFHKAVpWIJUoqEuAOHxt+0dmTHsV/87OP0
Gh5d0zTrgc0wfs6ljN9rz8Etr88lz/dLfs/LXE5Ty48/NkiiIjAnEewNKu48
m2DJqILikEhNp6eqCFmFNbEbKLAKt68iVztIRDW1I6A4SpWi14RNflIAVNra
LWaBN4d9z0TNd8QzCHkikkKSqyghpthuMKCGTol8ZftdIuahjRu22XkjYv9w
FhOF
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kstuE0EQRcskIGKMldhZRCQiiRyHRRZ2WDAznvG8uqcltuELghRgFSSD
FOVv+FROXYRG3VOPW7ceXZdff959e2Fmv15z3d0/dbvd/fOXA5TPj78fvj/s
bj/9GKH94apsw6ltj5Mh59ZatJlNbLDCDm1rDdIWf0SaIpX8G1AnfCOQUfFu
b0GWSMlW8m1kq9CTXdiZzcG2sOYWQK2RPKoHF/jOYcltAXdnx+i9HRF7huQs
ObaBCiv7qArewxmwuPSGyJLT4nNrAy6DfQZnByZwt6Ai+Qq0QrrXsg/vFHzN
KeH26tayu/eAGjp8Ed+YfyV9A6YnKpLrnHuFp7MrZfIJvLOX3AnPlWa2wtMQ
0ava//V0sPhkO/tAjxMiAzEFFp9lVN9v6aImrrGlKi3E1MrmHfQglmAX3HNF
DHZNpQNYn+saXw5HCf8Jdd+CyGDwF8r0Uo6b47mhkwSnWz1HhZSUy7NN4Rpz
luoraZKNOkggR2yJz35MzKAeI5ak2nNy1EwkSh401WviD8nnPp+YV5rsFOlC
UQt4fSs3erNWXs/1Sjuxxe5sp5pS1N60ev99zbhiU4M2yiubE9vrVS5hjsyh
184F4v/tZdDkM217JsYafabeAjXmQi31aknfWBP3SUyo6y8rZmFf
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1:eJw9Vns8020bX0rW04mOU8oc0srjiUrodI3qaZFDilZKS0QHNToN9TZPikqM
HJbQOmmFIqeJum1Om6F1kspphIVQT2qKvLf3827/7PfZ/bt/1/d7Xdf3/t6X
gddRV58xBAKBh39aXmkyPhFLgF0ZXW7sEwmM5cJc29xOUBhCu6DnBXBI3d3V
SflAjdl3bG9UF+pPWbmxcdcHxCtLJD0VFCOXptzQfQuKoP7lzoGYoQ7QNlBW
/dtUjLKeT9kUti8TaOdXzO8+mQSMk+cqLDyJVK6Oo+BcXg2iNfqbaowTQEt1
vB/lURuI07b09WySIdbbtecnrn4ElM3fl/25vQ0IIceKbS8+A7/wh08WhcuB
dZqRUm/1FjhnfINupt4FyriL7yyuvAbF058Jsy9KkHjWbsk6z1fgN5t90BY/
uZ5Vd9/4R4Ig0I5VXvoQ6LnP/7QalwbkjLSilIF8IB+PL3SdlQXWU3SHJiZL
UYlOn1lSZxLwqXf3PMX5l5iNCbC37wBKY6YknydHEY/CC6T+CmSeHvtFT6cN
9ec5dMS380C2x+CDMek9aF8L3ZZrVoXEUURZgjQbyIfC163SuwPkRJ7WljHZ
wBef8Ag89A7YD2qC2r73oKx9Jqft1zcjZfiFmOVrqhHro6dGar0YZZWZZNae
/giqOIxsh0u5F0ugZQ3Fds9VGTCJJ3uO765EzKXBU62ULYg7/Y9bkTelYF7s
b/VdLgOa/ctbn9vSgeppNmgQ7AXaFR2ztRqEwMn5QY/D+/xWTXhpiPkyh4ZH
UjH/lg8z7fXdqpD5uI/CqnnlUDLl2urLB54hPvnr+SgtEWp5aeVppMsHBXul
3/WuIkTP4httfioDqvPG4hvVOcDjLI19g/uiqHiT9f1VEwja7qQkc7KB6PjY
LsSxFLEsabvmbMpT8+en34k3clYgVV782ZOe9DWXoIhi/oNWXBeC5Hzf/c5G
4BLHJtpjHFU8xeooH9OkGsQSVT/ZRJIhiueq8YY4Dk0waB3XKQSiR8eFK/nl
QDebu7vZ8IW6D5xizpzew+1A+nEvYC5FhMRm50yM+zSp9IK5Dds0U9X7aBUX
nbv0yyFC16M5dTTPcRYao3xo/HM1Byz/gyjh13MTvnBBhcdfYFDq3VmLIgpz
3E2MSxE3tCrol7wWibda+W7A/DiZbspRnnzBzPQVWuVqvanq6bf4eoZV/0Ng
LTP12tn0BcztL+hkj5QgWvxja/fgBqCbk7lVWG/Ubwveje3Ih9XUxbRs8lgq
rSwn9ZdNBXDmUl0/W8sRHdJ7d7iKkMvsjBmxuL9ik2R93+o2RC+YYtQ0TY4I
207NPy8rQQSa/IoEx2M0jbvu7BYPHNg5Jlr/JRDuG1mZJqQB9cJXC+uT7xC3
MSs/ze4ZlPh6mf7x4w1w4np5j7FO/G4erzXA9VZoP1gnb5MDdYWT1yWMp9IX
f4wyoRWvW9Mto6e+vgf1H1/4HIqrQCydJfIkt5dA/emNGN64H61jV391aEPs
wboDg1gv1kKXxCm7S0D214iN83QB6q+oHhZhPO3CvXbpmlmgCGFrXMX9EDwK
Gx7VjfJq4CEy1iv1HC/doa8M+ksTY2qwbpVPXg2FYz6kaQf8aJ3FiITG/3Nr
fxSwKEtmM+vKkfhRcnH0ompE1eMOt+19APUhgRU5F0Xq/hP8Kn54Z9YDaXPq
TR9cPx7D4HM4ZANPvma5N/6vuKFkEoPlwA43Tr6sVQ+0F3opOaH96nOq0qnf
WrnPetNSFPEx5Nz0CxJE7Zp1mWIZrY6nNDp82v+RGMncLQwPhMeq8f3m3687
w5Egcp1lA4VUBwqi64Opqy8BcVNe8mi+vPu6JdaDTYhtGyq3w/7G6y4Ppksw
DixMOflbCeSiCP2E+0IkCzX9+6jefWAY9X/+iuubtZUf12gbC7ThS/No+LuI
5vv+Gbffo5YdQS1f8Hs/08aOSxsKwSWgkrbPRQyMvmituIEEYFpUTo3EebZM
7jcKqSxExMhP64wbRIgVMUFzvF0sEPZ+cC4WNqJ6XuLRDt+bqISz5PG8wTdA
4hoXTPokUfsWe9vin7VGIqTC0V60RNn/bzlY2xhY5JqLgDjPK/a99mekLH5f
cEGjGjHXadEf6AiBdf3Lbtbpq0Apiz2kOfMNonVfSdTDuErHKG9e9ytEy+id
uLdNhHiF0g/B7A9AD+61Oe1RA8q18c9tTuN+6ds0OeD6KE3CRCuwT5LDosud
sC5UPLIMD+4wMMvBfs9Nab80ANwNT4pu255Xr6v8SqCxaKLl52wgjf1mOWmy
EDGcqfQp41qRONu6x967WK3T+utx5OLteJ2zwmmvYxVqcT84sXZhHbDrhtxH
9a46J6znMUYjxZXAswky2473cQNam6VlQpAVvPcYGElGWUae0r+L8iBrjMeS
ZT+KgRtAeWH4uR2JnTrjRn4IwWXs0IFVlUIUYffr+7WjnSAW9w82Yr8jpSc5
Ju3Bfu2u60CslyKyxrctdaFPgcni/7WzV44YhAtHj54shRKfzZ0p3u8RhZv8
bXRdlWeJXvjVjKE2tY45Pzozz60pBOpXyeUvQbXIGnISRn1FHCu5koBxBfcC
Qz3w97zjC/sarhQgVv/hv1Zi/4jgxUf3Z78Dv0v7V47ik6d1fDv7ZxVSvqc2
/8+XP/xzBKsKWV+bN6ca+5HyxsWGM7hvBGMbmqzsMtCdmAbe7RVA2+CoY8XH
PiR5PGGGdxtS9YXMHIyNVmLdrQ9cHpFXgZShXZvLvhWofVLAZIrtDdOA0xjk
thHrXdASKzGJEiIe3DUMc3qNtEv3jJNHSpDy7aLMb5gnVex7Km/qLfXTfIve
scDxtxBtuDffhvlR3V/aEbfKK5Zi8LMLKTNKakXagiPh7ovxHGAk+mf0PFI4
Y32uSflIFYepwZgTpS9CilIqfcfvVuQy1ef+KZxnf7PmpEWROJ+4vJmrt3ag
+v27fnvh+UrlA+ZeNQeUgWKkfB1sVmwiBO7xpUUUvJ+gm6h0/CVDdNuBu966
UsQ/sdliNeZHn/nZYk1YNqjyV81Xqv7JDmasyl/cDkqO65El8ySI8zZQf30a
5mN2knET32ec4Sdpc9nYhyN3Px3VKfnj0HqysxQRXRMjiJPSQfB18MTo3KPi
p52+IUpgX4uUxKGKSFwPZogU6ZwWAHfXsWdFiyVgrn8u9xj3HVC2hQz7ggL4
uhY+Bi2NiD/52O83aQVgzZgy/+QmPD/cNfM7i+czcoyzydIzX1CLj0bu96Mv
wbzoad+d7c8R/fbjDa7u7UixTLNFOaEIqOCw8YQ/1vdzsk3k/nsgW4aS06iv
EeWM715mHNbdveEwp5hKlPWEkZiM7wvVfcvo3j9n+ogc8R+bJvROLkV0y1q2
7hIpqq9/MkceIEJZB1tvmhjchiymfP/o/cURf2/uX/4fxO526Zzh0QRkb+OA
WTnYt9kdXS7YPxQHC41H9djv27HzyKc6EG9ask0rtgpKbtxTLM0vRZyzxg8O
h/CAoO39ZgJNiGgjrr2zBe+B9vVYs5MyU+0r2q/yrVmrpIg0oOE/Ac9HvLQw
xj1cD1mwl0vnS+wj/49L1goIs6rqAnrPFov8rhrU79jj2pl9G6hVzxZMx9+x
N0Z2zcT5ic+nN0/HfBXRIRuJ+0vV+RO3EGJ78JzP/0A6PlMmRtSrTm0pFKwD
mb55ridCXMfumnSM6yLL/pdUIEQuA1IZp7AJqOEea91+tSJln/BFmX0pEl85
YxuD1zkivZ7J2tWI1CQpb07Hc/NGVmohnpfZ9ms0GkJE6vmfcD05bzy3HLms
vDp+6x9iRPg7bmSGuxAphx9Vb79bC6TpC+3dVjSC7MTusoDhStRSJj21p1aM
/MS0zP09mcAZGLRbe6MVZXWfaToehM/vLksHbYoYCe6O+TkNZlAVT0WNtycO
qn2CZ/DoYTJIkUqPCmnG7Ndlz0Fh2shvOS5E9JVtsZDPB9YP+7Nt2K/+C9I+
2ZE=
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fQOB/B0NwhEBIfMYXhEJo
JENy2GEgx0RYhEN4RMBf53FE5HZk5HIk5PQf53AUREU0ZPdvZ3N0xMAvZ/VP
Z3EsZHZsxEFcxMMPZ3J8JMB3Z/Q3J8RX/4NEyOAvTu/ESILPTopPTuePTusU
SIkP/oRUSI333os0SIt33oZ0SI8MyIi3TuM3Tu1MyIye6IUsyIrXbo1syI4A
pHIO5EQJlEQupHQhpHBuJHce5MUrJ3M+5EcBJHVBJPFLJ/YL/+PCSOQiKIpi
SOjnTuDiiO9njudSKI2GiOsyKIvKqIKnjuNyKI8KqIgnju3HjuVKiOlHjuGq
qIYGiO7qiOaHroEHjuqaqIXaiOL7jux7roO6qIe7juT6iOg7juDbDu9bboSb
bowbDucmaIpmCOsWCOPrDsQ1N8dVh3ZLhHIrhPQVh/Blt0FbtMMlt8dFd0QH
BPcFB3MnBKEzuqA76PPuinOGz7obztjqAem0/+qUe+Okt6IP+qIf+mM9NuCE
/2gABmIQfmswhuC4f+mYh+Kof2oYhmMERmIu5mEURmMKpmIMxuKIx+Owf2gc
vuuQv2kCvuqgJ2ISvmgyPuuAP2kapmMOPmq/Z2CfZ2KvP2gW3muPZ2O332mX
32o+FmCnl2OHF2K732gRFmMJXmsplmGbX2mrX2qLX2gFVmIVVmOzn2sNnmkd
nmqT12Kjn2iDH2sjHmm9N2GdH2ozHmgL7mut72mN72o7dmC1d2KVd2Old2GF
72i592CZb2sf9uMADuIFbmmpD+E4buowbugIrusormmJj2Gxr+oETuIUTmOR
72Ohz+A8LuAsrugcLmuBL+kiLuoKrmK+L2GeL2OuL+gazusWzmmOr2O2b2CW
b2Kmz+o2zugOTmuG7+IeTmm6T+oBHuIRTugpjusxjukJjmqaj+gZnmOqD2uK
D+klXuE1DuodDugN3mKy92uS9+k9PmCi9+oj9miCd2u8d+krvmEGZ/I7fiAl
U/EnfiE+E/A3dmqcd2is/+AvBAMMzTAcY3K0g3GUtys4t2mkQzAkt2qEQ3G4
t2iYwzIKozIcwzMCI3KoN2uIN2mwI3GQI3OgNyoao3OAY7O/NygGYzIW16uf
16mv1yoO1yguV6uP47G3VykhEzEJV+ofrlBiLlcvL1NPL1VSJmMPL1FypmB3
L1Y3L1JqLlRGZmIapmVXL1A6pmcGzlcXz1Nnz1VmZmFlVmFWZmOQ87OTszMn
5ygHZ6ujZ6mDczE387C98zIfZ6qdZ6itp6sAp6kgC7Ewi7CNp6ooi7G1p6iV
J6s4S7AkS7ECJ6mlS7MMJ6qFJ6gsx6scx6k8x6q5x6giR6sSRynQI1WV1dia
bdjM1dnUrViDNdnEtViHIxTg2mzs4arLemzk+mzoQDZgQzbiMDVmABt4qOq7
Cet5iJqyGet6sOp4kGq7OVtwoFpygGq5v2q6n9qyr2q4E9uxj9qzA6u7tzqy
l6q5p4LYmVXdQ13YlVXcXd3YTd3Zg5Xdk5XcVb3YmxXdhxM4kX3Zj/3ZRRU8
kAPYWeUdpEHspHIezCEcymEczvHsqBHsoLIezTIeydIexVJurzEcy3Fsp5Ju
qxJuo+JurWJupUmczKJuqSKewsKeymlsoelsrkIO1Cw20wI21Ww20RzOZUEH
qIDnMb/nM58bK68b6V/j0EjZ
           "], "LeafValues" -> CompressedData["
1:eJxNUEEOwjAM2+pY4sgX+AVXjlxBPGATY+IypA0J8Rx+Stok3aqtbRzHjXPo
X5dHappm2el26T6nee6+170Gt2l5jtNwP0/vYRzmY98q+NNNSIoIpRz5Eov0
r2aZs8FzxEAHSEStRoBGBJJRoEimQ1mlGhIKpkrXsnddhNEJ4+36GyTrFeLS
4Jrmtv21nuHB89zwHalTKE6026ReWuSjWPOFjf3oywdX20RMyl3A7RjOZBxn
sMrl7B84FRP/
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtks1uE0EQhDvESCSxrBBysLCFhYydAxJxDmQ33p3dmd3xSlzDEwQpwAkk
g4R4LZ6QryvWaH66u7qmu2befvl5//WZmf16wXL/8Cft9w9/P59gfPrx+/Hb
4/7m9vsR1j+WrdUWmSvLnBsrse5swd7YBv/OCuvYL+yUfbCxTYhNLFgC1xK/
JvPEetADJ8+u7JJohS/Za7LG4DLWAHoH9wbuyG2BWBJrzajgzTYCtwTlMx98
rR2T0arCS+rwGm7IDmAX4NZ4t8R7Th2jsSO8yZ4T7RkdVq/8lc4JKx4yBm4s
qHkF2rsJ3NgR857n3FLaSyznyersishIuUusjqwBvqw6e5jcF+Ep8Y7sHdFI
PR34BkZXIuFxpd5LjyvmRn1dY3eqKzErMfXCBs4t3L2dw7vE05PlHLWdsc/F
vgO/UA+ubpSymXUsVTvholSYCvukaKvdVZmh6insEc6g/KhOnGcNJnCu0CDA
tKWSqJ5rXrjB04C50H+Z6j95ZCrkBL934/9siSIRzwLWkr6d3X/YGF633zCD
1PogtVzZIC1LfGt1XpA/sCapVcGe9b6VLP81WcrOud+rKA4/bCA6SAF/iXNi
t3i20rXmlqyT65xVa6+eg5hLdeBMBT28on5X8aMqcI3OqMbvPKa2GfyJ2egt
ZuT/B+bGZoM=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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

           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fROB/B0NwhEBIzGBWh0Jo
RGBE2mFwCqcRFuEQHhFQEIUQEZFQAFkcGVEg50VURENMxMJfZ3Z0ZHIMZPQf
Z3BspHcapEUcxMVvx0N8JMAvp3NCpPVPp3Ei/IPESIIfTu2kSOVkSI7vTulv
TuEUSO6vTokvToXPTo1PTuZ0SI+PTuoMyIgcSOIPTuz3zoR3zows+MdZkcjZ
kNBvnR1vnMCvnROvnAu5kQcvHd8vHM/5ENfPnR/PHMdPHduFUQSjMBpFEctP
HNPFUByPXQJVUQ0lUQqlUQaVEcNlUQ6PHN0PXR4PXAH3Hc33XBGVENV3HcV3
XAW3HYBbjuzqqIG+iOSaiOhGCEQtRHBt1EFdhPdNh3M9hHV9hHEDhPYNN8R1
h3JjhHQzNEcTNMU1h/BVB3cLtMQV98Zlt0JbBHNrtMEl0xcNt4N1we3RAR3R
CdJ5/9U5B6EzuuCs/6grfuuMu6E7fqkHfqonfqgXvuu0v6kPvuqUv+ik+6E/
BuCEP+u4B+KYB2EwPmkIhuKoh2EEPmo4PuiI32sk3umw32oM3mgCJuKQx+Kg
x2E8XuuAX2kSXmq/J2OfX2ivp2AqpmE6ZuAknmsmZmEplmE2nmkhnmoOnmgu
5mE+HmuPH2m3F2CXH2oRHminF2OHl2C772ubl2MlVmGrV2CL72k11mAbtmOz
72qT12Kj12GD12MD7mgjbmsTbmm9N2MLbmorbmidr2sHduIErmkXruogDmE3
rmgPLmut92KN92E/Lmm1D2CVL+owLmilj2CFz+sojuE4zmm5z2qZz2ipT2uJ
T+kMzuIVXmOxz+EBHuI8LuAiLmGRT2qhL2OB7+IKruIaTmi+j+s6bmCeb2Ku
7+AWjuk2jmqOj2i2D2uW72Gm72OGD+kRHuMZnmO6n2CaD+opDmiq9+sF9mmK
9+ol9miyd+sNdikMw/It3mGS3+MLvuIDdmqiP+ITdugztmuCt+kbtmq8f2Cc
v2Ost+gnfuE3/mCMQ/EvNis4Q1AwRhskN2mUN2qkg3GEN2i4Q3KY12uo1yk0
12qI12iww3GQw3OgV2uAVykSI3M8VyoKo7I0y7C/ozER/2F0xmA/x2QcxmVf
x2JsrlAfL1dvx2MvJ2BPx2cPL1NCLlV3L1FiJmF25mBSLlZWZmMyJmcKpmQW
LlIqLlQ3L1BqzlcapmU6pmdXz1MGZmQXz1Vnz1EmzlZmzlKQZ6qTZ6ijp6uD
pyknc7EYpyo387AIp6i9JysvJ6md8zE/J6oAC7KtC7GNJ6i1C7OVx6sox6ml
x6o4S7CFx6gkR6u5S7GZR6ksR6oqq7Gpy7GJy7OxK7AiRyjQlViZw1WFAWzk
YWrooarOGhzAgazJWuzAjqzNOmzgdqzLemzLIarPBqzvwWrIQarngWrEQNZ1
Y7bgADVhfzVlM9ZxPzVnX9V2H7VkK7Zmb9VyL9V0G9ZwT1V3D1Vze1Z1d3Vi
N3VjdwY4iJ3ZVV3YRV3ZWVUcpMrupB7sqJ7sxUruzf7soD7sy4purwrux/Ju
p3Juq0EczNFso7IewjJuraEcxuEcwdJupZFsqVJuoVFsrpJupjEcy3FsqhJu
ouJurAmcyEmczCmcymIOVFE3UhE31DQ2UGFPZyHX10zO4mzO4Tqu51zWU0HX
1TzW0XzW1gIu5CLWUgHX1GIu4VLW0DIuZ35X1wqu5FpW0ypWVT6vZl4HKI/X
MLerKJcrK6crKYc3cCMrKrs3MZsr6F/l0WzH
           "], "LeafValues" -> CompressedData["
1:eJxVUUsOgkAMZabvJS69grdw69ItxgNAROIGk8HEeC4v6LTMFCSh9Pte+zj0
z/Yem6aZd9m03fuUUve57HNwnebHOA238/QaxiEd+5CT32wCSIJm9VGvWCto
zWL9suatBeZ5sLQUiDopIp4AJQoEMTtiFX1tnJUefxgoKO6V3rIL1uGFUeiz
skXxIT/EqSqtc4HR4VGUIbdNaxHKGLIbLdRbo+gSYrdXJZ100UqFMKyNNHBJ
fUkqgP8IIeoWP8hCFGA=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk1trFEEQhUtZxRtBxIcQBychJD7sQ7IPydxnuqd7F/Ka/IIIUZ8UVkH8
Wf7DfHUmLNOXupw6dar35Ouv22/Pzez3K5bb+79xv7//d/eay83PPw/fH/ab
6x/PuP1nqfm1Fm1jJftgH2yne7KJ75R1ayO2xN7bzFrZMf7JVpaxR51bPFn+
2Rp7p6zFe4q1sUL5W/tElSzvGTlv7Qp7QdyMrbdgHdaWGI8cqFuQH6k4c6rg
NhOb7ZDYkdxJWK29oYdLeRIYbpvEpQfjDJ4JXwBnBn9la07nVHCmNRE7ZQRZ
OiznnAe7wO59e+cttVvtHTGH5LkK7+GWqO33xL2hnue7Lu7Pyiiw1k+5KxAH
EFznj9I9wc/ZDrCq1OnKvpBxIDWOpGKDv6O/TpwcqwOnEsuI3zXrsTp2pSm1
0trRvL9CPbx4mogr6J3W4Lp/JH4idgR9pqMgrUppFLAcsa7pMYM6UivqbUT7
zO1YrydwSqA4RoD/hqwk3hFrQU4Wm+V9OIML8XPMrI59MkF9dXptjhHFOuMp
7SW3LSzdM2nCo7qIemE+pyxE1+mArFJsltlGeHR2whc0kZmKJd9IpPe6vLud
FK8VXxIzcF6T6TGuwiXxkXftWDs0SUzJ30QmosEy6L/SK9rVHPAv+Ft7BF5X
aNg=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
G3nS37QF/g8IVAzj
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fSOB/B0NwhEBIFEUxhEJo
JEFmh0FYxEYchEN4REcMREAm21EREZEgR8ZfR8EfZ/RvZ/AvR8NPp3dMpPMP
x8J3p/U3p3FcxEMipPZXp3J8pHQCpHBCJPcXJ/M/SOrPToxPTuKkSOxkSI4U
SIn0+MepkMgfndAfnBppkBbpkMDvHd/vHM8ZkBGZkBlvXQhZkBVvXADZkB2v
Hdc5EMc5kQuvHNsvnRsvnA/PnQfPnBdPHcv5EdNPHMOPXRCPHN2FEc1FENUP
HcXFUQLHcQIlUQoPfAylUQazMQdlUQ6jMBrlUQH3HdkVEcnDMQKVUBlVEIAh
iOh7ropqqI67juAaqImBCO87DudaCOvaqIPbroumaIZ6qI8GaIhbDuObDu1G
COUbDsR1N0YThPQ1h3BztEBXdMNVt0RrtEErBPcVB/Nl023RDu0BX3IQLroD
OsLqBOmC/+q8O+Ocu+Cs/6g7fuuM++K0e6AneqE3fqkPfuqUf+ikv6sfvumE
++O4B+CYv2oQBuOov+iIP+uwh2IYPumQP+qgR+KAP2i/32sM3mkCJmIs3moc
3mg8XmufX2kSJmMmXmqvp2AqpmGPX2i3n2s6ZmCXn2mnn2qHZ2G7n2ib52Ih
FmGr52E+HmuLF2CzH2kxHmoHHmgJlmIZlmMDNmIF7mst1mEl7mkVVmOT72qj
12CD72i9b2ud12Otb2mNN2E7bmoztmC1t2IbbmiVr2ulr2mFr2ondmE3rmi5
j2IP9mKZL2sfLmmp92OJD2CxD+IQDmORL2qhj2CBL2i+z2uez+kkTqETg3ga
Z3UZV3AGZ3EOZzTXF3Eep3UBpzTHJ3UJJzTbx3UV19CRx3QdN/AQjzDLR3UT
tzDTR3Qbd3AXh3UfhzTD9zDdBzXNDzDVB/QYT1CJlfkU+5WF+/QMz/ECe/Ua
bzDFL/EKezTZu/UW7xCTsfgeu/QHfzHJH/ARnzDRO/UZO/QFX/EN2/UdPzDB
2/QTvzDeWzXOvzHWWzTGmzXawihvkgGSwRiDGxWcITjSETnCIRmBGxSK6xWa
6xSGazXcYTnM4RieazTUqzXEqzTYkRiZKxWFURmNKzTIyxWdyzTQSzXAS9Tf
sRmX8djPcdjXi9XH8fkPE7O3E7CXEzIRF6mnFyoJk7KHFygZk7O756ub56mr
UzAlUzE10zADM7KL0zI95yod56izZyvIs9TJM5WJM5SZ09XR05SV2ZidOdjB
FZmTuViW5djeU9XOuZmHednW+ViQhZifBdjGU9Tak1WYk1SERdnKE1WME1SC
49XSxdnC41SSpdjcpdnMZdjUY9XEY9TYo1Weo1SBIxXoEWrk4arCALZgS1Zl
NdblMFVnDTZ0LdbkUDXwENX3YNXmINVzHdb1QNVjfTZgQzZiIOt4gGq7vxqz
CZuyn2q5r2q6j5qxOWu4t6q7l1qxNau5A9uwp9qxh9qyu6q6mwLcnlXcVZXd
RZXcWZ3ZhQu4kF3ZjXMZpO7swUEczJ7sxYrupN7sw77sxwruqPLuoHLuz7Ie
wDJur4Fsp9JuqyEcylIeyZJuo2FsrRIezhFspeJuqVFsodFsrjEcy3Ecz2Ke
wQlspulsqolsokmczKKewiKexsKeykJurIIOVAE30kzOYn431Gw20BzWVz7X
0zzWVV7PZx7X0SLW1jIu52Iu4VLWUm7XVC7XUE6v4BpW10pW0ypWVQ6vZnYH
aC3XcT2rKJs3cgMrK6srKYsr6l8cKWrI
           "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMbDO2xJEv8AuuHLkW8YBWhIpLkVokxLd4IbZjJ2SxnXjGnuQw
PYd76rpu24kZxvdpXcfPZS+H67I95iXfzssrz3k9Tr1cfsUQMZNOImgsJ7Nx
aYbL0ksZUIcAOs6JsuEs5mQ8JzsiSnq5mrJswVRJOsFIlBIQMhxWcoE29TpN
YjzDQsAYqF1KcdeDQLZC/sDaiv6TtVtC+TAibmivyk1rkEpLas42dIhP1Iey
3t/lXx1sjUHalH++9xRd
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtks1r20AQxSeBhCYxxocWQjAJxXYuPbQ5NLI+rF1ppYVek78gBbc9ueAW
Qv77/OYhhHZnZ99787Hz+effp1+nZvbvA8vTy2t3PL68PV9w+HH4v/+9Pz48
/jnhdGC5tCtrrbRoOyvs2iprLFhto23l7+3MvtpgCf+ofbRveHvLWCN7ADnA
buGv2XdoBVvoXGPXcBKIDo+vFZ4GVCdmsi9orLFHm0m/tI19wlqjkTlt+Utp
9Ki1/PewPZsNLI+XiXRiD9PtyHouZo9dUtNAzApshlmBL2E3ZOGejOfWPhLF
q2gVp0PPcyuwt6qy427FKUrTtQO+ES3fs/oQ2QPfXDkMrAPeFu0I11nOiNx3
dgEuqYsJy3uZpB7EiiC+0+UWfBIzCpnI1WstlH9jN9PLuNZSOSZlk+hGULws
hUwVUX0fxW6nt9jhuacWZ3rULdYC3EoTMEwdcR3vrHdkBmcgcqHs58o8gK/w
9JqYoGxnenHHltx0qjlMr1iDjpoB722l+ShBVKp9gU6DxlLRa/U6oZftDvRS
c7nUnNaqyiepnzpY6KU7xZ1z+w6PIVyh
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
/g/o6iZg
           "], "Children" -> CompressedData["
1:eJwViWN4GAYYBu9LbZup3aa27aZ2kzZ10y3tVm6dyq22bdu2bdu2vnfbn7vn
ngsM7R7cPgDoEf0/BIf0KhcREdKnfoz/olp4z7AOYRFBhTv+/8MN/ncAkYhM
FCpaJYtKNJJZcotODHrTh5jE4kfqKzZx6EKw4hIPqRPxSUB6AklIIpKTAlc9
JaauvisJSamjb0rGV9XWF9VSSlLxWan5pDR8VE2lpYY+KB3vVV0ZyMg7tSYT
mXmrRrxRFgpRmKxUUzayk4OcvFZVvVIuClJFuclDXiorH5X0UhUVRH5eqIKe
qwDPVF5PVU5FKMoTlVUxitOAMipBSWpQk1KUpjql9VhlqEBFylKO8pTSI5XU
Q5VQJYqrCsX0QJW5r6K6p6pUo4juqrDuqJBuqxa1KahbKqA65NdN1eWG6hFM
kOqTT9eVV9fUkKvKoytqTBOaclnNaEVuNSeXWpBTLcmhS8qui8qmNmTVBYUQ
Sha1pR1hZFZHMqk9GdWBDDqvQJ1TenUmnc4qrbrSjTNKo3BS67S6c0o/cFKp
FEFK9SCFepJcP5FMP5NUvUiiE0qsvvQjmkW3/vzCRz7xKwNYwUp+43eWkUjH
9QdDGcaf/MVABnFMCTWYBDqq+BpCPB1RXP3NP8xnAcOJoxGM5LBiaxSjOaRp
jGEsE4ilccTUeGLooKLrgKJpvyYyicnsU1Tt1RT2aCq7FUW7NJ2dmsFMZrFD
kTWbSJpDgOZi2q55bBNayCKWsJStki/GfYu++2Z980366hu1nA364qtYzTnO
s4a1bGM76/jsG9jIeq1nnT75Jj76Wm1mjT74am1hK+99ld75DnZynBPs4q2v
1FF2s4e9vPEDHGSF9rGf175cr/wQL32ZDrNUL3yJjrBYz32RjrFQz3yBnvpJ
nvgpTjNfj32eznCWRz5XD/0CF5mjD1zigV/jOpe577N1hVm6ykzd8xm6wU1u
MV13/TZ3eMs77nKPabrj93nAE277Q275VD1mih4xWTd9km74U677M675c676
C674Sy77Ky75ay76RL1hgi74e877eJ3zcTrrY3XGP/OFMYpqXznto4V94zuj
5IyUGKFTPlwn3SzA/tEJj2SR7W9FsWE67kN1zIfoqMewmJbYklgsi23xLYEN
VhwbpCMe1w57PDvkA3XQ/9IB/1MJ7Q8lst+133/TPk9qe32A9ngKS2m/qrz9
olSW2bJYatvtaSytpbP01l+7vJ92eqBlsL7a4X2U0Xork/XSds9q2exnlbHs
ts1/UjHLYTktl+W2IrbV81heK2BbPJ9t9p7a5EG20Xsov0Vog/+oglbICtsP
Wu/dtc6L2loP1xrvpuJWwkpaV632UrbKu6i0ddZK76Sy1lHlrINWeAVb7u21
zCtbFQvTUq9q1aypNbPqtsQb2WKvYTWtltW2hrbI61hda6cG1lYLvZ4t8GCb
7/VtnodqrodojrfRbG+txtbEZnkrzfTm1sLaWjtraa2stbWxlprhLTTdm2ua
h9hUD7Up3kyTPczaWyfrbE3VwZpokne0id5YE7yRxnsX62rdbJyH21hvqDHe
QKP9Xyc45Pw=
           "], "LeafValues" -> CompressedData["
1:eJxVUEEOwjAM25pY4sgX+AVXjlyHeMAmysSlkzokxO9JkzQSbZWknhO7Oy3b
9EzDMOwHCdP8udQ6f29HudzL/lpLflzLO6+5npdRwE0CM0M2A0y9gkVmhWGJ
O6w4MckCUmp1YkJwrM/aYvg/6BHWpLqa/agVIyilod2H4XoNQVPtEwkh23WU
phbRjNsDmkyiVoRX8qe6MzKnrsFIzgIQv8e/hTPwaOZsq3n4bEk/EyIS8A==

           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkltLHEEQhUsJIYtG4gWVIGxkWV98cFR2Z3pm59ZzAV/NLzDg5UlhDYgP
+e/56rAU09NVfepU1ek+//N2/7RtZu/fWO4fPtr1+uHz9wTn7vXv4/Pj+nr5
soX3j+XUCmsstdyC9XZjLWtn+/jRpjZahf2wxGpb4SVWghtBtPiFXdmAN4Io
yCvhaYkcw5iTl+NPwfY2IVoK0dkM/Bl8BacFLCv2h8QjWZlt8Q/wXYJuQc7F
WnPua6ZeT9TtQLcrcAX7kkjDudcYyJsoc8BL2LXC5HgNsU5TOS4nnmO/QMyJ
BLgT1Y+20Fy9shbwVpq5VvaSL1M3qd3CGdn3fBG+Xcy1G2WHdqRanTTrOMk2
+rkqMyzVbpQKrteARdUJzHZM7cr2QEQ0iVhFFw28NbuFcH4DNeaTeTTaAfvE
dmBrxF1Lw5LMwLmr4nxzTibUHNXPT03d6h6cdQpyRBmv6d27Kq30mKnDiv+F
7uO7biPgVxuNC92DM5WaONPUnpXqTgOZOeeePbMvYDN5NVzn4PwtfdXb6IT3
/vydDlTIeDsp655087lTrSuQ+Ua9lFc0StmgFxfwe1UowZ2x+iv6D9J2Xqk=

           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
f7UICB/9V56JXkHw+B8CgUgi
           "], "Children" -> CompressedData["
1:eJwViVOUGAYUBefFtm3btp2NnU2yMTdW08a2bdu2bdu28W7bn5kzZ5I36xTQ
MgTQNdx/CAjsWTw4OLB3jfD/RfmO3YJaBQVnz9P6/9/f4H+HICShCE0SS2ph
CEsZyhKO8CQhKRGISFziEYnKkiopMlFwRSUOFRWN6MSggv6ovH4rJrEop1+K
zU+V1Q+VUXwS8F2llZBS+qZEfFVJfVFiPquEPikZ6clAcoorBSlJRWrSko40
FNNHFdUHFdF7FdY7FVJGMpGL3GSmoLKRnbfKQlYK6I3y67VykJN8eqW8eqk8
ykNuFaAgecnHC+XSc+XnmXKqEIV5qhIUoShPVIzHyqFHyq7iZNNDZVVJsuiB
SlGazLqvTCpHeWYyi3uqwAQmUpFKVKYKYxhLVTKqFrW5q2rcUXUCyKAapFdN
0um20qoOdbmlUdSjPjc1kgak0Q31oiGp1YhUakwTriulmpJC1xRIM5Lrqppz
RS0IoiWX1YpLSqbWtKEtSdWDnrSjPR3oSBeSqBOJdVGduaBEOq+ECqYr55RA
Z9WN7sTXGcXTacXVKcXRSfWmD33pR39OaAR/EVsDiaUBxNRx/c0/xNAxRdcg
omkwUTWEoRzVMI5oOIcVRYcUWQcVSQcUUfs1mn2KoL0Kr3GMZ4/CabfCahKT
mUEYTSG0dimUdmoq0wip6YTQDpm2C22TfDbuc5jLPOaT0BLZAhayVcdYxB/f
wlYWs4SlLGMzv305v3yLNrKClazip69lHZu1mk1aw0b98A1az3p99w1883X6
6pv44mv12dfok6/WNvaxn+3sYCe72MtH380HX6X3vlJ7WKF3vlxvfZne+AEO
slSHOMprP8wrP8JLX6IXvljP/TgnOMkp4tgzP80ZXvLUz3KOO9xlkc5zhSd+
gcd+kUd+iYd+mQe+UPf9Kte4zj2/wV1foDs+XzeZp1vM1W3m6LbP1i2/x31m
6QEPuekzdcNn6BGPue5PeMozrvl0PWearvpUvWCKrvhkveI1l/0Nb3nHe75x
yT/wkU98ZpIu+kRd8C+c96+c8wk66+N1xr9z2n/wk1/8ZpxO+R+cUBbaBBbC
TvpYnXCz4z5Gx3y0QtooHfUwdsSj22EPa+EsvB3ykYpgI3TQI1oki2xRLJod
8OHa78MU1YZqnw/RXo9hezym7fZYtstj204frB0+SHFtoOJZfNvu/yiB/a1t
PkBbPbFt8b+02ZNZcitjZS2FpbSsls1S2SZPa+kstW30NLbB+2u9p7d13k9r
PYOt8Yy22jPZKu+rzJbFVnofrfDslsMK23LvrZzWS3ktly3znspteWyp99AS
z2f5rbsKWDcVtK5a7IVskQdroRexotZFxayzFnhxK2Elbb6XstLWSfO8o+Z6
B83xclbemllzq2CzvYpVtfaqaO1UydqqsrXRLK9m1S3QZnprBVgtq22tVMNq
2gxvqelex+pakBpaC03z5qpn9W2qN1MDC9QUb2SNrakmexOb5E3U1BprojfS
BG9hQdbZulhDtbQ21tZa2XhvoNZWX+O8nbW3ehrrHayj1dUY72SjvY5GeW2N
9GDrarXUw2pqhHez4d7dhnkNDfWe1st6Wx8L0BCvrr7WzwZ7NQ3yqupvVTTQ
/wXB4AL8
           "], "LeafValues" -> CompressedData["
1:eJxVkDEOwjAMRdPYX2LkCtyClZG1iAO0IlQsQUqREAtnx06cNKSNW//62y89
zM/x7p1z607COL1PKU2fy16Sa1wfSwy3c3yFJaTjPIj4lQBdLItIHvqG/oJG
Ji1gVI3LzoK5s90S0noMPntKHcjMvijtVgM1hjKc+28MMhUGRGVaRiW2qX3X
xlVpuW5Gn8LSeqI8j8grvzegjasemv9RrSOY7Jd17YCuNbjyYKP4AVFyE04=

           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1LW0EQxY8SS9UYLPhQirSGoL4UjA/tzb039zN7A77qX2BB7VOLUSj+
9/3NMSy7OzM758zXTn/9vX3clfTykeP2/l+32dy/3e2j3Px5fXh62Fz//L2D
9sxxoEpTZUpa6li5vqvkrFSrZRf6wtlozS7VIw+ch+qwdHg1muE3xpp0yusa
qTZPiT2Hs+JcaKIVa8FbYq3RAz9gu0JfIJfeE80dKXOU3pg4O5CdjkCtQHXY
lhohn9gyMtMh2PV2RYySdQE+9KhhDi5yDkyLNmBrsCR9w6vFmiMl8y9d+0T7
rnmK38qscyN6VxoVNeaOnI51Zr5AR+dqvyRH770mvDS65B6MqJCj/uDJ9QPu
hNdA3LE7mrnjmdla7iu8Er4lHsl1xTRmzrN3rIK7daWDa/zkjgZrTGJPO3j3
jt7qfJvpV09sgVeDFqyZM1oiR46h9dyFZ1xgzcGNqTfB3jD10r1fbSf9Adv7
L5m5px0MOa+Bj19Q4x95NNQTfY56o67PYE+dd+18a3NXzqHkPfNEW//OwrFG
zjf6kzydSrv+bwfuVq5rbFHXfzpAWr8=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
/wUgIAla
           "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufbtNm2bbvNxm72Vtturq27fJ192bZt27Zt2/jeqz8zzzyT
sV2P4I4BQO/ArwgO7RsUGRnaPyTm16jRvU9YeFhkwWIR334vg28OIApRiUZt
a67oxKCYFbdAYnKP+8QiNvvYTxziUp4KxCM+uclDAhKSlWwkopkS01RSEyUh
Ka5kZKaxkpOClKQiA430RQ2VmjR8Vog+KS0flY70BOuDGui9MvJOmXir+spC
Pb1RXb1Wdl4pJy+Vgxeqo+fKxTPVVl5qqRCFyUdNPVV+ClBDBamuJ6qmIhTl
scpRjKoqRWmKU0UlqKySVNIjVdRDBemBynBfZbmnCrqr8gqiIiE0pBKVuaMG
3FYVbqkeVanGTVXnhmpwXeVUk7KqRRnVpg7XVFp1KaWrKqn6lNAVFddlBXNJ
xdSIxrSkFU1oSguKqhlFdFHNuaDCOq9COqeCak0btrCVthRQd/IrlHxqR3vO
qgNh5NUZ5VFHwokgt06rK6fUic7kUhdy6qRy6IS6cVzZdUw96EkvIsmm7+nL
UfWmD99xRFl1WFl0SP3ozwAOKrMGMohNZNJgfmAkGXVAQ/iFX/mRDPqJn9mv
9NqndPqNtPqdP9irNNqjP/mHf/mL1PqbVNqtlNqlFPqPoezUMHYouYaTTCNI
qu1KolEk1mgSaQxj2aZxjGcCW5VQWzSRzZrCJBJoMvG1SfE0lWls1HRmMosZ
xNUGxdFsYmu9NrBOc5jLPOazgLWKpYUsYh3rWaOYWswSlrKM1VrLcgK1SitZ
QQytVHStYjUrFE3LtYZliqqliqIlCtBimTaCFkm+GfeF+uLb+OwLtJvtfPL5
2sFOdjFPH32uPvge3vte3vkcvfUDHGS23vghDjNLtzjCaz/GcWbqKDP0yk9w
kmu89FO88Ok6zTQ99zOcZarOcYGLnOeZT9FTv8QTn6zHfplHfoWHPklXmagH
fp0bTNB9H6+bjNM9v80dxuqu3+WOj9Ftf8BDCtotf8RjRiuPPeEpSSypPeM5
Ue2mv+AlX3BeccM/c91fc83f8JZ3XPVRuuLv+cBIXfaPXPIR+sRwXfRhuuAC
G6rzbnbOo9hZ/08B9q/O+D867dEsusWwU/63YtpfCrQ/ddJjWWyLYyc8sR33
uHbM/1A8i28JLKEd9UR2xH/XYf9Nh/xXHfRkltx+0QFPYfs9k2W2lJbKflZq
S28ZLI3t85+U1n5UOhuivf6D9nhG2+2Dtcuz2E7Pbjksq+3wbLbdB2mbD1RO
G6Ctnsu2eG7b7P21yfNaPstvBayfNnpfbfDvtd6/UyErbOu8iK31orbG+2i1
l7CSVs7KWykrbWVtlZexld5bKzxSy72XlnkFC7JqVt0q2lLvqSVeySpbFVvs
PbTIq9pC764FXsPmezfN85o212vZHO+q2V7H6lo9q29trK01sGBrbbO8i0Ks
kTW2hjbTO2uGd1ITa2rTPULTPFzNrKOaW5haWEub6q1sinfQZG+vSR5q7ayn
TfT21sE6Wri10wQPs/EeqnHeVhHWycZ6G43xzjbau9go72ojvZuN8Nbqbq3U
w1pquPeyYd5CQ/1/j8Pq+Q==
           "], "LeafValues" -> CompressedData["
1:eJxVT0EOwjAMG00iceQL/IIrR65DPGATZeJSpA4J8XuSximwpnGSRba7nx/j
LQ3DsG41jdPrWOv0Pu+0uZT1vpR8PZVnXnI9zBsdVk3CQolYD7FdYU5skKzU
4P/coP3x5K0QagvFJIwjbd4KVGganaPEB1osGxJadeX+zCbkwmAwuZmwx9AN
MdxfS1iGFZYIlm7UqfukiwpTp4eojb7L1B+Jx4QR+QBT6RMc
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1OGzEQhYd2W5UqIApVFVWVQrQ0N9yQG/BukrW9fxK39AmoBPQKpFAJ
8RJ9Zr45qSx77TNnjs+Md/776eb+nZk9f2K5uX3J2+3t6699DtePf+8e7rbL
yz97nP6xbKy2M5va2oL1nCprGY76bC0yg3X2k/WLZbBA5MhWjA+gmYwV8d4+
27El+AGtjR1KaZRGBp8JGeCN8Af7CifZBbEOpANZ2QKGc49g11aCN1ZwDnwH
xpUyoxQK6XtGBfcH+zWo+z+Q56k0R+ac1Z2cqa6OOcHLobhrNGtio53Ivd84
8t0jsnN1peoGWIVqjzjsVUeD3kr8knNizthFVTyquojKhOxKfViQ06HnHbvg
tkLKHd69nl7+3XUks0HL7z+VN+9NRNE7WxHzO5IyWmIbNBtUXSP9dxzZB03v
R60bvsE5RzPhpFTd0ZZwMsN70XNulOk6XlvFaUYs061RLxfIS6q5BjsGa1HM
3LrDeuIn8pVZXblh9PTT/wDvW8df5J0rwXq6swBbqPYCJKtvE71EkFf3UhMN
sDyS2QVptvZRL+7uMtnet2z7cGr7zmkKy90mvc5urfA8J+Z/UwljKQ9ed9I7
vUd7UIX+Km/pNF7O
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
XVx/ppEXdbLbfRAGxdqxSWXov3mPYrA=
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rb7dW2bdu2bdtud1/fTzKZJG7SsUqLIAC6
hPqHKo17FA4IaNyrauh/UbpD1+YtmwdkztHq/x9I4H8HQVAEQ3B0YVeGQEgE
oAtCITTqoC7CICySIwXCITziIT4ioJhjICYioqgjoYgjo7DtKIiKQpajIToK
+q8LOBbyOzby+Y/zOg7yOC5y+7dzOQFy+pdzOCESITGSIBmy+6eT4oez+buz
+puz+KtTIhUy+4szOTUyOg3SIh3SowIqIgMyOBdy47MzIhMyIwuy4pNz4qPT
Oxuy44PTOQfS+r3T+J1TOw/yojxSOR9SOj8K4K1TuCCS+41LoBAKowiSuSiK
4bWT+pWL46WT+IUT+7lLohQSuTTKoCwS+pkTuBzi+6nj+Ynj+rHjuBIq45Gr
oDpqoCqq4aFj+4FjuSZiuhZi+L6juzai+Z6j+q6juB7q444boBma47YbohEa
45Yj+6ab4Iab4rojuQVa4po7oRUi+qpb44ojuA3Cuy3CuR3C+rLb45I74KI7
4oLDuDNC+7xDuSu6ISqjsTt6IDJDuidCeARGoheCuzf6oC/6YQiCuT+CeiCC
eADoc4bPehDOeDBO2xqKYRgO6ZT/6qT/aBR+awzG4oRH47h/aRx+KhDjccw/
NAETcdTfNQmTsQzLccRTMA3TMRXfdNhfdchfNAMzMQuftQCfNBtzcNAfNRfz
MB8fdMDvtd/vtM8LsQhvtdeLscdLsBRvtNuvtcsrsAqvtNMrscMvtRprsN0v
tBbrsB7PtQEbsc3PtNWbsAM7sRlPtQVPtMVbsQ3bsdmPtcmPtAu7sdFhuQd7
IRj7sB9v8FAHcBCXcQWHcBgXcQlH8EAbfB5HcQzHcV9ncU8ncFcncQrrfRrr
fAZrfUdrfFvncEurfVOrfAErfUMrfF3LfU1XcQ3L/BhLfR338QA3cFVLfBO3
cBuLfQeLfA93cUULfVkLfEnz/RDzfFFz/QhzfEFP8BSzfV7P8Bwv8BKvcU6z
fFavcEYzfVozfErT/Rbv8B4f8BHf8B3TfFKfcEKfcVxT/QVT/BWTfUw/cFST
fEQ/cVgT/QsT/Bt/cEjj/ReBPiiQHOcDCsL9CsbgHOugHON9Gu29GuUQHOmQ
HOFQDM09CsPdGu5dCsedGubwjMCIHOodGuJIHOztisJtGuStis4YHOgAxmQs
FmUxDnBs9ncKxmFc9vMW9XU8xmcCJuRmJeUmJeJGJeYG9XES9vZ69XIy9nRy
9vA6pWQqpmYadnc+pmU6dnNepmcGZmJmdvVadXFGBniNsjArOzsPszE7O3m1
cnCVOjoXc3KlOniFcnO52nuZ2nmp2nqJ8rMAC3KxCrEw23iRWrsIW3mhWnqB
inO+arE2S7AkS7E0a3CeynCuWniOyrIcy3O2qnGWmrsCm7kim7oSK3OmmrgK
G7sqG3mGqnO6GnqaanKqGniK6rAum7MF67E+63uyGrAh63mS6roRm3Ci6rgx
a3uCarkpm3G8ajpQLTlONdyZrdiabThWnThGbTla7dieHThK1T1SHTlC1Txc
VT1MVTxUlT1E3didlTxYPdiTFT2cvThIvTlQFTxAfdhf5d2X/difAziQQziU
5dxPg9hXg9lHZd1bw9hLZdxTpd1DpTyCI9ldoziaY9hNJd1VY9lFJTyOgQxQ
cXfWfxExJOs=
           "], "LeafValues" -> CompressedData["
1:eJxVUEsOwkAIbeGRuPQK3sKtS7c1HqCNtXFTk9bEeAqvLAwwaj8w7wEPmN1w
767UNM26UdP1z8Oy9K/TVsF5Xm/TPF6O82OcxmU/tEq+1UDgn76iB5gTZwo2
b5YhSSCsh8xEkiXIl3UxL0iTCsa3XmQ/M0Dawx5SaEcNMAlaGGLJyeSvfTAR
kTq8xzm2y9FzowjXzX0Kb1/r8ZOMKhqNkHpSdUqYmW16BlGWqSxz2YfKRqmg
IG4snMIPvDQTnA==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJxVk89uFDEMxr0IJAoUdQuHlVh1qUqXI+XS+ZvMTCYTiWt5giIVOIG0ICEe
infk549eUJTE9tifP9uZ80/fbz4/MLMfjzlubn9Nh8Pt749HKB++/bz7cnd4
f/11hfaHo7M1u7bIruyhPbPZsk3IxQakAb2yHavgs9iIPtmWmMVavCc8ImfE
EhVdbIN3Qhrwme3cLsFJfL0iOpIjWI+0YG3skfItICb8T4h9AlLA2nBmbs/q
uQd4JEU5pxqEmhVAd7QVth4ea+KKeCZ7gTRzZzsWz8JK7AnrKI9J5/7e27XM
KtRRQB7Zr+RbY30KQkI+4dwgD+J9qRivZseOdsFZUU0vpjt4bcDasmatIi9n
ku0tcWvVn+GQxTpweicrdWGjajph9dxezRl7C4tG9pmuekdGIgLZ9+pchvFL
9Ii2KDJi9ewtknfxDdoxUhJ+Jf4tOD1RjtZpHq4Vobwj3idwyvwKvnv1xbu+
Ui+LsCZNbNbEBvV5uJ+gY+746nIA/UxvYtA7GZl5stdk2yvaO9tpYhfC8he2
BfGIe1QdPtF/zJ7r7UWiPWOnar2rE3LWWsRmUc+L8AOrpZZBr7yjl6fiFf+L
SHoJbr+CedDkr8ne6C27T6OKHdv/nRa2gbvWu57tLzjSaU4=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
Ek8s/Vn00+YC+D/RYwWq
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f9fS+B/B0NwhEBINEQjhEJo
1EU+h0FYZEJmhENeR0BE2OEh53Ek5HZU5HJk5HQU5PBfZ/cfR0N0xEBMxEJC
JEJsxMFvJ8Avx8VPx8MPZ/N3x8c3Z/VXZ/E/SIwvzuzPToKkSIZPzuTkyOgM
yOAUSImPToU0SO8PTo33Tue0SOt3Tof0SOO3Tu03zojXTuUsyIrKSOlXzobs
SOGXTu4cyIlcyI0KSOYXTuo8SOK8yIfnTuz8KICC+MeFUQTPXAhPnchFUQyl
kdBPnMDFUQIlEd+lEM+PHdePHMdlENtlUQ7lEcsPHdMPHMMVEd2VEM33HdVV
EMUBqIp7roa7roM7ro7broGaiOxbroWbro0bjuTrjuh6qI9rjuCrboArDu9A
NEZ11mATNMVShHMzNEdLtEILhPVlh/Elh3ZrtME4jEdbtMMohHJ7dMBADMJF
d0QnhPQFh3AQOqMLgrsbuqMrgvm86R7oiXOGe8E66944Y+m0+6Av/qof+uOU
/2gAfuukf2kwfmoERmIIfmgovmsYvmk4vuqEv+i4P+uYP2k0xuCoP2osPuiI
32sCJuKwl2ASJmMB3mkK3uqQ52AqpmE6ZuCg3+iAX2smXmkWXmo2Xmi/n2su
nmmf52E+nmqvn2iPF2IRHmsxHmm3H2qXH2gZlmMFViIao3OnVyEq72s11mCH
1yI872kd1mMD7uokTmEjNmEztuA4TmArtmG7j2E77mg3bmsHdmIXbmmbb2qr
b2gP9mIfrmuLD2Cz92OTr+kgDuEwruoIjmKjr2iDL2u9L2mdL2qtL2iNz+s0
ziAMw/IszuEGbuI8LmC1r+EizukqzuoSzugyTusKTmmVT2qlT+g6jmuFj+kW
juo2jmi5D+sO7uIeDukxnuA+DuoBHuIRDmiZ92up9+kpnmGJQ/M59uol9ugF
dmuxd+kVXuMN3iIUd+od3iMYg/MDdugTtmuRP2Kht+kzvuArvmGBf2G+v2Oe
f2Cut2qOf2K2t+g3NusP/mKWhZneJGOjwA0i12uG12m612qaQ3CqQ3KK12iy
V2uSVykcV2qiV2iCl2u8I3CcIzISlykyo3Csl2qMl2i0FysGY7I4S3CUY7EI
izI243CkFyku4zE+FyofFygBEzIR5ysJk3KE/+FwJ+Ywz1MyJudQz9UQp2A6
ztFgp2QqpuYgp+FAz1ZaztIAz1R6ZmBGZmJ/z1BmTldOTlMWTlVWZmN2TlE/
52BfT1YfT1IuTlRuTlBv52Ev52VPj1d+FmAPF2QhjlN3j1U3F2ZXj1EXF2Nn
j1aQR6kkR6osy7EUR6iTS7MMh6ujh6mDh6q9y7OdK7AiK7GtK7ONq7K1qzCA
Q9TKg1WNg9TSA1WTA1SbdViL/dXC/VSX9TiN01mfDTiZU9iQfdWTvdiIgWzM
JmzurmzKPmrmlmzqZmzOFmzi3mrsXmrF1gx0T7VhD7VlO7ZndzVyF3ZgRzZ0
N3ViEBu4M+u7q+q5i+q6s+q4G7uzB2s7SLXcSb3ZhzU9kH3ZjzXcUdXdn9Xc
QVU9gAFur0EczCoewspup6Fsq2EczhEcyUoex4oexbFsowoezTFsrfJupXJu
qfFsoQmcyLJurklspjJuqqlsotJurFIO1Aw20lo21Ew20CzW12zO4VzOY0nX
UwnX1Xwu4EIuYnGvYTHXUVEv5hLW1lIu43LW0krW1ArWUBFXV2GvYiGvZkFX
UwFXVX4H6F8JImLM
           "], "LeafValues" -> CompressedData["
1:eJxNUUEOgkAMhJ1u4pEv+AuvHr1ifABEJF4wARPjp3yjs9t2F0pL2lmmne5x
fPWP0DTNdmDoh895XYfvtWNyW7bnvEz3y/Ke5mk9jS2LP4YYhQ9jfukpA00c
cUARQYpAwiQAQeiB9ag0DGqaK4fzV8TaZfb86/6ceEO1nGPHlDp76gWg9iqs
sRX9Kn3loKfBOX2OMExlQVLZkjKCyxPYhN4oVrm+MBfpGmwTsSxaijCFoFAl
8t3AbsDu5g8/zRQ6
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkktLA0EQhDui+Aqi4CFIMMoGBT2oF/eR7HtnwWv8BQo+TgpREP+9X5fL
MjNdMz3VtdVz/vy5et0ws68dptXTT71eP/0+7gIePr5f3l7Wd/fvI9Ab09hS
W1jHCLa0nqgmzi2zwmJwzHnLXkrsqGW/F05tprNAdmK3fA1xaRXjFJ4UXLM2
5LfsXpFRgHy3pUZNVFHTGW5hTtjxLyP2GqXqt+Bc2T0ZCThndHbN+RKGQqgA
d7pdSmfFSaRqXmtbTKluZ9SqUN5Ltd89Yc3hOiOrUp0pio6Zt4R6WFrmyG4G
9kbaG+7k8mEuJc7i/57IB3eg5Uvg7ZiDFGTEwQ7IrMWeyXVXPkdtzqjtCFyR
40662wFdtZws0B3k7Kb6U6Ap435pF/QxkH9nE4ZrKsiLpGDPDolLdrxaI/al
tHjnRmjzri/B7uhs6NA/qytaqP8RfhwSTzgZw+AvJhpUjOV4UFf91WR6J6ne
TFCUs9MMWTFMCaom6mRDnX25k6hDl/AfsBasCymL5etUChP55326VB8y/WM3
3I/tD295Wic=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViXOcEAYcR98vX7Zt12Xb7i77rq4LW7ja8toWh9yWbdu2bdu2f9+1f977
vM/LENo1qH0koEeM7wgK6VU+IiKkT3DA96jepWdYeFhEYJEO//9wg/8dichE
ISpnOEs0olOdGsQggPJUICaxyE4OYhOHpCRDqqu41FE84uOqrW9KwFclJBGJ
SUItfVFNfVYNJScFaUnHJ1VXSlKRmjR8VDV9UFW9VxWlJwNZqax3yshbZeKN
KikzFfVaWXilCnqpbLxQeeUkF8UpwXPl5pmKkIe85KOcClNW+SmjpwrkiQpQ
kNJ6rEI8Uik9VEkVpYQeqBj3VVwlKaZ7KsVdFVVpiuiOynBbZbmlctxUYd1Q
RSpRSNdVUNdUmSoU0FVV5YqqcVmBqkkt1rKO2tRhBjOpSz0i6EF98uuS8imI
YBrQkB/pQiMac1F5dUFNaE4Lzqsp59SMs8qjlrSiLbnVmlwKJafaEMIZ5dBp
ZdcpZVM7wmhPVoWTRSeVWSfUgePqyDF1ojOZ9AMZdVQZ1JX0OqJuHFY6HVJ3
DiqtevITP5NGB5Ra+5VKvehNH/qyTynVj/6M5x8G8AtjSaGB/Mpe/c0eJddv
/M4gBjOM4QwhmXYrqXZpKDuVRH+QWDuUSNv1J3+RUNuUQCMYyVbF1yjiaTRx
NYY42qLY2qxxbFIs/csENmoiGxRT6xWgdZrEZGJoCtE1lWlMJ5rWKqrWKIpm
MZtVrGYOc1mtyJrHfJawlAVE0iqZFoIWIV+pxayQ+zKWs1wrWcE3X6avvlRf
fIk++2KtYZE++UJ99PVsYD8HWKCN7OSDb2Iz87WFrWxjnt77XG1njnYwW+98
lt76LnYzU298hvawl9c+XfuYplc+VQeZomMc4jCTdYSjvPRJeuET9dyPc4KT
PPPTPPVTPPEJeuz/6pGf4zwf+MgFLvKPXnOJh/6Cl1zmCld54A94yDWuM143
uMVtbnLfx+me3+Guj9U97nLHx+i23+eWj9ZNH6VHPOEpj7nhI3XdR+iaP+M5
f+uq/6Ur/qcu+ysu+R+66G94y3Bd8He8Z5jO+1Cd8098ZojC7AtfKWEl7RtO
GjvrAktuKczsjA9WFItkpz2ynfJBOulR7YRHs+P+u6JbDAuwmBbLktgxj21x
LIEltLh21H9TfItnR/xXHfaBOuSJLLH9ooM+QAe8v/Z7PyW1vkpmfbTPe2uv
p7Q9nsp2e2rb5b2009NaOktvGexn7fCflNGKWFHLZJkti2W1AlbQeiqbZbcc
1kPbPadt89yWxyKUy7prq+e1fNZNWzy/bfauCrQu2uQ/aqP/oA3eWYWssK33
TlrnxWytd9QaL26rvYNWeSkrbeFqa2WsrNW0WlbOVnoFW+Hlbbm31zKvaJUs
TEu9slWxqrbEq9lib6dFXt1qWFst9FAt8NpWx5pbC6tr9ayxzfcQ1bcgC7Y2
mucNbK63ViNrpYbWUnO8hWZ7czWxZmpqzWyWN9VMb6KW1traWCub4Y013Rsp
xEJtmjfUVG+gKd7OJnuwJnmQ2lt9hVs9TfT/ACDz1wM=
           "], "LeafValues" -> CompressedData["
1:eJxVT0EOAiEMZJmSePQL/sKrR69rfMBuxNULJqyJ8feWtrAIpDDTdsoc5td4
9865dcdhnD6nnKfvZc/gmtbnkuLtnN5xifk4D0w+OFAI9RCvcoUeB+HKgRDC
QGssq13yUpYsTeSVAEA0mKo1mbA0Fu0+BaoZG7r9TIW5ouJuXAmwn1D43628
maJq0qzKAnyx51nHhm2WWplOBJQU0aZcGcUQ5wX8AJ6vEuQ=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkstKA1EMhlMtxWIVHTcVu7DUupW6cO7nzJkbuK1PUKHqSqEK4tv7JQxD
TpI/92SWr1/btyMR+T7h2e5+w+Gw+3uZojx//uzf94fN08dINZ6VZJLIqXRS
SS8OrZalXEuKNJIbucRyLAFbI5F4/C+kRSuhishOxsgRvINviMrxctBIHvCo
pJBz0NT8C7mF5+SreWfgM/SCWC8xaLDIM6wZUgVv8EtlTqUcCkPVhh4WFteh
eTQHVuLTgCxkQrz2qZY1eMDSYsuI75hvxevAepAIa8WkMdUi66203hwRmmGM
NIHP0TLLUdqEmjPm040lll+3klpHDXiKx5qvR56CaIeJ3IN6IlroyrBgU3V2
gRnUMZeH34FG1nvPLI9Ws7Q6GVZvm9Gee7tcNkyYGOKgYFvVzjR3itQP+9Oa
sfm21Gptj878c+TGJtcY9a4tqrBMOm1if0Jqt6jB8yFGc/TD/bRGazcK+OnV
dUa9jE7t7eLedhRsUs2n3vqPtPIP2WpTyA==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27ZtW6+2bePV2tq2bdu2bdu279n2J5lMEjfuULl5EKBz
qL+o3Kh74cDARj2rhP4bAe27NGvRLDBzjpb/foDBPwchKMEIzjWuE4KQrGEt
oQjNdGYQhrBkICPhCE8iEhOBuopMFCISCamOXLUVlVr6owREo6aiE4Pfiskv
1VAsqis2cYhLNcWnquJRRT9VWT9USd+VkG+qqCQk5asqKBnllYpySk5ZpaCM
vigln1VaqUlDWgL0SaX0UelIT0l9UAllIjO9Ka4sZKUq1chGdvJTgPcqphzk
JBe5ead8vFUe8lJUb1REr1VYr1RIBSmospSjEIV5qSIUpwRFKcYLFdBz5VdJ
8qk0efVMpQggj54qt56oDI+VS49UnoeqSAVy6oFyqBLZdV+VqUI23VNW3VUW
3VF1bqsGNalFbTLrljpSh7rUI5Pq04CbyqiGZFAb2tKIxtxQejUhnZrSjOak
VQtacl1pdE2pdVWtuKLWXFYqtSOl2pNCl5RcF9WBC0qmTgRyXp05p250Iam6
kkRnlVjd6UFPEumMenFaCXVKCdSH+OrLf/SjP0MZxgAGMoh4Oqm4OqE4Gkxs
DSGWjiumhjOCyUxhJDE0ngkc0yiOajRHNIaxRNc4oumwouqQJjKJKDqoyDqg
SJpKRO3XNPYpgvYqvPYonGYyi9nMYbdWMJewWswS5hFG81nALoXWQkJpESG1
UyG0lODaoWVsVzAtJ6i2KYi2aiWrWM0WmTYLrWM9m3SKDcj34r6RTWxmC7v5
41v57Ru1k2388g3aznrtYJ1++i5++Fp99zXaw2p9833s5wBffZWOcJBDrNRh
VuiLL9dnP8oxjvPJT/DRl+mDL9VJlui9n+YMi/XOz/LWz/HGz3OBRbrIQl1i
gV77fF3mCq/8Ki99nl74XN3gEY+5yXO/xTO/zR3m6Knf5Ynf4z6z9dhn6QEz
9ZAZeuRPeEoRK2rPeE54i2AveMlXvvGK10zXJ6bpob/hLVP1jg888Cl6z2Td
90n6yETd8wn6zBfu+njd8e/84Be/GafbPlY/GaNb/gcniAW10RKjdNNHChsh
s+G64cMUzIYquA3RdR+sEDZIIS2UhbaBCmMDdM37K6yFs6veT1f8P0W0AlbQ
Illki2JRLaElsmh22fsqlkW3GNZHMa23LnkvXfTYFsd66oLHtXjWQ+c9viWw
7jrn3XTWE1sSy2JZLamd8a467cksuXVRCuusTBaolJbKUlsaO+UZ7aR3Ulrr
qHSW3jJYB53w9jru7XTM2yqztdFRz2bZrbXyWA7LabntiLdSLmupw95Ch7y5
DnpeO+DNlM/y235vqn3eRHu9sQpZYdvjjbTbG2qXF7PiVsJ2egPt8JK23UtZ
gNXXNq+nrf4/nO2bIQ==
           "], "LeafValues" -> CompressedData["
1:eJxNT0EOwkAIXAskHv2Cv/DqUY81PqCNa+NlTbYmxt8LU+i2DSwDwwDH8d0/
u5TSvFfXD99zrcPvdlBwL/NrKvlxKZ885Xoad5q8qhO2n1nwdQqEYeoJIRgg
CfIEQxhs0GmRCiYqm3aHIYWRocJtheUB5nUXMXWn6xjiVmXejHWhpmRmDT6U
rFWcZgXNCMW95KesCzYsETsgjj39Ps39AU2GEk4=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kttqFEEQhms0AcMuw0q8EBliwmpuRNjcOOdTb0+Dt/EJIkS9UliFkPfx
QfPVbwzN9NThr79OffH11/W3Z2b2+wXX9c3dfDjc3H85Qfn888/t99vD1acf
GdpfrivrrLTBGuuttYoT0Qv+tb3GkluwLZgR2REzd+BEYgY7xr5w1vwH/iV+
v3vbIE3EdcgjfB6Z42st2Ruwr9AzfCXeI3vL3VHDYJdIFdYENiPLKOYNd7Tn
tifCOR0XwARi/mftkV0/wz6pogktYU9EJFCdWDLl97pr+wCjy3tyJu4J9IJU
PfXkud7hGZnGQp5ATK66E70MIAuQC/4TeUdYGzpqyFSAcezMP4k/8O3wnPKP
oFayev5Wk+9hdFSrjpzLa18hzbC9RM6xee4dGK9tQq8V2aiXSgynYGvtYMGX
8NXa7RamnhifxjGegH2nKdX2Hu+les9gcG6vqaN7tzTiD/Dtdf51FLWnqG5K
vLOdyz5xfHYbbcd38JH4Up7EJGu9olnVjHi2oIMmOlOD520e6+7grrGMmmP9
OKNKr62HqZOv0NuMHI9dseEEZ9QbONImgyJ8hmtlzsH1ek8+jyBm7zaqwwK0
dzXrlTjrWjOqsJTaVgum0GajNvAAA/Zk9w==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
fieNtMvYvqcU/wOuPunb
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fQuB/B0NwhEBI9GU/hkJo
fMQn2GGQGmkQFuEQHhEgp0BEZPVfZ3EkREYURMUfZ3Y0REciZPJvx0A8xEdM
ZHQsZHBspPcvx0FcpPNPp/UPp/F3J8A3J8RXp/Y/SOXESOkkSOGkSIbkSO4v
TubPTupPTolUSOKPTuy0SIdd2I30yIDVWIOMyIRx+MeZkQXd0QMfnBUFUBDZ
kB3vnQP5kMg5kdC5kBt5kMDvHN9vnRdvHM/5EdevHceFENuFUQSvHMtFEdMv
XQrFUBwlEMMvHN0lEc3PHdWlEcVlUBblENnPXAPlUQEVUQlPXR2VEclPHNFV
UBWPXQ2PHMEPHd4PHM41UQv3Hda1EcZ1UBf1ENr3XB93Hcp33AAN0QiNEdK3
HcIBaIJbboqbboYbDu7rDkRztMA1t0QrBPNV063RBm0BB6Ez2sFqD+mKO6Aj
/uqyO+GS/+iiu+CCu+G8u+Kcf+usf+mMe6I/BuC0e6E3fqoPfuiU++Kk++GE
v2sgvmkMvuq4B2EwhmAohuGYR2E4vuioR+CIP+uwR+KQP+mgR+OAP2osPmi/
32s83mmfJ2AiJmEypmAWZmMq3mqvZ2IapmMG3miPX2u3X2mXX2oOXmgZnmsu
nmmn52E+FmAhFmGHn2q7F2MJnmibH2url2KLH2k5HmqzV2AlVmGTH2ij72st
7mkb7mqD12E97mgDNmITbmu9b2mdN2MLbmorbmitr2uNt2MHrmm1d2KVr2oP
9uISLmMfrug4Lms/DuAgDmGlL+kwLmqFL+gIjmK5j2GZz2upz+kEzuokTuE0
zmCJz2ixT2uRz2Khz+E8LmCBT2m+L2KeT+oKruI1Tmiur+E6bmCOj+smjmm2
j+oWbuMO7uIljmiWD2um7+E+HuAhDukxDuoRDmiG9+sJ9ukpnmG6n2Oa92qq
X2CK9+gVdmuyd+kN3uIdduo9dmiSt+sDtmmit+ozvqA9O/ArvqEyq/A7tugX
fmOCf2C8f2KcN+sP/mKsQ1LYJGOjxniDRhskg3GUgzME12uk12mE1yoUQzMM
1ygCIzIsV2u4w3GYw3OoVykSIzMf8zMKozI1Vyoao3OIUzIGV2iwl2uQY3Kg
YzE24zAu4zEBE3KAlyk+l6q/lygR/2E/L1ZiLlJfp2AfJ2FvJ2UyJmcvL1RP
L1APz1d3p2I3z1MapmU6zlVezlF6ZmBGZmJ25mBmzlZXZ2UXZ2Fnz1I2zlSQ
ZygnpysXp6mTp6qjc7OD87C9p6idJ6sAC7IkS7EQJ6mti7GNC7MIJ6q1i7KV
J6g4S7Clx6uFx6k0y7C5xyrQZVmeFViOY9TMo9XUo1SRldjEIxXgEarKamzB
lmzs6mzKZmzkGmzomqzF4arNOqzLemzgYarvoarPIarnBmzIRqzrwWrMANbx
INV2E9byQNV0IJtzgGq4v6q7n6q5r1qxNduwj9qyt6q6l9qxp6q4hyq7I3uw
JzsxiJXcXZ3ZTV3YlRXdVd3YRd3ZWRUcpPLuxXLupN7sqLLuwzLuoP4cwMmc
woEcxImcxMEcwtIezaEcxpFsr+FspxFsq1Juo5JurRIexeJupTFsqWIey3Fs
oaIezyKewMJurkIOVEE301RO40I21XTOYAHP50w20WzOYX7PYj4HaC4bK6/n
MY8bKbcbKpcXMKcbKIcXcTHrK7uXMJvr6V94i1DV
           "], "LeafValues" -> CompressedData["
1:eJxdkEEOwkAIRVv4JC69grdw69JtjQdoY23c1KQ1MR7IewozQBNThsIAD5jD
8Ozu1DTNulPV9e/TsvSfy16d67w+pnm8nefXOI3LcWj18qtKRAABM9hMk/KZ
wHRNEHEPcQ0SyaRQQGUYjUEkzIplqKunCCpOKpvFK+DducTEQd4hJ0MmZriA
g5cz/yuU3rmgJMqtKA341loLueaQNTIOcb6BWYTWApxUbE+R/5g1ty1Txwhx
PAPbtqXPD5FSFB4=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kt1KHEEQhWuDSNR12UAujC5R2ZjLuAbMbk/P//QMeGuewIBJrhLYBMSn
yavmqzOLDNVTXXXqdP1dfvt9//2Vmf15zXH/8NRstw/PXw+43P36+/jjcXvz
5eeE2z+OE8vt0nqL9sla62xipW0ss7UV/CPehPeNNdivQQRuPT6P2OjMud3a
QMQMreY/gHZvhVbB5RLQA/ElvsC3BtmjO/tgZ6Dd/07Rzn/FGeCu7ADkGNcL
XWMr7YJcAxJtpfcCUmN9r5eWRAzCnSLO6AylveXfcutg8voKVZpAdURPYYt4
3eL5reBJip9Se4EWYfdIrzPt6utAldyDvC2RUZiBzP2lDN3PufKo1LUK1Bxt
CbaxIyy5LZRjAlWDb8SU22dZa6yHWBdwtersUjlcYzskuxqeiq+hA15XrZxL
O4cv55apfy2+HKRX/QHUCktGp/2M6onPaooE/AO3cdINXyH2DEzSJLz2GZJe
xKvu8Kw0pYoI34L6pRtX/Fve93qOdnPLdjP26a31XkNfWm3D2o5BLdjIqI5s
bE87M2FnC+3daBlf69XXBD5q3z6qSp9eh/hcxp75ZM/E14thH22+258Nvn0i
I5G53fCOdyNper14GvIahPVpz+w/GQRl1A==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f+fT+B/B0NwhEBIFGUxhkJo
nMN5hEFuL8QihEU4hEcEJMI/sCNCzuW/joTIiIKoiIY/TojoyOlYyOEYiInf
zu5fzubYyOo4iIt4iI+fzuIfToDvzuxvzuSvzujEyOBUSI0kSIpkSO8vTo7P
TucUSOuUSONPTu00SIvCSOV0SI98yI+PzoAsyIqMSOlMSOEPzoz3Tu5syI53
Tua3TuocSOKcyIXcSOw8yIs3/sevncivnNAvXQAvnMDPXRCFEN/PHM9FUBTF
UBxTENclUBKlEcdPHdtPXAqPHctlENNlUQ7lEcN90Q8VUBGVEN2N0BiVUQVV
Ec01UQvVENXVEcU1ENmPHMm1UQd1EdEPHcEPHN71UB/3Hc733AANEdZ3HcYB
aIIe6ImmaIY7Du3bDkRztMAth3JLtEIHhHRrtEF7hPBNt0U7BPcNB/N109cM
d0QnXHUQusDqDOmK/6oruqE7/uiyf+uSf6kXfuqif6g3vqsPvumCv6o/BuC8
v+icB+Ksh+OMB+G0B+OUh2AoPuukh+GEP2kEPuq4R2IURuOYP2gMxmIc3uuo
J+CIx+Ow3+mQJ+KgJ2Ey3uqA32gqXmsapmMGZmK/X2kWZmMeXmqfX2gO5mKv
n2uPn2m352OXF2Cnn2qHF2MlVmG7l2AplmGbn2g5HmsFHmmrH2o11mA/DmAt
1mGL92E9NmA39mAjHmgLtmIT7muzN2OT72kb7moX7mg7bmsHbmmjd2KDb2q9
b2idr2svrmmtr2qNr+ggDmG1T2GVD+MoLusILmmlL+oYLug4zmuFT2C5T2KZ
z2mpT+MMzmKJz2qxz+gCLuI9PuASLuMdTusKruIZnuMarmORn+AGTuke7uMm
Tmqhb+E2TmiB72C+72Kej2uuH2COj+khjuoRHmO2j2iWD+spDmmmD+oFDmiG
X2K69+sV9mmaX+MN9uot9miqd2uKd+kjPiELs/IzviAiI3Gyv+IHduobdmiS
v2Oit+sntukXfmOC/2C8t+ovBGOLxhkc680iNykYgzMEQzIMNyoUN2iMQ3O0
12uU1yks12qkwzE8I3CE12i4VysyozATVykqo3GYV2qoozM9VygGYzIWlysl
UzE243CI4zIe43Owl2mQEzAZl2qgEzIR/2FiJuEAJ2V/L1E/L1ZfL1JypmAf
L1RvL1Avp2ZPp2MapmUPz1d3z1M3z1UGZmRXz1EXz1ZnZ2aQZykbs7OTZyoH
czI387CjZ6iDc7G9p6ud8zI/C7Ct87GNp6kgp6owp6gQJ6u1J6mVi7ClJ6o4
S7CFp7EkS7Ezu7C5S7MiK7EMJyjQZVmO5VmB49XM49TUY1WZVVibdViVY9TE
1Rjg0Wrs6mzkGqzJWmzoUWrgkarLegziCNXncDVgQ9b3MDViY7ZkKwawCeu5
OZtyqOo6kHXcjLU9RLU8WC04SDU9UDU8QNXdmm3Ylu3YX+3ZT9XcV1XdgR3Z
R53YW1XcS5XdU13ZjWM5jpXcnaM4mj3YkxXdi4PYQ73ZhxXcl/3YXeXdTf3Z
VQPYRQPZWeUcpLIezCEcymEczpHspDLuqNIewVLuoJJurxIew+Jup2Juq6Ie
zylsowmcyCJurUmczMJupUJuqalsoYJurukM1Aw200zO4mw2VQHP5Rw2UX4H
KJ/nMa/nM48b61/9PUba
           "], "LeafValues" -> CompressedData["
1:eJxNUEsOwkAIbQde4tIreAu3Lt3WeIA21sZNTVoT4208qjC8mUpm+MMDDsOz
u6emadadsa5/n5al/1z2Zlzn9THN4+08v8ZpXI5Da86vMaioJjWCwh/ETIEW
cs1SgEjR+uhAytx+CqeAVd7LA7k252QISwgZcGA04kT0KUK4IoRGVokWtexq
gQjqNqVZksTQpCVONCWu4m9BgnLObUd+8UFcitYy+cPiMnEo1dqqTFfwS/ty
bYlr8PJ1ON0IPx0yE/0=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkltLxEAMhaOCN1RUEC8sXlj1RRB90M5Ot7dtp+Cr/oIVVn1SWAXx3/vl
KEPbTJJzcpL07Pnj8WXRzD5XeT1Ov5v5fPrztMbl4f1r9jqb396/LXB757Vh
E9u2ZNdWWGYjqy1YaR23PW7JTqzF7njv2IqNrbEj68lpsXoQf5io3Bxvzxlb
xVPgy2VVdkxeSZZzTTg5WaVyK+wbvA0sXiuS7/5I/JRMZxsQr7FbatRoiapa
cQLRIdiAr7crosm2iLo/gaqkMpDd2yGnwlfia8TsmjswrmICwznfHTF1YBJx
7yHYvvq8k2pHnMIeOXegStWcEC+keqwTNLESK5NK13IiNQMhGmFKxVxltE0e
VzXCm0v1BdYIqyL/kh0N+Q6l2mdRUSEH7co6zdWZkrT79tap1MKaqedb7Fpd
Fnag3XRwNlISNdFI7FJT7VTV+17WPgNMSaxJW4vUzW2JfnrbRVGixkC4Fn9S
B4Et1PpLXG2hnWZUHugv8+6jNuv57f+8R9p+o+q5qiVtpgGxQDxoCi2qnK3V
NjJNZ8ytk5XBkDT5DaK/zkZb4Q==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
tcfhQkhURlOk1ir8P6Nb9oA=
           "], "Children" -> CompressedData["
1:eJwViWN4GAYYBu9LbZup3aa27aZ2kzZ10y3tVm6dyq22bdu2bdu2vnfbn7vn
ngsM7R7cPgDoEf0/BIf0KhcREdKnfoz/olp4z7AOYRFBhTv+/8MN/ncAkYhM
de1kF1GopqhUVTSiE4OYLGcFsYhNK1oTh7jkIS/xiE9SqigBlZWYJCSkkhJR
UVIFucrru8opGclJQVl9U05SkorUpOGryigt6chIJr6otD4rPZ8UyEdl4INK
KTMllZUSykJxvVcxvVM23io7OSiqNyqiXBRWbgrptQoqHwVUklIEkZ8CFKQ4
+fVKQSpEPhWmCC9VlGLk1Qvl0XPlVgly6Zly6qlKU5ZylCGHnii7ypNNFajI
Y2XVI2XRQ1WiMlWoSjUa0JDqZFYtMqkGGfVANbmvDKpNHe6pLvUJ1F3V446C
ua30uqV0akRjWpJWN9WE5qRRU5pxQ6l1Xal0TS24qpS6ohRqQ3K1pR2XFUIo
yXRJSXVRYfzEz7SnAx3pRGe6cEFJdF6J1ZVEOqeE6kY43Umgs+rBGf3Aj8RX
BPF0WnHVkzg6pdjqRW/+Ipb6EFMn9Qd96Ud/fuE3YuiEoutXBnBc0XRMUXVU
v3NEUfQnkXVYkTSQQQxmCKMJ0FBMo0DD+Jt/GM4hyQ9qBCNxP6Dvvl/ffJ++
+hjGMo7xTOaL79UEJvLZ9+iT79YkdumjT2Eq0/jgi3nvOzWdGbzzmbz1Wbzx
2bz2Obzyucxjh+azXS99mxawVQvZokVs1gtfwlI26bkv45lv1FNfyRPfxGZW
sZoNeuxreOTrtZZ1rGedNrBWD32NNrJaD3wL930H93wr21il7azUXV+hO75c
t303e8huOWwv+3DEfg5wjvMc5BCnOM0yHWapbvkSHWGxjrJIxzjOCRbqJAt0
0+frhs/TdT/DNZ+rs8zRVb/ARe5xn0tcZrau+BUu+x0u+VWucZ0bzNJFn6mb
zNAtpuuCT9Ntpuq8T9FdJuucP+Ahk/SdiXrEY54wQWd9vM74U57xnBeM02de
ctpf8ZqxOuVvOOlj9IHRess7Tvh7jvsoHfOR+sgnjvoIHfEvfGW4vvGPDvvf
OuTDdNAxs7SWzgIskiWxpDZUkW2I4thgRbGoFs2i2wGPZfs9hsW0QdrnA7XX
/1Js+1N7/A/FtXgW337Xbv9NCWyAEloi2+W/KrH9op2ezHZ4SktlyW27p7Bt
3l9bPbVt8X5KY3212ftok/fWRk9vgZbBMlpW2+C9tN4z2Tr/WZntJ2Wxnlrr
2WyN99Bqz2m5rIAVtNy2yiMUZD8qj+W1lZ7PVvgPWu75bZl311IvZIUt2Opb
EStqFayihWuJF7PiVsJKWjct9lJW2rpqkXdRGeusctZJZa2jFnoHlbf2WuCV
rLLVtjpWxeZ7dZvnVW2uh6matdMcr2Gzva1qWqhqWYhmeRvVtdaqZ60001tq
hjewhtbGQqyRTffG1sRaaJo3tWbWXK2tmaZ6c5viTdXCmqiltbLJ3liTvJEm
eqi1tTBrbw01wRuondXXeA/WOK+nDtbROllddbY6GutdrKvV1hivpW5WU+FW
Q6P9X8/b5Pw=
           "], "LeafValues" -> CompressedData["
1:eJxNT0EOwjAM65pE4rgv8AuuHLkO8YBNlIlLJ3VIiN+T1kmhlaLEceL4uGzT
I4YQ9oOGaX6fS5k/11GLW96fa073S36lNZXTMii4aRBmEcZnixVqSG02kDgy
GkwSayFOEWQifcwWYLrjbRVpSjUnrO5iPkqgdhiayAzosrbBLu86rRtxYH3R
DwWfpJmot5D75J8DV9SmCRPKRuGBnINE7YBke8hb7pz//Qh/AST2Evw=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkllLXEEQhWuiBmUGURJEoiSGMVEwDyroXWZu36VvN/hqfoEBo08RJoLk
3/vViRS91Haq6nR//fV0+/udmf3dZLu9e+lXq7t/P7dQbv483z/cry6uHydo
T2wXVtqlNba01mpLlllTm3MeWLBdi8ihrduIf7CKyAK9Q2qksmNuA5KI+MY9
2LbtoxfEN0TscpvaGtYafcLuuRvoUVUGzhJLK3vE04KalZ9Ba+wUvILYQIUT
m1Ep2Q9bCKmyMzwRlBFZMIVPEDm9qwnZibgjfBX6nIh1VkHFGrykCVrOaFdk
ZFl7JAplJKcXtq8dWVr2z1i9u2PlemRPjRnIiRWoUYgRnzggBZE+Yy+mPmqu
c02bQexU+VD9BPskVOfcu5qRE8SRMxK5H9l3ciJ9j3qz9i3fWRnU+x7eTl3N
3zhMRP7vaMm+rbdqxEbHOVJliucDkR22Uuz19gVfySznYq9Qv40YKjmjWK8U
kzV1RiayLfHVZNX4Wr2U8xawz6lVK9ZfIcua1NNCOBFrYi2EkzVhEMYa/9F9
3lGn+pX+Q+AvDKqQ8TmL78W8v0tjr9xZWaU=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
rDrh/4p5Gi8=
           "], "Children" -> CompressedData["
1:eJwViWOYEAgURc/Ltm1rsm032c3UzOTZJtfuhjVqs23btm3btnt3688953w3
Y3B4YGgkoGeMbxMY1LdCRERQ/4Yxv0WN7r1CwkIiAop2/P6HG3xnJCIThagE
WkOLRnQKUogYxCQJSYlFbUmxcdVSHOISj5pKRA3Fp7oSUE1flZAvqqrEVNFn
VVYyKik5KfikikpJKtKQlo+qoA9KzXuVVzrSk5dyykBG3qms3qqMMpGZLGTl
jUrrtUopG9l5pZLKQU5yUUJ5KK6Xys0LFdNzFVU+8lOAInqmAJ6qsJ6okApT
hGgW3YpSjHOcpzglOEtBlaQUFajIY5XmkQJUhgIqSzkeKr/Kk08PlFeVqEw9
6nNfVahKHt1TblWjOjXIpVrUpiY5dVc5dEfZVYdsuq263FJW3VQDwvmBGwqk
IVnUiMZcVxO6kVlNacY1ZVJzWtCSjLqqDGpFerUmndqQVm1pxxUFEUIowaTR
ZbWnA6l1SakURkcuKqU60ZkLSqHz6sI5deWskuuMkum0unNKSdWDJOpFbyLo
yUkl1gkl0nH1oT8D6EtCHVM/jiqBBhJfK1nFEf3IT/zMIAYzi9kcVjwNYSi/
8CuHNIPf+J2xjOOg4uoP/uQv4uhfhnFAf/MPsbVfsbRPwxlNTP3HCPZqJHsU
Q7s1il2KrjFE005F1Q6NZypRNIGJbNcktmkKWzWZLYqszYqkaZg2aTobhTZo
Jusln8NcluO+TvNYzFefzxdfwELWahFr9NlX65Mv4aMv5YMv472v0jtfqRWs
0FtfzRvfxGbWsJZ1vPblWs8yvfINvPSNvPCleu5beOa72M0SbWUb21msp76D
J76Tx75Ij3wPe1moQyzQPg7y0OdrPwd44PN03+fqnh/mrs/REY5yx49x249z
gtk6yRlu+Slu+iydZqZu+Axd9+m65he4yEc+cYnLvOaqX+GKX+Ua03TZr3OD
hzziJreYqks+RbeZrAdM0h0m6i73uM8EXfTxuuDjdN4fc85fctbH6glPecYY
PWe0XjBKZ3ykTvsIveI/nfLhesNbTvo7TvgwvedffeAfHfe/dcw/84WvOGaR
TBz9Jkf8Lx32P3XII1sU+0MHPaod8N+133/TPo9hMa2m1bJfFcuq2F6PbXEs
rsWzxJbEftEej28JLKHt9qHa5Ylspw/RDh+spFbEitogJbPklsJSWipLa+ks
tW33n7XNf1Ia+1FbfaDSWwbLaAO0xfsrk/VTFstsm72vNnlWy2Z9lN1yWE7r
rY2ey3JbL23wnspjEcprPbTef1A+C1d+664CFmDrvJsKWiFb64VtjXfVai9m
xa2LKloJK2llbJV31krvpFLWUaUtTCu8rC33crbMy9tSr2BLPFSLPUSVrLIt
8g5a6FWtmrVXdQvWAq9h8z1I87ydalsdq2ttNdfbaI7Xs9le3xpYa83yVprp
jWyGd7Vu1tiaWFNrZm2srTW36d5S07yFWlhztbRW1tqaaao31RRvZ5O9g4VY
kE3yJgq29jbRG2uCN9J4D7Uw62jjvLON9YbqZIEa4w3UxeprtNfTKO9u4VZX
I72ORvj/FF7m+w==
           "], "LeafValues" -> CompressedData["
1:eJxNT0kOwjAMTGJb4tgv8AuuHLkW8YBWhIpLQCkS4vfEW9PGmY63iX2cX+Mj
hRDWQ4Nx+p5rnX7XoTm3sj6Xku+X8slLrqc5tuC7ASJRMwE2NI//STjyp6yd
yIh6rcxACYIqogkSAjCDJEKSJS+zKgltXMVNoUupqg5DPgL0kbWTbwRrwn0T
9k09s2Vd1yf3pAaB3wEx9nR4QO/dP8WLmhoRmBT3gO5I9AdANxMJ
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kstKA0EQRUsRMaISdy4CIQzGrW6cR2Z6Zno6A27jF0TwsVKIgvj3nrpG
mq6u6rp1ux69ePrYvBya2ecJYrP97ne77c/jBOPh/ev59Xl3d/92gLVFnFpj
C7u23lZ2ZHMb0DorbM2qLLcWO8eX0GZgO+zWRougV1Zjd1iFZMJ3QVQGIljJ
XQvLyFmBrTgTa4qvZVW8FYgIdiDGNTKyOrSkuIg36gXnKeEeFNlz1mxHB84B
b0aMvzQgW/TA3UDMSPa5+BLoJbFrfCuhavQcjMu1EB5Z4u0V2WDndruvMGBH
7p2h45zZFRkVoAswlWK9N0vQQR1IWp5HJ+n850S1doZ1par/M42SXt2gTC73
VVbsArtWfwrmlfF2YRMi/K7RnEp0n2CpHvRiy/ZcNdqKFVRVQ0WOT8p7xi6w
o7oYQQ4ggroRuPe6vYslXD7Fv2yCplcxN5/7RP1pNJ2lOH0uSfOYqlujejEF
k9i16u6053ukzyLX/xjtTn1uxXkjT69uXqBF/Rmv8FisPZhfx7Fang==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
B4m9J3OW+9C9/Wr4P8Rt6zg=
           "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufbbNu27TYbm91Wm7lZF+7qLuOu7rJt27Zt29b3Xv2ZeeaZ
VC26BLUOALpH/Img4N6BoaHBfWtF+hkVO/cIaRMSmit/218/2OCXAwhDWMJR
wApaeCKQ1JJZRCIRycopMlGQ7hKVaJzlHNGJges0PxST5KQgFrH5rjh8U1K+
Ki7xiM8XJeCzEpGQsvqkMvqoxCShtD6olJIRqPcqqZSkYhrTSU0a/mESaUlH
fwaQngy8UxPeKiOZyMwblVAWiisf+XmtrLxSNrKTg5wU00vl4YVy8Vy5eaai
eqq8PFERFaAgdahLIQrzWCV5pCI8VGEVpRgPVEj3VZx7KsFdFdQdBVKK0pSh
LOUooNvKr1vKp/LkVQXyqCKVqEwVgqjFTeXWDVWlGtW5rhpcUy5dVU2uKKcu
K4cuqTYXlV0XVI8GNKQ+2XReWXVOjTirLGpMZp1RJjWlGc3JqNMK4ZSCOakW
tCSDTqgVx5Vex9SaNrSlHenUkU60J62OqgNHlEaH1Zk+9KULXelGanWnB6Gk
0iGl1EGlUE+SqxfJdEC92a+k2qck6kdi7VUiDeQ3RjCSPRrEbv3OYBJqCAm0
S0PZqfj6g3gaxnB26E+26y+2Ka62Ko62aBSbFVujiaUxjGUcMbVJExhPDG1U
dE0kmv4mqjYoiiYTWesVSf/yH+sUUWs1halE0BqF1wxmsoSlzGI2qxVOc5jL
YsJqHvNZpTBaqQCt0AIWsojlMi0TWir5Ei1jN+7LWcFKVrGZLaxmDZv44Yv1
3deyjvVsYJG++UJtZIG++nx98Xn67FvZxk4++VxtZ44++g4++Gy9912881l6
63vYyz72c5A3PlOvfYYOMF2v/BCHOcJLP8ZxpukoU/XCp+gE/+kUJ3nu/+qZ
T9ZTn6Qz/KMn/rfOc5FLTNQFJuixj9dlxukWV7jKWD3yMbrGdR76aN1glG4y
Ug98hG5zh/v+l+75Pe7zgId85BOPeMwb3vKEp7zgrj/jOX/qjg/XbR+mW/6S
V/yh1/yumz5UN/wd132IPjBY7xmka/6brvpnrvhARbAvfGWAvvGdH/TXZXdE
GAtr/XTJ+wrrI7PeCrBeuujh7IL31HnvofDWXec8op31UJ3xyBbFuimqRbPo
1lWnPYbFtMSWxLoolnVWXOuk2NZRcayDTnk8i28JLKElspPeXie8nY57Wx3z
NjrqrXXEk1sKy2eHPUSHPKWlstR20HPYAU9jaS2d7ffsts9bKb1lsIyWyfZ6
ZstiLbXHs9pub6Fdns12erB2eHNt95yWy5optzXVNm+iPJbXtnpjbfFGym8N
tdkLWWFroOZWxIpaHatr9VXM6qmcFbcSVlclraxt8kDb6KVsg5e29V7G1nkd
rfXaWuPlrYJVtNVeS7Wskq3yylbFqtpKD9IKr2bLvbrVsJq2zGtqqQfZEq+h
xV5dta2aFnk9W+hNrKlVVX1rYAu8oTWyKprvjW2eV9Zcb2ZzvJJme0XN8goK
tvKa6f8DszLLCQ==
           "], "LeafValues" -> CompressedData["
1:eJxFUEsOAjEIrQUSl17BW7h16XaMB5iJdeKmJh0T4+19FKhNC6/w+B6X1/TI
KaVtDzHNn3Nr8/d6wOdWt+day/1S32Ut7bTsYFQhLELCzAAkEECq8Ij7kZBm
loDs+M9xrZm6ysxEuHg5ynDkGQEylLeh0ZY/jFFKDIqHd4p7zS2jQHeF26dy
ngTL+8/aIhlEaXTrw3HQTehA2IquSbmICfvIHB3aBuz3AxCnEq4=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkU9Lw0AQxV+tSKO1aPHQg0pF7VkvJtuk+bPZBLzWT1Ch6kmhCuK397dD
CTPZebPz5s3szevX+u1A0vcIt978Nrvd5u8lIXj+/Nm+b3ePTx8DohHuQYUy
LfGdcq3UYJ5zB9ZqTC7w78BLoqkcePTx/r2OtFBNLmAVp55Tp5mG4Ck3HbXe
eK7J1ko4t3B2ZBPDCx2Cd9xymlPV65Io0C2yjc1ipedmg8IS1gAWjMWb+iGa
aw3IOvDAvyDOyQbqZ8Zdoy92nfA1oLHnhLg1jqlO8HHOng4pvoDTGVNnMzlw
T6bSHQqGuuJOivZSFyiImk+xyjjGbMaTz01Nbedge+ptvohE9XN6rGAodUa0
0Lluqals3gEcCZljFKR8ORVRdbZ/oxYfN5La2xS2rQze2CUjW4JFNbVZZmp6
pkgxZ9tb7RV6m6SxLRX6B5phQhA=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
QtKxVpNKv1b4Ly7FUKI=
           "], "Children" -> CompressedData["
1:eJwViWPYFgYAAO+NX7btVsu2uVpatZZtfdk2t7TaWraXjS3btm3Xe2t/7p57
LlWTjtVbhAG6hHxD9cY9SoSGNu5VI9K3qNCha/OWzUNz5G31/w8JwP8OQ1jC
EZ5TnCYCEWlDW0KIRCYyE5koaEqiEo2gfYxODL6anJjEIh69/WJsPhuHT/by
o3H5YE/j08MEJOS9iUhMd9/ZzSR0NSldfGsy3hjqa1Pwys6mopOpSUNaOvrS
70hHel6Ygedm5JkdfGp7n9jO78lCHX4hK20tRGGy0cbHZicHOXlkLvKQl4fm
5oGtzUcr89PS+7awAM0tSDPv2dQiFKUmtShGccpTgRKUpBxNvGtjS1GaO5bh
to0sS0Nv2cCb1rciP3DDn6hEZa5bzx+pQlWqcc26XvUXr1jH6vzsZWtwydpe
tJa1qekFf+a8P3nOGtalHq2p7lmrWZ8GnLEhzWnBaRvRmCacsqpNqWIzfvSk
lT1hJVvyg8dtxTEretQKtqM9hzhMB8o7icl0pBOdCaULXTliOQ9b1m50ZxCD
6UFP+tKPQ/aiN2U8aGkP2If9lrI/A9hnSQdSwr0W91+L+Y9D2ON4djuUYQxn
BEXd5ShGUsSdFnY0Y9hhIcdS0HEUcLv5ncBEtpnPX/mNreZ1i3mcQm4Pksup
TGOzv7OfnE5nBpv8g3/J4Z9kdyZ/MYtsbvQfZjOHucxjK1mdzwL+Zi0LWcQa
sriY711FZje4hKUsY73LWedKVpDJtX7n32Z0jatZbQZXmd51pHM9aV1pGjew
kRVuYjOpXW4qt5DSZaZwG8ndzg52sos9JHOpSV3ibhabxEUmdqGJ3EtCF7iP
+SbwAPGdZzznGtcjHOUYx5ljHGcb21me4CSx/MuYzjSGf3qGK1zlLOc4T3T/
8AIzjOZFLjHdqP7uZaYZxWtc5ya3mGpkbxDJKYZ4mztMNmLgLvcIE4joJO/z
gIf8ZgQf8ZhPfOYJ4X3LO57yjF99zkRfMMFwvuQV433NG8I6zjCONeAY3/MR
HO0HRmlwpMHgCL8Gv/CV4QYZZiAwVBkigcF+CQ7yczBsIFxgoJ+CAwwfiBD4
GOzvh2A/QwJ9fR/8Dya7GWI=
           "], "LeafValues" -> 
          RawArray["UnsignedInteger8",{4, 5, 4, 4, 4, 5, 5, 4, 4, 4, 5, 4, 5, 
            4, 3, 5, 5, 4, 5, 5, 4, 4, 5, 4, 5, 5, 5, 4, 5, 5, 4, 4, 5, 4, 4, 
            4, 5, 5, 4, 4, 4, 5, 3, 4, 3, 4, 2, 4, 4, 3, 4, 4, 3, 5, 5, 5, 5, 
            4, 3, 4, 5, 5, 5, 5, 4, 5, 4, 5, 5, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 
            4, 5, 5, 5, 4, 5, 4, 5, 4, 4, 5, 5, 4, 4, 5, 4, 5, 4, 5, 4, 4, 3, 
            5, 4, 5, 5, 5, 4, 5, 4, 5, 5, 4, 4, 5, 4, 5, 5, 4, 5, 4, 5, 4, 5, 
            4, 5, 4, 5, 4, 4, 4, 5, 4, 4, 5, 3, 5, 5, 5, 4, 5, 4, 4, 4, 4, 3, 
            5, 4, 4, 5, 5, 5, 5, 5, 4, 4, 5, 4, 5, 4, 4, 5, 4, 5, 4, 5, 5, 4, 
            4, 5, 4, 5, 4, 4, 3, 3, 4, 3, 4, 4, 1, 3, 4, 4, 4, 5, 5, 4, 4, 4, 
            5, 5, 5, 4, 4, 4, 3, 4, 4, 4, 5, 4, 5, 4, 4, 3, 5, 5, 4, 4, 4, 5, 
            4, 5, 5, 5, 4, 5, 4, 5, 4, 5, 5, 5, 4, 5, 4, 5, 5, 5, 4, 4, 3, 4, 
            5, 5, 4, 5, 4, 5, 4, 5, 4, 4, 5, 4, 4, 4, 5, 4, 5, 5, 5, 4, 5, 4, 
            5, 4, 4, 5, 5, 4, 5, 5, 5, 5}], "RootIndex" -> 1, 
          "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kk9PwzAMxT3YgX8qYlzQOjYQGhwZB2jTriFd20hcxycY0oATSAMJ8e35
2RqyktjO87Pz2suXz+Xrjoh87bEtVz/1ZrP6fd4nePr4Xr+tN3cP7z2iIVsu
LSuXTmq5lkyC2ZzsTA5lIlF2uSnkhH2BBfGgLrhPzO/wUhlJI338CCqRHnwJ
2QJ7NERH5ZQVyas/AjGApw/ewdNJCTI1xEKu5IzVwtlyNnLECtwEJqrN1wpl
njGBp8LLKcx6RuwAzICVgm7lGJzOds/7piACuchk53TRUzvnpkNlKrS8PrE+
mc2QE8/Y43amwtCK9/jKNiby8OjLauPQikCkqBr+SDYzhkCuMe4K36FEgspz
sLfGVJupYoE61akwnaOp+8/XonGDV/JdPPoMYa54XzDmhfV2djMmdvB7qpyx
OTpG9NFd89rthvrcZtT3TqhWXGWTR+5L+yPm20n+ANn4RYA=
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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

           "], "Children" -> CompressedData["
1:eJwViVW0UAUAwHbJR3cr3Ui3IEin0oh0l0g8GoOQ7m6luyREDDoVpUuQ7u6G
O/FnOzvL0LJL7bZRgO4R71C7Re8ykZEt+taJ9S6qdO7Rpl2byPxF2v//Uwfw
v6MQlWhEpyzliEFMPiA3EcQiMUmITRzi0U/ta2hc3trH+PQ2Ab1MSE8T0cM3
djcpkWYjO8lITgpS8h7vk4puvrarqeniK9Pw0s6m5Usz0cl0pOeFGXjuF2ak
o8/sYGaykJX2PrWdT2xrDnLy2DY+MhcPbe0DW5mHvHxES/PRwvsW4p75KUBz
71qQOzazMEUoSjFK0tTbNrE4jf2QRt6yBDdt6A0/97qluGZpPqaBZfjMq9a3
PBXozwAqUokv6ERlqtCeelalGjWoSXU+4Yqfctm6XrKOF61tLWpzwZbUoS7n
bcI5a1mPmp61Pp/RgM+pYUM+9V8/sRHVPWNjTlvNpjSjOS34x6qesoonrewJ
W9GaSrahom2p4HHbcczyHrUDHSnnEcv6JWU87Nd0pgtd6UY/PvaQpT1oJN0p
ZQ960ouPPGAfelPSvy3hX/Zlvx/6p1/xh8X9hmJ+S1H3WcSBDGIlq/iOwey1
sHscwjCGs9uh7LKQOx3BTGaxw5GMYjTbHcM0CjqWcWyzgFsdzxYnMJFJbDa/
k5nC7+bzN6fyq3n9xenMII+bzO1sPnAOc/meXP5ATn82hxudx3wW8JPZXcgi
lpLNDS5mvVldQhbXmdm1LuNHl7PGFaw2k6vJ6EZ+Zg0/spYMriO9q0znStez
gZ9YYVqX+76b+IVlxg9+5TeOcJSl/s42trOZ99zCVpaYxsWmdgc7OcBBdpHK
ffzBblK6hxTuJbmLTOaf7OdvkrrQv1hgEueb2Hkmcq6HmONhfjCh35vAYxxn
tg84wUnOcZ5TxPc08fyHuM4yjmeI7Uz/ZYZnmW4sLxDhNWI6zYtcIoZTvcwV
onuVaE4xqte5wU2ieJfAW9xmsneYJE7U8B5hOMH7jPdt+JBHPOYJ43wTPuUZ
cYPX4Vif84rXjPEFL3kVjvZl+Ia3jDJKMNIQghfhCGW4z8MgeBYO82kYNYgW
RA+ehDGCx+FQH4Uxg4dhRBAriB08COME98Mh3gsHezeMF9wJv/N2OMgEQcIg
UZA4SBKkClIHSYNb4UCTBwNMFvT3ZpgiSBl8643wG6+HX3st/Mqr4X9aPT1Q

           "], "LeafValues" -> 
          RawArray["UnsignedInteger8",{5, 4, 4, 4, 4, 5, 4, 4, 5, 5, 4, 5, 4, 
            5, 4, 4, 4, 4, 4, 3, 5, 5, 5, 5, 4, 5, 5, 5, 3, 4, 2, 3, 3, 3, 2, 
            3, 3, 4, 3, 3, 2, 3, 4, 4, 4, 3, 4, 4, 1, 4, 4, 4, 4, 4, 5, 4, 4, 
            4, 3, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4, 
            4, 5, 3, 5, 4, 3, 5, 2, 3, 3, 5, 5, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 
            4, 5, 4, 5, 4, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 4, 4, 5, 4, 5, 
            5, 5, 5, 4, 5, 4, 4, 5, 5, 5, 5, 4, 5, 4, 4, 5, 5, 5, 5, 4, 5, 4, 
            5, 5, 4, 4, 4, 4, 4, 5, 3, 5, 5, 5, 4, 5, 4, 5, 4, 3, 5, 3, 5, 5, 
            5, 5, 4, 4, 5, 4, 3, 5, 4, 4, 4, 2, 4, 3, 3, 4, 3, 3, 5, 4, 4, 3, 
            4, 5, 4, 5, 4, 4, 4, 4, 4, 4, 1, 4, 4, 5, 5, 4, 5, 4, 4, 4, 4, 4, 
            5, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 5, 4, 5, 4, 4, 4, 4, 
            5, 4, 5, 4, 5, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 5, 4, 5, 
            4, 4, 4, 5, 5, 4, 5, 4, 4, 4, 4, 5, 5, 4, 4, 5, 3, 3, 4, 4, 4, 4, 
            5, 4, 5, 4, 4, 4}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kk9PAjEQxQfxIGIM6oUYEjWKHjwIF3fZ/7vdknjFT4AJ6kkjmhi/vb8+
IE3b6cx03nvTXr18Ll73zOz7gGWx/K3X6+Xfc4/D08fP6m21nj6+dzh9sZxa
yqgsttq8RdYyJ5ZgDy23kvOA2WCPiBTmsIbsE05z4t6usRI7xn/EbMiYEG/w
OUZN1sgym2EleMfsNyA6siNQN/7Yzpg5efvECvaENaJqq+qpdUGK8dfimotv
Kc4tCM7uqZ1y7klDg1ULpU+Ws440ZuwtSKFGI/xru2RNYVFsVW4Ultgz8j25
BfVzoTn4ePzHWClKvLiHWEc8nJhU6l7OTNW1UKlkZJx6ZHmyWrsj8xwOsdRG
6vcD/kQMZsKa49+n3ol6MCZa6Q1abjRSsOGT2aHyKmW0qpmqc6XOmdg37A5f
A1LYc+rPxSX0cmCPRCp134O2e5u+tBypt4U05ERnsr06O2DtEg3vUNHRmOwM
vKAkvL7XndDxUuods1S/dnzn6Kj0lh3+TtARbl2A0m77HX6mo0K0/aOpqkXb
HxDuTrmTsIZ4F7yg/hZPYv+YK1nv
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufbtNm2bbvNxm72Vtturq27fJ192bZt27Zt2/jeqz8zzzyT
sV2P4I4BQO/ArwgO7RsUGRnaPyTm16jRvU9YeFhkwWIR334vg28OIApRiUZd
q2fRiUF9GhBIXaUmDTGJhRSbBCQkDnFxxeOL4vNZdfRJtfVRiUhCLSWmpj6o
ht4rKcmoruRU0zulICVVlYoqeqvKSkslZSQTb5SO10rPK2XgpSoqM1moQBAv
lJUSBCkb2clBTgpSiFzkJi/5yEMFPVd5PVM55aesnqoAT1RGj1Vaj1SYohSj
CKX0UCX1QCV0X8W5p+IqSSnuqphKU1RlKKKyFNYdlaM8hXRbBVWRStSkFpWp
wi0V0E1VpTr5dUPVuK58uqYaXFVe1SaPrqgul1WHS8qti6rHBeVSMCEM4Uca
0ohudKcxTTivnGpKDjWjOeeUXS1oSUfCaUU2tSOrWtOGs8qitmRWKJl0RhnV
ng6cVhinlEEnlV4nFMFxdeKY0qkzaXVUXehKGh1RavWgJ/0ZQC8iOazvOKRU
6k1KHVQfDiiF9ut7+pJc/UimfUqqgQxir5JoMD+wR4m1W4m0Swn1Ez+zkEX8
QgLt1GR+5Td26HfGMo4/+JO/iK9/iKe/iavtiqN/ia3/GMowYmkUoxlOTG3T
CEYSqK2KoS2KrjFE02ZF1XgmMJEo2qQAbZRpEmiD5Os1halMYzru6zSLtZrB
Gs1ktb74bOawSnNZwGefxydfqfms0Edfrg++mCVc4SpLWcYe9rKcFWznvS/T
O1/JW1/FapZqDUu0mbWsY7He+Ho2sJFNLNJrX6hXvkAvfb62sJUXPk/bmKvn
voOd7OKZz9FT380Tn63HPkuPfB/7OcBBZuqhz9AhLvLAD3OEoxzjBCeZrvs+
TceZqnt+irt+ljt+mjNM0W2frFs+Sec4zwUm6qZP0A2/xGXG67qP0zW/xnUS
WWK7wU0CLIrd4javeM0d7vKEq36PKz5Wj7nPZX/AQ8boko/WI0bpoo/UBR+h
pzzjvD/nBcN1zl9y1ofpjL/htGOn/C0n/R3vGaoPfMH5yAn/xHH/T5/5V8dc
HPV/dMT/1mH/S2Z/6pBHtWj2h+Lb74puv+mgx7ADHmj7PabFsl+1z2NbHPtF
ce1nxbOftNd/1B5PYLs9oe3yIdrpP2iHJ7GklsySWwpLaYO13Qdpmw9UKhug
rZ7a0lhaS2f5rYCltwyWy7Z4RstkWSyr9ddmz2ybvJ82ejbb4Dksp/VVdvte
6/07rfM+Wuu5bY3nsdWe1/JZb63ySK30Xipo1a2GFbLCVsRWeDErbj1V1Hpo
uXdXCStpy7yblnopK21dVcbK2xIva4u9i8pZZy3yChZkFW2hV7YFXsnmeyfN
8yo21yNU1cJVzTpqjte02R6mWtZBs7y9als71bFQzfT61sDaWFsLthne0lpZ
iDW0RtbY2mq6t1ETa62m1krTvJk1t5aa6i3Uwpprire2yd5Mk7ypJnoThVqY
dbR2NsEbq701UgdrqPEebhHWzcZ5JxvrXW2Md7bR3sVGeYhGerBGeHfrYQ00
3Ourp/WyYV5PQ/1//S/q+Q==
           "], "LeafValues" -> CompressedData["
1:eJxdT0EOwjAM21pH4sgX+AVXjlyHeMAmysSlSB0S4vekddoKqtVLY8dJDstz
urthGLadwjS/TynNn8teH9e4PdYYbuf4CmtIx2XUZFKA5AN4gaIT8fonaFyo
DEyozMPp9YUGcg2MYlnzKrZSFc1IyIGcJViN/jUNXcQiy9Lzx9QC5BkyiL1c
kerAIzzIwAzZp85DR7RBdOW/BarCCtFKrFedTaSL+r5sn6MvakcTIA==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkktLA1EMhaOIaC2tiuBgB7TUzkYEu3E677nzArd17aJC1ZVCFcR/75d0
uGRuHicnuclMX79Wb/si8n3EZ7X+ddvt+u/5GOPp82fzvtkuHj/2sF74VDKQ
TCJJJZaRzOVCQrRGWlkiIafDF2OlSCYJ2A47Q3bICN9YHohGnGsJpAbxQHYH
KpUSiXqGEi0jR/mVNaB+jl7gmZDb4PPEBzWDxSOjIW/IUe4rY0nkHkmtu4bb
hyMm2vLNqbm0nBrOCu2S+LivUosjXhKpTa+wVGvMnyIJ0dxs7UmtEH+Ib4l9
S5WKXjrsCkQgd9wpL6qJO2MszXIgtOPcZtByu545l0OYlN03fyun9O1b/zPs
hdzYXTIPnUohJ8zBg8W3VxTUy22CDl9GN62cUz20rpx1XpPtQA7J0Tlpj2dg
dUe7jRWGDMB1htHsxurl/APKM7C5FDZHz9BD20+JVOR0+Je2x1gO0HRLzqI1
Wt3/F61V1xkHRGNydKL6moq45if4J8xAmebwFkygRTx74Yi3TW0aOXdg/Sle
9/8P6jxVCg==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
Jp4z/gekJ7GG
           "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Zt2+6rbfvV2tq2bdu2bdu279n2J5lMEjfuENA8CNA5
1F8ENOpeODCwUc8qof9G6fZdmrVoFpg5R8t/v57BPwchKMEITmayEIIakqor
JKEITRgiEomwVJOrqsIRnj+KwG9V0S8FKDJR+KlMRCUa8YhPdGLwQ5UVk1h8
VyV9U0XFpoLiUF5fFZcvKqcEJCQlqUhEWX1WMhJTRklIyieV1keVUnJK6oNS
8F4l9E6pyUhxpaGY0lJU6UjPW2XgjYrotQrrlQrppQoqK9koaAWUnRy84z05
ycVRjpGbPJSnAnnJxwuV5Lny80wleKoCFCS/CpFPhSlCUYrxRHlVnDx6rNx6
pFx6qJwqRQ6VJrvKUJYHyqZyZNV9ZdE9ZVZFKlGZAPaRSVWoyha2Uo3qzGcB
NajJdGZQi9rc1TTqUJfJTKEeGdWIxtxRfRqQQQ1Jr9tKp1tqwlDSqinNaE4L
WtOGm0qjG2rJdbXimlLrqtpyRR24rHZcUnsuKpU60okLCqQzKXVeKdSF5OpK
MnWjO+fUg1705qx6ckZJ1Ye+9GcAp/Ufp5RE/Uisk0qkE0qogQxiMAl0XPE1
hHg6prg6qmEMZwQjiaMjiq1RjOawxnBIExhLLB3UOA5oPPsVUxOZxD7F0F5F
11SiaY+iareiaJcia6dmModImkVEzSaCdii8tmsu8winbQqrhSxiqzazmCVs
URht1lJWsoplLGcFobVJobRRIbWaNWzQBtYSQutYz3oF1zoF01oF1RptZBNB
tFqmVUIrtY0dyLfjvkJ/fCe72M1vX65fvoefvpcfvkzffan2s0QHWKyDHOKb
H+arH+GLL9JnP84JznKOk3zyhfrop/jgp3nvZ3jnC/TWz3OBJzzlIpd4wBu/
zBWucZ35uso8vfa5euU3uMk9XvocvfBb3Ga27jBLz32m7jJDz3y67jNNT32q
HvKIJ/6Yxz5Fj3yynjFJD32invOCl7ziNRP0wMfrDW+57+N0z8fqrn/gjiex
pPaRT3zmC/Esvn3ltke0W/6N7/zgJ2MUwn5x00crqP3mD6PkjJSZuOEjhA3X
dQ9i13yYrnowu+JDFdyG6LIPVkgLZaEtjIW1cBbeBumSD9RFH6ALHsHOe3+d
80gW2fopikWz6BbVzvp/OuN9FcNiWWyLaae9j055b530Xopjce2E99Rx76Fj
3l0JLKEd9USW2LrpiHfVYU9myS235bEUltJy2SFPZQc9taWxLjrgaS2d5bT9
nt72eQbb6521xzNaJstsuz2bZbdAZbGstss7aad31A7PYdu9g7Z5e231dtri
eS2f5bfN3labvI02emsVsFba4IWssBWxotZSdayYFbcatt5LWElroepWykpb
c63zMlbWKlola6a13lTlrLxVsCZa44212htplVe2lR5gVayhqloDVbP6WuH1
tNzrapnXtFpWR0u9ti3x2lrsdW2R11I9q6mF/j/jK8MN
           "], "LeafValues" -> CompressedData["
1:eJxdT0EOwjAM2+pW4sgX+AVXjlyHuE7aRJm4FKlDQvweN8k62Na4qeU4yWF8
dnfXNM28I3TD+5Tz8Lns+bim+TGleDunV5xiPo4tyZ7gfZCfXyCigDGalsAq
kcubPChl6l9NLZVaMGM4D8A8QvWQMHX4O0JXd8gbWlvnIO1UtqAaLeZywdox
b3VNm9tvNmUXFEnpwzKocJ1iaWo8tlvofDY6zxfH9RKh
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk9tu00AQhidQVTRKKxBcRK2hjdKGC26aC7AdH9Zrry1xW56gSC1cgRSQ
EK/Dk/LN32i14zn+c9jx6uvPu8dnZvbrBeTu/k/c7+//fjlB+Pzj98O3h/32
0/cZ0j9IbY0N3N4SN9gCWnFKu7ECfmeR79ZyebSW2Rm2kYiIb25z+MpOrLMJ
nfMX2Bs8a3SlIjIyDEgtCDU32hI5oEn2Aaknzq0TZ43uCF1SVIAL2B3lPXxE
l+wWvxzuOfQMfuC6xaOW0IYsPXJv11jmVB9AGKi3I9NLvgn9FdEFntdU2RNV
YyvBO6WHgPcOnEqZZnCvbYNPqyytZrSj9lJoOXzS6UCN4CRVtADnVF15555l
spUdg9TSY69eRqH1RAb5TcxyENIo2wCdQ9fg3arTtfTdoWP3e3qZpBknO4cO
mnOQvabLZK/gV3wL6iipLNJ3j7TRm3juDcgZ3KXkrV6x5lSapPvGw6wn+B2W
p1co8CuIragkkr3QdgxMcqk5TMzIozN7hzbXK/aqN9d++c4UylKo5wjv2AvF
eS0lGu+zFs4WS6ut8K58s44U1x2mFRQzSBfweUt8BlYj/GP14Fs/8X6TvHye
uXKNms6oPSqprQS1sY/QTNN8I8xGFU36E2ag/gfNl2UT
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fROB/B0NwhEBIfMJnhEJo
NEA2h0FYpEU6hEN4JEYSREBE2IkQCZEhZ3UUZHFsxEFUREN0ZPZfZ3IMxMQf
Z3QsZPBvp3dcxMMvJ8RPp3N8JMAPp/V3p/E3p/Y/SOWvTumkSIZUSOHkSO4v
TuYUSOrPTolPTuLUSOw0+McfncjpkQG1kdAZkQk1kcCZkQUfHN9ZkQ1VEM/Z
Edd5kBfvnQM5EcfvnAtvnRtvHNv5kB8VEcsFUBAlENOFEMOvHd2vXBhFUBQv
Hc0vXAzFEdXPHcXPXBKlENmlUQZPXRZPHMmPXQ7lEdEVEMGPHN4PXQmVEc4P
HNZVUQ3VUQP3Hcb3HNp3Hcq1ENJ3HMJ1UBe3Hdy3XA83XR83HMwN0QiNEYB3
oJugKWZiFpohEC3RCtcNN0cLXLN11VJrtMEV/1VbtMNU/FF7dEB/DEBH/NZl
90Un/FIQOqMLfqobuuOSu+Kif6gHvuuCv6kneuG8e+Oc++Csv+qMv+i0++GU
P+ukB2IQBuOEP2kIPmoSJmMoPui4h2E4RuCYR2IU3uuo32k03moM3mgsXmsc
Xmk8XuqIJ2AiXuiwn2sKnumQn+qgn2gaHms6HmkGHuqAH2g25uAN3mIu5mEB
FmK/52Of72uv72kRFuMl7moJ7mg5VmCPl2K3l2GXb2slVuEFbmk11mAbtmMt
1mGnb2o9bmiHr2sDrmkjNmG7r2qbN2Ort2ArrmiLL2sHdmKzL2kXduMsLmoP
LugADmIv9mGTz2s/zmmjz+oQDmODT+MIjmK9z+gYTus4TmCdT2mtT+okTmGN
T2i1j2uVz2Clj2mFz2G5z+MCLmKZj+oSLuMKruIpjugaDmupb2CJr2OxD2mR
b+IWbuMO7uIJDmqh7+E+HmCBD2i+92ueH2KuH2GOH2O292mW92qmn+E59miG
d2u6d2maX+E1dmqqd2iKt2uyt2mS32OiP+AjtmqCt+gLvqIcy/MbvqM0N+sH
fiIlU/EXfmO8E/IP/mKcE3CsN0kwwI0KwZAkg3GMN2i0g3OU12ukQzE0w3CE
1yks1yoyozAcw3O412iYIzAiVysSV2moVyoqo3GIV2iwozMGl2uQlykmYzE2
lyou43Gg43CAlyg+F6u/F6mfF6qvF6iPE/EfJmYSzldSzlNvz1UyzlEvJ2cK
zlZPz1JqpmEPz1RapmN3z1B6ZmBxlmBGZmJRFmNmTlcWZmU3T1NXZ2Me5mV2
TlUX52Bn52Qu5maQp6iTJ6uj87GD87O9J6mdC7CtC7KNC7G1C7MIJ6qVJ6il
x6uFx6m5xyrQJdnMpdjUY9TEZRjgsmzs0arAimzBlqzEymzAhqzCqqzPUWrk
aqzHkWro6mzgGqzJWqzNEarDuqzv4arnYarroarjIartwarlRmzOQWrMgQpg
EzblAAWyv5qxn2q6r2q4j6q7t1qxNSdwItuwLXuwJ9uxl6o5iFXdnh3YkVXc
U53YQ5XdXZ3ZTV3YlZXcjRXdnRXcVeXdReXci4PYWWXdm2Xch6Xdl/0YpFLu
zwHspJIeyBLuqMEcwqEcxvHsoOEcweIey5Fsr2Iew6IexdFspyJuq8Juo3Fs
rUJupYJuqUlsocmcwgJurqkM1AzO5DQ203Q2VX430SzOZj4HKK/nMI8bay7n
MbfnM5cXMKcbKYcXchEbKrsb6F+SqEzX
           "], "LeafValues" -> CompressedData["
1:eJxVUEsOgkAMhfY1cekVvIVbl24xHgAiEjeYgInxPF7UDv0IM0Pb1+m8vnLo
ns2dqqqad2qa9n2apvZz2Su4jvNjGPvbeXz1Qz8du1qTXzUQ6NG9GDCYWE3B
6tQWSExZpV94lCVigVjEJTIML1xVJkHQ+VUgU4OVZ1eWWXtMBuIW8dwjRrIV
jqWJzgHSLcwsOg9nY7jGEIGU5dwkoRk2z79xCqu3U7i4wM4aallW02wKo8eS
tT/3A1eyFAw=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkl9LAlEQxccwSBIReomyRCx7iDBf2r/uenV3oYde7BMYWD0VWBB9+35z
ksuddWbOnJk519HL5/r1wMy+jjDrzU/Y7Ta/zx2cx4/v7dt2N3t4b+E9YXqW
cWLZ3BrsyiKbW8C7wEbcpR3aOfGguH+DlWAbW9iU2tIq5QqQCXW51Zbi5VSX
fBtsjBeTb+wSbKGzoK7Gr4jeUrnCy2wMU83virMiMwXp3bx3R50ClY4ecjPi
zn9PzFkK/AV9c5BuE7iCnYGYU50yQ2NXIAIZZ4k1WU6+JDYE7Z7v4azOHmue
Zo8o5AXugjvfb15rqqV29cqISMl0Y6oLMBO+A+1b2bU0PaFLsL5YGzCOOIYh
B+e6pcTb+APuCq8LaqiXSuHI1K+CsdBOd3SNtIWrnIjV2ZbScQ7G9SrBJGL2
TCR1XcGuNhhJwaAtXe2e3rpnLZARkRmYWEp4ZSLblq3xekz6r4T/j1LiYzJd
TiZNXZVYr3KjN+hjT8EF4X2jQq/imk40yR/5LlRa
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1:eJw9VmlYk9cSBqqQW6uAlwrWjcUlWquIFgOtTETUKAIpXmquCwRBDSiClCUi
YNQqQZGyiIQiGEExasWASEMVJixhBwNICCAQkqgpsgRaFKzI/XKfR/985znn
fOfMzDvvvHOsDgZ7HtLX09Nz032WOtCkVZdAVO26aV/M78j48gvztM3FKDqU
n5HaLEMSx/xU4ws+CPMzc/473I/U7JSTQQY1yMI9GZIAJTCMHMpS9BtQkCfz
czlSgYpU49fPz5RCbXjuuO3lZ8AP8Rv2tREDlartGS3oBH6s1x/KmU+As1r9
PujdCxBp+230EsSgMHTIWpZYjoq20bz4bRoUqW5mXUsqAJJnOpf0xT0QC/u+
uLC+EpNkHZnHiXOaFRdpu3a+BMbDo9LIhXeAssJbsupkBkr9BN9NtPUCU72y
529itI0q9pr1th14qrNf2k/WI/dasp3EuRnlYyUhgVUKqE0kSa82FIBUO+7+
TtgOpONNvlu820C+1iHGTK8B+TdyOz87WAgmjYaHVu9RAechnj9kmIMig6bF
1qktINYvnR7r7US+8fsNAQQuNFmU7Mc1r0C74Ox8nxkKEJvaCRY+UKDt8Bvz
k/uagHl7uG7mijLgzyow18pfQchL6UiGkQzYAx8SQol9xqn0mQt2NmPS4d2G
CusWpPSt32vkKUUuP+L1akcNkDYszHArlYI0/qabXcwoUn6flV29SYof41A8
2H52860B1Hq//h78u0B+wjM2buAxcjeNpB9MHEBKdOiqhiAN8n960Hr3WRVq
Q4c2HV6Q+ek86cqFJdElWaAoNdx45FjZpzwI6N56aTcaQJuYebdzKBXJ5be/
irrchwxB3Ey3jnycSC9b/yysGETc9cFkiy6gkseac80Jvgxls+vsKpCZvy5H
U/c7MJoq7a1Na1DEjfak+xDrEYvuTn9d8cm+yEV54E8bEXDENqSVFjIIGWq7
41vXhCEmZUesiXtt1cL5f/kWAvWdPzL9C8A2YtLx25xKFIXc7P1/3pUFpv6N
KuRvDUvXxUmKdpZfJvxmFhT/YGRA8Kt1o7fNfAHIA+9tythVCKTbsZ9vJ/y3
nGIm9NZUAuv6znrDH6qRq5za0Ungb1L90tzoeTlozGNiVTv6QMr4zn3V37c/
4WI5w4h0ncCX3+ou0fknzLB7c+NqHVBG/mN17iiipmV1jZWHBqnsr/bmh1SB
tvHWHBcLIl85ebWWxDpDLWKrj8rANqNnTe78EZhg+7z1I/z/iAeLs+bqZoKP
E+XdXtaT7SD40P327dNSEJcZJAf2vQCLB3njLuF3MCm+w+3n+nrkF2xRT8ZW
gNiTfTKH8IN+oU+oqxfW3751jgcqkBw6+4RS1Q/S0tUtqHcPaDfvuIZLO9DW
QFPrlJmNts6SjKA/ZWDRd/oSKzQZSIWXip1Cm5AX2dbrrPPjl4f/jBE4CwOV
N5Zb5QI5rjPjrUSJ4rn2j4OJc8zLp3eHECPFj07vNhlCarRkzMo5BSiK6Z7v
E6SoiEtIfNvfjJTIu3OzZPeBcWz+4kVEXBxyVmdhUy8qwtfxFxJzhf8/uyN8
mkDz5kyk6eUmFBUFuG8l7FNdUkoTDRqR/u/RzHvb5EDaGbtlhOALPdRxrQ4f
ttd0HsnjOSoC53UfJnBkHTllfdh5BBjsb/0TjOTA9Sh6aD88CcKkuw6Lif/p
E1Fze8ZFoF23qMhJmw9C1dBM3T0hkoZBh9M9wD8Xa6nDb6Jf7uTJKwdW/guF
1Y5HQO65Fm3s1g56wZrxNpdGZO7Jjo8wLICkIcF5ZVQt0qjeyS32JUiRRM91
WdyPPLuI2c8JPpFvWVCXVlWgMCeM0cG6AtrAx6v2E/ljSQbM/O7LgfL65ODT
qkdI75zYafK0CCxraD5phA6L7RTGHpw6oKb+aJPy/iVwhpY6iVzrUapxj3N1
K0FWLe3+4cH7YBFQ92srob+svQss4whdVGwib/ZJlYJcMOuxTn/ZWY2/HSFw
odYeiXxknAMCu6Q13xB1RsqcE68bJ8pvhq+2rUWqWdzz0sEW+OgH8/P+RStM
upBWHe8xsEQCXK5+WWOOFKlTrrxguhAsk+wPhTrnAeuS76jDpkbkXbvXJvXu
B1Llsg9hRzuBOW5eHb+rHZm9MzI9vNKAHMjZ30Xw42NcCpPJ+FFXFcq5DudP
8StQkNLaYLasCzk2fmfX7s0BsbNNbm5rM4rDc7FvmxDYL9rVTvw2pPgn5gVT
FMBfaCV9VS0GRrlPeo3xEirF8UOq8s0g8v54OuZD9B+LA26i7GnCTollu9Mu
LVjqR+26TtQHJ+wpjgZJgfVKxVo69AL1Avd47rbvAVaItciuugJIzndaRtKU
SO9jqkssnoH0kNU3S4m6TbKc40Qj+Cicvijb3zGGtieWGJMTVMgIM10R96gJ
OTFnf9bhWTsV9Nfl4Vb4hNva8ke6OHlzYzyWe9Uj/VinPTSVI+e060PRH8fR
YuXskoZjctCzvlCQ/CEPGTf4W4cJ+5rDy9ITDzxAaqNi/bzUe8jb5n7cuCAH
OFMnZr/fnAL8w16iY7I+4Nwj0TdGdKJ8knwh8lQRspsP7k9IvoLskwGUETsJ
kntPZF8xjQfmle0WR7bwQEFXF8qi81H47BcPM+/bQONtdV0wIxGkxsMzLIk6
oMrPNVdI/oQki9evG38tBnbx7ZYuZjOa0AK+YY3XILnxzBNdfdBa0/W3E3iw
nr2YOkrMa8+QVz+1qscJs8RLAQtegvb0Zv2qr4pAkLZtnm6fvdfP92uvSvy4
Thv7qc994j5wg9/0xOkPAMPaYTKtpBfke56ov5uuQeHTOTt+9iP4bRAcS0Ml
Ct79GOBYrgKStbH+mxolcpZ31Y0HEf2M6vXZElYP2DovKGwzRiSHtSTO4UmQ
P7yXvYPQXfpb/2Xd3Db4yEOT7cNRlPoBoIS77PfeWYlCTUexykuGUpugNfFE
HrVjefYn3vE/8Zu7qnjfDzndyNug3ric0HvOpDpGFK4AW+p1ZhLxTuIXDQr2
EXzg9T6prVokAabZ4rLoqWak7hJcb87KBvZfK9cVUSuQ4ahKgWIBaN0GPV8V
EDo6N/bitoRuoLEvsxp9niNVtX/c8VArhJBIHT8RuiLePcheE0j0oVufG3sQ
/Z+Vvn5Q9x7QJI9Orgv7DWh5cw7UmJaDeLJtW3fRNdDOPzHzTpcaPta5yO79
Qd05httGWXSiGPj/WjhfSvjHiq/K96irRHnH88VlYyXAizGrDOV1gt55lxlL
c9RAae3tCjvaCia+7eaFthWQhK1HVUT/0BxPvLqhUAmWy+4XG53qQUHI0IAu
zzSPiwZb94khZN/jyM/mSVFoMlL65FI1/g+8+oPT
           "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Ztt6+2bZuv1ta2bdu2bdu2fc+2P8lkkrhxh8rNgwCd
Q/1F5UbdAwIDG/WsEvpvlGrfpVmLZoGZc7T898sZ/HMQghKM4GxiMyEISVay
EYrQRCQSYWikcDRUWBpIqi9XeP4oAr9VT5GpqwTUURSiEo3a+qUYRKeWfqqm
figmsaih2FTXd8UhLtUUj6qKTxV9U2UlJBGJSUJa0pGUSkpDRSUjOV+VglRU
0Bel5LPKKzXl9Ell9VFllJ4MfFBpvVdG3qmUMpGZtyqpLJTQGxVXdnLQje68
Vk6KUoxc5OaV8vBSBchLMb1QPvJTVM9VRM9UkKcqRACFeaLCKkKAHquQilOC
RyqokpSiKc0oTRkeqhFlKUclKvNABVSe/KpAPlUkr+4rj6pQlXvKrWpUpyG5
VIOa1KEud5VTtcihO6rNbWVXPbLplhpQn6y6qSy6ocy6rky6psZcVROuKKOa
04LLyqBLakkb2tKK9Lqo1lxQOrWjPV1Iq/PqQCBpdE4dOatOnFFqdSaVTiul
TqkrJ5VCPehJb/rQi+Q6oWQ6rqTqSxKtYS3/kVj96M8AEmkMYzmmgRzVIAYz
hKEM44iGc1gJdUgJNIL4OqiRHNAo9ms0+xRP4xjPXi1nAhPZo3lMIq6mMo3J
xNFuTWGXYmunpjODmexQLM0ipmYTQ9sVXXOIprlE1TZF0XwWsJBFbFVkbdFi
NmspS4ikTYqojVrGBkXQClayXqtYp9WsVXitUTitI6xWawPrCaNVCq2V2sgK
hdIWtvKQR2xjO5cJqR3s5CSn2EUILdcJlmk3e9jLPoLrEMG0VPs5QFAt0UEW
K4gW6TBHMB0FHUN+HPeF+uML9NtP88vPco4z/PT5+uHzdJ4LfPe5+uYX+eqX
+OJz9Nln6wqzdJVrXGemPvkNbnKLj36PD36b9z5Dd5iuu0zTO7/PW5+qB0zR
G5+sx8Sz+PaE1z5JT3nGc17wkhAW0ibqFa95wwS98re89Pd84B0vfLye+0c+
gZl95pl/5Rvj9IWxeurf+cEfnvhPfjFGj320Hvko/WakHvoIOeKBD9d9D2JB
Lbjd82EKZkN114fojg/WbQ9lt3yQbnpoC2NhLZzFshse3iLYQF33iBbJotk1
j2xRbICuen9FtX664v/pske3GBbTLnlfXfQ+uuCx7bz3VhyLa+e8l856Akto
PVXCElliK2AFLYkltXR2xnvotCez5NZdKSy1pbFuSmldlcq66JR31kkPVFrr
pBOe3jJYRstkOS2XZbbjnsWyWkcd82x21Dsoh2W3I95eh72dDnluO+htlc/y
2AFvo7zWWvs9v+3zVtrrhSzAitseL2xFrKV2ewvt8qK204vZDm+u7d5M27yk
bfVStsVLWxlrqs1e1jZ5E5Wzxtro/wNu6aMd
           "], "LeafValues" -> CompressedData["
1:eJxVUDsOwjAMbWM/iZErcAtWRhaGoh6gFaViCVKKhLg9jh0bkc9L/Gy/2DnM
z+Geuq7bdgLD9D6VMn2uezHGvD3WvNzO+bWsSznOvZAXAQZz3YAg9FKHXs3X
QBeMY4ocGJGIiEOJW4rEqRZxi7R8IhCgGviBnZXWNBeD63ETsirbdM8/4W8x
GVEfrPUlJEreaNQvor03plb4E3pqwogy46M4IuH4BYagEkM=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkstKA0EQRSsaRGMMWbgIIZCEwQi6MC50JpmeR8+jwW38gghRVwpREBf+
u6eKUEx1Pe/crur5y+fm9UhEvk5Rm+2P3++3v89nOE8f37u33f7+8b2D94da
SSxX0kqQtZQykErmUktfRuhCcknRt5KgO0QC/pC6c7mk00mEHROPpOEs0GdE
e0QmYHTpz4muyVVYMdVDEAK9EboBpwHbS2bZDB6OXJ9si2R0JWClSElc6xYg
exiXoDq054+B7gjPkcvQKT253NG9xEuQyO4SjGufmiV2j7MLSkVW/+7homcu
M/49AWVtTJW58syQmlNvuSL7cOCmVSfErvFG9DsqCjBvYFcbP71LYxPSmSb2
l8L8MZgpXSWfzriksjbx2AHdgqu9zqI6ES9T/AFfoMMbsxoWC24T7O4FVkVc
rWNwGrZVkKsQPad09Yn2YDmGTWmoeufcUHOsLpZiR/YmlEnOWVOlLBMmoOcM
rLVtvzXGymNgG16SiW1vEdUTm5kjq1vV2cf2BvxBnFyga+OhrFuygb6B7UQn
ukJa41EcJpRZbWqYzm7e2tz0LWneWeXK3khteyzJNbZTfR//WvtcKQ==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViVOUGAYUBefFtm3btp2NnU2yMTdW08a2bdu2bdu28W7bn5kzZ5I36xTQ
MgTQNdx/CAjsWTw4OLB3jfD/RfmO3YJaBQVnz9P6/9/f4H+HICShCE0FKhKG
sKSkhsIRnnjEJwIBikZ0IlJdkaimyFRVFKpIioqrsmIQkz+Kw2/F4pdi81OV
9EMVFZcK+q7y+qYEJKOcElJWiSijxCQhKaX1VaX0RSWVnBJKQXF9VjGlIjVp
SEtZiiod6clBTjJQRJ9UWB+VkUxkJguFlJVsfFBBvVd23qmA3iq/cpGbNypB
HvJSiMLkI59eqwD5yatXyqOC5NZL5VIRcuqFivFcRXmmHHqq4jxRdpWkFI9V
mkfKpjJk1UNlUTky64HKc1+ZVInKBFgNq0JValCTe8qou6pGdQK4owy6rfSq
RW0WsJBbqkN7OlCXetSnAa1pQ0MacVPp1Ji0uqE0akJTAmnGdaXWNaVSc1Kq
BUFcVQpdUUtakVyXlUxtSapLSqJ2JNZFJVJHOvEXA+hMQnUhmAtKoK50ozd9
OK/unFMvehBfPYmns4qrM4qj0+pLf2LrlPpxUrF0QjH1N/8wlxgayCCOazaD
ia4ZzGQI0TSUYQwnqsYTRcc0gpFE1igiaTQRNYaxjCOCjiq8jiicDmsChzSR
g5rEZKZwQGE1lTDar2lMJ7T2KZT2KqRmEUJ7ZJoD2i35PNx3aT479ccXsZj4
lsCWsJST/PZlLGcvv3wFK9mhn76K1WxnB2tYy3ZtZZvWsYEfvlXr2aLvvpFN
bOabb+Grb9YX36TPvlHb2KBPvl4ffZ12sla72M0H38N7X6N3vo/9rNYBDvLW
V+mNH+IwK/XaV+gIR3nlx3jpxznBcr3wZXrup3jmpznDUp3lMk/9HOdZogss
1hNfpItc4rEv1CO/wlWucZ0Feug3uMkjHnOLB/6A+36be36Hu9zjrs/Xfebp
js/VbX/ILZ+jm/6Ep4S2MDZbz5ilG/6c6/6Cl7ziNSEspL3hLWbX/B3v+c4P
PnDVZ+orH7nin/jMDF32L1zy6bro0/SNqbrgPznvU/SbyfrFJJ3zP5x154xP
lMBO+wSd8vE66eN0wscqlI3RcQ9rxzySRbZwdtRHK7xFsCM+ShFtpA57FDvk
se2gR7VoNkIHPLrFsOHa7zFtnw9TLBuqvR7H9nhc2+1DFM8Ga5cntESWy3Jb
Yktig5TDBiqp/aMslsySWwrb6WksraW0Hf63UtkApba/tN3TWXrrr23eT1s9
g2W0vtrifZTJeiuz9dJmz2qbPJtt9Oy2wXtqvee0dd5Daz2P5bXSVsbyWX7r
ruJWwNZ4YSti3VTQCtlq76pVHqyVXtRWeBcVs85a7iWspHXSMi9lS72jlnhZ
W+zVbJGXs/JWwSpaB1W29lro7VTJ2mqBt1EVa62q1krzvbrN85aa6zWtlnW0
Tlbb5ngHm+11bJbXtXoWpJle3xpYQ5vh7W26N7LG1sSaWlub5oE21VuotTVX
M2tuLSzIpngztbRATfZWNsmbaqI3URtrrAnezsZ7I43zhhrrDTTGO9to7249
rIsFW311tW42yutppNfVCO9pw72O+lkvG+a9bajXVh/ra0O8lgZ7fxvkNTXQ
/wVysQL8
           "], "LeafValues" -> CompressedData["
1:eJxVkD0OwjAMhdvYT2LsFbgFKyNrEQdoRahYgpQiIRbOjn+SElQpcZ+fPzve
z4/xFrquW3dyjNPrmPP0Pg/yc0nrfUnxekrPuMR8mHsRP3IwM/wDPJQTrsJ1
DWBpJmKSm8zXZL2aTa0Ei/9Vvcg1/hFQMoZmCgzSPm6yJNVpCpe9qRilhqhM
be5m7DoBYGAjtoBa1cwrRCOTA+oLsLnb9ZQdebsNq22kPOiyELg+u+xA8Wrg
3hJfX4MTTA==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kltrFEEQhU9MFHcJEqMPkoTEEHfzkAcTUGd2Z3bu3eBr/AURoj4prIII
/ni/Ooo00zV1O3Wqqs8/frv99EDS98dct3c/++327teHGcr7rz/uP99vb959
2UH7zVWp1EIDMmmNLPmONelUFzpUoRNtNOoVd6kbPcJzROQBes1Zao52rJ7T
qiN3QV6Hba4n5O8TP9m+pkLGe6rGlkk7RA1EVToDOyoUREW9CU+NrccXqIGd
tMK7ArPWHpYSX+PIFqQKji+ouUYfwSiRFXIi5troe3qoXTMZOQ0155YJf49s
zeYSeYE9ubuJehlfpytkZcweliUcB76Gr3V0AYcCBp0jIqvUW53D9swVkruM
nrK7LNALphh/mTozqp5gu/a0E7ZLPTPO6I5i2o0rNmY06imVl+wjcTdkdt5V
YNee14qeE5YBT4bZaKa1XmPr/jHP7Gfl3dXe2cZcenfR6CXx/X/OA9wyMbHP
1oyWnlrvfUxkTNSOWi07zeAmn4gf/K4SE3lOzOjuYw+BMEMLxBbbmqjY9oE5
1sxk4R31ZrCLf8MJ9DfuIbviZOy/76klK1sPS+wwmXX21uNlbawt9Af1kFrx

           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
           "], "Children" -> CompressedData["
1:eJwViVOUGAYUBefFtm3btp2NnU2yMTdW08a2bdu2bdu28W7bn5kzZ5I36xTQ
MgTQNdx/CAjsWTw4OLB3jfD/RfmO3YJaBQVnz9P6/9/P4H+HICShCE1DGhGG
sGQlG+GorvgkIDwRiEgkYlNNkamqqEQjClUkVVZ0KslVUTGooD+KSSzK67fK
KQ5xiUdZ/VIZ/VRpJaSUElFSP1RCiUlCUpKRheJKTjGlJBUpKKrvKqLUpOGb
Cuur0vJFmUlHIX1WejJQUJ+UkY/KxAcV0Hvl1zvlU3ZyUInK5CQXFcirt8qj
3OQhL/koTBHyU4CC5NYb5dJr5dQrFeKlcqgoxShDdhUnm0pQkhfKqlJk0XNl
Vmky6Zky6qnK8kTlKE8GPVZ6VSSdHimtqlCVBqTRQ6VWNVKpOgHUoCa1SakH
SqH7qsU9JVcdkqku9bir+txRUt1WEt1SYjWmCfUskZoSyApW0oyEWsgimtOC
IBKoC8G0pBWtia9OxNNNteGG2tKOuGpPHF1XB66pI1cVW52JpSuKqa50YzwT
uKzujCSGehBdPelFb6LpkqLqovrQl3705y+GE0UD+JvBRNYF/cN5RdI5DeSs
BnFGETWEoQwjgk4rvE4pnEYQVicVRic0itGMYSyhNY5QOq6QOqYQmsgkZjCT
o5rMEU1lCqbDQtOQH9J0Dsp9Fn98DnOZzW8/oF8+j5++XwvYp/ns1Q/fo+++
mCXs1jKW8s136avv1BdfzmffoU++itXsZg9r+Ohb+ODbtZZ1vPf1vPMNvPWN
vPFNvPZt2sxWvfIt2so2Xvp2drBZL3wnz32TdrFRz3wv+zjDWfZzgOM89Q06
yGGOsF6HWKcnfpTHvlbHWKNHvloPfZVOsFInOcUDX6HTLNd9P8d5clluu8BF
lumeX+Iyj3jMUt31K1zlGte5xR1fohvc5LYv1i1fpJu+ULe5ww2/y3W/x30e
cM0fctUX6IrP12V/wlPm6Tdz9Yx3vOc5L3jJJZ+ji/6KCz5br3nDeZ+lt8zU
Of/AR75z1j9xxr/wlRn6zHSd9mk65VP1jSk66T/4yWSd8F8c90k65n9wBBbd
YphZCItiUS2khbIIdtRDWxibqCM+QYd9vMJaODvk4xTexuqgj1FEi2QHfLQi
2yjt92i2z0dqr4/QHo9psSyhJbLYttsT2C4frjg2THFtqOLZEMW3wdrpg7TD
E1sSG6jtntSSWWrb5v8ouf2tlJbCtvoAbfFUttn/0iZPY2mtv9JZZsti/ZTe
MlhG66uNnsk2eB+t995a51ltrWezNZ7dclhOW+29tMp7aqXnsbzWQys8n+W3
WrbcC1hBK2NlrZAVtu5a5t1UxIrbUi9qS7yYLfauWuQlbKGXtFIWrNLWRQu8
s+Z7OZvnVayqlbe5XsHmeCdVtI6qZB1U2dprtlezWd5ONa26zfQAq2FtNcPb
aLq31jRvpdpWx6Z6XZviLTXZ61sDa2iNrKkFWpAmeWOb6E1sgrfQeG9mza27
9bDmamEtrZUF2ThvprEeqNbWVF2tidpYWxvj7ay9NVYH62LB1tE6WSON9s42
yhtqpDfQCK+v4V5P3ayuhnlP62V1NNRrq7fV0hCvqT7W1/pZDQ32AA3yfwFV
aQD9
           "], "LeafValues" -> CompressedData["
1:eJxNULsOwjAMTP2QGPkF/oKVkbWID2hFqViKlCIhBv4dX+ykWNU5udrncw7j
s79TSmndGfTD+5Tz8Lns7XJd1se8TLfz8prmKR/HzsivgShC8AEQjkLgC4uk
LF5UKGQWtsxEwf6Bsv10JQ09rX1FzKkQU61t4hcV2mywEs4s4ZPDSi2GDfAd
MgzFGuoDYjcLqvvV7nBkAiR1slthKoNchu3EzYFuj6TNoSuFdjyTtoq2JySa
I3A/PB8TQw==
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkk9P20AQxSdViloURUB7QCWiigIceqG9sOvYXjte21Kv9BOAxJ9TK6VI
iFs/en/zElnenXk78+btzC7v/9w+vjOzvx9Ybu9eN9vt3duvjzg/f788PD1s
f9w8T/D+sVS2tNKiFVZjB2uts4a/Yu1txh5tIKK3jWX8zJ6I6on5hD23E5vg
DcQFW8Mz2AjqmKNzZQTYBxij8Mx+xr62BVZJ/EidJA1rvkbcrqcTXtuRfWPP
xI+wdeIa8c+xV9jf+RvQjN9x4hEbu5DSKzslf4Wd7Itu0aKnkdJIZEBJhGkB
XvJfCklgLREDlvP3oK6nJqYCDVRpOXO+jOas+u/xI9EB9m6vJ6Jgw1eROZBT
g/TKGrEz+Fd1eNfTuFfls5iCHWgOCdv3qeodsY7YQatHnXHaSukhmWusQXO4
Uq7fx61W1Wtu+hmv4aYrKpVode1TMrPmVJFZgK+wKs3evcT0fcYz+D2yQIXr
P9Xdveveo4A1w17KT2KZS00p1qTJNHpFE5h6O5byWj0dNOXGrlmD6jaqkmCd
i6Hev9CAlmPOC/CCyIqu+O28z7vJeu1and5Nx7tRMaGRtxXBItjC/gPYRV00

           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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
UpWDlIoep5xp0EbcX+6uicd5NjU//R+SuT2Z
           "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42pfbdu2bdu2bVu7r+8nmUwSN+lYpUUQAF1C
/UOVxj0KBwQ07lU19L8o3aFr85bNAzLnaPX/DyTwv4MgKIIhOG7iFkIgJK7i
GkIhNLIhO8IgLKIgKuxwiICIkMPjrws7Egr5jwv6tyPjlws4GqIjBVIiBvI7
JvL5p/P6h2MhNvI4DuLiu+Phm5MhPhLgqxPiixMjEXL7s3P5k5MgKXL6o3M4
ObL7g7P5vVMhNdLgnbM6LdLhrbM4PTIgKzI7IzL5jTM6EzL4tTMjC9L7ldP5
pdP6hXMgL9I4J1I7F1I5N1I6D1L4uZM7H/KjAAqiMIrgmZO5EJL6qZO4KIrh
ic+gOErgsaehJEphEAajNMqgHxK7LMqhNuqgPCqgFhL5kRO6IiqhMhK4Kqrh
oavggeO7OuK5BuL6vuO4JmL7nmP5rmO6LurhjvuiPhqgK7qhIRqhCZritmO4
MaL7lqP5ppuhIzrhhpujBVqiFVqjLdrhutvgmqP6qqP4iiO7PTrgsiP5kiO6
MyL4osM7AOHcBWF9wWHcHaF93r1wzj1w1j1xxqHcGyF92n1wyiF80sF9wv0x
AIE47mA+5oE46qA+4iEYiSA+7KEYBno44EMegYO2RmE0xkAai7864D8ah/GY
gInY7ynY50mYjN/a61/a45/a7anY5R+ajhnY6ZmYj++ahdmYg7nY4XnY7m/a
5q/a6i9agIVYhMXY4tNYgqXY7PXY5GXY6HVYjs/a4BVYiVVY79VY509a6zVY
47VY7Y9a5Q/agI3YhM04hMPYgq3Yhfda6Xda4W3Yjh3Yibda7jda5tda6t3Y
g73Yh/04gFda4pda7Bda5INY6Oc6gqM4hWda4GM4gZOY7+OY56ea6yea48ea
7Uea5Yc6i3M4jwea6fua4QuY7ou4hHua5su4grua6jua4uu4gdua7Fua5Ju6
jRv6hu+4g7u4h/v4gut6gGt6iEeY6Kt6jCd4hdd4imeY4JcY7+cY5xcY6ysa
48sa7Ut6g7f4gIsa5Qsa6XcY4fcY7vP6iHP6hM8Y5rMa6jP6itMa4lP6gZ/o
xu78hd8oxdL8g78IzwgUTioYg3OwDZAMwhMa5OMKymMa6KMKdAiG5RENcEiG
YmiG4WH19yH180GF4wH19X5FZCQWYmFGZhQmZTJGZTQmYEL28T5F517FYEz2
9h71cizGZhz2dFz28G51dzzG5y518051dSJ28Q4l5nYFOAk7e5uSMwWzMwdT
MhWzMCtTMw0zc6vScovSMwM7OR07erMycpM6eKMycYPae73aeZ2yca3aeo3a
eLVae5VyMhdbOTfzMC9beqVaOB8LcoXyc7kKcJmae6maeYmKcLGaepGKcqGa
uBiLswQbuyQbeYEaer7KsCwbswnLsTxrsw4rcJ4auAYrshIrswrruxrruSrr
eq7qeI6qc7Zqe5ZqshZreaZqeobqsh4bcbpqeJqquz4bcKqquSGreoqqeLKa
cpJasw2bsTkruwVbcqIqeYJacbwqepzash0reKzaswPLe4w6crTKuSvLuhM7
c5TKOICl3YWlPFIlPUI92JOBHK5e7M0SHqY+HKriHsC+HKJ+HKz+HKRiHqii
DlQRD9B/jWMI+Q==
           "], "LeafValues" -> CompressedData["
1:eJxVkEEOgkAMRRn6m7jkCt7CrUu3GA8AcSRuxgRMjEtvbqed1jiQMvw//X2w
nx/jre+6bttJGafXcV2n93mQl0vZ7kvJ11N55iWvhzmJ+JHCYFkAg0CyUiKW
nSiAGVyP6N2e1mFbXSpRSBZJYaljXRxpHgUbbRB/M/WCs4XSaNUgC6+dROhr
O5ED1a7GYlMAx0d8UYNRm/wQYpA5TMHmf0FL78wIzYMZ+E1oEKE1Ngv8ApqW
E3c=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
        MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkttOAkEMhqug8QBEEy8MEJEgxMQL9QIXlmV3Zg+TeKtPgAnqlSZoQnx7
v3bJpN228/fvYWf49v3yvi8iP0eol9XWbzarv9djnOev3/XHevP49LmHt0Ut
xEsisRRYpWSylAuZyIkEtJec05MKydE3ksqI42QG7pacrsy56eNX5FZ4MZgc
phknIBdEG8RKvISsAplzziXCfgDrucupOOXrzAtwtYiNZCyX0iQW0BW3+k3I
jPD6sMys3gDtwTYMo7UmeClR7ahFTKecw9eGNcGv0FN0apUCp8TTGTy6tBk8
LBl2Xw7xNBLkmmiBpNh9ObNplthtaiU2sTcGnfCRW8e3RIY2Q2HYwmbUXWfS
IZIQCeT3LFN7cVahtH0UZOtUQ6QFvs7MkbDjqqz7iW09BdWxafeMPSKyhFv3
lIG5h+2SeG78A3DOmJzNWdpNZfXqObTrXE6Z1IM7IFe3UiPcbn9dOTa845+O
dvut/SbYK6wFiAU3MUwdsmK6uAOn7y7Y3/RUSNGRReo5xuQE8NqHvqYu/SaW
nbKrwjaXg9P3FKHHYHQ3A7J69ipjGDKQGbazf/EPMmNZ1Q==
           "], "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1: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

           "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufLtm3brs3GZrfVZm7Y66rrmG3btm3btm1+79WfmWeeSd2y
a2CbMECPSD8RGBQaEBIS1Kd25J9RqUvP4LbBIbkLtPv1Qw1+OQxhCUd4mtKM
CEREakIkIlOCkkQhKslITjRqKh7xiU4NxSAmsaguVzXFpqp+KA5xqaLvqqwE
VFISkvJNCUlERX1VYr6ogj6rvD6pnFKQktzkIRVl9VFllJrSSkNaPigdGcjI
e6XnnQKUicy8VSllIStvlIvXykZ2SuqVSigHOXmp4nqhYnquospLPgpSiPwU
0TMVVgEK6akK6okK6LEKU4T8eqSiFCOfipNXD5VHpcitB8qlAEpThrI0ojHl
KE9NalGBnLqvHKpIJe6pMtXJripkU1WyqhpZdFeZVYNMuqOMuq0MCqQ2dahL
PepzS+l1U+l0Q2l1XQ24poZcVRpdUWpdVipdUko1pwU5LKcF0ZKZzKIVrbmo
3gSTQu3pQBuSqy3J1I6kuqAk6kgnziuxzqkzXUmkLiTUWSVQN+LrjLpzWiH0
IJ5OqScn1YsTiqtQfuO4+tCfOPqd2OpLLB1TP44qpv5gAH/yFyMYyRH9zWHF
0D9E179E039E1UCi6JAGMZghDCWyDmoYBxRJw4mo/YqgfQqvvRrFaMJpDGG1
R2MZRxiNx7RbE9iliUxiMjs1hWmgqch3yH27prNNM9iqHz6bOezju8/lm2/R
LuYxn81awCK++kK++CZ99sUsYSnL2MJWlvPJN2oFG/TRV7KK1Xzw9VrDOr33
taxjrdazmXe+gbe+kU2s0Rtfrde+Sq98pbaxQjtYru0s00tfqp0s0QtfrN3s
YS+L9NwX6pnv5wAHOcQCZbTDHCGuxbOjHCO2PfXjnOAVrznJKZ7yjNOcYb7u
cZZznOeJz9Njn6tHfoGLXOKh3+I2l3ngV7jvV7nnc3SN69z12brBTe74LN32
mbrDDN3y6brLNN30+zxgqh7yiBs+Rdf9Mdf8CVd9sq74JF32iXrOBL3gJZd8
vC76Gy74e877W875O876OJ3xD3zkE6f9K9/4zCn/wkkfqxP+neP+g2M+Rkfd
OeKjJTCzMHbYY9khD2vhLLwd9FGKbCMVwSLaAR+hSDZc+z2KRbVots+Haa9H
txg2VHt8iGLaYO32QdrlAxXH/tNOj28J7F/t8ISWyP7Rdk9s2zyVpbYkltSS
2Vb/W1s8uaWwv7TZ/1RKG6BNnsbS2h9Kb/210dPZBu+n9Z7B1nlfrfVMtsZ/
V2broyyW1bLZb1rtocpuvbXKc1lu66XulsfyWnNrYfksv/VUEytgK724lbCC
tsJ7qJAVtuVexJZ5iIpadxWzblrqXbXES9piL2UB1kWlraJVss4qY2WtnJW3
RV7BFnonLfCOmu+VrYp10Dxvr6pWw2paNatu7TTX22qO17JAa2izvbbN8jaa
6XWsrgWrntW3Gd5a072BTfNWmuqNrLG11BQP0mRvoabWXM2smSZ5kE30pprg
La2VtbZga6Lx3lhtrKON87Y21hupnbW3DtZQY7yBRnt9dbLONsq7WFfrZiO9
nkZ4XQ33EOthPa2X1VFvq61hHqihHmpDvJYG+/+PH/bz
           "], "LeafValues" -> CompressedData["
1:eJxNkEkOwjAMRRsPEkuuwC3YsmRbxAFaESo2QUqRgNtjO3ZDBjvO8P2cw/wc
7zAMw7oTM07vU63T97KX4FrWx1Ly7Vxeecn1OCfZ/IihxERMarSFYzBrYTgU
TyjdNmxoM4eUkBGAgFAuyFpFbdgMHUvF7ZmnCykOQRflBqZ5Xcom94sKhBZj
B8JWgQOwS9gJbsU4h5crxxDloOJ32GDZkNonxXP/sr8SesjMnSDUXATpB8he
Eyc=
           "], "RootIndex" -> 1, "NominalDimension" -> 0|>]}, "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|"Info" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

            "], "Type" -> "NumericalVector"|>, "Key" -> 
         "(f6(f1f2)(f3f4f5f7))", "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "OOBConfusionMatrix" -> {{0.2000023629943273, 0.19999940925141813`, 
       0.1934842771968276, 0.08351338782610179, 0.1304750811007152}, {
       0.19999940925141813`, 0.2000023629943273, 0.19577029519636183`, 
       0.08619515855055168, 0.13086047208468582`}, {0.19999940925141813`, 
       0.19999940925141813`, 0.20891775621618303`, 0.10569894563745995`, 
       0.1366413368442452}, {0.19999940925141813`, 0.19999940925141813`, 
       0.2066288806941494, 0.43336378768421174`, 0.24609237629190286`}, {
       0.19999940925141813`, 0.19999940925141813`, 0.19519879069647827`, 
       0.2912287203016748, 0.35593073367845096`}}, "Calibrator" -> 
      MachineLearning`CalibratorFunction[
       "TemperatureScaling", <|"Theta" -> 3.359908127117532|>], "Method" -> 
      "RandomForest", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "FeatureFraction" -> <|
         "Value" -> 70^Rational[-1, 2], "Options" -> <||>|>, 
        "LeafSize" -> <|"Value" -> 5, "Options" -> <||>|>, 
        "TreeNumber" -> <|"Value" -> 50, "Options" -> <||>|>, 
        "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
        "Implementation" -> <|"Value" -> "Default", "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 0.432993`6.088025868865628, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[1.1232324204722235`, 0.009466922208269942], "Accuracy" -> 
         Around[0.572563025320072, 0.021480373142992424`], "EvaluationTime" -> 
         0.000012962269489304084`, "TestSize" -> 1052, "ModelMemory" -> 
         695544, "ModelUtility" -> -0.8112491945459854, "TrainingSize" -> 
         4209, "TrainingTime" -> 3.1622776601683795`, "TrainingMemory" -> 
         9495088, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[1.1232324204722235`, 0.006694124890433201]}, 
         "AccuracyHistory" -> {
           Around[0.572563025320072, 0.015188917511827335`]}, 
         "Configuration" -> {
          "RandomForest", "FeatureFraction" -> Automatic, "LeafSize" -> 
           Automatic, "TreeNumber" -> Automatic, "DistributionSmoothing" -> 
           0.5, "Implementation" -> Automatic}|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "RandomForest", 
           "Options" -> <|
            "FeatureFraction" -> <|"Value" -> Automatic|>, 
             "LeafSize" -> <|"Value" -> Automatic|>, 
             "TreeNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "Implementation" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.3159034285993942`, 0.0035390892928730236`], "Accuracy" -> 
              Around[0.5218788993206083, 0.009711134652680625], 
              "EvaluationTime" -> 9.08872960672905*^-6, "TestSize" -> 5251, 
              "ModelMemory" -> 85952, "ModelUtility" -> -0.9682736010416615, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.19952623149688792`, 
              "TrainingMemory" -> 224056, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.3159034285993942`, 0.0025025140382152183`]}, 
              "AccuracyHistory" -> {
                Around[0.5218788993206083, 0.006866809165926137]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2476829358416233`, 0.02199309997251438], "Accuracy" -> 
              Around[0.46187306271188105`, 0.027804190587577472`], 
              "EvaluationTime" -> 0.00001995262314968879, "TestSize" -> 900, 
              "ModelMemory" -> 93242., "ModelUtility" -> -0.9180215221801857, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.01687485473088055, 
              "TrainingMemory" -> 230984., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2678156664383153`, 0.011775505231981237`], 
                Around[1.2701664747254497`, 0.008308253057835292], 
                Around[1.205066666361105, 0.008926951104249185]}, 
              "AccuracyHistory" -> {
                Around[0.4843456025063813, 0.035250137156328146`], 
                Around[0.41705599100330265`, 0.028118376036333992`], 
                Around[0.4842175946259593, 0.024834270850209762`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.181812599493804, 0.004148048849304813], "Accuracy" -> 
              Around[0.4729201378288387, 0.020505657926428257`], 
              "EvaluationTime" -> 0.00001995262314968879, "TestSize" -> 1800, 
              "ModelMemory" -> 126136., "ModelUtility" -> -0.8609728655976949,
               "TrainingSize" -> 200, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 617581.3333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1813811757772057`, 0.005955373046281903], 
                Around[1.1822440232104023`, 0.0057205346558892]}, 
              "AccuracyHistory" -> {
                Around[0.4560594515794522, 0.017480230318279576`], 
                Around[0.4897808240782251, 0.015675815953872206`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1403313747565471`, 0.004563809646715425], "Accuracy" -> 
              Around[0.5871457838383077, 0.010656954921171578`], 
              "EvaluationTime" -> 9.691883841841186*^-6, "TestSize" -> 4261, 
              "ModelMemory" -> 262216, "ModelUtility" -> -0.8253724585332893, 
              "TrainingSize" -> 1000, "TrainingTime" -> 0.6309573444801932, 
              "TrainingMemory" -> 2532888, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1403313747565471`, 0.003227100749237059]}, 
              "AccuracyHistory" -> {
                Around[0.5871457838383077, 0.007535605091559771]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1232324204722235`, 0.009466922208269942], "Accuracy" -> 
              Around[0.572563025320072, 0.021480373142992424`], 
              "EvaluationTime" -> 0.000012962269489304084`, "TestSize" -> 
              1052, "ModelMemory" -> 695544, 
              "ModelUtility" -> -0.8112491945459854, "TrainingSize" -> 4209, 
              "TrainingTime" -> 3.1622776601683795`, "TrainingMemory" -> 
              9495088, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.1232324204722235`, 0.006694124890433201]}, 
              "AccuracyHistory" -> {
                Around[0.572563025320072, 0.015188917511827335`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000012962269489304084`, "MeanCrossEntropy" -> 
             Around[1.1232324204722235`, 0.009466922208269942], "ModelMemory" -> 
             695544, "TrainingMemory" -> 9495088, "TrainingTime" -> 
             4.152185478383522|>, "Index" -> 1|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 5]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            5], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], <||>], "MaxTrainingSize" -> 5261, 
      "PreprocessorEvaluationTime" -> 2.125*^-6, "PreprocessorMemory" -> 
      194128, "InputDimension" -> 70, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -0.8693687048950245, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.879423197631726`16.34134214756153*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.00664349676541364, 
          "ElapsedTimes" -> 0.237883, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 40, "TimeBudgets" -> 0.03321748382706821, 
          "ElapsedTimes" -> 0.100396, "ExperimentCounts" -> 3|>, <|
         "TrainingSizes" -> 200, "TimeBudgets" -> 0.16608741913534097`, 
          "ElapsedTimes" -> 0.187903, "ExperimentCounts" -> 2|>, <|
         "TrainingSizes" -> 1000, "TimeBudgets" -> 0.8304370956767049, 
          "ElapsedTimes" -> 0.756365, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 4209, "TimeBudgets" -> 4.152185478383522, 
          "ElapsedTimes" -> 3.024812, "ExperimentCounts" -> 1|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"}, "ID" -> 
           4840131171699015203|>, 
         "f2" -> <|
          "Type" -> "Nominal", "Weight" -> 1, 
           "Values" -> {"Information Technology"}, "ID" -> 
           5042234179079910413|>, 
         "f3" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537}, "ID" -> 
           8143623558489070887|>, 
         "f4" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {10.982}, "ID" -> 
           7788679715678402894|>, 
         "f5" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.982}, "ID" -> 
           4867089090251939422|>, 
         "f6" -> <|
          "Type" -> "Text", "Weight" -> 1, "Values" -> {"Estimated data"}, 
           "ID" -> 1244584425521089410|>, 
         "f7" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {624.605427784142}, "ID" -> 824640885889355554|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 4.771377, 
      "MaxTrainingMemory" -> 13123832, "DataMemory" -> 8209648, 
      "FunctionMemory" -> 972152, "LanguageVersion" -> {13.1, 0}, "Date" -> 
      DateObject[{2022, 12, 7, 17, 33, 17.645801`7.99921636169828}, "Instant",
         "Gregorian", 1.], "ProcessorCount" -> 8, "ProcessorType" -> "ARM64", 
      "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878619160734618*^9, 3.8786192245310097`*^9, {3.878715800641226*^9, 
   3.87871584525163*^9}, 3.878715887355948*^9, 3.8788055501495533`*^9, 
   3.87880572388905*^9, 3.878806815602689*^9, 3.8788070723199997`*^9, 
   3.8788071152477303`*^9, 3.878811629852172*^9, 3.879149119975829*^9, 
   3.879325483862817*^9, 3.879333011347499*^9, {3.879354686929783*^9, 
   3.879354696685204*^9}, 3.87941959769079*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"ff193cf4-f336-47f5-ae63-caf1925e7e7c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Data type"], 
                   TextCell["Data type"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{
                   InterpretationBox[
                    Cell["Mixed"], 
                    TextCell["Mixed"]], 
                   StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]},
                  "RowDefault"],
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                  Short[#, 10]& ]],
                Annotation[#, 
                 
                 Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                   "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classes"], 
                   TextCell["Classes"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{",", "\",\"", 
                 InterpretationBox[
                  Cell["A"], 
                  TextCell["A"]], 
                 InterpretationBox[
                  Cell["B"], 
                  TextCell["B"]], 
                 InterpretationBox[
                  Cell["C"], 
                  TextCell["C"]], 
                 InterpretationBox[
                  Cell["D"], 
                  TextCell["D"]], 
                 InterpretationBox[
                  Cell["E"], 
                  TextCell["E"]]},
                "RowWithSeparators"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"57.3", "2.1"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    57.2563025320071972146`3., 2.1480373142992426061`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Method"], 
                   TextCell["Method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 
                 InterpretationBox[Cell[
                  "RandomForest",ExpressionUUID->
                   "497e65f3-9345-460e-94e2-963b8be62a0f"],
                  TextCell["RandomForest"]],
                 StyleBox[
                  TagBox[
                   GridBox[{{"\"FeatureFraction\"", 
                    FractionBox["1", 
                    SqrtBox["70"]]}, {"\"LeafSize\"", "5"}, {
                    "\"TreeNumber\"", "50"}, {
                    "\"DistributionSmoothing\"", "0.5`"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                  "Verdana", StripOnInput -> False]],
                Annotation[#, 
                 Style[
                  
                  Grid[{{"FeatureFraction", 70^Rational[-1, 2]}, {
                    "LeafSize", 5}, {"TreeNumber", 50}, {
                    "DistributionSmoothing", 0.5}}, Alignment -> Left, Frame -> 
                   All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                   Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                 "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"3.05`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"29.4`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"1.1232324204722234917`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0094669222082699421`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "1.1042985760556836006`3.", "\", \"", 
                   "1.1421662648887633829`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 1.1042985760556836006`3., 
                   ", ", 1.1421662648887633829`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Model memory"], 
                   TextCell["Model memory"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"976.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training examples used"], 
                   TextCell["Training examples used"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               TemplateBox[{
                "5261", "\"examples\"", "examples", "\"Examples\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training time"], 
                   TextCell["Training time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"4.77`", "\"s\"", "seconds", "\"Seconds\""},
                "Quantity"]},
              {
               ItemBox[
                
                DynamicModuleBox[{
                 MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                 DynamicBox[ToBoxes[
                   Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.27452344768723974`}, {
                    3.6888794541139363`, 0.22128817984986893`}, {
                    5.298317366548036, 0.16704936114676766`}, {
                    6.907755278982137, 0.13131889977827738`}, {
                    8.344980368770571, 0.11621061825338226`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.27452344768723974`}}, {{3.6888794541139363`, 
                    0.22128817984986893`}}, {{5.298317366548036, 
                    0.16704936114676766`}}, {{6.907755278982137, 
                    0.13131889977827738`}}, {{8.344980368770571, 
                    0.11621061825338226`}}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 0.27183034961320945`}, {
                    2.302585092994046, 0.27720931245966424`}, {
                    2.302585092994046, 0.27720931245966424`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, 0.20350381681947008`}, {
                    3.6888794541139363`, 0.23876177801940693`}, {
                    3.6888794541139363`, 0.23876177801940693`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.298317366548036, 0.1635332829151805}, {
                    5.298317366548036, 0.17055311987591104`}, {
                    5.298317366548036, 0.17055311987591104`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.907755278982137, 0.12730869118588567`}, {
                    6.907755278982137, 0.1353130908100935}, {
                    6.907755278982137, 0.1353130908100935}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.344980368770571, 0.10774661509457437`}, {
                    8.344980368770571, 0.1246035829122705}, {
                    8.344980368770571, 0.1246035829122705}}]}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0725280624560205`, 0.10382174092014755`},
                     DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 8.568076401730806}, {
                    0.10382174092014755`, 0.27452344768723974`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.5218788993206083}, {
                    3.6888794541139363`, 0.46187306271188105`}, {
                    5.298317366548036, 0.4729201378288387}, {
                    6.907755278982137, 0.5871457838383077}, {
                    8.344980368770571, 0.572563025320072}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.5218788993206083}}, {{3.6888794541139363`, 
                    0.46187306271188105`}}, {{5.298317366548036, 
                    0.4729201378288387}}, {{6.907755278982137, 
                    0.5871457838383077}}, {{8.344980368770571, 
                    0.572563025320072}}}]}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0725280624560205`, 0.4335505923282968}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 8.568076401730806}, {
                    0.4335505923282968, 1.}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.27452344768723974`}, {
                    3.6888794541139363`, 0.22128817984986893`}, {
                    5.298317366548036, 0.16704936114676766`}, {
                    6.907755278982137, 0.13131889977827738`}, {
                    8.344980368770571, 0.11621061825338226`}}]}, 
                    Column[{
                    Style["RandomForest", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"FeatureFraction", Automatic}, {
                    "LeafSize", Automatic}, {"TreeNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.27452344768723974`}}, {{
                    3.6888794541139363`, 0.22128817984986893`}}, {{
                    5.298317366548036, 0.16704936114676766`}}, {{
                    6.907755278982137, 0.13131889977827738`}}, {{
                    8.344980368770571, 0.11621061825338226`}}}]}, 
                    Column[{
                    Style["RandomForest", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"FeatureFraction", Automatic}, {
                    "LeafSize", Automatic}, {"TreeNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0725280624560205`, 0.10382174092014755`},
                     DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 8.568076401730806}, {
                    0.10382174092014755`, 0.27452344768723974`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                  ImageSizeCache->{330., {120., 126.}}],
                 DynamicModuleValues:>{}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  MachineLearning`MLInformationObject[
   ClassifierFunction[<|
    "ExampleNumber" -> 5261, "ClassNumber" -> 5, 
     "Input" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|
           "Country" -> <|"Type" -> "Nominal"|>, 
            "GICS Sector Name" -> <|"Type" -> "Nominal"|>, 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Disclosure" -> <|"Type" -> "Text"|>, 
            "Revenue (USD mn)" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
            "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["FromDataset"], 
               MachineLearning`MLProcessor[
               "FromNamedFeatures", <|
                "FeatureNames" -> {
                  "Country", "GICS Sector Name", 
                   "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                   "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                   "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                   "Carbon Disclosure", "Revenue (USD mn)"}|>], 
               MachineLearning`MLProcessor[
               "Transpose", <|"FeatureNumber" -> 7|>], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {
                  "Nominal", "Nominal", "Numerical", "Numerical", "Numerical",
                    "Text", "Numerical"}, 
                 "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6", "f7"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          False, "Invertibility" -> "Perfect", "StructurePreserving" -> False,
           "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
            "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|
           "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

               "], "Type" -> "NumericalVector"|>|>, "Processors" -> {
            MachineLearning`MLProcessor[
            "SynthesizeMissingValues", <|
             "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Distribution" -> 
              LearnedDistribution[<|
                "ExampleNumber" -> 5261, "Preprocessor" -> 
                 MachineLearning`MLProcessor[
                  "ToMLDataset", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Text"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                  "Processor" -> 
                 MachineLearning`MLProcessor[
                  "Sequence", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "FeatureChangeType", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 8728850163752787708|>], 
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>, 
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 4012203223801137025|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 7247984987659546603|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>, <|"" -> 1|>}, 
                    "MissingCode" -> Indeterminate, "Version" -> {13.1, 0}, 
                    "ID" -> 4113760982813578529, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Mean" -> {209.80690318178338`, 38.57264497138987, 
                    138.3376102159199, 2296.6337905542246`}, 
                    "StandardDeviation" -> {1432.0032489855246`, 
                    171.69843080857044`, 192.57826196052247`, 
                    9129.337299520432}, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 3752698420053720059|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3, 
                    "SetSize" -> {55, 11, 1}|>|>, 
                    "Boundaries" -> {CompressedData["
1:eJw1US1IQ1EYfcIMChbLhBk0GCwrCjMIZwZhDEHQsjJBwaQww8qCIAvPYDEY
FGGIZWXhCS5o2EEmMgTx/4lv6l4wWIQxxLLiu+/7/Mq9XM49f9/oSm5htcey
rCnrf3y6teXvmPvBymbdS1TeWZweaywW35jp2tVcpsn4+dfxTtxjbyG9W468
spkwyBee/A6stRyX2wGqaz8zm7+fjWafOBHOI/s7eyPzfQ/0HQO843rLXG45
FAJveOkZomtuhEINDodGrhiIBw7qDOnyF0yWBj/HZ2rcPzBzxh9D2znlXOCm
kHaYihrCMtsxQ3DIIwMvFbklJ3x5R1JwSMk/tIUHygvVgepCfUB9QX1CfUNz
QHNBc0JzY1J6wJL0Alt6giO9wZMeEZFeoT1De4fuAboX6J6ge8MfBK7o6Q==

                    
                    "], {-0.5, -0.40909090909090906`, -0.3181818181818182, \
-0.2272727272727273, -0.13636363636363635`, -0.04545454545454547, 
                    0.045454545454545414`, 0.13636363636363635`, 
                    0.2272727272727273, 0.31818181818181823`, 
                    0.40909090909090906`, 0.5}, {-0.5, 0.5}}, 
                    "Version" -> {13.1, 0}, "ID" -> 2082886514676041914, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>, 
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                    Span[1, 3], 
                    Span[4, 7]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {13.1, 0}, "ID" -> 
                    3471102231048770802|>]}, "Invertibility" -> "Approximate",
                     "StructurePreserving" -> True, "Missing" -> "Allowed"|>],
                  "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                 Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBmQFm/iFib1JlAgAAAAcAAAAHAAAAPlM1OXtLmz/JiPcwbAyAv1XkjbwG
1YQ/vL3MM3alqD9dV7Q3ltHiP2S57Fz+YOk/MnmDCDz5wj8EQ6YFpvefv++u
GnjfNYi/QC4jX10NcD/9dRoemfCSPzfG6DRwO6y/+Fp8ks9qwr/+dWRCD5jv
P1e44E2uMWU/lBmRez1vUr9Wme0jCTJhvzS4InKsPWE/ogrVuWjN6b+p6Amc
leHiP19FAIP8/KQ/Fsw7lzFi479b2o2x/7O7v8QbWFU9jta/WunW5/OI5j8Y
e5c5Toh6vzr5ex/nBYC/SjOPC+5Gob+BzmGl9zXgvwH8AegL5cS/qmysjusN
6z8sWiaoibijv7tSilO75l8/vMAEl/OHgj/6wqUCxqOTv5LfxWV4YuO/+WSv
W3RQuj+vRZXiiwHYvxzP5zepJOa/dwddW+vpnj/AldSzjP6mP7AL08UTf3M/
oEUKDPSctr9PbMjmPjTvP+rNfS3iL8I//6HrutiXwj+qZ+qwPl89vy+NAyQq
BlQ/cl4LGc2Ndz/G8Myp
                    "], 
                   "Precisions" -> {0.7323150115031848, 0.9950353534094927, 
                    1.150259857918005, 1.3081831054231352`, 
                    11.904267203841378`, 12.590913834400338`, 
                    21.78658982700742}, "NoisePrecision" -> None, "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.045734233435905304`, \
-0.025594359218476675`, -0.0029955448724701505`, -0.00014912358418741337`, \
-0.00003169670080297662, 0.00013678099790770116`, -0.00011712644515109536`}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 7813766679320217419|>], 
                   "PostProcessor" -> 
                   MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 7.|>,
                     "Key" -> "((f1f2f6)(f3f4f5f7))", "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Method" -> "Multinormal", 
                   "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 7, "Options" -> <||>|>|>|>, 
                 "TrainingInformation" -> <|
                  "Configurations" -> 
                   Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4503155047815583877|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                   Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                 "NaiveImputer" -> 
                 MachineLearning`MLProcessor[
                  "ImputeMissing", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4503155047815583877|>], "InputDimension" -> 0, 
                 "OutputDimension" -> 7, 
                 "Log" -> <|
                  "Example" -> 
                   MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"},
                     "ID" -> 9054002198889522994|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"Information Technology"}, "ID" -> 
                    111132265781554143|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537},
                     "ID" -> 345609698028463116|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {10.982}, "ID" -> 2847955718844691890|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {60.982}, "ID" -> 8279278174017998872|>, 
                    "f6" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {""}, 
                    "ID" -> 2733924562406810284|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {624.605427784142}, "ID" -> 
                    6335781326903152349|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                   "TrainingTime" -> 0.078601, "MaxTrainingMemory" -> 2953528,
                    "DataMemory" -> 1220792, "FunctionMemory" -> 92272, 
                   "LanguageVersion" -> {13.1, 0}, "Date" -> 
                   DateObject[{
                    2022, 12, 7, 17, 33, 13.056956`7.868416926221628}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, 
                   "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                 "LogPDFDistribution" -> 
                 MachineLearning`TailedQuantileDistribution[<|
                   "Quantiles" -> {-5.8464371569811195`, \
-5.8464371569811195`, -5.772442655506229, -5.719536211659443, \
-5.569781037675731, -5.547597831708812, -5.492452464861547, \
-5.490044807247233, -5.4488020625417395`, -5.375138296361131, \
-5.327882521015458}, "LeftBoundary" -> -5.772442655506229, "LeftScale" -> 
                    0.03699725073744542, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                 Around[38.91308053189091, 0.3782184306301033], 
                 "EntropySampleSize" -> 10|>], 
              "Output" -> <|
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0}, 
              "ID" -> 8833432794738512184|>], 
            MachineLearning`MLProcessor[
            "Threads", <|
             "Input" -> <|
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Output" -> <|
               "(f3f4f5f7)" -> <|"Type" -> "NumericalVector", "Weight" -> 4|>,
                 "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
              "Processors" -> {
                MachineLearning`MLProcessor[
                "ToVector", <|
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                  "Version" -> {13.1, 0}, "ID" -> 7001699027996678713|>], 
                MachineLearning`MLProcessor[
                "ToVector", <|
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>,
                   "Version" -> {13.1, 0}, "ID" -> 4268131072254999855|>]}, 
              "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
              "Missing" -> "Allowed"|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
              "Mean" -> {209.80690318178338`, 38.57264497138987, 
               138.3376102159199, 2296.6337905542246`}, 
              "StandardDeviation" -> {1432.0032489855246`, 
               171.69843080857044`, 192.57826196052247`, 9129.337299520432}, 
              "Output" -> <|
               "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 1927666520227175614|>], 
            MachineLearning`MLProcessor[
            "ToLowerCase", <|
             "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 8121204540162656102, 
              "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
            
            MachineLearning`MLProcessor[
            "RemoveDiacritics", <|
             "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 1964114494773798714, 
              "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
            
            MachineLearning`MLProcessor[
            "Threads", <|
             "Input" -> <|
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
              "Output" -> <|
               "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
              "Processors" -> {
                MachineLearning`MLProcessor[
                "Sequence", <|
                 "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                  "Processors" -> {
                    MachineLearning`MLProcessor[
                    "TextToNominalSequence", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
                    ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", 
                    ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
                    "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {13.1, 0}, "ID" -> 613813152937597666, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NominalSequence", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "NominalSequenceToTFIDFVector", <|
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "NominalSequence", "Weight" -> 1|>|>, 
                    "Index" -> 
                    MachineLearning`SortedHashAssociation[<|
                    "KeyHashes" -> CompressedData["
1:eJw1lEuO1FAMRXvACmg2wAKQ/P8soSVGLIEBEiMGsH9xkpdSqlIp28++vtfO
159/fvyqt7e3v5+4ff/999/HFx6+rVqq2U5t5uas6uMQ9dFe5zNhJb3HMWvS
Km1rvToSKY8jNX27tJV0aV79ODRLoq/wmC31quPoyeyWtMycu46+HDZewFKJ
ohAHj6PWCogmCuTOGPHjyBUAd5tW+tToPicytTykamdkPMuf4gEcA+a2rxM1
rxNBhfBc7fIBHSGPIwBIYaECtFDvSUWYhUY3/lQt63g5TJXO0mFWFlAPJQ6f
smRRDl38dz6OCNeUdlDNRa4/xR2MQrsxzRHOv2i3lAVShyw+8trLoQjqFTOT
BdXtdhxaEwVHCN9bgrIPXM0IhcGrBQu0nPh4PyR2V18t65jBcn18xm6BcnSu
l1i1sXabIy6IQxfS0WU0fZsTLt1UmCv4rTlmOoRwujoNi+Vt3pQg1rhPgDTk
hqJKZnJKTozTRu6xZ6FgFk2P9CXeyw5qWXrJgj8ThvK2V2vQJunFkVTMbjuM
QGMkE5jG12Vuu9t0OK0zNSJxrcWx0yu5BK4YeHQwP/bsCvijTZKUDTP/fpMA
FPQuS9IR0afuTVZlcF2z0ZQ4draQrIRv3U9Pv7TL0nQVBeqqEyc/e8BSiTvy
LfyUPvHwydaynMviFLofHpgjppClUKc0a2NHcmaYcP7ZoFkIbB87lZh/bVBO
uVyb+dgvqIau/AwjcfSqaywGdNEBTcawH3sjH3O2AdfLGuaJZ4Ad8HrJEmy5
Vx57+/WuAaBrVaHEE89SQQMnIAR+WN7bDgSWTp1LzJUZOnV5wQ2KFAqyKSMv
HpZlDgaRyiAIiJ7/oUHtSA==
                    "], "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    ToString[#, InputForm] <> "Cn.i9)P$", "Murmur3-64"]]& , 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {13.1, 0}|>], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAwA+JZ+8T4F3B/tJdela8mWSvlsHur766IQAGHjdl5U6SU
3thPLz2z7Xc0p8OSKy+f6VwRdNDev3TKgWpJB9NNtkKqu2QcdugrPJST4XTg
X7O3SFiR1SHN7VRk234mh3ecys+/rXpqv8/RscLYTsiBcdn7A2u4n9jD9MPs
5Vx4y+1PNq9Dt/jeJ5zmrA4wPszejqrkPcbMEnB7YXyBlxtjDnH8hZu3Xz1y
j+JGTrg57gfXrLgchSm/dJPZ7ohURjgf5l8GCGhY3573N3bDPfuu5Gi7N884
HIxSD6beYvlob8h2kPHjuj9w/8DM3bCj8PInKWk4H+ZuWHjC5GE0zN4FPvYz
lqx7bQ9zb79YndlmJWGHd/8DjHc/kIXTMPUwfwMAf4a6Yg==
                    "], "Version" -> {13.1, 0}, "ID" -> 2566335944547631010, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>]}, 
                  "Invertibility" -> "Impossible", "StructurePreserving" -> 
                  True, "Missing" -> "Forbidden"|>], 
                MachineLearning`MLProcessor[
                "EmbedNominalVector", <|
                 "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>,
                   "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>}, 
                  "Output" -> <|
                   "(f1f2)" -> <|
                    "Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
                  "EmbeddingVectors" -> {CompressedData["
1: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
AYwY2QUp9dHwDxWH4HQ=
                    "], 
                    RawArray["Real32",{{0., 0., 0., 0., 0.}, {
                    0.09429772198200226, -0.24127089977264404`, \
-0.5270462036132812, -0.24486297369003296`, -0.5337972044944763}, {
                    0.3855826258659363, 0.345225065946579, 
                    0.375460684299469, -0.6187008023262024, \
-0.9083080291748047}, {0.038637321442365646`, -0.39784038066864014`, 
                    0.4888850748538971, -0.3776519000530243, 
                    0.04570373147726059}, {
                    0.1278393715620041, -0.05385725945234299, 
                    0.7183319926261902, 
                    0.20311319828033447`, -0.020085696130990982`}, {
                    0.2800740897655487, 0.3026285469532013, 
                    0.013881713151931763`, 0.6868195533752441, 
                    0.08314655721187592}, {-0.8298808336257935, 
                    0.34320393204689026`, 0.0243590846657753, 
                    0.07180754095315933, -0.6089136004447937}, \
{-0.10904797911643982`, -0.2677527964115143, 0.5590679049491882, 
                    0.48168694972991943`, -0.6030200719833374}, {
                    0.22935371100902557`, 
                    0.18263663351535797`, -0.7634024620056152, \
-0.029437005519866943`, -1.0930653810501099`}, {
                    0.14211100339889526`, -0.2188272774219513, \
-0.5335532426834106, -0.15458126366138458`, -0.20572292804718018`}, {
                    0.4123682975769043, 
                    0.36278361082077026`, -0.48854225873947144`, 
                    0.04904557392001152, 
                    0.27460458874702454`}, {-0.10662871599197388`, 
                    0.2889917492866516, 
                    0.4839726388454437, -1.046645164489746, 
                    0.2283746600151062}}]}, "Version" -> {13.1, 0}, "ID" -> 
                  4560545129116418848|>]}, "Invertibility" -> "Impossible", 
              "StructurePreserving" -> True, "Missing" -> "Forbidden"|>], 
            MachineLearning`MLProcessor[
            "MergeVectors", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>, 
                "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                Span[1, 54], 
                Span[55, 66], 
                Span[67, 70]}, 
              "Wrappers" -> {SparseArray, Identity, Identity}, 
              "Output" -> <|
               "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

                   "], "Type" -> "NumericalVector"|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 324326445301658208|>]}, 
          "Invertibility" -> "Impossible", "StructurePreserving" -> True, 
          "Missing" -> "Imputed"|>]|>, 
     "Output" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 4199606916556033440|>], 
            MachineLearning`MLProcessor[
            "IntegerEncodeNominalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Index" -> {<|
                "A" -> 1, "B" -> 2, "C" -> 3, "D" -> 4, "E" -> 5|>}, 
              "MissingCode" -> 0, "Version" -> {13.1, 0}, "ID" -> 
              18782000146286335, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "FromVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|
                 "Type" -> "NominalVector", "Weight" -> 1, 
                  "SetSize" -> {5}|>|>, 
              "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 7688100530236977542|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 5|>,
               "Key" -> "f1", "Invertibility" -> "Perfect", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
       "Name" -> "class", 
       "Marginal" -> <|
        "A" -> 0.001329282187618686, "B" -> 0.005507026205848841, "C" -> 
         0.04044815799468287, "D" -> 0.5218382073680212, "E" -> 
         0.4308773262438283|>|>, "LabelSplitter" -> 
     MachineLearning`MLProcessor[
      "FeatureLabelSplit", <|
       "Processor" -> 
        MachineLearning`MLProcessor[
         "KeyIndexSplit", <|
          "Index" -> "Ratings", 
           "Order" -> {
            "Country", "GICS Sector Name", 
             "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
             "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
             "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
             "Carbon Disclosure", "Revenue (USD mn)", "Ratings"}|>], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
     "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
     "Prior" -> Automatic, "Utility" -> 
     SparseArray[
      Automatic, {5, 6}, 0., {
       1, {{0, 1, 2, 3, 4, 5}, {{2}, {3}, {4}, {5}, {6}}}, {1., 1., 1., 1., 
        1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
     "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
     "Model" -> <|"Trees" -> {
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1k81u1DAUhe8gFoyACIYuKphFq2nLAqFONySZxM6vLbEtT1CkAiuQBiTE
C/GcfPc0yLLje+7/uc755x+3Xx6Z2c8nHLd3v4fj8e7PpzXCx++/7r/eH28+
fFsh/eV4ZgerLFi2nt0iTdw6bpW9txL5hDPzLUEatJ0l9p57tlfY1txq9KPN
aDPniUXOxJqx/L/dPhIlKFMjfcXO6GrldHlP5oDdTnKjiJMNirdHf7B3oD1Y
4mzxbO0a7cq2nK1dyKZULYmaOqxK4k22BhvQrcEy2AiayBVUX7YzPDPoRIyk
KkYyeqRZ/URFidh4Ra9VcUfERP4tUqTvWf24T43Os0/iasdybhuwTJ4tNgmP
oDoPmkGWz6Q6nC3vokE/qu4gq8TeWUG2gywit8Y26K8XluaF2YdvQ7RBDASh
XnGF7F2+1KQb6hpYnnkkove2wd6RElZfLJoI0pI5yLcl/iVdDPhfSu/MeOxa
DEV5t+AJn0q1d2IlgjozBd7ZTrn1vMG33Pz1rew5/WV7LFaSPCrWRnJnT8k4
qYYI+oYcG83vCk3Q1GrxMGm+vfjuFWfWmyvJ5dU46/OCO7OF3oJ/faI+m0kc
p+X9+R9SY1voXzhXDVfEK+xGb7hUzn+y1Gic
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1:eJxNV3s81PkaHtKaNqS2NBU1bpvajemiprDvtN0mqqWbicq47dF9ioqj3SZp
syXJIqfNMWQZtWowaSi9M2gMkwyiUdFklPsaSaar87Wfk3P+md9n5vf7vZfn
fZ7n/Y51wIGNwQYUCiWLfLBTVnnMMIqDmFunXA41PgOeX1OWkv8IOdTYML2s
DQQ/n7RzClQhwz/B0oXXBrTrKwr9V+8CYdGMcNPmKpDc8XC9O1QJQtvmnPWc
NNA5lLdrtc8hnPHhxpIjTei56We31B+vQnjeNl+PEhWE8GwkC+Sl0BHJKl4a
kYmaDSnWcqt7INFmpl6OzwNuY6Lk/cA9oHx9bMWc9BoUmnB/qiD3BZ7snato
KlSfdRyulSuQ8jq/6EFjLnhSd6TePZyNnA1xaeolj4DmaPesav8z1L/tXDab
1gjm8pdTjZ/KgGO89G6CgRI1Rwyzdu69jxo3h+V+v6nAfHj9Mw2pNySsLm14
eQLQ9r7yKCNxafZhGxYrxCDMtJ/L39oICp9K4ay1N4G6cPPWLmcxhjM8zq6d
FwF0qbr03fVqjDmwf9Na0xejfVCTZh3ptJWA7lfdRfqFClTPNPrFy6oV6WYl
EqqgFc3FuokD/pcwRBUtvHg6AVma1+KpmZVo/izT8TK3AlQeSRWJzytQ1xwR
t3JnPfB93F8mkfodTPCySXsVKo7ONwrMVUN8013eIMGLZvprr+XbBkgx/+LB
+WYNKmouVvbbq4G+18sw0L0NqMOivx6p7yNjxbp9FsI61OzICueur0KhnKte
JGkCjqtWd3RDPnK/MStnkXx07xMhF9KVQHESbm8j+HTIp9K+JXhKnyp5MQwE
Xc52XjWZw2d8U/4VsNnuhw5kRAVrFh7XArs9VpzedRv1F+8ufBhWCCLdUJSl
XQ2qwkw23n9UDbo33MO5LwRAWclQaTOlSKMOls7gKZG3e6YgSSBFwaTfOZ/8
8yHe+atXVhFk3nknkhu9W0bzdTR0T3MnfNJ0FYvD9jSN4q73e+1TQuJKBxYV
ZCdXgsBvvqFZuxTDr54Pcr72GCnbM5xv74uFcK/ETGtSLz+BmZpA+tRHNbfq
nQhucVRVspLMr5a57VGzHPXKfKemF2nAzfM4I/5VCoKSjef3p1Ugq2J1NZ28
L+Ba956GPFB8Z7BopB6904+qB4SvQqtBq49npcA+c0pn0Z6Nqqxj31tPK8WQ
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
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fRuB/B0NwhEBIGGAohIb9
C2EQFm/wFuEQHi/xChEQEduQ1ZEQGauxBlEQFbGRxXI0/HVMREdmx0Am/3FG
/3Ys/HIGx0FcxEN8FEFRJEBC5EN+JMI/+On0/uHEyIlcSIKkSIbk+O50ToGU
+Oa0ToXUyIY0ToO0yITUTof0+OpU/uKU/uwM+OSM+OgU/uDMyILkzopkfu+k
fufseOsceOMkfu3cyIvEfuU8eOl//MKJ/NwJXQAJXBDxXQiF8czx/NRxXQzF
sQIrUQIlMRwjUApxXBXVUBpl8MRl8dgVUQ7l8cix/dAV8MCxXAkxXRlVcN8x
fM/RXR010Ad9URO10BTNcNe1cceNUAd1cdvRXA9RXR8NcMsNcdNRfMORfd2N
EYAmuOZIvuqIDkQEt0BLNEd4X3E4t0JYt0FbtEYYX3Zot0N79EQod0BHXHJI
d0IQLroHOiOEL7gruiC4zzuYz7kbuoM+a/iMrV6QeuOvTvuP+qE/Tvm3TnoA
BuGXBuKnTviHBmMIjnsojvm7jnoYjvibRuKrFmIRDnsURmMMDvmLDnosxmE8
JmAiDviz9nsS9nku9noy9ngKpuKTdnsadnk6ZmAmZuGjdnoOdng2tvuDtvm9
5uGd5uOttnoBtviNNnsxluO1luCVluKlluGFNvm5NvqZNvipVuGJ1vux1uKR
1nkr1nod1mMDNuKh1ngLNmEzVvuBVvm+VvqeVviulns7dmAndmE3buAm9uCO
DuIQ9uK29uGWlnk/DuCmlvqGlvgwFvsojuC6FvmaFvoYjuMETuIUzuAsFviq
TuOK5vuyzuE8LuKSLuCi5vmC5vq8LuEyruCc5visruKMruG0ruOUZvukbuE2
HuExZvkOHuKE7uIe7uMBZvq4ZviYpvuopvmInuCwnuOQnuKgnuGApnq/pvgF
JnufJvk1JnqvJniP3mG3xnuX3uMDxnmnPmKHPmG7PmObvmCrvuIbxvo7fuAn
xniLRnuzRnmTfmOjRvoP/mKDRlgY7vUigzETMzM4QzAc12mY1yokQ3GoQ3OI
w3Kww3CQ12igVys8IzAiIzE10zAyV2mAkzIKozIaVyou47G/ozMGY7KfY7Gv
Y7OPVygOl6u3l6mX47OnkzABlyohE/EfLlEPJ2Z3L1Y3L1JXL1QyLlBypmAX
z1dnp2QqzlOQ5yot5yg9Z6uT07GjZykDZ6qDM7K9ZygLs3IKpzIbszMXc7Od
czAnp6utp6mNpyoP87IFWzIf87O1A1mABdmQjdjKhViERdnShdnCU1SMxdnc
NRnoEqzEymzmkizF0izDyWrqSSrLiSrHCWri8qzA8arIcQrwWFVhVTb2GDXy
aDV0NTZwddZ3DdbzKNVibdb1SNXhCNXlcNVjfdbxMDXgUNX2EDXmYNXyIAWw
CWt6oJpygJqxv2q4n5qzr6q7j1qxNbuzB9uwLau5t9qxl6q6M9uzA6u4pzqy
Eyu7h4LYXZXcTV3YlRXdVd3YRRXcWT3Zi8MZpPLupN7sw3Luy37sz7LuqAHs
oIEcxDJur9Jup8Fsq1IewqEcxpJuoxJureIewZEcxWIezaJupTEcyyIex8Ke
wPFsqUJuoYmcxIJurskMVAE3U35P4yI21XQ20QzOZD7P4mzOYV4HKI8bay7n
cT4XcCEbKbcbKpcbKKfrK4cXcwnraSnrKruXMZvr6F9D5VTT
            "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMbGOPxJEv8AuuHLkW8YBWlIpLkVokxIv4Jt7qECWOPZ7YnhyG
Z3cvTdOsOzFd/z4tS/+57CW4zutjmsfbeX6N07gch1bArxgGywYXJiYyI0cj
hTWph5TGztWUhQB7HuYFFCtRoCaAknwgX7LdXgzhAmQeRSVOLgf6B1ml1omq
AMUJIgUF+TDGjem49tpK/PuI1iaXa+voGkKr9ExulqKJ/ahr01qUf+Sqwgnl
VMfwAUL+D7HAFCM=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9km9r1EAQxudEwdMarCgUe3CUq74R6bXQJpvkNsnuJeDb+gkqVH2lcAri
J/Xr+JvnTgnZ3fn3zMwzc/bp++3nB2b24zHH7d2vYbe7+/1xjvDh28/7L/e7
y5uvM6Q/HKV1FmyyyracjT3j9cgWvCc00WbYG97Rrq210XrLvEsbiDrnjuje
2ilytKUlpBGEJRFH3BvFOn6HPYA44OPYoxXy6bhP7CWWZBf2jpiKDL2tsWQi
BiG84K6EUtlrPGd2RTWneJR4PkHvtQSsEcwaW1CtQXVWwhrQT6q8VD/e3aU9
tTm2kb/jvEDX4VGQo+LO5HDMDZx4zROaczI06ty9GnC8K6+/RBrI2nI38l+p
x0SNiUjXdOQMdkZ0C/IaXaEZLMWzR/dgjfgnPJJsLh8jddThDJf2RljOZY22
BNuZcMQr2PAuK3VaaK61OizIG+hjULcD3vtJTqA6csCv1xexXoPtDGV6yELu
8XVOO03V2V4RkVRfQDdoa9bonIv3Olv0W+WoVcl4mMEref3bg63ejjsqR9bO
jMj5MJstc1gwK+/S+ctiKlKH74uzcIy03+Ee20Yz8bwtfEShFni32s5a9aQD
Rvo/m6g9yeJhv6edZrrf2ygP/30fVsrk8/e9mYuHqEpHoSS7wV4x/ajtCNqe
BstCM++5e14e50hH7LRz9JCMJ5p6w+2cP1eN3sHM/gLBJHJx
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f+/TuB/B0NwhEBI7MJuhEJo
rMFahEFY2FEth0NSJEN4REBERHEkRMZfR/YfR8FvJ0FURHI0RHR0xEBMRHAC
hPcvx0JshHMcxMVPx8MPh/V3x8c3h3FChPZXJ8I/COXECOkvDuHPDu7kSIFP
DuaUSIVsyI6PTo0PptMgLdIBTo8MeG8rI6R3zoK3zoQ3zozX/qtXzoqX/qMc
yInV+K0X/qVcyI08yIvSKIPnzocCKIhnzo+n/qknLoQi+KHC+K7H/qaiKIbi
+KpS+KIS+KyS+KRH/qiH/qCyeK/KqIJyKI8KeKdKeKuKeKMHfq37fqUAVMVE
TEI1VMcIjMQ9v1QN1MRd10I3dMcd10Yd1EU9vNBtN0R9PFcDPNMtP1UjPFEg
GqMJmqIjOqEZHuumO6A5HumGW6AlHqoVWqMNHqg97qst7qkd7uq67+iab+uq
bykIN3XFN3TZndEF13XJXXHR19QDPXHBfXDevXDOV3XWvXHGV9QXl3Xa/XDK
/TEAAzEIlzQMFzUYF3TSQ3DCQ3Hc53XMw3HU5zQKZ3XEYzAaZ3TYpzUWp3TI
43DQ4zEBJ3XAJzQZxzULszEFUzENxzQDRzUdR7Tfh7XPM7HXh7THBzUHczEP
87HbB7TLC7DT+7XDC7EI+7QYS7DdS7HNy7DVe7XFy7ECK7HZq7DJe7TRu7XB
u7TeO7UO67HOG7ARO7TW27UJm7EF27QVW7XGW7Ta27DK27EDm7XSO7HCm7QH
e/EV37APG/USr7AfB3AQh3AUx7DcG3QY63UE67TMa3UcJ7DUD3ESp7DE97HY
a3QaZ7DIZ3EBF7HQ57DA5zHfq3UJq3QN1zHPl3EFVzHXKzXHK3QDN3EPy3UL
yzTbS3UbSzTLdzDTdzHDizXdi/QACzXNCzTVj/AYT/AU8zXFLzDZz/Ac8zTJ
czXRc/QabzDBs/UWszTenzHO7/AeM/UBHzHWM/QJ0zXG0zTaXzDKU/UdP9CN
3fkTv1CN1fkbUyQYI/0HI/wXwz1ZIDnMFRiMkxSO4RmcIRiSExWaYTjUoTjE
EzTYYTnI4zXQ4zTAEZicKRiRkRiZURidMdjfUdnPYxWNY9TXoxWTsZiUo9TH
I9XbsRmHIxSX8djL8ZmQiZiAw9XTw9TDQ9Xd/zAxk7Cbh6irBysZB6mLByol
U7EwizA1B6iz+ysN0zId0zPIGdnJGdjR/dTBfdXemZiZWZiV2ZibfdTO2dnW
OdjGvdXaOZmLvdTKPZWHednS+djCPZSfBViQ3dXchdjM3dTUXVWUxdjEZdnY
xRnokmzkEmzoLirFzirNIDVwGdZ3J5VjedZzR9V1B1VkJVZmFdZxe9V2O9Vy
AKuyrWq6jWqwJmuztWq4Fqu7laq5peqwLuuxhao6iPXZgA3ZXO3ZgY0YyAA3
U2M2YVM2VRW3YzM2UXM2Vgu2ZGW3Ymu2YSUHqqIbqS0bqoIbqLzrqyM7sZzr
qazrqozrqDNrqwu7srRrqZRrqgd7cgM3shd7s6RrqA/7cjlXsB/7cw7ncgCr
ayIncSAHcTCHcDTHsISraSiHcTirqrgDNIIjOYpVVMyVVdSVVMQVNZbjWNgV
VMjjOYHlVdDlVMCTOZ0zOIVlld9Tmc/TmNdllMelNZOzmNuzmcullNMllcPz
mN3zmc0ltIALmdWLuJjFlcXFlNlLuJRFlcnLmNFFtJKFtZ6FtIoFtZpruJYF
lMHrmN75lc75lNZ5tYmbeYAHmcZbuJO7uJXbmNrbmco7mNJ5lMK5ldy7mcz7
uYd7uY+5lNQ5lcQ5lNjZdYiH+Y+z6Qiz6jTP8CiP8ThP8CSzKJEzK6Ez6RQz
KoEz6CzP8QqvMr7P8yIvMZ4vMK7TK44vM7bTKZbTKqavMYavM7rTKJpT619D
9rai
            "], "LeafValues" -> CompressedData["
1:eJxNUEsOgkAMhWlf4pIreAu3Lt1iPABEJG4wARPjTT2OnX5mGEih7et7b3oc
X/0jNU2zHST0w+e8rsP32klyW7bnvEz3y/Ke5mk9ja0UfxIAtkdfyXJkP7AA
sj6sZeiIDAcCyVA+DnJYPhTj9oFPhSAKK2mdYLJaIyiV4pRD65QMSZRz2ver
BBSYEWFcqNpi2H6qL7MbfjgsejXFOlyKIkVZTJjgYj52WS5KzKFXO6isZUN7
cV2DXiQfpY+V6JQkrZKRSkj+Bw0VFSE=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kt1u00AQhacQfgwoKk0rVS2oRQaExE16AbY3zsabtS31tjxBkQpctVJa
qeIleGa+OamqVSY74zMzZ87sh583F7+emNntS8zF5X3abC7//ihwzq/vrn5f
bc6+/9nB+4f5ZMFWVtvS3mB7yzbagrMm+opItrlF4r19sWQtZ5/YCnwP6ozY
gLcmXimzxuv0H7FR2JHvc2vsHX6JX6mXY9ZCd8Q/c2up1oEeQZyA9+7J9rgl
kBGmtbIbe21TcU42wS/JqrhlzrZqhFUFNuAnbkt8/w12qtuUjFJTeuwFszR0
ddtYoayA39lT7AS2fiLoXqhT7GA72JJoUpXMfbTn+N+IzFHmLUhnlqRpCyqD
S7aL7aTfSnp4xSNqRmK11PIuUbsIwi3JbeD0Vaw/kt8QrTVx0G58cwP6DtJ1
kMI+d4Ut8J3lqDzfR3rwAjr49rxOq6237OG9+gV6ZVV4Jo0y/lovJRBb4LmO
R6gws0PxLTk9FUdNeqD9FHBakLVlvEfEmcy07Z55fDNb5afcI7oVdiyOPRMM
fNmFnXszOjbwC6BW4t5Io+2GO720liqt5h40Q3rUs3qYtlaXrE1kZfl7qbUJ
f70en+j1eO//L8dfgQ==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
Ewn+D+FylVk=
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rb7dW2bdu2bdtud1/fTzKZJG7SsUqLIAC6
hPqHKo17FA4IaNyrauh/UbpD1+YtmwdkztHq/x9I4H8HQVAEQ3DUYE2GQEhk
ZTaGQmiURCmEQVjkRC6EQ3jEQExEQEFHRCTYBRwZ+R0FUSHn819Hwx/ndXTk
8W/ndizkcgIkRGzEwS/ndFzkcDzEx09n9w9ncyIkRiZkRhJkdUZkcVIkQ3Jk
dgpk8ndn9DenRCqkxlenQXpkcFqkwxen92en8ydnwEen9QencRak9nvnQFak
cjZkxzun9Fun8Bsnd27kQUEUwmvnxSvnw0sn8wvnRwEk9XMn8TMXRhEUxVMn
djEk8hMXx2Mn9COXwEMncGmUQXCGYFmUwy/8RnlUwHlcQEVUQhVURWXE9wPH
833HdTVUR3f0QA3UxD3H8V3Xwh13QW3UQV3Uw213xi3Hdn00QEM0wk3HcmM0
wQ3H9HXH8DU3RTM0x1W3wBW3xmW3RCtE9yVH80W3QVu0Q3t0wAVH9XlHcUdE
didE8jlHdAAi+KzD+4y7ohvC+bTDuid6YTf2oDfCeCdCuw/6oh/6YwtCeQAG
4pQ346QHYTCG4IRDeihCeBiC+7iDeThGYCSCegqCeBRG45jHYBwCcdRjccT0
eMCHbU3AREyCdMh/NRl/dNC/NRW/NA3TccAzsN+bMBOzsM+zsQALMQc/tddz
MQ8/NB/ftcfftNtftcuLsBhLsNNLsQIrscPLsN3Lsc1ftAqftQ7rsRqftAYf
tRYftNXvtQHvtMUbsdlvtclvtNGvtcGvtBUvtQ3bsQMvtN7Ptc7PtAtPtdZP
tBePdRqPtA/7cQAHcQoPtcYPtNqHcBj3dQRHscrHcBz3tNJ3dQJ3tMInsdy3
tcy3dAZnsdQ3tcTnsNg3dBGXsMhvsNCXcQd3scBXcBXXdQ3XdB03cBNXNd+3
MM9XNNe3MceXdQ+XdB8PMNsX9RAX9Bzn9Qjn9BhPMMtP8QxnNdNnNMOn9QKn
NN0v8Qon9RonNM3H9Rbv8B4fMNXH9BGfMMU/MdlH9RlH9AVfMcnf8B2HNdGH
NME/MN4HFegD+oO/GOf9GmthjPdptI1RBskgDMq9Guk9CsbdGuFdCslQTMed
Cs0wTMwkDMtwTMQdGu7wHOZ4jMCIHOpIjMztGuJtisKtisotisbojMHNGuyY
HORNisWNis04jMsNGuj1GuB1is8ETMi16u816ufV6utVSsqVSs4VSsbl6uNl
SsGU7O2l6uVUTM00TMsl6unF6uFF6u70zMCFysgF6uZMzMz56uos7OJ5ys4c
LMXSzMlcDPBc5WYe5uUcdfZsdfIs5eNM5WcBFuQMFWUxFuJ0FeY0FeFUdfQU
dXBxtndJtnMJtvVktfEkleFElWN5luUEtfZ4VWBFtnKgWroSq3OcKrMKW3is
mrsqm7kam3qMmni0arE2G7s167AuW7AlG7keG7oBG7g+63uUGnKkGnGEGnO4
6rkJm7IZ63qY6rg5a3uoanmIaroVa3iw2rAt27E9e7MPO7Ajq3uQqrkTq7ob
O3OgAtiFVdyVlT1Aldxf3dmDFd2TFdyL5d1P5dxXfdmPAzmI/TmAZd1HZdxb
pd1LgzmEoziaQ9lTpdxDwzicIziSJd1dJdxNxd1VxTyGRd1FYzmORRzIwg5Q
IXfWfxu9JOs=
            "], "LeafValues" -> CompressedData["
1:eJxtUEEOwjAM22ZH4rgv8AuuHLkO8YBNlInLkDYkxCv4MmnTphzoWrfx3NTJ
fnoMt65pmm2nMIyv47qO73OvwWXZ7vMSrqflGeawHqZWyY8CSIIi0AlhDEVB
dDAt/fQfE6XAxFCkHIVZlcg0dO+qnjSNa8VDE7KcWV8RM5AZ9dYmGj+iskXT
dgfQdOgiQKVWWkmZofqU8gqzTdBpOJnLg0tZmlEd0u3Ce/O3+KiDd8tcthbB
MnwBtZwTog==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkctKA0EQRSsioskYsnARNBCCmI0LiQs78+hMz0xmwG38gghRVwpREP/e
0zeh6e6qunXrOXv92rydmNn3Oc9m+1vt99u/lwuU58+f3ftuv3j66KHVPEPz
ltnKKuvsyq6ttcaW3LXNsZbCUnPYl/w5b0Bz4F4ntRqvlhNgNcgBzhqWA6mQ
GiuOtg5+dpQysJT/gMY85TFCh71UhgLZIx/4jbI1xGi5kR0j5WQqsKS8NSdV
JS3MAl+HX41cqYN7bLHTDLkWL/AHewAJdikkVpTSpUOOGYKyFrYg04h8QzQP
ayLmVP61JTBypMDvNY3Yh+MGoubgHV4Zt6dOB0SKp9aUW013rGob+U3A4kwe
0XKQAX5nNlOnc0Xs1IHTRDt8veLleDhNxwmP+1pRQ6E9tXiNxW9hJEil9hFU
/Rqfud1hH2PvOIndggXV2ee0kiaq6TCdvrYz1ZTizEfEPtUevDYcN5poA15b
iNsuVX9Av+HG7v8BkKZR/A==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
YWJT+6S7VRNwnrDVbfuK8H8r6kxE
            "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Ztt6+2bZuv1ta2bdu2bdu2fc+2P8lkkrhxh8rNgwCd
Q/1F5UbdAwIDG/WsEvpvlGrfpVmLZoGZc7T89wsb/HMQghKM4AxlGCEIST+a
KBShCUd4wtBYUiOFpaFcDRSBiHQikEjU1x/VU2Si8FtRiUZd/VIdRScGMYnF
T1UjNnEoQUniEo9c5CY+tfVDtZSAhCQiMVmpqSQkJTVpSEZyUlFDKaiu76qm
lFTVN1XRV1VWWirpiyoqHenJQAVlJBOfVV6ZKacslNUnldFHlVY2svNBpfRe
OchJSb1TCb1VHgpSiLzkIz/F9UbF9FoFeKWiCqAwxShOEYropQqrKAF6oUJ6
roJ6pgJ6qlKUoSxPVJrHyq9y5NMj5VV5KlCRPHqoqjxQJSpThfvKrXvKpbvK
qerkUA1qUovadCC77qgOTWlGXbKpHllVnyxqQGbdVkMa0ZhbasJNZdINZdR1
ZVBzWtCSVlxTe66qNVfUhstKr7ak0yW146LS6oLSqCOpdV6pdE6d6U5KdSGF
zqor3UiuM0qm0+pBT5KqF0l0Sr3pQ19OKrH+I5FOKKH6M4DjGsggBnNMCXRU
8XVEQziseBrOCBJZXI1kFIeU0EYzhte8YSzjOKgTHFAcjWcCE4mtGcxkErG0
X5OZQkxNJYamMZ19iq69iqZZzGYxS5jDXPYoqnYrinZpHvOJrAVE0kIiaqcW
sUMRtF3htZRlLCectukQK1jJVq1iHetZTVht0Ro2ay2bFEYbtYG97GODNrKJ
0NrMFtZrK+u0m22E0lptZwchtUY7Wa1drFII7SG4ViqYViiolms/Bwiig5iW
CR3mCEslX6KjHMN9sY6zSH/8JKc4zRkW6jlnOccCPeQ8F5ivB1zkt1/hKvN0
icv88rn66de4zg1++Bx999n65rN0k1vc5g5f/S5ffKY++z0++QzdZ7o++jR9
8Kl6xBQ95glPmaz3PknPmKh3/oKXTNBbH69XjNMbf8s7IlhEe89r/80fPvCR
T7zyL3xlrD4zRi/9G98ZrV/84IWP0nP/yTMfqac+Qk/ceeyhLLQJzOyRh7SH
HsSC2nA98GAW3Ibpvoewez5Ud32I7ngYu+1hLZwN1i0fpPA2UDd9gG54f0Wy
fopjkS2KRbVoFsuu+3+65tHtqsewK95XMa2PLntvxbZeuuRxLZ71VHxLYBe9
hy54d533bjrniS2JJbVkltvyWHJLYRnsrHdVSuuiM57KUlsaS2udld7S2WkP
1CnvpJPeUSc8o2WyDjrume2YZ7Gs1l7ZLIfltHbKbm111Nsol7XWEW+lw57X
8llLFbIWOuT57aAXsANe0PZ7c+3zZgqwwrbXm2qP/w8SzI0o
            "], "LeafValues" -> CompressedData["
1:eJxVT8EOwjAI7cYj8egv+BdejSevM/uALdbFS006E+Pfy0pBSyh9PKC8Hubn
cO9DCOtOwjC9TzlPn+tekjGtjyXF2yW94hLzce6EPEtgJgA91FhcTEHB211Z
Ac7ZQQOMZ+3XGVCht4Y6DZKtXPO62Kq6Xt+D14r/byBTCG5i1UHcfEWP6y4Z
2TxsUkumhNg1dPQTRs67oC/GzBIu
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkktPAkEQhNvHQSIhHDiQQEII0QsXPcAyCws7u7ObeNVfoAnqSSOaGP+9
XxdkMo/uqa6u7pnpy+fj67mZfV+xPD7/xsPh+e+pg/Hw8bN/2x/ul+9nWF8s
heW2ttLGrJVt7Ya9sMQsbY6nYQ8WbYX/0kbWgg+2AzHGV2HfCV3bxrqga3y5
4grWjWXirxkDolZYJXd9uDxry8hsodMtpwZMBY8zr2BwdTUZnH3FvGHtMxvw
1+ASN66ugC1DfbAea4Y/F845OswIb8Y+5rQhpg9/jdXD69WMiXLWyPCKbxmu
ZA0y6XbN/ZAZqCPYjOiElaTZ1TVgtmQtUNvYFHXOlXM/gcmZt+zeB8cfT96J
pFpKVR6lcwN/hbKKTAOilngnWKWyOKJV3bVeYcHequtRWit1Yyb2gTrSMIJQ
rsczu9etuWr1TkepzvEGvb7X0jKjMvWVP+rGFXvlW2XtClsL6THHejLQU6xE
FeHU2cCLR7F7zpxaeqon0ak1/qFecKff0pz+20waXHumV27sgtguv2Cmns2F
z+BJ4nVFI3At5xH+Gu7W/gH2CVsq
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufbtNm2bbvNxm72Vtturq27fJ192bZt27Zt2/jeqz8zzzyT
sV2P4I4BQO/ArwgO7RsUGRnaPyTm16jRvU9YeFhkwWIR334vg28OIApRiYbU
wKITg1GMJpC66kFPYhKL2MQhN3mISzxcOYlPHX1RDhJQWwlJRGKSkJwUJCUZ
n1VLn1RTH1VDH1RdKammVKQmDVWVlWy8V1rSkZ4MVFFmspCRTLxTZb1VJb1R
Rb1WkF6pgrJTXi9VTi9UVs+Vi2cqo7zkoxnNearSyk8pFaAghShMLWpThKJU
pgpPVIzilOCxSuqRSlKOEipFcZWmDA9VlgcqpvsqqvJUIIgiuqfCqkghVaKg
7qqAqlKNO6pBdfLrtvLplvLqpmpyQ3l0XblVh1yqSz2uqT5X1ZAG5NQVBRNC
Dl1WdjUimxqTVU3IoqZk1iVl0kW14IK605JWnFdr2tGeNmTUObXlrEI5oww6
rQ6EE0EY6XVKHTmpdOpEZ7qQVieURseVWl1JpWPqxlGl1BGlUC8i+Zlf6E0f
hpBc3/E9hzWYviTTISVVP/ozgCQaSGIdVCINIqEOKIF+IL72K55+JK5+Io72
Kbb2KpZ+5Td+J6b+JFB79Ae7FUO79Bc79Tc79A//8h/bFV1DiaZhDGebomqr
RjCSKNqiAI1hLKWtjI1jPJuV3yZges0bJjKJyUxhAQuZyjQ2aR7TQbOYzUbN
YINmsl7yObiv01zW6ouv0WefzydfrY++iMWs0guWsJRnfPBlvPdLXGY5K1jJ
Kg5zhNW885U6yBrWskLr2MJWlms9y7SBjWxiqd76Zt74Er32bbzyHbz07bzw
xXruO9nFbp75Hp76Ij3xhdrLAu1jvvYzTweYq8c+R4eYrUd+lGOc46HP0nFO
cooTPPCZuu+nueczdNfPcMfPctun65af5wLTdJGpuulTdMOvcJXJuu7XuOaT
9Ijr3OAmt5ioqz5Bt7nHFb/DZR+vu4zTJb/PRX/AQ8bqgo/ReX/ME0brnD/l
rI/SGR+p54zQaR+ulwzTK4bqlL/lpEe3GPaf3vGeD3zkE/8qin3mC+KE/6Pj
7hzzv3XUsSNuFmB/6bD/qUP+h6JaNDvov+uAB1pMy215LJbFtt+03+NYXPtV
+zyexbdflM0SWEJLZIntZ+31n7THk1hSy2q7PZnt8h+V1pJbCktpqWyIdnpq
2+E/aLsPVhobpG0+UOksvWWwAdrqGW2L91cm66fMlsU2e19t8u+10b9Tdsth
G7yPclouW++9tc7z2lqPVD7rpTXeU6u9gBW0QlbYitkq76GVXsSKWnet8G5a
7l1V3LqohJW0ZV7KlnpnLfGyttiDrKJ1UjmLUHmrYIs8XAu9ki3wjqpvla2K
VbX5Xt1qWDWb52Ga6zWtltWxOd5Bs722zfL2mul1bYa3Uz0L1XRvq2kebCHW
0KZ6F5vijayxNbGm1kadrZk1t1Cb7K3Vwlppkre0VtbaJnpLTfA2Nt5bqK01
1zhvZ2O9vXWwMOtozTTGmyrcmqiTNVaENdJob6hRHqKR3tVGeLC6WXcb7g3U
w3raMK+vXlZPQ/1/1EHq+Q==
            "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMTOOxxJEv8AuuHLkW8YBWlIpLkVIkxO9xHDuJoozlZcaTnOb3
+IwhhP0gME7fS0rT73aU5L7tr3VbHtfts6xLOs+DFJMAMUOPR4Aja5bBKgB8
hluuMZaSVlSjjRuHi5KtsVE9kUAAUQ6mQkXI+HAiM3HtmJBts32AuTZm13aC
k+Tqs6k+sq0xh9zxuLrIOPg3ZdsCLCFqi9xVUSVQ+7duyx9oURMX
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kstuE0EQRSskRLFjRUFsELbkRCZewCJkAfOwZ3p6pnsktuELghRgBZJB
ivI3+VROXQNq9aMe99aj6/LLz9uvz8zs1wnH7d1D3O3uHj9PED79+H3/7X53
8/H7AdITR2HZNjZaZUe8tqzeOpuyKkto1lbbtV5uO7PGJtwNmA1nYytrLfI+
twVSC9O1lawAs9unaBK7hf+Y7dJg7+xQ3s5Z4N2iC7C0RPWIEXnD2aMtwWRQ
/uqVZSm+zl7DM/BqsHbgRrJJoCK+I6tGfo5mTd4Br4hvAW/GklmR6B1sx9wl
kUt0A7gL9gB2VJwZ2Iy1wX6G/41i1/Ame696PnAnZRmwFPDO8UlkO9gb5T5I
jrZEdwFTUDVRuEp59Hpv8JyJw7UZ1FwZvFCPC3tLnzt6t4ZlLZa5svPl1WdJ
rfa+jw3M3gHPtiBOQlNgGdUxj+PRRjtRraO9okavO9gllg7/U/HVYAPe2a7s
pboY1Octlk4/MvAq8K3ViUa6GfK+szX2hXRRWaxAjVpee09dWztA1xP/UL3y
6hb8zVI/FZWL9zHgkcFXmh6Pvq/6H9c59qhMa7rkuO3fKbmiuowckH2eWuW8
UtRWszelrsSMJU11/z9epUlcCj/RTzSai9b+AP8uY30=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
FwfUwuQ=
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fQOB/B0NwhEBIXMN1hEJo
jMFYhEFYjMJo2OEgj0R4REBEREIBFERk5HFSJEMUREU05HZs5PJfR0cM5PQf
x8Rvx8Iv53AcxEU8ZHd8JMBPZ/MPJ8R3J8I3Z/VX/4MvTowkyOLPzuzkSIEs
yIpPzuSUSIXUyOjMyOCPToMPTot0SI8MSO9MSOf3zoh3Tuu3TuM3Tu1sSOUc
SOnsSOHXTu6cyIVXzo08SOaXTuoXzovnzof8SOJnTuxC+McDMBCFUQRPXRQV
UBHFUBwlUBJlUBalkMilkdBPnMCPHd+PHM/lENcPXR4PHMeVUBn33RlVUBX3
HNvVUB3t0B41EMv1ENN3XRN3XAu3XRt1EMN1Ed23HM310QA33RAt0QqN0BgB
iOpARPENN0FTRHYzRPJ1R/Q1N0cLRPBVh/cVh3NrtMFlt8Ulh/VFh3EHhHZH
hPIFh/R5d8I5B+GsQ7gLuqIbuuOM+6MHeuK0+6EXeuOU++Kk++CEg/u4g/mY
6aOGj9gaBGkohmEw/moI/uiwf2s4fumQf2oEfuigv+uAv2m/v2qfv2gcPmsy
pmA8JmAiPmmvJ2GPP2q3P2gqpmGXT2A6ZuAojmGnZ2IW3muH32k23moO5mIe
3mg5VmA+FmAhFmG7X2ubF2Orl2EJXmmLl2KzX2qTX2ijV+IAnmuDV2E11mAt
1mErnmk9NmALnmq9n2gjHmsTHmmdN2OtH2qNH2i1t2E77msHdmKV72kXdmOl
72oP9mIf7miFb2s/bmm5b2qZD+IQbugwjmCpr2uJr+k4rmqxr2iRL+skTuE0
zuACLuksLmqhL2iBz2G+z2Oez+siLmGuz+kyzuoKzugqTmuOT+kGbiIrs/EW
TuoN3uI27uAuTugJnuIe7uMBjmu2j+khjuoRjmiWH2OmD2uGn+ElDuk5XmC6
D2qaD2iqX2GKX2Oy9+sd3iMjM/EDPuIHfuIT9mmS9+oz9ugLvmKiv2GCv2O8
d2ucd+kXfkMw/mCn/mKHxnq7xnibRhtMz60aZTIYg3OkQzAkQ3GEtyg0NysG
YzIMw3K4w3GYIzI8I3CoN2mINyoSIzMKN2iw1ysqo3GQo3Og12mA1yoW1yg2
47C/Vysu47GfUzM+VykVVyoBEzIR/2Ffr1BiJmEfL1dvL1NSJmNyLlVKLlEK
LlYvL1JPL1QPL1AapmV3z1c3p2NXz1MXZ2Bnz1VmZmGQ56iTZ6ujZ6mDs7M5
WzAHczIXc7MxZyoPZ6gkpysv8zE/p6kgC7G9C7Cdp6qtC7M4p6iNi7AoJ6sY
J6m1J6oEJ6iVx6sUS7MMy7KlG7KFy7EBx6k8x6q5K7AiK7Eyx6gqq7EKRyvQ
o1SdI9XMdViDNdnUI9TEtRjg2mzs4WrkuqzHYarPoWroIWrgwarvRqznQQrg
QNV1E9ZxUzbjANV2IGu5v1qyFYdxOFuzDWt6KNuyHftzANuzA7uwKzuynzox
iDXcV9XdR9XcmVXdW1Xcjb3Ym93Zg5XdSz3ZU5XcQxXdh33ZjxXcXeXdTeXc
VQPZRWXdWWU8iKU9mKU8hCUdpBLupBHsqEmczJHsoFEczTFsr/Fsp7Fsq+Ie
x2JuowlsraKeyCJupSmcysJewGlsqVlsoUKezhlsrpkMVEE302w2VQHPYX7P
5Tw20XwGKJ8bK68b6V/QGUjZ
            "], "LeafValues" -> CompressedData["
1:eJxNUDsOwjAMTWpbYuQK3IKVkbWIA7QiVCxBSpEQx+Gm+FuSwYmf/Z79cpif
431IKa07DuP0PrU2fS57Tq51fSy13M71VZbSjnNm8MuBiNCO3Jo4IG+S8tbh
qOV6k7WBNpJSrQibrkta2UkQqQLRqmR5Ah8jgySdCMYVosEKBR9AuoFOwM5h
7ODeGMp/S7yWc7tgm260/m8wSuiW0J04mmUHs8eIWAIcAAgGcyZICHd/STHc
1X9BpxQD
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkklLw1AUhW+1CycCgmCp4kBVhC6qC01i0zQvwwO3Cu4rOKwUqiD+e797
KuG93PHcc09y+vz58LpmZl8bXA+Ln7BcLn4fN3HuP75f3l6W17fvPbwnroHd
2cymNrKAVVq0XbzGWiI3dmkVVkdFazWR0lKqasutUJd7mc3JVurueEeyqVAb
vEB1Z1tUtIplnBE1bjVkW9U5Up/+UnMDTx9U762JOKce3Z3tEB1xr+a21Bf/
OFNOZ0eWkMk557aJ74h7sMhsjFeLe9TEAEqrPTrQOzEIeL7tMTMSu8aKdiZO
AYTAbO92FhPOCbYj+H45HbVYlDYEfy59AvEgNUvOkPqAEr5XhX8lrSo2jUz0
Ordz8pntw2bMDp10db0b8A41vZAfpUAh1RtxrMXAN67pXuk7p25C5BycbaKJ
vtTA1u1AX60AKRGy753iV7obcB2rAqvh8VzK3VO/635HNLULsS7RqhKDGbEM
zJb4THtFIQ6kfhQj/4dcp6BMzjNFFf/DUm2ZUNfXdj65pjfAPcLqD1MKVAM=

            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
bL5W+1xhL/wXC1G0Bg==
            "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Zt2+6rbfvV2tq2bdu2bdu279n2J5lMEjfuENA8CNA5
1F8ENOpeODCwUc8qof9G6fZdmrVoFpg5R8t/v7rBPwchKMEIzje+E4KQvOM9
oQhNHvIihcGVjbCEIzwR+KOsRKS+ohGdSEQmCvX0W3X1S1H5qTqKQUzik4BY
xCYutfVDtfRdcfimmopHDX1VdSWkmhKRmC+qqiRUUQpSkpQAfVYyklNZn1RJ
qUhNGtLyURX1QRX0XuWVjvRkICPvlIVMlNNbZeaNyuq1yuiVSuulSik7JfVC
OchJLp4rN89UQk9VXPnIz2GOUICC1KM+hShMMYrzRMVUhKIqShE9VmGVoCSV
qEwpCqkcBVWaMjxSWR6qgB4ov8qTTxXIq/uqyD3lUQBVqEVuVaUad5VL1cmp
GuTQHWXXbdXklrKpNnW4qayqSxbdUGY1oCHXtZlGNGYgg2hCU/ryH9fUjNa0
4aqac0UtuKyWtCKTLimj2pJBnUivdrSnA+nUkbS6qDS6oNQKpDPnlUpdSKmu
dKM7KdSb5DqnHpxVT3qRTGeUVKfVh1NKon4k1kkl0gn1ZwAJdVwJNJj4GsJQ
jimehjGco9rICEYymSmMYjRHNIExjOWw4moccXRIsTWeWDqomJpIDB3QJPYr
uqYyjQVE03RmMJ+omkkUzSWy9mkWs4mkOUTUXkXQPMJrj8Jpt8JqIYtYzBJ2
KYyWsoydWs1yVrBDobVdobSSkFpFCG1TcK1hLVsVTFu0jvUE1QaCaLNMm7SJ
jUJb2Mo25LvYzXbcd/DHd/LbN+iX7+Gnr9cP38s+1um77+cAa/XND/LV1+gQ
q/XFj/LZb/DJj/HRj/PBT3CSVTrFSr3305zhLO/8Ipc4x1tfofMs1wWW6Y0v
1WWW6LUv1hUW6SoLdY3rvPIFeuk3ucVtXvgd7jJfz/0e93nGcx7wzJ/y1Ofp
IY94zFw98Sc89jl65LP10GfpBS95xUw98Bl6zXTd9ze8ZZru+VTd9Q/c8Sm6
7R+55Z+46Z+54V/4ymRd90m65j/4SX4rYL/4TQpLaX9wglhQmyiBmU3QVR+v
Kz5Olz2YBbckltRCWEiLbpc8lIW2cBbexiqMjdFFH62wNkoXPIJFtJGKapHs
vEe2cz5CZ324otgwnfFodtqH6pTHsJg2RLEsrsWzwYptgxTHBuqkx7cElsgS
2wCd8IR23PvrmPfTUf9PR7yvklkfJbfeOuy9dMhTWWrLZtktjaW1LHbQ09kB
76kM1kPprbv2ezdltEyW2bpqn3fRXu+srBaoPZ7Dcloe2+25bJd3Um7rqJ3e
QTs8r+Wz9tru7bTNC1ohK21lrLBt9RJW0tqqiLVRUStmW7y4bfbW2uSttNFL
2QZvqfVe1spZC1W18rbOK9pab64K1kxrvJJVtqZa7U0UYI1VxRpplVez6tZQ
K72BVvj/pRS1FA==
            "], "LeafValues" -> CompressedData["
1:eJxlUMsKAjEMbE0GPPoL/oVXj15XxPMu1sVLha4g/r1pktYFQxvymJk03U/P
4b4JISxbccP4PpYyfs47SS55ecw53U75leZUDlOU4lUcGCwG6GGQB1r2wDoK
s2vohlKrRMdQ7TFJUB1qyNQkvNXBDQ6bSn0W1Gw8EKuYpoRGdoS+hUwAjY7o
EHZAp/hKvjQT+upiRKtF2WRXCi3RKtHfX/ze/gU/wBKK
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk0tvE0EQhNs4SMFJLPM4WMGCIBMTlItzgH15dnf2MRLX8AuCFOAEkkFC
+W/5cXxdiUYzu9NdXVNds/vu2+/r70/M7M8hy/XNv7jf39x9fcbmy6+/tz9u
91eff07Y3bMUdmwZa2atvbKZ5dbxVlptW95bS4yaOYCJNuHZsz+yqY3KNjwT
sdEW7DPY5mKoQL21QGQNT0NdTlUAG6ntOMEjU0ZJ9Y5dqbW2Azu1N9LjeB8D
o2NEewo2MltmLl2tvaQugU/2Ho0F50W0F9I9oCvCnNNZRawHF4g7V9SuJ3pG
rgHfsTrrhFzOXJDvYDhXB445YdZyINiVmF6joANXy7MBLTVo78S1rWCv1L3X
jGTyx16WPB+8G+RUJe3OMCPb46N7uOW9kFMNXL5v8aAVd2LfUrEjktRppi56
HKnJRPsgXMNwjzv0ei8L3UHD3Ol2B/sEv3c6cOop2Ex57/OEvOMfmGrpjfg8
or8Hf0Z08+hc5L5KMsfKuP8bKlYgE9+EfymdnF/h2RzMVoyR95kdyvGPVBSo
rBR3r9ZiLO3SnhPPqSnhWaqyV8cjp3a6dVewpqeRGcB5bJSShboo5FiFvqAb
8q/OTx91IyNduReBeJDfU04tyA9SsgFRsJ5zZqYKv6FgL+S43/mcMyt0RrlR
Sqn/VxfgDvStJDgT8SXR/xWsZ+c=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
ZcMuI6rm+VZ5fwc3CKkXHhpM/J3EP7qo+meyKtd6yP1HXQdqm1nbqlWt4PdT
xdVJjChkLOpq+0jiEZy8uMBlvQztLxa2d5JrOWXfEc2cQsNhgQneEUDf/mXT
rxeb0E9dLZs3Igu6ZTrtYwgO7MrpbjEljYO+Ki/rZLg6y1EwJ270pNRGEO3f
NqbYvAI5dJ2eV/oylH5sZxn9aET1CJOML3elQLWaGt9H+rV2LtXy6vqPlx2t
ToaWb/NOnXxxHeTT+u46TMlARtPev/3IfCpPSfpF59dUVAXuH+22WgKcN5u2
WM9Tg+VnJ1nhqjzU6o+3b5N69strINjR9dpO8RZ4tJ7eaMIrz7z20kIVmd+W
jF30nvQX9oLmKMgQgWXKtwOa/x1+TX/8Oo7Eqe3/tJ604XeCn6KqvvlT7elc
VGeHOnmQ/saKoUkcZM2DfpJajznoH/0SlTlzG3VOywfrPX8W111THySBRfH0
jQqU1pbNCSXzO7c67OOuk3UgvLB5szdZ/WIKR57TKUU19eP6X3UUKBBxWrqV
bSA8vjGrSS8Hum2e5TQQf9I9zfdOeHAflMHLi1YTPjkXlk4Tk3rB7rPtpk8f
x9TiaX/mQnTw8VwUuM04YbshGtjOds8DIqQgOcJ/s3ytCv4PUXJJuw==
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fQ+B/B0NwhEBIFEQhhEJo
xEFc2GEQG7kcFjkdDuERATksR0dEREJkZPdfR0UUZPMfZ/VvR8MvZ3EMZHZM
xMJPZ/IPZ/R3Z3A8pHdKpHN8JEBCJMI3J8c/SOuvTobESOMkSO0vTorPTuVP
TukUSOGPTu5USI00SIt8yI90SI8PTuYMSOr3zoyMSOJMSOx3/sdZkBXZkMhv
nQfZkdBvnAM5kQu5kcCvHd+vHM95EdcvHccvHNsFEMvPHdOFUQRVGMCiiOGV
WIViKI4SKImJmIRSKI1nHoIyKIuuiO5yKI9KqIwKiOaKiOqnjuInjuwqiOTH
7oJHDkBVRHQ1VEcN1MRDd0Yt1EZbtEMdRHAgGqMu6qE+wvuBG+K+G+Cew7kR
wvquw/iOm6AlWqEpmuG2m+OWQ/umW+CGQ/m6W+OaQ/qq2+CKQ/iy26MDOuKS
g7sTgvmi6QsOwnnD52ydtdQNf9UdPdATvdAff3TGv9UbfdAXv9QPP3XaP3TK
3zUAA3HSg3DCg3Hc33TMX3XUQzEMXzQcIzASnzUanzQKH3XEHzQG73XYY3HI
43DQ4zEB73TAbzUZU7Dfy7HPbzQV07DX0zEXr7XHMzATs7Dbs7HLr7TTc7DD
LzUP87EAL7Tdi7AQz7XNz7QYT7UES7EMT7TVj7XFj7TZK7DJD7Uaa7DRD7QW
65CcKbgeG7DB97UR97Ted7UJm7EFWxGJkbkN27HOd7QDO3EUx7ALt7XWe7Eb
t7TGe7DaN7UPN7Qf17XKB7DSB7HCh3AYR7Dc17TMV3UcJ/AVV3QSp7DUX3Aa
Z/ASr7DEZ3ERl3AOl7XY53EBl7TIF3UZV3AXF3QV13ALt7HQ17HA5zXfNzDP
NzHX53QHZzXHZzTbp3UPp3QfDzDLJ/UQj/AYTzDTz/EUJzTDxzXdzzDNxzTV
LzDFRzXZrzHJR/QGh/UWhzTR7zDB7/EBB/URBzTenzDOnzHW+zXG+/QN3/ED
PxGOezXavxCae/Qbu/UHfyEYwRicowyO9C6NMDncOzXMOxSC2xWS2xSKWzXU
WzTEYRiWmzXYmxSeETjIGzXQETnAGxSFUdnf/zAa16ufYzI616mvY7CP1yoW
YzMO16i3EzIu47GXVys+VykBV6qnVygRl6uHlykxlyoJlygpFysZF6m7F6qb
U7IoizEVUzMNFygt07Gr5ys95ykTM7OLMzAj56qz5yjIs5WFWZmNs1SQM5Wd
OdjJM5STudjRuZmX05WH09TBU5WPU5Sfk1WAk9TeE1WIhdnOE1SE49XW41Sc
JViRY1WSY1SaZdjGpdjao1WW5djKFdjSo1SeI9XCI9Tcw9XMlViZw9TUQ1WV
Q1SfDdjE1Vidg1WDg1STtdjYtVmXAxXoOmzkAarH/mrofmrIvprCqWzEQDZm
E/ZlPzZlH7ViazZjczZwb7VgS9Z3L9VzT7VhW/ZgD7VjdwWxM9uzmzqwqzqy
i+q6E+u4s7owSLXdSbXclTXdjd3ZUTXcQT3ZXr3YTr3ZVn3YRtXdWv05gKM5
hgM5iCM4koM5hNXcSkPZUsPZQsPYXFXdTAFuqlFsoipurMoO1FiO42Q2UiU3
1Hg20ATWV0VP5CTWUwXXVXnX0TRO52quYTnP4EzOYlnX1mzO4VIu41zWUhnX
1DzO5wLWUGlX10JW0yJWVSkvZkkvYQkHaDmrqLgrq5hXsKhXchUrqYgrai3X
cTt3cD03cBM3s7A3spArqKDLawvLqYC3Mr/LahvLKJ9LK69LaSdLKo93cTdL
aA+LK7eL6V9JN4C9
            "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMbDO2xLFf4BdcOXIt4gGtKBWXIrVIiMfxN+zYcRpFjtfxTI7j
q3+kpmm2g5h++JzXdfheOwluy/acl+l+Wd7TPK2nsZXkTwwzEbEeUk/9Glum
PFaz9sgyQHLlAFwqeRIZJgApRu3KJBkMm0kEnUqW1sD6yAmRU+KgQ54osIUe
vAIXYpTAdVdw4CrdSuohc88pOI3AodJV17niummnlbhN+W8ECOYEYG7Q2DCx
+6UCutvCVW1I+QOlRhSZ
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1ks1OG0EQhNtJhAIYFMUXFCyjCNkHLuBL1uud9e7s7KzEFZ4AJH5ORHIi
RXkXHpavy6CRZnqqa/qnen7e/755/GRmf76y3dz9i9vt3f/bfS7XL38fnh62
y1/PI26vbMFG1rJvbG3HWKUNVmHXtrLEynaG9xLs0pbWcY5tD6S1aA3cFdy1
Ta0gQgXjSvdsCzwF/CN8Db6GiIF4M72d6+Vg5/Aq2BdEm+HtYFXYAxzP0MGu
wE6shzUFT/YDe805tS/cs7IlML9nVbwPHlk9p68J1rFqcH9U5I1qbHQmOJ/h
bOyAihzzVyWsM7yRPjLoWFHGeCP1B/K2IJW6DPAbrFKVR+5+85qzaq7xdJxr
+KUiFPAmUi2Q2xX8hpXtEHU9rldfEMV1SGjVKs/wjmVVnaTiroNCOtRSJmmG
vTJ/7C2+pIlN6SppugNYoep8D/adrK7nAjuyR6Ks0MTVavUnNjDHyn+Az3M0
VHXKa6/vEHYAu6JH771U3gSv0S9wtRIxJsxzpT7mmn6lDkoy7PrM76oHsBFo
oWydtO7hnOhndMwqw6nlqaV9ULc+593se9CsGnb3Qnr1/LVzdVTyYkG8U3Xb
Mt+ZflWnnpealM/e87WqfY56Pps3AOxkpQ==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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

            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27bdXs2rbdu2bdu2bdvefX0/yWSSuEmHKs2DAOgc
6h+qNO5eODCwcc+qof9F6fZdAloEBGbO0fL/P4fA/w6CoAiG4PiG7wiBkLAv
IxRCYzbmIAzCIg7iIhzCIyZiIQKKOBIiQ46Ivy7sKCjkP46BqCjoaIiO3y7g
X87vn87nH87r2Mjj787teMjlNMjp+EiAb87hhEiExEiClMjur06KL06Gz87m
5MjqT06Bj87iD06F1Mjs987ktEiH9MjojMiEDMjgd07vzEjnSqiMLMiKbEjr
t07j7MiBN07tnMiF3MiDciiPvEjl186PV86Hl07pAiiIQiiM0iiDFy6CYkjh
okju507m4kjqZy6BkkjiUkjsp07kJ07oxy6LR07gh47vCojniojrB47jKojt
sRiHqqiG6qiBJojlmqiF+66He47p2qiDu47huojuO47m+ojq226AhojiRojs
xojkW47opmiGAETwKIR3c7TATYdzS7RCa7TBUIT1DYdxW7RDe4T2QAxCB4Ry
R3RCIDqjC7riukP6mkO4G7qjH4L7qnvgioO5J3rhsoO6N/rgkoP4ovvigunz
7o8BgM/ZGgxpCP7qrP/ojH9rGH5pOEZgJH7qtH/olL9rNL7ppMfghL9qPL5o
AibiuD9rEj7pmGdhMqZgKqbhqGfgiD9qOj7osN9rJt7pkN/qoN9oLuZhB3Zi
PhZgDV7rgF9pIRZhvxdjOV5qn5dgr5dij5dht19oBZ5rJZ5pFVZjl59qp59o
LdZhh9djCx5rAx5puzdimzdhMx5qqx9oK+5rG+5pi7djs+9qF3bjPC5gD/Zi
Pw5gk/dho+9og29rvW/pIG5qnQ/hMG7oCK7rKI7hOE5gra/pJE7hNM5gja9q
ta9olc9ipS9rhc9huS/pIi5qmS9oqS9hic/rCq7iGs7pDd7iOm7gJm7hFc7q
Nu5gsR/jLu5hkc/oPk5roR9ggU/pIU7qEU5ovo/rCZ5ino/pGY5qrp9jjl/g
JY5otg/rNQ5plg/qHd5jpr/iAw5ohvfrI/Zpuj9hmj/jC/ZqqvdoinfrB35i
snfpF35jEAfzD/6iIHdKMDIxM0EyFXcoCLcrJENxkoMyGIMzBLdpordqgrco
NDcrHDdpvMNwnMNyrDcqPCMwIjcoOdcrEiMzCqMyJmNxjNdptKMxOtdqlGNw
pNdohFcrNlcpDuMyHlcqARNyuONzmFdoqBMxCZdriBNzsJcpKZNxkJdqoJdo
gFMwJRervxcpNReqn9MwLdMxPReorzMyA+erj+ept+cqC7MyN+eol2crG2ep
p7MzB3Oyh2equ3Oxm2coD/MyH6erqwuwi/Ozs6cp0FNViIVZhFNUkZVYlJNV
jMXZySXY0eVZkqVYmpNUjhNVhmXZwRPU3uPVzuNUgWPV1mNUmaPVi71ZhVXZ
xtXYjAGszlGqwZqsxdps7fps5Tps6Xqsy5Fq4RFq7uEKcAM25DA1YmM281A1
dRM2cVM29hA152B14iC1YEu24kC1Zhs28gC1ZTs2dH81cHvWdz/Vcwd2ZF/V
dR8FsjO7sCvruBtru7dquZe6swdruqd6sodquLuqu5v6sC/7sauquYuquj8H
sLOqeCArO1BDOJQzOYvDOJxTOJUjOJKT2UmV3FGj2EGjOYYVPZYV3F7j2E7j
2VYTOJHlPYnl3EZl3Vpl3Eql3VKlPI3T2UIz2FwlHaASns3ibqZinsOibqr/
AJlaQN0=
            "], "LeafValues" -> CompressedData["
1:eJxNUMENwjAMTGNb4tkV2IIvT75FDNCKUvEpUoqEGIZdOcdO0jR1LvbZOfs4
vYZHDCFsB5hh/JxTGr/XHpfbuj2Xdb5f1ve8zOk0dXD+YISxRHTjxAdkkN2K
+w1UhnTGII1GJiYiIBJ4tBoBtgRlRq+Zlx32dv2Liqqh0IQL3zM9RQ1ZPNPz
c1GqfM8pjeXNpQJJKSKu0y/aCHOMhKZMD5pRBOMyxbJdG+301bnZS9RKN0G7
obSgq6E2bf4D6k0T+Q==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtks1KHEEUha/GRdRWAgGRYbKQlskiLiYb+6e6p7u6ugbcmicwYOIqgYkQ
fA8f2O8eh+JW3brn/p6qq59/738dmtm/j2z3D//jbvfw8uOYy92f58ffj7vv
t08H3F7ZgjVIYRd2btl6i1ZbiyVaBVKht+hb9AVS2sQ+cO/QOrDBZrQtZ899
SUQhfFJkRmvxyEhEakV3ltgPwDIrslZ4ecRnRSb8BhtZHt0gFZZEXK2cYZ8x
2Yl6+0bNhHdCT/SQyT3S60p+Po3X7dFq7F/xidwCeG0bLBN+BXJN/Kyeo63R
HFuhB3UV1dNW+BpsIc3vlTpzPs7xWLJXYiWA+T4S6/MVdgTmeZyhS81wRKZE
rxEtYhnEZtR0GR/PO5DPGd6IxVK5s3oYhczycGZGbMHOmH/C4u9aYpvFqc8R
OBOVMoi/YWcfiG1Yp6y1pmxVO6r3pJtzVWqOURmCeglCJ2o5P4H4xj5h83lu
dJbIoIr+LjPL2UpEJDE3a39nNIl5f8NCcVeaf9LPa8Rgp5k7/dKsXk41r/c3
0IlnWipPUJWtfnRWlRqk1g8r9P8W+oNf1HsD0u9ZbrGuyFuK52u9ZlbcG/eV
YxM=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
wLbKYqbDRC0EP57870Sih0zDgNWBdS3wX1TMptM=
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rbbq+2bdu2bdtud1/fTzKZJG7SsUqLIAC6
hPqHKo17FA4IaNyrauh/UbpD1+YtmwdkztHq/x9I4H8HQVAEQ3B0QmeEQEjU
RVGHQmjYVRAGYVEMxREORRweESAXdkREQmzEwV9Hxh/HQBRExW9Hwy8X8k9H
xw8XdEwU8HfHwjfnd1zEQyZkRnwkwFdnxBfnc0IkQmLkdRLk8WfndlLk8icn
Q3LkdArkcEpkdyqkRhpk80dnQFpkdTqkxwdn8Xtn9jtn8ltn9BtnwWsXQlZk
Q3ZkcD6kdw7kxCvnwkvnxgun83PnQV6k9TOn8VPnRwEUxBOn9mOncmEUwSOn
dFGk8EMndwmUxANXxn2Xwj1XRGmUwV2XxR1XQDkk822Xxy0n9U0n8Q1XwnUn
9jUnclVUQ3XUwFXXQU0k9BUn8GXXQm3E9yXH80XHdT3URwM0xAV3RCPEcWPE
9nnHchM0xTk3Q3O0wFnHdEu0whnHcGtE92lHcxu0RTtE9Sl3QHtE8UlH9glH
8nFHdAC6wAC7ohvmYT66owcmIYKPuSd6ow+OuheOOLz7IpzHYTz6Iaz7YwAG
YhCGYTgOO4wPeTAOegiGIrQPOJRHIKT3O4RHIrhHYTTGIJj3Oaj3eiz2OIh3
ewImgt5leKetyZCm4K8CMRXT8EfTMQM7/Fsz8Uvb/VPbPAtbPRtbPAebPReb
/EML8F2/8U0LsQiLsQSv8QZLsQwP8VXLsQL38EUb/VkrsQqrsQYbfAfr/Unr
vBbr8FHrsQEbsQm3cBub8UFbsBVr/V7b8E57sQ/bsQNr/FY78Ua7sBur/Vp7
8Eqr/FL7cQDncQEr/UIHcQiH8VxH8Ewr/FTLfRTH8ETH8Vgn8EgncQrLfBpn
8VBLfQZL/EDncF+LfU8XcQmLfFeXcUcLfQNXcBULfFvXcB3zfUvzfFM3cUNz
fV1zfE2zfVV3cUWzfFn3cUkz/QAzfFGP8BjTfUHT/ARP8QzPcV5T/RIvcE6B
PqspfoXJPqO3OK13eI9JPqUP+IiJPqlPOKEJ/o7P+ILxPq6vOKZvOKpxPqIf
+ImxPqwx/oXRPqRR/oO/OCjhgEZ6v8gg7M4eDMp9ispoDMbgDMG9CsM9Csnd
GuFQHO7QHOZdCsudCsfwjMCIHOodisTtGuIojMxtGuytGuQtis4YLMfNGuiY
jMXYHOBNisO4LMmN6u8Nisf4TMCETMO07OdETMXU7OvE7OMkTMr1Ssbk7O0U
TMl16uW16uk16uHV6u5VSsf07OaczMCVyspszMgVysTlysws7Opl6uKlCvAS
ZedidXYOdvIi5WJudvRC5WFedvACtXc+tnN+FmBBFmJhFmUxFuF8tfU8tfFc
tXZxtvIcleBstfQstXAplmYZluVMNfcMNfN0lWcFVuQ0NXU3VmJlNvFUVWFV
NnY11megqnOKanCyGrkma7E267AuG3qSGnii6rse63mCGrAhG3G8GnOc6nqs
mrAp63iMmnG0ars5W3CUWrIVW7MNO7Eza7kta3qk2rE9a3iEOrAjq3u4qnmY
AtiFVT1UVTxEXTlYlT1IlTxQPdmLAziQvTlAfdhfFd1PfdmP/dlXFdxH5d1b
g9hLgeypweyhIRzKYRzO8ZzAERzJsRzHUeyuch7Nsu6mMeyqMu6i0g5QKXfW
RHbSZHbUJHZQSbdXCU9hcbdTMbfVfzWJMOU=
            "], "LeafValues" -> CompressedData["
1:eJxdUEEOAiEMRGgTj/sFf+HVo9c1PmA34sYLJqyJ8SH+17aUdiOEMrTMdOAw
P8d7DCGsewrj9D7VOn0uAx2uZX0sJd/O5ZWXXI/zjpJfCpCARkIATLTRIMSL
I0+QFLQLVpGEwJYRkZZ0IldR9FWUkbQSSAQ0HWGZnrgSM3xfmU7shhQhuIsN
UL6dQN+mTromG4rJCVuz/x20hpB8k2+JrmhNmlrsqv3f0CXR9Ky5oB88gBPX

            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkktLA1EMhVPpQmstLkUFEaWgbqwLO3dmeuc94Lbu3FWoulKogvjv/XJa
SjJ5nNwkJ718/Vq+7ZnZ9z5qufqtNpvV3/MBztPnz/p9vZk9fgzwXlBXltvQ
CnS0YOeW2hT7znqb28hmltmRNdaS67BL4sFqvic2wa7sGFyOXxCdg1yAKsAe
CJmSC0QzIikdMjA31AZ1zMjckino01jCLIGqazKdDejZ8+3tArsXuga5QLfo
jsgpfSO/BbUTPO9ygvYuiT2APgTbMuUZUiA9FbWNQfuMU7tEJ0RqdEMuwfdJ
U/IjOjTauuVbII1mGut194IiHRKxarHjvQPvR1jNwbU7ZCLeeiY50xZDvCkT
lfQK4s23Woilxu7BR+yO1zpxmor9uXirNFWKF3c8+uSV7tGJGe+cIbk4m5Ip
xE6ra/V6J4jdVNmgC2bUR/VPsQLiu2yv2uH5hZzfoJuVqi/1ptdXmsLfPRQ+
0/1rKqJ282sE/d98q1K9fC6/Syv2a/G5RTvTrbBR2aBZM+35D2CPV1g=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Zt2+6rbfvV2tq2bdu2bdu279n2J5lMEjfuENA8CNA5
1F8ENOpeODCwUc8qof9G6fZdmrVoFpg5R8t/v7bBPwchKMEIziEOE4IAtaYN
IQlFaMIQnRiEJRxSFFyVFZ5KikBEIlFRfxSZ36qgXyqvqETjp8rph8oqJrFo
RRnFprQykok4xCUe8UlCKSUgId9VUt9UQokorq9KzBcVU1KSkZyiSk8GUpCS
VKTms9LySUWUhsL6qEL6oHS8V0G9UwG9VX69UWYa04Qs5FNWsvFa2clBXr1S
HuUkF7nJrXrkUh7yko+cqk0O5acABSlEDbKrMNn0UtUoQla9UFGKUZwSlCSA
KpSiNM9ViWcqQwWyqCzleKryPFFmPVYmPVJFHiqjKpNBD5Re95VO91SVu0qr
O6rObaVRTVLrlmpxU6lUh5S6obpcVwrVJ7ka0JBrasRVJdMVJdVlJVFTEqsZ
zbmkRGpBQl1USy4ogc4rvtrSjj3spT0d6M8AOhJPXelGJwI5p86cVVydURdO
K45OqTt9+Y8e9OSketGb2DqhWOpDTB1XDB1TdPUjmo4qqgYSRbOZwyAGc0SR
NYShDGM44xjPYUXSCEZySKM4qIgazRjGEkEHFF77FU4TmMgUprJPk9iryexR
WO1WGE1jOjOZxS7NYKdCa4dCabtCaptCaC7z2MFO5hNci1nCAhayVYvYomDa
rKBaShCtYCXLMG3ScjYKrWI125Fv0Bq2so21rGO91rNOm9mA+1ptZI02sVp/
fJW2sFK/fYV++XL99GX64Uu1i9189yX65ov11Rfpi+/js+/nky/UAQ7y0Rfo
gx/hKEWtmB3jON/5wQlOcoe7nOK93+Sdn+YMZznHDd76fJ3nAm98nl77RV75
JS5zhZc+V9eZo6vM1jVm6YXP1HOfoWd+i9tM11Ofpid+j/t84rE/4CEfeeSP
eMxTnvGEhz5VD3yK7vtkPec1b3jBSybpFRN1zyforr/ljo/Xe8bpHWN128fo
A6N1y0fppn/mCyP1lRG64cP1jWG67j/5RVpLZ7+55sEsuA3VH4bIGSwxSNhA
mQ1QEAtqV72/rngIu+z9FNFC2iUPZaHtP4WxsHbR++qC91E4C2/nPYKd8946
670UySJbFItq0SyJJbXoFsN66oz30GnvrpgWy2JbN8WxxHbK41o8i28nvasS
WQI74QntuHfRMe+sox6oI95JyayjDntyS2EddMjbK6WlsoPeTqktjR3wttrv
6S2DZbLM1kb7PKPt9dba41ksq+Wy3JbNdnt22+WttNNbKoe1UE5rrh3eTHms
sBWxvJbP8lsBa6rt3kQFrbG2eSHb6o20xRtqszfQJi9uJayabfT6KmmlrLTV
0wavqzJWR1WtrK332ipn5a2CVbR1HmBrvZKt8cq22mtplddUFauhlV5dK7y6
1bBqWu5VVdNq2TKvbUu9ipb4//PKvRA=
            "], "LeafValues" -> CompressedData["
1:eJxFkDEOwjAMRdvYlhi5ArdgZWQtYurUilCxBClFQtwe299ppdRJvu3n35zm
9/BMXdetBw3D9L3UOv1uR73cy/paSn5cyycvuZ7nXsVRgzBjsQhJHCzYRoyP
EyRTyVNWa5VeawoapNU5SyR6ZNO9B0FJhteVfGxwiBycJCXMos2fcxn3Bokc
AatOkXGyUA9s/NBugQnm3RnAUdjc4kTbXOHmI5T2NC7h5Wj3Y7k/hVESiQ==

            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9k91u00AQhcfQIkqiKNAb1EZFldNIXDW5IU78txuvLXFbnqBIBa5ACkhV
n4zX6zcnAVmzu/N35uzO+Prrr7tvL8zs92uWu/vHuN/fP305Q/n888/D94f9
6tOPDO0vS20bu7DeXtnKOqv4Nnwl58S3RE92Yo0Fvs5a9DFajXSWEdlaQcSA
FkCpbMFe2I5vbRN7D1IP/j/bhIyAp0DOwYic3pLdEBXZkzydYr1aUsUtEojx
vSByo4rJcmwbrDWywuLnngy3DopqYVBTf2AtYf6B/I4KU/BruDreFslZSzRn
3apagX7JWtmcyNpmdobP8UvQ1mA5h8A6Y9/xRpecG7uhmteNqp3w3GD16I7d
ufmtk/QdmT2Y0T7aSExLvUQl/5q9J6LEG6n0DtucWy2p2LFXvGAQxgHLmTTc
6QqsHkuvVwzwmhKdKeNQI4OtI3gXB/VjxHmJLRfSFdKSn3QT786tutHbqbj3
Wr2L50iNL6rTPjPegxPdcYH4PDV0uIHFGqQBvdY7v1Ftv23QKy5Uba43HKjV
iuMAswm2SMb0yMt5zpGZ7p3/59Yoc8KaJK1m9NCL7ugPwvR6t5o1n6VTInZ6
u5weJ03EGJZRM1gSvdU8+QRWms4g3Kh/xafn5bG/GadGNxvLO8I3yJeIm4H3
DJifZ6w=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fTuB/B0NwhEBIjON4hkJo
jMU4hEFYtEQrhEN4NEYTREBE2A0gR8Jf10NkREFUREMKpER0xMAfJ8Zvx0Qc
5HAsZHdsZPMvZ3VcZHE8xMdPZ3YCZHJCJMI/yOgfzuDvTu9vToKkSOdkSOuv
To4vTuNUSI2SKIXPTu00SIt0SOUcyIn0yIBPTumMyITMSOHsSO4sSOasSOps
SOKPTuwP/se5kMi5kdDvncB5kBf5EN8FUBD5Ec/vHNeFEMclENuFUQRFEcvF
EdPFEMNvHd1vHM2vHdWlEcWvXAdlUBblUB6VUQUvXQEvXAnPXRHPHNlPHclP
HNEBiODHropqqI4aCO9Hro2aqIWHDucHDuv7DuN7rou7Du36COU7DumGCOHb
boRABPctB3NTNMNN0zcMN4d13S1wzVJrtMFVd0Zb/NUV/1E7tEcH/FYnBKEj
fumyf+qSf+iiv6sLvumCu6IbuuO8e6A/BqAneuGce+Os++GM+6Avvuq0v+iU
P2sgPmkERuKkB2EwhmAohuGEP+q4h+OYP+io32sURuOI3+mw32oM3uiQX2s8
JmAUR3MiXmk6ZmASJuOgX2oKXmgqpuGAn2u/n2kmZuEgDmGfZ2M+FmAO5mIe
nmqvn2iPH2u3H2khFmGXF2MJlmKnH2oZlmMv9mEFHmiH12El7msV7mk17moN
1mK772ibb2ur12MDbmkjNmEztmAHbmqLt2I7bmizt2GTr2ujr2mDd2K9d2Gd
d2MPrmqtr2iN92O1L+sALmmVL+owjuApnuEojuE+Lug4TuAuzuskzmmlz+oU
TuMMzuI8LuAczmiFT2u5T+kiTmqZT+gSLmOpj+sKjukqruE6juoOjugGbuIW
Dus2DmmJD2qxD2iR9+se9mmh9+oB9ughHmGBH2O+n2Ced2uud+k5XmAoh/El
duod3uMVdug1tusNtukttmqOt+gDPmK2E/ETPiM+N+sLNukXfmOWv+IbNuo7
fmCmf2KGN2i61+sP/iIu41FYp2mOQgMkgzEcwzM4QzAs1yokQ3Gq12iKQ3Oy
V2uSw3CiV2mCVyoCVygSl2u8I3Kclykyl2qslygqFysaF2mMozMGYzIWF2q0
43CUY3OkF2iE52u452mY5yoB52ioE3KIZ2uw/2FiJmFSJmM2ZmdypuAgZ2VK
pmIGZmRqztJAz9QAp2F/p2U/p2N6zlBfT1cfZ2IWTlNvZ2YvT1VPT1EPT1Z3
T1IO5mQuTlQBFmQ352ZX52EX52U+TlBn52eQx6sQC7Mf+7MIi7KTx6mji7EC
K7I4S7CDS7IUx6q9x6g0y7AsR6udy7McR6mtR6qNR6gSh6s7h6kyqzCAQ1WX
Q1SVg1WNg1SdNViTA1WLA9Ta/VWbddjK/dTSfVWP9dmADdnCgWzEPmru3mrm
XmrqxmzCpmzG5mzinmrBlmzsHgp0K7ZnB7ZmdzVyGzZ0WzZwO9Z3N3VkV3Vl
N3ZiF9VzEDuzs+q6C+s4SLXdSbXcUTXdgzXck9Xdi73Zh9XcQVXdlwFurwFs
pyoezIFsq8oexEpuoyFsrYpupeFsqQoewfJuoZFsrnJuprIewzJuqrFsotJu
rAmcyFLezkmczPXcwCmcypJex2kMVAk3UnFP5ww21EzO4mzOYTEv51zOY1Ev
5Xw2UBEv5ALWV2HX0yLWVSEv5hLWUUHX1jLWUgHX1ArW0EpW1ypW02pW1RoG
aC2rKL8rK58raSMrKq8raBM3cwvLK4+3MrfLaRvLKpfLKKdL619DW3bC
            "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMbGOPxLFf4BdcOXIt4gGtKBWXIKVIiJ/xPJzYTqpEE3u8ZXyc
X+MjdF23HQTG6XNOafpeB3FucXuucblf4ntZl3SaeyF/AgyACGAxCFwOssuF
UkSxMkusvsYFMlFY4kCUH2q15XIFePGuoVoGvPe1i10P1kawr7SfWUmrqAOM
45rQqJ04z4Vtg/ssJjCH8gq6VpMP/7TuwybW/eVUCwSX48thn6W2tgC0uXaA
rtYFwFLINvQHM+4UeQ==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkltLw0AQhadSQW0RRR+qFKRII+iD9sXc02yyCfgm9RdU8PKkUAXx3/vt
sSy7O5dzZs9MMnv+XL3umNnXHsdq/eM2m/Xv0z7Ow8f3y9vLZnH/PsB75Chs
xs5taHeWWGqxVVbb0s64W8tsTKywxibcV8Qy9jUIz31jnd3aJbYH62CFOhle
wvJwPF4N8hwrx45sZHOxPdxSq2E7ZTsymbYj2sILakr8nHohluG14Cre8tZz
1pw9mVpqnRie20lFrY4ysYO+lOyxHZILjBz/gvyELkOVXKiOSKx6TjqXerVh
VeATcJXyQcOAs+Fs4cZ6r5SidDuHjtVrgimWt1OskClsun0pkVdq9mEGI6yS
yhHRSgpy7BbVvR2ps0YqI+JjkN12Xgn4oLiQRm+74BZ01mz7dmBj0EtYtZ2I
mUuZl8ZOk07It5piwA9UOXzbFl0H5OZ889BzpJkveKXTHP+/cg8/zLLAajXz
8C8N4VX8XUuiNZWn8Jx6K5j+BGSqFzr1VWpmoZeeqpn9AX4NU0s=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
bfYui7D9DxUzdSQ=
            "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27aNV9u2bevV2tq2bdu2bdu279n2J5lMEjfuULl5EKBz
qL+o3Kh7ocDARj2rhP4bpdp3adaiWWDmgJb/fkWDfw5CUIIRnOOcIAQhOcJR
QhGa7vQgDGHJSz6kcEQlGuGppwjUVUQi4YpMFOroj2rrt2opOjWVkUzEICa/
FIuU1NBPxSYOcfmh6opHfBKQkO+qpkQkJjkpSEJVJaOKvikpX1VZX1RJn1VR
n1RBqUhNGtLyUeWVjnL6oLJ6r/RkoIzeqbQyk4WclNJbZeWNAnitbLxSdl6q
pHJQQi9UXLkoptwUVR6K6LkKKz8FaE4LClJIhSnCMxXiqQqqKMVoQgEVpwTl
KM8T5VdJ8umxSvFIpXmoMpQlrx4oj+6rAnXIrYrk0j1VojJVqEpOVacG1cih
uwpQTbKrFtl0R1l1W7W5pSyqSz1uqj431JgGZFZDGnFdmXRNGXVVGdSU9GpG
Ol1RWrWkFW1pR2vSqA2pdVmpdEkpdVHtuaAU6kBynVdHzqkTgSRTZ5LqrLrQ
lSTqRmKdUSL1pBfzmE9v+nBaCdWXBBrMEP6jH/0ZwCnF10kN5ITi6bgGcUxx
NZQ4GsFIjmoYw4mtI4qlwxrFJCYzmjEcUkwd1FjGEUMHNJ79msA+TWSvomsK
0TSXqJrKNKYTRXs0k92awS5F1ixms1Nz2KFI2q6I2qYIWsBC9rKPRSxmOztY
QnitZg1btZRlhNNywmoFK9miMFpFaG1WKG1SSK1lHRu1ng3awHqF0EY2sU6b
2cJW1iq41iiYthFUqxVEO9nFKu1hpXazQqblQsskX6r9LNFhFusAi3SQQ7gv
1B9foN8+X798no4xVz/9JKcobWXsNGeIbFFsjn74Wc5xnguEsJB2kUsEs+9+
mStg3/wq15itr36dG4gvfpPP/ppPfovb3OEuL/no9/jgL3jv93nAQ975LL31
mXrEDD3mCW/8Ka99up4xTc+Zqlc+RS99sl4xSS/8Dc/9Lc/8He/5wFOfqCf+
kU9M0Ge+8Z0vPPbx+so4PfIf/GSsnF889DH6w2j9ZpQe+Ejd9xG658N1182C
2DDd8aB224fqlg9RcBusmx7KQtsg3fAwdt3D2jUfqKs+QOEsvF3x/opg/RTR
Itll/0+XPKpFsySW1KJbDOurhBbTYlkfXfTeim29FN/i2AWPa+c9np3znjrr
PZTAuuuMJ7LTnthOeTed9GSW3AIsh6WwlNZVJzyVpbZMdty7KI2ls/SW1o55
Zx31QGWwjHbEO+mwd9Qhz2wHvYOyWFbLZtntgLfXfm+nfd5WOa2N9nouy215
bI+Xst2e1/JZa+W3krbLC1hBa6VC1lI7vbAVsRYqas1VzJpphxe37V7CtnlT
bfUm2uKNtdnLWjlrpE3eUBu9vFWwirbBG2i919c6/x81gKka
            "], "LeafValues" -> CompressedData["
1:eJxdT0kOwjAMTGKPxJEv8AuuHDlS1Ae0olRcgpQiIX6PE9stQorGS8bj8WF8
dvcUQlh2At3wPpUyfK57Kfq8POY83c75Nc1TOY5RmhcBBsBgfQIStGpRgR3Q
2MSJnE2JEqSm1BrgVYPkT/5rao9VgH0dyBfZKlgK59kUbSNsarUdf7wquc17
dIuyJ1aRaog2rt/tlkBo0LybpfVy/E0Qe6osU6ndL7ZIElY=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkklrG0EQhUuODDYWAicXgUKEEbIOOTg+ONOztaZng1yVX+CAl5MNciD4
6H+er5596OpaX9Wr7os/z/v7IzN7OUHsb/+lw+H29fcpxq+nv3cPd4frn48T
rDdEsJJT2cw6+2EZWot2hlzbJfaIVVu0HdpoBfdgjR3bF+4LqlpiFf6CaGkb
S+TnIH4nc2Yr7EjmaD3eM7SM+JzsNVpE5vhK25LtyH4imA0Vn5E+U6v6lS2w
ExWFsBrqfRLHisQbWSNZnXAazexTD+Qfc8/sXNwyRRIZM84CK6Kd4q+Jt8w+
gF/CqhR77z5HbsCZyBPomdACesdElXo7t1z5mfye55he8X5utJnhI9P3fk3f
AEKPXIKZ2xUng61zuKJPjj/YN7Kj+DvroLe4pC4JeU7Wik6V9ASbAa3R1P6i
Uyp2ICT0BEPn7bPtwAxsYCMGC71gAMcra20ufbx8oT/ie5gza83xvp+0eZ+s
086m5C6JlfpFhXbg9V+JvnsC0R5tCY6/0Zp7FLOeXgmZMV2FpxaDVq8b8Tfq
slVOpEOvnh33oD9c6a/6NB3IhV6yUYa//w52BXbFcW8r5q2q/gN6x14d
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
6EyoJXpkd9z2Hu4ng4oc3kZSv/8DK5RgCQ==
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42r3atu2bdu2bdvYfX0/yWSSuEnHKi2CAOgS
6h+qNO5ROCCgca+qof9F6Q5dm7dsHpA5R6v/fyCB/x0EQREMwZEdORACIZES
qWCXcSiERhiERXKUthwO4REBf13KEREJiVHSkVHCCVHcURAV0VDM8VDU0RED
MRELfxwHsVHEv13Yv1zIcVHQP13A8ZHfCZDPP5zXiZDH353bSZAUyZDL35zT
X53DX5wCn53dqZHNGZARaZDVaZEOn5zFH50eH5zZ750J75wVb50Zb5wFr53J
2ZDRr5zBOZELXdAVuZEHL90UeZEPL9wY+ZHeBVEIz10Az5zOT10YT9wIRVAU
xVAc1VEDJZDWj10BJVEKj5zGpVEGD53aZVEO5ZHKD5zS953CFZHclVAZ91wF
d10Nd1wVt53Mt5zUNZHEN53YtZDItVEHN1wX9ZDQ153A9dEADRHf1xzPVx3X
VxzHTRDblx3LzdAcl9wCLdEKFx3TF9wa590ObRDDbRHd5xzN7dEBZ90RZxyA
0+6EU+6Mk47qE47ibuiOKIzKHuiJ9/iAXojsJ3iK3uiDvuiHvdiH/hiAndiF
gQjEce/AIETySET0YETwEAzFMIT3MYfzcIzAUYf1EYfxKIzGGIzFKqzGOIzH
HMzFYYf2BITyIU/EJEzGFEzFLMzGQU/DdMzAAYf0fofwPs/EXgf3Hgfzbgf1
PMzHIizGAizELgfxTtM7DC/BUizDcmy3tc3SVv/VCvzRFq/EZv/WJq/BVvzS
WqzDRv/UemzABv/QRmzCZnzXem/BOn/TWn/VNnzRGm/Han/WKn/SSu/GCu/B
cn/UMn/QfhzABVzEQRzCWbzXYbzTERzFUr/VMbzRCZzEcbzWEr/SKbzUabzQ
Yj/XGTzTIj/VOTzReTzWQj/SJTzUfTzAZTzQFVzFNdzXPdzTddzVDdzRTdzW
LdzSAt/GfN/BXdzUPN/QXF/XHF/TQzzCbD/GLF/VTF/RMzzHDF/WC1zSdL/B
NL/EK1zUVL/GFF/QW5zXO5zTZJ/VR3xCWJ7RZ3xBUAbjV5xWEJ7SN5zUJH/H
RP/ABP/EL5zQeP/GHxzXXwjjbIz1MY0xONrkKB/VSB/RCB9WcIbgcB/SMIdk
KB7UUIdmGB7QEO9XOIZnBEZkZO7TYO/VIEdioPdooHcrGqOzO3swBmMyNuNw
gHcpFneqv3coLuOxMwMYnwnYhE2ZkImYnTmYmNuVjduUhFuVlMmYnCnYz2mY
kluUipvV15uUmhvVxxuUlunY2+uVnhmYkZnYy+vU02uVmWvUw1nY3VnZzavV
1avUxTkZ4BLMxdzMw7wsymLMx/wsyJXq7BUqwOXq5GXq6ELs4MJs7yJs56Vq
6yVq4+Js7cUqyVIszUVqxMZs5TIsy3Js6fJs4YaswIqsxIVq7sps5gWqwqqs
xups6vmqwXlq4nqsyblq7FqszTmqw9mqy1lq5JmqzwZs6Blq4Omq72mq56mq
6ylqxuZsx8lqwZas40mq7VZsw7ZszYmq5Qmq6fGq4XFqz7HqwDHqyE6s7tGq
5lGq6pGq4i7sym6s7BGq5OHqyWHqzT7sxaGq6CHqy8HqzwHsx0Gq4EAN5ECV
dyDLeYDKur/+A1D6Cvg=
            "], "LeafValues" -> CompressedData["
1:eJxNkD0OwjAMhVP/SIxcgVuwMrIWcYBWlIolSC0SYuXk2M4LaapYsePn96WH
8dnfKaW07iz0w/u0LMPnsrfkmtfHnKfbOb+meVqOY2fFrwVVEdtaVhxFhG0T
K3sgy5iZiO2K7dx59C6J5gjsOWa5GKsO1GiwUW4kIRCFIGogiIpUoqJsDoWt
TI05bqW4YNh7K3EwGHFw4SkbaQPfeEMtUtFgHvSt9U8GVU2gpFIBOoi5/i08
WKrQvh99uhND
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk9tqFEEQhmtVxHgIUS8iYdgQ1sRbE9CeU8+xe8Db+AQRol4prIL4ej6Z
X/07NFvTdey//qq9+PLz9usDM/v1BHF792fc7+/+fj5C+fTj9/23+/31x+8b
tH+IS7u23loLViIH7r1Fu7Jsp7ZYhXW2EVvNd1n9I7ckz8Sts0f20i6IrdB3
WGp7y63EE6hVYmk5szXkd+gV2R+QEX/ipUzEjqwTKxRdC9FsW3A8JCpRrROW
QGyLViMXPF7hDN+GPiL2iayamGTH1FiE0G29PSejwuJZrU7AE+0duaN6yugN
yBtlvlZuRvcqhTK9zvnKQ+SXuXs/AxgWtIC/VI+D9KQMl0k1B71T0Neg153Z
AV9Sh8PKhEcGonZg7ME8C4XHHRAEseps7sh3DvJaaeTMIPB6jWr2/F6seLfi
32dRiImErVOGT9A5uMJ2ruhCMY24XPiW6Mfagmeq/YZ5T9qFARRBbNbCm8TU
4SRskyYaeGGSr+G1DrvvjVfaqguv4Dz5PEftUF63q2KyjWp5jw16hz1w26iD
RpFZ+9nK4hvyXnM+A92JsqNw+H47xkvtXWInEjVL2Q7b0sF0Zps75EYT8m3J
YjuK0wgPs7a6tadsT1Sn2V5R7UYdjciWr2/NY/2vIl5n9TDjoK5aRdVC+x8C
fW8/
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
WVY=
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f8/ROB/B0NwhEBIbOc/DoXQ
mMCJDIOw+I4fCIfwKIwiiICISI8MiITISIdEjoKEthM4KqIhOmJAToiYiO+/
judYiI04iOs/joffjotfjuOfjo8fToDvju1E+AeJkQTJkQJJkQzfHMtfHdNf
HMMpEd2fHc2fnAqpEdUfnQYfnBbvHcXvHNkZEcmZkQVvnQlvHNFZkQ2vXRDZ
EcGvHN45kBO5kBsvnQcvHM7PHdZ5Ecb5ENrPnB9PXQBPHMqPXQiPHNJFUQwP
/RXFUQLlUB4lUQoPXBb3XRr3HMJlENx3Hcx3TFdARZzBWVRCZRzHCdw2XAUB
qArrlo+gGqqjBmqiM7qgFmqjI6Q6+Kv6aIC6+KObrocb/q3rbohrDsRVN8IV
/1JjNEFT/FQz/NBlf1dztMAlt0R7dEArfFNrfNVFt8EFt0U7fNF5f9Y5f9JZ
f1QnfNAZB+G036sruqEHeuKU3+mku+OE36oXeuO4d6MP+uKYN+Go+2EapqM/
BmAg3mgYhmMQXmswXmkIXmooXuiIn2sERuKwJ+CQR2E0xuCgn+mAx2K/n2oc
nmg8HmufH2kiJmGvH2oyHmgK7msq7mmP72q3Z2CX52KnZ2IW7mg2bmsObmmH
b2q752E+FmAhFmGb12Orb2gxlmCLr2splmE5VmCzr2mTV2IdrmoVrmijV2MN
LmuD12K9L2mdL2oDLmgjzmutz2kztmArzmonzmiNt2E7TmsHTmm1T2oXTmiV
j2sPjmml92KF92G592OZD+AgjmqpD2GJD2Oxj+goDmuRj2GhD+kkDmqBD+gU
9mu+T2Oe9+kczuMCLmKu92qO9+gSLmO2v+AKruIO7uIadusGduk6dmqWd+gm
buE2tmumt2mGt+oe7uMN3mK6H+AhHmGat2iqH+MpNusJNmmKN2qyn+E5XmCS
N+glXmGi12uCX2O812mc32GsP2KM32O0P2CU12qkP+Ez1miEV2u4V+kbVmqY
V+gnfmGoh/E3/mCIE/AvlisEQ1IwQDI4l2mwl2qQg3Ggl2iAFysUQzMCI7K/
w7CfF6mvwzIcF6qPw7O3FygSIzMO4zIKozImY7GX56unozE65ykG56qH56i7
Z6ubY7OrZ6mL4zE+Z6qzZyjI05WQifgPp2kQpyoxkzApkzEFU7KTk7Ojp6iD
JysVU7MVJykN07IWazMd0zMTM7O9JyoDM7KdJ6itxysLs7KNx6m1s7GVxyo7
czAnc7Emxyg387AGR6ulRykv8zE/R6oUS7MAC7KFC7G5C7OZR6ipi7Aoh6sY
i7MEh6mJh6qxSzLQQ1SGZVmJlVmOg9XIFVmeg9TQFdjAA1XfA1SFAazG/qrK
fqrnvqrrPqrO3qrjXqrtnqrlHqrD7mrEbqrLrqrH+mzALmrIzqrpINVwJwWy
MZuwKau7o5qxg6q5vZqznVqwraq6JQPcRq3ZhlXclu3ZWu3YSpXdUh3YkZ3Y
Qv3Yn0HszC7sykruzW5sropupu5sqgruwfLuyXLuxbJuojLuw9Luy1JurJIe
wIEMVAk3UnE31GAOYTEPZVE3UBHX13DWU2GP4EjW1SjWUSGP5hjWVkGPZQGP
43jWUn7X1CRO5hIuZT5PYV7P5VROYx5P5yzWUG7PYC7PZE5X12xWUw7PYXZX
VTbPY1bP5wIGaCGraBErK4sXM7MraRmXcy0ragUraA3LayVXMZPLaTXLKqPL
KINLax1LaT03ML03cgu3Mp03Ma03M41LahtLKLWLK5WLaQeLaid3MaV3cw/3
MoWLaB/38xALK7kLKZkPMKkPMokLKrEL6F9CoYy3
            "], "LeafValues" -> CompressedData["
1:eJxNUEEOwjAMG00sceQL/IIrR64gHrCJMXEZ0oaEeB8fo03i0k5qViexneyH
5/meuq5bt/k69+/jsvSfyy4/rvP6mObxdppf4zQuh2GTwW++gCQqqtByIDkW
RKVgKcOQZEnYp/jHgCxZjnoVAjDOAA1XdsY7jgkLOcks9be1xwCqBBrGQF61
HqEb9XksQMTVrDL8N65Il7yvmZDTxGSoBBQFx/d9lS06Xt17vkpFJbTRlsA5
W11RtcM9s+gHI/EUxQ==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kklLA0EQhUvx4BKD5ORBBIkhiKeAOJOZ6cz0LA1e9RcouJwUoiL+e796
iTTdXVX9Xq198fRx/7JrZp/7HPePP3G9fvx9OEC5e/96fn1eL27fdtC+OY5s
zyq7ts5aC9Yj9xYtsxVSrhWQk5UgGu7GprxH0B1I38kGtApUiTbm7uDUtsTe
i5+DH9g57EJM583txkbgnOnxWju1MzCJPXCOiRSUT4M94x44I1GWW08uBfYK
rUfP8JYh+8p4HXjZ5OdykK1iN2gVesvyWgq0Shl2qraA1SvPCLsmmvekUS6e
7RjrSl1ylFdf620Jo5avJPtym5tne478n3kjZJBW4Ke3ibLzCAtspeLNeAuK
n+nVe7Lpt/cvIZX0JdGlS1mjrINwMztRZXN81KxNli0Rk+ZSY19xTu0QVKVp
N0IGLJkmN8XmvdlB80ymqvN4i7qS54mmkylqLqmlgpI7afZzVd1qui1SUndq
zdKZkQrca9SENjkW/INCMSPsM/Beb76N44xek2n0H5Pm6bH8/43E7NR35xX8
76BpF/YHnQNf6g==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufLtr3Ztl2b2+y22szN3XVd3dVdtm3btm3btut7r/sz88wz
AS26BLUOA3SP9AtBwb1LhYYG960V+VcEdu4R0iYkNFf+tv//ngb/OwxhCUd4
ylo5i0BEdrGbSERmA6UVhahIpRSN6CxiMTGIiasmsYhNFaoSh7gUpwTxiE8A
qfmpBCQkET9UUolJQipKKCnF9V3F9E3JSE4KUlJUX1VEX1RYn1VIn1RQaUhL
OtKTiQL6qPz6oAy8V0beKZ8yk1dZyEo28qgABclODnKSi7fKxxvlVm5yKQ95
ea2ceqUcyk92vVQ2FaIwL1SU58qqImTRM2XWUxXjiTKpJBlVigx6rPQqTRnK
Uo5HqsxDleeB0um+KlCRtAokje6pEneVWncUoNtKpWpU55ZSqgYpdFPJFUQt
alOHcYynLvX4l6HUJ5n+Iaka0JBGNGYAf9KEptxQf5rRnL4kUTAt6E1iXVdL
rimRrqoVIbTmitpwWQnVlnZcUgK1pwMX1ZEL6sR5xdc5daYLXelGKGfVnTOK
p9OKqx705JTi6KR6cUKxdVx9OKZYOqp+HNFv/E5MHVYM/UF0HVI0HdRADmgw
g4iq/fqLv4mifYqsvRrCHkXSbkXUMIYzigjapRHs1Eh2KLy2K5y2aTRjCKux
hNFWmbZoAvNZwEQmsVloMlOYinwu7ps0jY2azgxmskGzWK85zOanr9MPX6vv
vkbzWK1vvkpffaUWskJffLk++xKWskzLWM4KluqTr2QVa/noS7SaxVrDIn3w
hXrvC7SO+VrPPL3zjbz1udrEZrYwR1vZyRvfxnZ28Npn65XP0kufqRe+h72E
tXC2j/184zsHOMhxTjBDhzjMEabruU/TUabqGFP0zCfrqZ/kFLe4zWme+CQ9
9ok6w1ke+TnOc4GHPkEP/CKXuMx9v8FNxusK43SVsbrGGF1ntO75KN31kbrj
I3Tbh+sOd7nl97jPA276J274Qx7xmOv+nBc84SnPuObDdNWH6oq/5BX/6iOv
uezvuORveMs/uuhDdMEH6z1/6wN/6bwP0jkfqM984ax/5Yz/qdM+QD/4Q2Gs
v37iiN91yjGz33TS++mE99VxD28RrKgVsz6KaJEssvXWMY9iUS2+JbBoFt16
6ajHsJjWU0c8lsW2HjrsceyQd1c8C1Vc66aD3lUHPKElsryWzxLbfk9myS2J
7fOktte7aI+nsJSW2XZ7Kguw1JbGOmuXd9JO76gdnta2ezpLbx20zTPYVm+v
jNZOmayttngW2+xtlNVaK5tltxwWopzWSrktl23yltroeWyDt9B6z28FLFjr
vKCt9cK2xgvZam+uVd5MRaypVnoTrfDiVsIaa7mXtFLWSMu8tJWxhlrqDbTE
y1sFa2JNraIFWn1Vs0pW2araYq+nRV7FFnpdLfA6mu/VrYbVtHle2+pYkM31
2qpltTTHg1TX6tlsr6lZXt8aWA3N9IY2wxvZdK+uxlZN07yZTfXuNsWbW7C1
sMnezSZ5S2tlVRVibayttbaJXkUTvJ21t07W2Sqrg1XSeO9o4zxQY72LjfGK
Gu0V1NXKa5SH2kgvpxHew4Z7WfW0Mhrm/wFBEPL1
            "], "LeafValues" -> CompressedData["
1:eJxNT0kOwjAMLBlb4sgX+AVXjlyLeEArQsWlSCkC8Xu8UqTEju3xzGQ/Pvpb
6bpu2Uroh/exteFz3klxmZf7NNfraX7WqbbDuJHmSwIzEaEU0kwkJTPHm2AV
aSQD+JRLtGTRegSf5p5VsK68kHODcMKSNBTtlDAgF86oCgoBufRqMrp6gD/x
WAh+c6IGKFbZZaEJ9EMlcVpKq/57Xp3zSh57sBL+k1CwqbsLGJJEwxeg7hMd

            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkk9P3EAMxU1ZWigrVHFadZeiqtALF/YAySbZTCZ/RuqVfgKQaDmBtFSt
+u35+SWykpmxn5/fePz14eXu1zszez3kd3f/L+529/9/HnH48fzn8ffjbn37
tMfpL7/KNlhvjQ2YnyrbYoPl7DqLihaWQGzwFza3a/tENOCv+WdWsrZ2Cjbj
y0GV7FrW2lYgvoOckd+rTg/rN3lau5TPmU7grfgXVN4q7pWj9me2D2uN5TAf
4K+JHBOZw1GTEWyt2JK6C7Tm+FowJZyRaJjuF/AOYupUd4U2v1ljn6nUq/qC
NeOGAYznRdA33HkAGVStgneQNt8H1hXKvep7VsclcjvYoqqeq3el7SnSTIo6
aQ/0IYHxXvZSVXHqpH8J1jVEql9I+ZUdCTNmBO5fo3whZd6ZCNs5voZaGZbw
tpPqwGlNfqLCMTljzaV9FJNn5GC9564xse/Vq316NOelZtyt0Xsv2M9gTpqd
sZ+udKvo2PWkN0z2BeQHYj5FLdYJm0BVetOCHOctFAnqwThDc1C1WBtl5+Di
VHXL12heGu6SgUqaCp/afprXEouagg0aek5vXAFZ+A==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1:eJw9VnlczGsXH2WZrGOJcfW6ihLitohJOKPFncoyetXN1oKSLOWmjKUay6VU
mkiGKwbJkJisbZzJaJr2qahpNdMoE3VNadMN79P7+eSf3/P5/Z7f85zzPed8
v+cYbg909R1GoVBCyUO+OuHdR6oYBN+6VdFdt0DL/L1aoq5DBu2mYc3aQqQ+
VN68MNAC1O/10uK0JjSbn7Y/et1wprJyhHcrORe0Uu/zX+Qca4vjjF06+ejR
t9DBxbkFzEf/2Gj09S2Y3jzgd3uqGpnOhVUeSxrAY9vevGEufyPTVU8rfChB
0/z5Jsl/lKHCXFtHq89FRfuCazNSZGjOe11lUlMIoi6bNwFyMSovhAh5DUpU
KgaC2xgqFLpnl1pGqIEX6jU6wr0KIrs3lU4PEAJN2jJtVH0usDqD363rSwPZ
5rCT7gTHrPAkzjx6FbCcWkvPy/OQ8mZt2i6TIuA2fMkxJd95Ya8Wf/6SB/QY
P9rtqjQwp48VU4anw6ym0CzLsA4UlY13OrUjjeD5x7Gp9S3IUlrXeMS9hyB2
wJ19/c3ArAj12BByFzVXr9RLjzaC3CYpv47co1mf2S12VAH3wE33yU5Pgdkf
uWLLthrwHmc7dee5j+id7nL2SZQY6PY978b1vgXW+rM6jlvEwBwpCz5mIUZq
he/JMtcrwLJo/qdJrQJaqImcYixDOqtVuKRJitT3S02uuFWAqU37jTrXfJRJ
kvdtjksB5hrh9dKka8Bn7NnCTS4HAe8Ey7MsCThp1cdnuhWiyChgk+HCx5BR
t0HPzawZ/O0/O44yqAZ+Tyb9hE4xmpeN0uypqwPBYe7qqBUXwftz3KiE7kQI
mvk4Y2t1J3qcdjaLzz0PHnbNWwP+8xFlDdm4IFCNs8I424yM3oN2O0tu1fAc
ZlXtdmQ/eY3aYfOuHTW4C8z5PSxLrQh4X9tLbpG8s21jnL/ZSCHoaBFOPJYB
gnC3rKYROcCjf/pUfOUZiBbvv57KVCA9eeBYlHU4cpV3GDlt5cC3N7PJl8qQ
6Xb27DOBCjPUyUlXeenA6Nw42XJUHlCPyh9c/ZiNFOmAK2/ONWRJo9Z//DUP
mOt/z7le/Bg8lqnPwzMhyP1MfHc1S0Hx6uvXlTtrwb+98mhjYxPSl9W8T/LO
h6G8KyrOjCgg9uhmjqwXzQLoqzNonCJ7CUL28WPDY8Qg4gW3COangumkJS/9
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
            "], "Children" -> CompressedData["
1:eJwViWOUEAoUBudm27Zt226z22ozN/eQbdu2bdu2bft+7/Vn5syZ5M06BbQM
AXQN9z8CAnsWDw4O7F0j/P9RvmO3oFZBwdnztP7zexj8cQhCEorQvOI1YQhL
VSooHOGJTnlFoJyiUVYRiYRURpGJQlRKy1VKv1VSv1RCMYhJLGKTmjTEobji
k4CfissPxeO7iikhiUhFUX1TYlJQRElISjIK66uS80WF9FkF9Ukp+agC+qD8
eq+0ZCAj75SO9OTTW+VVJjLzRnmUhayUpRzZyM5rleGVcvBSuZWTXMpFTuUm
D3nJoYJk1wvlIz/ZVICseq4sKkRhnqkIT1WUJ8qsYhSnBJn0WBn1SCUpRQY9
VGkeKL3uK53uqTxVSKu7qsAdVaQSaXRblbml1LqpVKpGdQJIqRrU5IZSqBbJ
1YJkqk0driup6lKP+iRRUwJpQGI1pBHXlEhX1ZgmJNQVJVAz4uuy4qk5cXVJ
cRRES1rRmtnMoQ1tuajptKM9Y4mtDnTkgmKpE53pzwDOK6bOqQvBdKUb3elH
DPWgJ38RXb2Ipj5EVW+i6Kwi64wi6bT+5h8i6pT+5aT6ckIRdFzhNZBwGsFI
BjGYYwqrIQxlGGF0VKF1RMM5rFAaRUgd0mgOKoTGYDogtF/jGM8E9mkieyWf
xGSm4L5H09itqezSb9+pXz6DmezQT5/FD9+u7z6Xb76UZWzTPObz1bdqAVu0
kM1axGK++BI++yZ98uWs4A4ffSUffDVrWMV736h3vpZ1bNBZ1rOB9TrDRjax
Tm99M1s4xRvfyjZOcJLtvPa1OsoOdrJGu1itI+zmla/SHvayj5V66fs5wAod
ZLle+DIdYqkOs0TPfbGe+TGe+iIdZ6Ge+AI99vl65Kd56PP0wOfqvp/jnp/n
Ahe5xBXu+hxdZrbu+Czd9qvc8mtcZ6Zu+g1u+E1uMUPXfbpuM03X/C73mKr7
POIxD7jqD7niU3TZn/CUl1zyZzxnsl4wSRd9oi74BJ338Trnb3hLckth73hP
MjvrH/jIOIW1sfrEGH1mtM74F77yje9gZj847T855aN00kfqFyP0G0cM1wkf
puM+VCEstB3zkHbUhyiUDdYRH6QwNlCHPZwd8vAWwSJaJItvB32AIlsUi2r9
dcCjWXTrp/0ew2JaX8WzWLbP49he/1ex7R/t8bi22//WLv9LO72PElhCS2S9
tcMTWxLrpaTWU9u9h7Z5d231lJbKuinIUlsay2lbvKvSWrA2ezpLbxkso3VR
dstkmzybbfTOymydlMWy2gbvqPXeQes8h6319lrjuWy157Y8ltfyWQNb5fmt
gLXTSi9ohaySVba2KmxFrKi10QpvreVezIpbK5WwkrbMW2qpl7LSVsaWeJAq
WlkrZy202MtbBWuuRd5MCz1QC7yKVbWmmu/VbJ4HWA1rourWWHO9keZ4Tatl
tW22N9Qsr2Mzva7N8Ho23RuovtXXNK+nhtbIGltdTfUm1tTqaIoHWjNrbpO9
tiZ5C5votTTBW1ora23jvabaWg21sQCN83bW3qprrFdTB6uqjtbJOlsVdbFu
NsaDbbR3tVFeWSO9krpbDxvhFTXc/wO2gfT0
            "], "LeafValues" -> CompressedData["
1:eJxdUEEOwjAM6xpb4sgX+AVXjlyHeMAmysRlSBvSxO9J2rSaaNWsceLY3Wl8
988YQlgPGvphuyzL8L0dNbnP62ua0+M6f9KUlvPYKbhpICiwFQURQuhHRKNE
OyQB7aG1UGgLltCJ9IOK56tXc8HJJRHUCSy7ZNaSS6hqtezD4aCbADp1a6A6
jkYVZtfwWEj8U4vuR9q0rFleJaiC7U1o8u7MYWfsFHxeGVD/0s5/I2RY8AOd
WxMS
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1OGzEQhScUUKNGUSq4iAoqRIHcElDb/ckSx17vSr2FJ6AS0KtWCpUQ
79CH5psDsmzP/5k59uzX35uHHTN7+shxc/cct9u7l9shys8//+4f77eXP34P
0P5zrGxmtZXWssbchY0s2gF3wL7gzlbZsTW2QYrsBnu0M7smIqHN8RzbWnav
UxIfbWk9to11xLhUKH7FClhbIhJyjb9G69mJndELfJ7psQkp4p3gcTlRZQNC
xNcq71y5h9gTmQ0xHRN0WBO3157blIw99li9LeitoV7N2kU+5J4S9Ql/q2lr
Va+RB9TthDQBqdGUjV2oyxafT38CUkZzNkoi3jIcLaBlOonohWZbgtgyQWVf
0cdYOvFQKHuiWUs8a1bQfFkxnRgp6Cdz+oTeZQXWEPvCvmPP3L24ruirU6dz
an/Dcy7MK3w1OJG8tfgKTP0ZT5Dei7dS/RTiyPvfgLaml0bLX3LFHM5JJzyP
r8SWv0yJdQKfWS+W6KkR9pHt82eCbFmZGWxnL78vR89kLvlNb/+hlzQiK6tu
BWPe84yoU94tIYd3nFbMjqgXyRqQF/TXrrFHOvigHzEUqxm+jqgXuJPeKdsX
vU0S8/7ar0aTXsA=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1:eJxFVntczOkaLyeMLRSVidKQS8kljnSTZyplolWsmLQxWdXIdhF7TNgMiqKS
FFO0Bsko6c5M1DtdTdNUU1jdmxoypTvVaIvzzvl8mvPP7/28n/e5P8/v+32W
HQna66OqoqISjT9mb4oLQjueozji58+i5OcQOSje2HgxG9iQLREy3yPJuTaN
AL8cZKnWcHf7/lI0NJK25cQEG8ijO9VSjjYj9sLQFsfjtxCF5bhriVossIqD
Vhyf+AgSW2O7wzfFMKTdvU52sQ64fSFJ2w+9AXl8E8+x7RVQXK/OcPTkA//q
8wvNF4qAFUrRNGcLEOdrISlR1oYodprbnYv4QN8rLBjLaYLsuSbxCZPdoEH1
bT97Qo8ct2WeeiD2Q7TR7Fmz7StI4nfdV8gN/Uvzz8xJKbhdMKj1138CbNqy
/iuQA8YnHkg295QCIzZqVviut8BsIs3x+1gJlBdmfaNYT9YaGRHlcAvYY71+
8dgPd4aJunl/DlA1BkeOxPYiQUKMto1fDVJJORLBON4EpP2CIUGlADF7azx5
a9hA6GN/acB3QoTX+NszOYjaP3XGRyRFmpXdi2a3lgB3gtmd9KUOiQPT5Bd7
XyJB4a+y1Qk3gRMeMf/F+08Q7PdFv1mzHxEmz6XH3BIhSVHCkjgsR34c8jUp
6BMw95vOWndACvLRpNirLu8QMdlVSz1cUa8NVdKxPkR9s86q2eI9cKLrZNbB
H0CgbaXG2FCGaClnIhR1ovziPE/PXYg46+lpd9jViBbudPnYhVZgP9HjW35r
R7LKm4WhOC+3U69v7HQvRbSctaFalDpE6s4dk+UWobh3k+NazgWg8pvoD1ZJ
CYp7qrXsht9XIBmeRwZf5MDO6Ukdv8YHTduN1SdNGxFxUt/qg1MJyDdMmnx0
7gCV1JQ9+xMakNggXbMLx8uQ+TrSefUoe3xw8R2cZ2RPWfvIm3Ywvj5KH7Zq
BrLA73TB/AegYro1d564CCgLCmSWnU3IMuClz2nPGqC6/OSkr4hH7mS/6bwU
2Gm+aVGzGyFu7qPdbxc/BTOiyP3JgTpkVnBQ/+kIDzhLV6gkn+Mjdprmlbdh
DLA08b50eHc+yl7u77FsXR4QSaERVbpViMFpym81KkHG3H4X3YsIKKOrzQfU
miDOjvXY6pwUNZIJjAzdVoh81KlRfLkdKIifEY7jp3uX2lr0dCJKxJaln/+T
DAyLFydT05oRy9307K+JdYh5KWvWad/HQLWWxsNzDpDKVfqD9iWA3N9/V9Wl
UhT8pv9z0qEUoObXrbVQSwOztCb3dpwHV5qacjcuBzhHnGg2JVLgnwqvzDnL
AkrSu0T9JxKQ2FzUPiwqB6pO/0bb8ByYnjfqi9TcIQIfaJsLyGKLAjTkT7Qm
fv6ASCGh30j9HxFHfEk/uT5PKT/thyX7KW9ujxSRjl9xsNFPBbIL515tyl9A
qYxy7TWsABWmj1XMj4cgzrd+MPa4BDHX9Id5XKtAkrGeiHmsCsS2fz5VwYlC
wd09Kxd4tgN1S/p8jVVliOBH+Wc+tmvckjdbvV6EKCMnO3bLM4FMJDAU/aNt
q3s2/2kXEmfs4o1txvJ2UV8syGVKObqAkunblwn8m388GsR5SWI9Vbl99UDf
FjmzF9+zq9x8ZP21IIgliG9V54DlwiHba7ldiNC3ck8srx3or1p8K7zLUKRu
Rs6xJd1AHLh3ewDrkV13vLonygNJg8UhIz0OCP7eXrUQzxV3TsbJk5QaRBvs
J6zllSDq53R7MsYvFcjvNsLvjKQ4G/ctbUDSsX9RhONgZYqcFHYJV7mLuPpS
NFR2ZqueTykSXy2w3oflGvcfrv713n2Q3Cx0ccR2qJ+OaBRjPdlqSduPvSLE
ss9AGdZCJIiw0gxQ4OdNgofkeymS9YqSFfHLXeSPVRtFaOj2Dst1JV1KXCF4
VGpHvOSA7GnRcmM8RyTmU7OVgdEgcfZKVsf9mK4HoeWYtVO7CE3HwfL85neo
vguZqX2vNSjtQsaqDyyMcV6cJc8+p1V+AFm87o0E7DdSak5T5C1f4R61CL9P
98NSbQ/jf/j7ZFUwobsKsbr//L4H5zlkdydwZEqEaBlkIg/n11gx86OiPiRh
lIcTttOo5cbydChB5GuLYpu2ClFw/r59Ay3VKPh7x+7rhlLEnsx1MuzpQtzx
Nu3/rMd37o1BhT5jRdnB6gAZol/dUT/89zslPkh0OROuS8QgvvrLJ4vwYkQx
d9x4ahz7H7w+O2H0FjBjqi4LdpYh+Q5H9cCEJhT3x6mOiPvVwOTpXFlNbAaO
/JD7HdVsoA9ad7cERINbk3ynZl2+co4i/9m0eWB7KuaDZ/LvWhWIH3pw2cz2
hyCz7tpsqVODWMu5XlOvahFlrpNnEsYBhoPn/oFEXM8B9aks33RoDHz3ft89
XOfFKw15+O6W4enVXpennDuzkA9fQo83ALUlTWi8HeNe8OisVxpCJS6x0ucR
t2I8pzZ/TXKyjwcK95tlwieMqzOcCIq6mJm8NH8egnlWzN4wuEuK3NTrfvPF
vJNdJZrRwc8C6o8fG50ED4Geh7KG8Ttxd5hw/EsFBFfk7FlP/Fv5Xyv52rns
dkuaGFHL7Q3Taa+B9ef55Yk4LzPhFEWhz9Hpyhw+0ADsmev0Jky/QeTcoOG6
o7WIY5Ts5/2zEFG9xANHqTGI2Xn43hT2w3+n/WwYn8a/kzxOsJqAHZW7KsS0
HFEa3jh0G3GB0+nsYm5VgcwCV/BaF3SiyFGPWj1/DnAKm2SzvPgQqde7MmiY
jxpt/H8jucoQtTjKzgifzK+EbYq7W2+Wl4KfKQWh6duJYhTcseHYw49sJa7x
F+odjnGYALPSB9fmeMwk0w0CG3+xigdNL/ruHcUYH+1fhJEGytBQdBHJE8fP
8DEu1me2Ade0LrDXshNR99HchQYVQLplbLBzqQjYbvP623CcFETQGsu/C+yu
H8tMoqWIXuzZRwj9oZzLOJuCy5uKXoHmeEFnmL8Asd7kfesvrECyParqKzEP
q6hs2W+F+Wx6D6Jf/tD9F54Pya5tuoo5N1vfxVLMEelUIm+vbjbI/j1TIp/z
8v/7jOEmUPSPYVJe26rdiSzL3Co78Ela98mCuYOPaKPP1wT5VADNezLEu0uI
GklnvdTCXiv7bXnqgGuQ4xUg67OmpN7pMKQR69tlX4XMzqXEDZhVIdnRUmGH
K0LcAOlyA71yxIqPOVxZXoPi4pdITtPbEIOfWdLqV4G4IfaMirJnynpzfgx8
K1ycBUPGnZWmv1eh7LCZWbtX9YAsYGTfMpz30NL5xSltpWhaTrODSFmkLlbu
j/KS0DkXZ4iQW4N/u5pfDQT/E/X7yPlsxBAM8BLsZUC04LrfwP9v5LChD08n
BSh55iIPmzKgLk1aZYrroXL25Cu7qGKY5q/p/3ia3wg59EhLzON0PwbPBMvL
51iK19zMQOy5QeZOix+h4AMGp0bwnAdHv75sgeUktkKtbhW8D7Wr3XF1TwTu
9/rMJ0GdMFQ+y6I15ZGyfsFhzW3D3rlAcD7YtMC5SDkHbi9pDmtnVyFKWaix
ZHk9YlvHnHCxw3j1syZvLfbP7q3+boRxaNo+PWUwdRjvQTSjMduMYRZM7+Vc
78aJmE81iGKy/KL2USkiTxxFtKMYn1K4OnPH32He8goon1WCODtlHYXHnylx
n2FiFfy0KQ/4j66v2thxFzHLPKPXYL/T73yd+3sVuMEOZTpF2SaCW3itoBnH
yWeuCBzYVqq0M91fdnriz2T3AmBnpcQreDDyg4NDIcYhdo26uQLvSRnSiZ8O
8hHpNnv2HtUc+C+gWYL1
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rbV9u2bdu2bVu7r+8nmUwSN+lYpUUQAF1C
/UOVxj0KBwQ07lU19L8o3aFr85bNAzLnaPX/DyTwv4MgKIIhOGqiFkIgJOwa
CIXQSI4UCIOwkKMjHMIjEiIjAvL6r/P4jyPit3P7l6Pgp6Pih3P5u6Phm3M6
BnI4JrI7FrI5NrI6DuIiHrL4qzM7PhLgixPisxPhkzM5MZIgKTL6ozP4g5Ph
vdP7nVPircsgFVIjDdIiPwogHdIjG7LjjTMgIzLhtdM5M7IgK9L6ldP4pVP7
hVP5uXMgJ1L6mVP4qXMhN5L7ifMgL5I5H5L6sZO4IBK7FBK5EAqjCIqiBBK6
GBL4kYvjoeP7geP5vkvinuO6NOL4rmO7LMrhjsujAmL5tmO6IiqhMqrglmP4
pqvihqvhuqO7OqL5mqP6qqO4NurgPh6gLuphKIahPhqgD/qiIRqhKZrhiiO7
MSK5CSL6siO4OVqgF8K7JcL5knuiFVqjDdqiMwJw0e1wwWF93u1xzh3QEWHc
CaF91qF8xl1w2j3QFSF9yt3QHSF80sF9wsF83EF9zL1x1EHcD/QADER/wEds
DcJgHLZ0yH81BH900L81HCNwE7cwEqNwBVcxGmNwwL8UiLE4hMMYh/GYgZmY
gInY70nY55/a6x+ajCmYimnY4+nY7e/a5W/a6a+ahdlYhMWYgy+ai8/a4U+a
h/lYgI9aiA/a7vfa5ndagrdahuXY6qXY4jdagZXYhM3Y7NdahdXY5DXY6LXY
4Fdah/VY75da5w3YiBda6+fagq3YjT3Yhmfajh1Y46da7Z1Y5Sda6V1Y4cfa
i31Y7kfaj4da5gNY6gda4oNY7Ps6gnta5Ls6imM4jhM4h/NY6JM4hdNY4Ds6
g9ua71ua57OY65ua4xu6gOua7Yu4hGua5cuY6aua4Su6huuY7sua5huY6kua
4oua7Nu4gwu6i3uY5POa6HN6iEcYzrN6jCfIyVx8imeY4DN6jhdIzTR8idOK
x/h8hdcY7zf4hM8Y57cY63cI9HuM8QeM9keM8il9wUl9xTeM9Al9x3H9wm/8
wDGN8E8M91H9wV8Mc3QKRiiGJkgGZTAO9REF4WEN8SEN9kEF5wENcgiG5H4N
9D6F4V4NcDj2d1j28x6F525FYERG4i71dRT2cWT29k71clRG4w719HbFYEz2
cCx2d2x28zZ1dRx2cVwGeKs6OwETMTETcos6ebOScJM6OhWTMhk7eKPaOznb
OQXbOiXbeINae71aOS0zcp3Sca3SMwNbeo1aeLUycZUyc6WyMCubOxubeYWa
OjubOAcbe7lyc5mqswbzMC/zMT8buTwLsCAbuiwLcalKc4kauDCLcLHquyjr
uRiLswRLcpHqeqHquBRre4HKcL5qeZ7Kca5qeo4qcLYqshIrswqrcpZqeKaq
e4aqcbqqeZqquiaHcqpqsTbrsC47cIrqsT6bc7IacJKqeKIacoIasTGbcLya
shkre5wqeawqOlAt2JIV3IptOUatOVptOErlPVLl3I5l3Z5lPEId2YmlPVyd
GcAu7MpSHqZu7M5e7M0eHKqSHqKeHKwSHqTi7sN+7M++HKhiHqAB7K+iHsKB
7KdB7KvB7KMi7q3C7qVCHsaC7qkRHMlR7KEC7q7RHMNAdlN+d1U+d9F/jRcg
7Q==
            "], "LeafValues" -> CompressedData["
1:eJxdUEkOwjAMbDNjiSNf4BdcOXIt4gGtCBWXIrVIiEfwZ2I7SSuS1MvUE49z
GJ7dPTRNs+yS6fr3aZ77z2Wfkuu0PMYp3s7TK45xPg5tAr/JCClUI0i+LAXt
M4wsRfTEY8dypmXIXje2bPdWRiJsLoCAQGZSEIIqAYzlt1OKFimY/6013hQa
gWUlKAj/BKDSskxjlJFtPBujdpAqgGtnpbRZTzpBGUqComCm1WcscVjfS2SV
4LVG+wGN/xOQ
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kttqFEEQhkvNhZvEsB7AgEnWZTzdCJsLnUPPzkx3Tzd4G58gQtQrhVUI
PpJv6dd/Fhmmuw5//VVdVesvP6++3jezXw85rq5v/W53/efzAuXTj9833252
lx+/30P7y+GssRP+xrK9sMFqvqd2ZiO3t2P+ZNEubEb/YAec2bZ4E7fTfWQ9
d4e1tgDWYUtYJmJaLDWS4w9gHpMr4xttw90Sme2dHdoDZZn4KqQK1CsqGmAY
bcUZsbaq5ZRzgtORL6v6nioT2htZN6ogYi++Q/ANmbf8SdUM6B57B0uCea23
lswD9hnOpFqjpC22FdgebwDZ2zPi1/g65anIOhLl7RHYS6Rk56o38G2IGvSy
vGevQFd0c8RSOl76W6qLyp/VqRXeIETplBd7ef8Z3gtbcnr5MigvLexzJEVm
5I08QYyjLI18s+rIcHVUHpTbwempfcL+XiwddmdPiCp9ykgzaG8v8ZUutOpk
md1z9SFoFhme2hbcFVhvb1VDD3bWtBaa11Jbs4AvIR2AqXlxyxnFWXYmqr5Z
0ygMr6Xd9XxSd7PetNXkHG8qE+81uUj8CXKEedTcltLivktlj8vOeGLC/60q
8Xc7Xe+5B23Hsbrfw1H2qVbOho0fuXu9etIEvNBOs/gH3tpomg==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
9/tv6SV4hCmuTz/PKUWe9l9/HCT3XvHze3n2RJdFs5Sl2UnNyHlyKjqH+GMN
+r10VqcA/Ync5hM5l2p0qdHFvwTpB6tnKnRI3EHjrTXzlJaZdn+WWo6S6Dq+
bSXBuaCkoeh8NbK9dZoukzyxkimlG5a2g2VocvcZhQipvf2HvIlf33OG4T8T
fDTz5Cm5Hm0oXv7BCu/IUeS4iDeKxE2ZwlVq4mOIaryiFymQE1Q96WM+uefu
8ksVEj4FZsMxK0nclPi5zPlVcmSHuY3fG1uJgpfvWiKI37ApYWNTD4iRrzrz
2G5pFbKC/WbLdpagij5+QDPfmLS2tK0f5JikrT/liFEtjtz/1dyV7KiOQrSc
V/FU4z/1nEOBGZnrI3wwhtoebif3GtbTMyvzyJwRPyiv+PS+DDy9PtkbNLYB
dfKqBE+ST9/CbdkuBDer/Py63lll4NtxuKWN6CXt/fDk/WTf8r+mSUVnO0BZ
cFM9jlYPqsAnWygKMSo9DLUukvzz4xJ8/Egd0Z4PzNXEQc+SxWi+U0TwRfYd
5Ri03n1NOr0G+RuLbttdeA7iOfczOEQf+R/4f84kOvd/t5oFFQ==
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fSeB/B0NwhEBItEFbhEJo
5EJu2GEQFuEgZ/Bfh8cfp0MEREQkREZapHcUpHNiJEFUREN0xEB8JEBMxEIc
pPVvp3FspPYvp3JcpPRPx8MPp/B3J/c3J0QiJPM/SOqvTuIvTorPTuxkSI4U
+MefnBIfncipkBofnNDvnQbvnMBvHd/pkQEZEc9vnBOZENeZkQWvnRWvnAPZ
kB0vHccvHNvPHcvPHNN5kBcVUQn5kB9PXQ5PXAClEcMFUQiPXRglUBJFUBSP
XAwPHd3FEc0PHNX3XQr3HMV3HdllEMl3XBa3HdG3XB4VEME3Hd6VEc43HNZV
UBXVUB2tEMY1UBONEYDrDu1rroXaqIO6COVGCOl6COH6CO6rboArbojLDuZL
ppugKS4aboZAtIR1wVJztMB5/9U5/9FZ/9YZt8Zp/1I7tEcplmYHdMQph+NJ
d8JkTEEQfqozfqgLvqsruqE7euCEJ6EnemECvqk3vqov+uG4++CYv+ioP6s/
BmAgBmEohuGIP2kwhuCwP+qQP+ig32s43umAR2C/R2IURmMM3mqfx2Es3miv
X2s8XmmPX2oiXmi3n2uXn2kqpiEkQ3E6ZiA4n2omnminZ2GHH2s25mAu5mG7
H2k+FmCbH2ohFmGrH2gxluAv7msplmGLv2I5VmAf9mMl7mmz72oV7mg1bmsN
1mId1mMTNmOTN2CjN2KDb2m9b2oLtmIndmGdt2Gtd2A7bmiNr2u1r2mVd2Ol
r2oP9mKFr2i5L+sADuIGbuIQLmmZL2OpD+MIjuIYjmOJL+oETmKxL2KRL+gU
TmOhz+AszmGBz2u+z+k8zmqeL2Cuz+gSTmuOT2m2r+AqruE6TmqWT2imj+sW
jukpjuo27uAujmiGn+Ae7uMBDmu6D+khHmGaH2OqD2qKD2iy9+sZnuMFXuIT
9ukV9uo13mCS92iid+st3mGCd2m83+MDduojdmict2usP2OMv2C0t+kbvmOU
t2qkf+AnfuE3tugPNmuEN2m4N0rYoGE2hhok12uIg3Gw12mQQ3Cg1yo01ygM
w3KAV6u/V6mfVyo8IzAiIzEjMzEyVygpl6uvozAqlykaozMGY7KPlyoWYzMh
E7G3lygOFysu4zE+FykBF6qXF6in5+sfzlNizlUPz1ESzlZ3z1IyJmc3p2A6
zlRKpmJqpmFXz1AXT1daTlNnT1WQ07OTM7CjpygzJ6swizALszIbJyk7c7CD
Jyonc7G9J6idx6utczMPxykv8zE/C7AQx6qNx6ggR6u1R6mVR6qlR6goi7GF
i7O5h6sEh6kkhyrQQ1SGZTmBE1mO5TmW49jMFdiIjVmRldjUlVmFVdnEg1WN
1RngOmzsGmzkWmzommzgQarv2qzngarLeqzPAWrI/qrrBqzjfqrtvgpgH9Vy
bzVhUzZjINuyHWu6OVuxNVuwl2q4Jau7p6q5h6q6Dau4u9qzA3uxNzuymzox
iJXdVZ3ZhZXcRRXdld3ZWd0YpArupB7syfLuqHLuoD5sr4EcxLLuy35sp/4c
wDJuq9Juo8EcwqFsrVJupZJuqWEczhEcydEcwxJuoeIexWJurqIOVBE3U2GP
ZyE3VUE30SQGaBZnczIbq4CncCqncTpnML9nMp8bKa8bKo8baA7ncjlXMLfn
cQEXMpfnM6frK4cXMbuXcTGXcCnrKZvrKqvrKItrK7NrKZNXMqNr6l/iPFrQ

            "], "LeafValues" -> CompressedData["
1:eJxVUEkOwjAMbDNjiSNf4BdcOXIt4gGtKBWXIrVIiC/xSpLYTkOleok9nrEP
w7O7h6Zp1l00Xf8+LUv/uexjcp3XxzSPt/P8GqdxOQ5tfPxGQwElfSTdUU1M
PBV/0SA5EGD6EYhc2LA5yWixdsVwq6YBSpFZS7OYkcDCpToggE4RGEY7XZw3
UzcytSpOirDWKOicGQOEkJdh9Ew72T2EZZLBfEvW97D3pKxSZZR/Z/Slq5Vz
CCuhPqLEM2gE/AD47BQq
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtktFOGzEQRSfVViKwREQpUkCIgFL62vBQkqx3s+v17kq8whdQCdqnVkor
Vf2K/nLPXJBle2Z8fWfm2tdffz68vDOzXwcsD09/4n7/9PdxjHP/4/fzt+f9
7d33Ed4/lrVVVjJn9sEaS7Zl7fAH67Fz23DaWwBXEI0gDln9dG0T5tpaeTu7
sE92IntkNV7F2jAKYgFO51twP9kNVsG9xMnAzY9gN/jO0pIvww+cOnPELmBq
7Qh7SUUzUCUcS6IdowWxIuZVHsKTgWnEXXG6Y0xtDtYzDaAX6sKZe/YOdI1V
sTvjMXcHrKSKvK6kSkvwrsSc/VaVLll7ak/Sr0WJCHolBbdwbKRNAFlj13bN
HJGllCbJLtVbeNNnw/TeW/wM3ii/IeKVJ3XyqkcnjadMV+xKZxPiOZbHdrxD
JHeQ1q5dDctE974oU6u3mGIvxZijZiUNgjJ7v9mbCgX+jDsFDLXeYQuTK9ZI
0Rw1VuBylPlMzF9oAWIOMtp7GCOv0mvsqCpX1gJkTTVeR7Qx+6newf+Zo67U
c6Oqgv6K/wKvsOG0h78kPsIuxVvTc8efC3bOnknRM/3sVhxJ7zjoxsAcs86l
XqEMAz/Xuz/C818bVW9u/wG6h17m
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
qFZE0fkm+RnUpN77/wfdPGp+
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rbuNq2bdu2bdvdfX0/yWSSuEnHKi2CAOgS
6h+qNO5ROCCgca+qof9F6Q5dm7dsHpA5R6v/fyCB/x0EQREMwXEABxECIbER
JR0KobECKxEGYbEQixAO4REDMWFHQEREglzCkREFUVHcf13Mf1zUvx0Nvxwd
P13EsRAbP1wF313YcRAX8RAfaZEO35wAX13ICZEIX1zQn50YSZAUyZAcn1zA
H50CH5wS753fqZDPqZHXaZDH75zb6ZHLeZHTGZDDb50RmZAZWZAVOZHdb5wN
2ZHNr53VOZDFr5zZL50LuZHJL5wHz53R+ZDB+VEABZHez1wRhVAYT53ORVAU
xVAc5ZHWT1wCj10aJZHGpZDaj5zKZZDSD10W5ZDCD5zcFZDM953U91wJd10Z
d5zEVVEN1VED9VAft10TdZDYtZDItZHQt5zAdRHfNx3PDdAQwxDXN9wITdEM
190Y19wEVx3HzdECVzwELdEKvdEHrdEG7RHbbRHL7RDTlx3DlxzdHRDNHRHV
F90JnRGAC+6Cbojirojs847k7ojoHojgc+6Js+6FMw7vvgjngQjr0+6H/gjj
Ux6Akw7tEx6EwQjl4w7pYx6Kow7h4RiBkRiFI56L0RiDOQjuwx6L6QjmcRiP
Qw7EBAT1QQfxREzCZNAHPA1TMBX7De+ztdfSDMzELPzVHv/RbPzWbv/SLv/U
PMzHTv/QDi/Adn/XNi/GVn/TFi/BUnzVZi/DJi/HRn/RKnzWBn/SanzUeq/B
WnzQOq/DWq/HBrzXGr/TJrzVZrzRFmzFNrzWau/HdrzSDuzELrzUbrzQKj/X
HjzTXjzVPjzRSj/WCj/SIRxGJEbmERxFaIbhch/DCZzEMh/HUj/UKZzGW7zD
GTzQZVzBWZzDedzXJdzTBdzVRdzREt/WYt/SVVzDa9zUIl/HHdzFDdzEQt/C
At/GfN/QPF/XPdzHQzzCXF/THD/AbF/VY1zRLF/WTD/BUzzDDD/HdF/SC1zU
S7zCNF/QVJ/XG5zTFJ/Ve3zAH/zFR3zCD/zEZ3zBZJ/RV5zWJH/HRH/DBJ9S
oE/qF07oN45rvI9pnI9KMELyiMDDCspgJINwrA9pjA9qtA8oOENwlPdrpPdp
hENxuPdqmMMyHPdoqHdriMMzAndpsCNykHcqCqOyCIsyGqMzAzMyBmMyCZNy
oGMxMXcoNuMwLrcrIRNxgOOxv+OznxOwr7epj7eqt7eolzcrGTcpJTcqOVOw
pzeoh9crFdepu1Ozm9Owq9MyHdeqi9MzwGuUiZnZ2YWZhauVm3mYldmYnavU
ySuVgyuUk8vV0bnYwcvU3nnZzgWYj/nZ1kvVxktUkItViIvU2gvVygtUjMU5
kvNVgiXZg/NUiqXZlHNVhmVZl/VYjuVZk3PU0rNVgRVZiZVZnbNUhTPVwlXZ
3DNUjdPVzNNUg1PV1FPUxLVYm3XY2JPVyJNUnxPVgA3Z0BPUiIFq4PGq78as
5yas63FqxuZswZbszrGq41bswI5szTFqw9Fqy1Fqx5FqzxGq7eHqxGHqyqHq
zADW8hB14WDV9CDVcDdW90BV8wD1ZC/2Zh/25wD2ZX9VdT9WcT9Vdl8NZB8N
4VAOYm9V8mBWdC8NY09V8HCWdw+NYHeVczeN4miO4VgGsqvKehzHs4vKOECl
3Vml3En/AeBwJuo=
            "], "LeafValues" -> CompressedData["
1:eJxNUEEOgkAMhG0n8egX/IVXj14xPgAiEi+YgInxFz7Z7bYju7ClnZbptIfh
2d1T0zTrLpuuf5+Wpf9c9jm4zutjmsfbeX6N07gchzaD32xUobzIp3wdUAQs
DjLhVcDmMAVtS7X/pqJigSRIUnKqsaF1X4FKAJsCAqLhgHYTJhHHE+xALV3s
Zcpc6i+QasVqNnmpQVl00PsMPpXYibE1la6uMQicWLiTqt9/qxyFcrms2O0P
wqITow==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk1trFEEQhSsa0MRxIBFkMV4i60bf3PXB6bllbj0NvsZfECHqk8IqiH/L
X+hXZ5alu6tPn6o+p3r29ZefN1/vmdmvh0w3t3+G/f727+cTNp9+/L77drff
ffx+xO4fU2WNXdhsI2ttj6wEqWxiN1my+zaAFRbAS3ELkIHomvNoT0ESuYFf
Z2fibg/VLmD1ZL2D4cjAbrZnijPl97aDP5EZQXtrmT2OcCfdMsFMYLld2RGV
A7m9MgYqRKKW8QbOubBBZ36Pr7NYL+zSHsN1BWuhfstWN3qtUchSLar+E2mI
RB0/Z3TKWUYSe2B1B9fa9/it4EX0juIlFJeMczSv7a16NKqW9zXpplMY46Gf
NZhHLbWO5fw98bL3Xri6XIoy7grSkQ6KJrrYUCvxApesS3wCGlkD+xYNyTZg
p8QdJxlI4NZJ2md5KOA0nDZCXelKLgvqPYB9Bt9fvmTdKs+7X6kbrn+lfnSM
lrFSn/x910TBnpPvvCC/SR2s8VQwe+eWeaZqLr8Vo5SqWn3yaNSrLA6DfWD2
0/rQz5a14jvJ5SLKfaEeNfIU5TDT62z0DrMqL7639kr9yPU1+/d5jI4glQUe
rkA20rlT7qjX6GEseqO95P+SScHydXRiTPYfS+lqRA==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
MrsnrqxG1pJd8qOfq5H7mOETQfrfaBibu9ukHSVeNUonsl9V42Or9ePWZpeK
tFdKFHtu3d/FSB+re0uWUIV+lr2hwvBQYK7Y9+He+gqUiN76HMtPBO7KlASt
T+Gk5r+4/6kcOQqmeM9bMXBuG7+rdStCReCcJceby9HP3lYYWkl8quPpDK1O
+Snrz04n+clmJR2IJPEopqzyqfSsQObPnvxe8v4RHjFmCP5t90kB1tqnQztM
7mBo0HaL4B45juCoe4K1yfCSSKT2fyeqIzrDPdXTq7MuD5mMHwt9lHJkt+jd
cPWIAsa0ljNafNDm/r1mnLsKOaFfLPrPK9D8qLO7/GMuWHez3l0mcVh/Wxs3
mHMBRuZndxQvMmVW0WheGnPh4ot3K9Fv99D8be9aUeHy6upwvxwGSoL/TuTV
Q5ql+wuJoQmD93mFoevyNygK3yBsYj9GzZ7hn5KJP+wuLn2VRHgss162++au
Z6g645I9cDkedOhTz2njUzs57YwzLkVOck/UGbFidI6NfL9ILL0rnfKygSW8
VHBki2bUp7I3NVv8Q3xiaJ57+9uoVqD/4SY/KeoDVp1y1WLie+j3/uFcJP5L
9BN/8SJyL5hQ+qX6VCH+D2L5OlM=
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fROB/B0NwhEBIzOJshkJo
fMcPhEFYREFUhEM625Ehh8dfR0BEpHUkpPEfp/Zvp3I0RMdSLEMMxMQSpHQs
xMZCpHAcxEUhFMYvx0NapEN8JEBCJMJPp8Y/SIwfTu4kSIpkSObvTupvTuLk
SOwU+McpkcipkNBfncBpEN9fHM+fnR6fnAEfHdcZEceZkBlZkBUfXADZkB25
ENs5EMvvHdM5EcPvHN25kQdvHc15kQ/5EdVvHMWvHdkFEcmvHNFFUBRVUQ3F
UBxVEMElUBKlUBovHd4vHM5lUBbPHdblUB4VEcYVENrPHMpPHdKVEMJPXBmP
HdwBCOZHpqujBhYArgmrFmrjoaU6qIsHnoN6+KsGaIj7ro97/qO7boQZ+K1A
NEYTNMUdT0AzNEdHdEIL/FJbtENL/NRtt8Itt8ZNt8EN/9B1t8c1f1cHfNNV
f1UQvuiKx6MzPqsLPqkrPqobuqMHeuKyR+GSe6E3+uCiP+iC3+u8++Kc+6E/
BmAg3ums32oQ3mgwhuCMh+K0h+OUh+GkX2sERuKEX+m4X+qYR2MMXmgsnmsc
numon+qIn2giHmsSJmMKpmIapuOwH+mQH+qgH+iA72u/Z2KfZ2GvZ2OP72ku
5mG372o+7miXb2unb2kRFmOHb2q7b2ibr2s5VuA5XmAlVmEt1mGrV2OLr2kN
rmqzr2iT1+MmbmEDNmITLus8LmkztmArtmEv9mGjt2MndmEHLmqDL2i9z2ud
d2Ot92CNz2k/DmC1z+ogzugsTusQDuMIjuI4TuAYTmmVT2qlT+gkTuE0zmCF
j2u5j2mZj2qpj+gcDmuJD+kCLuISDuoKruIyDmix92uRr+EG9mmhr2OB92q+
9+g27uApnmGed2uu7+Ie7uMBHmKOd+kRdmq2d+gxtusJtmmWt2qmt2iGN+sl
XuELNuk1NuoN3mK6N+gd1muaP+M91ukDPmKqP2GK12qy12iSV2uiv2KCv2G8
V+knfqE5V+o3/mCcm/AvhDqsSwPMwqwkgzExkzA4QzAao3OsQzIKVygUQzMM
w3KMlyscw3O0l2mUI3CkIzEil2qElygyF2u4FykqF2qYFygGYzIO5ysW52mo
52qIY3Ow5ygu43GQ43Og/2ECJuQAz1Z/J2I/z1Jfz1RSJmMfz1BvJ2cmTlcK
pmQqpmYvT1NPT1UapmU6pmcGZmQPT1F3T1Y3T1JXT1QXZ2ZnT1A2Zmd5VmAO
5mSQizMXx6uTizI38zAvx6mjxyofxyg/R6sAC7KDR6kQR6q9C7MIR6idh6ut
i7GNh6m1S7Akh6oUh6g0B6sMy7KVB6mly7GFB6oiB6gqq7G5K7GZK7OpqzCA
/dXE/dTYfVWdNViTfRToWmzk3qrNXmronqrHHmrg7qrPbmrAhqzvrmrEQNZz
Y9Z1F9VxZzVlkGq7GWu5k1qwJVuxo9qyHWu6NWu4Dau7g9qzvcaynTqwI6u5
E0ezrYLYmV3YlQM5iFXdjQHuzipuo8ruwUruyV7szYpurT7sywrux/IewP5s
pXJuqbJuoTIezNIeziEcylJurpIexhJuphFsquIeyWIexaJuoiIew8JurEIe
x/GcwImcxBkMVEFPZgFPYX430lRO43Q2VD43UF7XVx7PZG7X0xzO5Vqu4zzW
1ULWUS7PZ04vYA7XVnYv4mIuYTYv5XKu4DLWUlbX1ErWUBZX1ypW02pWVWav
YSYHaD2raBMrawMrKaM3MoMrKr0r6F9Gr2zH
            "], "LeafValues" -> CompressedData["
1:eJxdUEkOwjAMbDO2xJEv8AuuHLkW8YBWlIpLkVokxLv4II6XNCKp7cbLZCaH
4dndU9M0605c179Py9J/Lns5XOf1Mc3j7Ty/xmlcjkMrya84ZmIizqZBvC5W
U89+1gZmC5b420yJE0FKCQSIKZb8sOElgyAP8HTBdBTYtfEZg6BDeQw+FJR5
QzGOmyzXwEVIHqaiVxZCbqU8oAt4DlAxEJXIiZSL4DYXdNiBTLZpj+vrxyxE
q8e1XoCCbZUH+StY8w/CvBRX
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1uE0EMhV1IUGmaqC1coLCCRoGAhFrEBWR2J/sz+yf1tjxBkVq4Aikg
Id6CR+7no8ryjMc+PuOxZ/Xt1/XdIzP7fchyffM37fc3/74+5XD188/t99v9
py8/Djj9Z2ks2Fvb2omVSGcD0toZmuyJ1ZahH0HVaIeMWEtyGuIZqNzWWD1r
TeZE9g62iD3gHbHmdqRoYZX2nrwlawK3gsk9PbHMFuSWYBJ7Ijensi2xmkhD
JNqMfSeuDkTAs0VH5Tn2Mdxr9tFekBXtjZj8js7e4fG7jznVREYqa8SfQJZw
F1TkHZgSH5EOzwRNZEX5Avoa6Tg9t3P16RkMR+J2XK0O9jol7IW8jqzQRrVU
6EssxzXCZ6A2vHcDc8Tnb2r1uqlufqV3drql4E2BdUHmiH4AGcAtNaNcNVXI
OZp0a6RG78Bary3ss+aU2wW+Ci3xDWRXWAM1DPJ7J/3GSv3q1I9K9Q12ClOu
l7Sa4RyG0Q7E4L8oR3xePRMJVDql5lr4GboDs2FCrVgXDxMtmIx3yWfkrw10
ZbBL9TTyG0v1MwnhGSW574mdajK92H2ODb2tYWjw+p84fviRPVXk2BHGVtGA
DNKtphyI92LKsCJ6D1ZTX/w=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
C1CcT+hvRELypmXhbo3ofzA4hm4=
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rbutq2bdu2bdu7r+8nmUwSN+lYpUUQAF1C
/UOVxj0KBwQ07lU19L8o3aFr85bNAzLnaPX/DyTwv4MgKIIhOMZxPEMgJEqj
DEIhNBIiEcIgLOxyDofwiIuyjoAyjonSjohSjoSSjowoiIpokGPgr6Pjj0v4
t4v7l4v5p2Phh2Pju+Pgm4s6HuIjAYr4qwv7iws5MZIgL/IhKZIhM7IgOVLg
s1MhJQr6kwv4o/M7NdLgg9PivfM5HfI6PfL4nTMgI3L7rTPhjXM5K7LhtXMj
O3I6J3L4lXPgpbM7F7L5hbP6ufPgmbP4qTM7PwrgiQuiEDL5sTO6MIqgKDL4
kdP7oYuhOErggdO5JNK6FNL4vlO7LMrhnnvzrssjHdOzAiqiEiojJEOxCqri
GFK5GqqjBVqiBmrijlP6tmuhIVL4lmujDpK7LurhppO5PhrghpP6upO4ERrj
mpvgqpvjipuiGRL7shP5khP6olvhgjvhvFujDRK4LdrhnNujA+L7rOO5I+L6
jOO4MwLQBbHdDd1x2l1xyrF80j0wEIPQEzHdC71xwn1w3P3QFzF8zNHdH9E8
AFF91FE8GJF9FJE8BEMxDMNxxBE9AiNx2BE8CuE9DdMxGmMwFuNwyOE8HhNw
0FNwwIGYjLCeiDDe70nY59De61CeipDe4xCegZk4guCehdnYh/2Yg7nYimCe
h6CejwXY7SBeCHoL4EWwdnkxlkBaimVYjr9aiz9agd9aiV9ahdXY6TXY4Z/a
7h9ah/XYgO/a5o3Y6m/ahK/ajC/a4s/a7E/aho/ajg/a5B3YiV3Y6Pfa4N3Y
g3da771Y57c6gDc6jNda64NY40NY7Vda5Zda6Rda4eda7uM4gZM4hdMQjDM4
i994pnM4j1u4jWW+gCu4iot4qqW+hCW+jMV+omt4rOt4pEV+qBu4iYV+oAW+
r/m+pzu4i3m+hw/4iPt4gIe4q7l+h0d4jCe4ozm+rae4pWd4jhe4qVe4oZe4
rtm+pll+jTe4qre4opm+rPe4pBm+qOm+oE/4jC84r+84p684q284o2k+ran+
gSn+iV84pck+qUn+g784oYk+LpAMzhAMwmMK9FEF5RFNcDCO92GN8yGN9UGF
5gHF4n6F4T6FZTiGZwTG4F5F5B6N8W5F4i6NdmRGYVSOcjSO9E5F5w6N8HYN
d0wO8zbFZhwOdVwO8VbFY3wm4Bal4mYlZCImZhIO9iYl5UYl4wYN8nol5zql
4FoNdEoO8Bql5mr1dxr2c1r29SplYEb2cRdmYmbWY31mYVb2dn5m40r1cj5m
5wrl4HL1dE72cC52d252cx7m5TJ19VJ18RIVYEEWYmFWZCUWYVGWZwUWY3GW
YmkGeLFKcJFKcqE6e4HKcL46eZ46uizLca46eI7ae7baeZYqswrrcqaqcoZq
c7qqcZqqswbbeqpqcorauBZbe7JauQ5bepJaeKIaMFAt2YoNOUHN3YjN3JhN
OF5NOU7NOFbNOUZN3YJNPFqN3ZptOUqN3IYNPVLt2J4dOEIN3JkdOVydOEz1
PVQBHKJ6Hqyu7MbuHKS67sUeHKg67snaHqBa7q8+7Mt+7M9BHMyaHsAa7qeB
7Kvq7qMhHMqx7K1h7KVqHsXh7KkRHMmq7qEq7q7RHMPK7qZK7qqK7qIJDFAF
d1YgO6m8O+o/tsko6Q==
            "], "LeafValues" -> CompressedData["
1:eJxNkEEOgkAMRWH6m7jkCt7CrUu3GA8AcSRuMAET4zG8sZ22dJhAaZnfP69z
HF/9IzVNsx4k9MPnvCzD99pJcZvX5zTn+2V+5ykvp7GVnz8JYMhisCwCeSqv
ZKXSQj9aEmuDRpURbB/RZqXpXATYYyKAxIrsPEJKbAqOfTMokWAupcdUZDKE
ocFxncOhA2VzcPMK5OQcE6k/sZ8e/Hv6eh8IQEqkI5V0z8ccg3Alqch+lZta
Qsv0B+0FE7g=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwdkMtKA0EQRe+IiJqoIQExmE0wunHhY5GemfT0pOcFbuMXRIi6UhgF8QP9
L083RdfU495bNTV/+dy87kn6OsRttj++77e/z0ckTx/fu7dd/7B8T8j+eFdq
lcpihWbEpTpVOiMaUyu1kpdTRrchT7UmMmACp1ENbsS3IHNkBR0fcS2oE16N
eViZhqjlse50SfWWZ7AJ9X0do9LqBmwOu8NKdB51B9rTa/CBn7NRjto1vAT8
mrzSgq8FsUCvjCrTiPF4i26NXkbnFLShGrYassWKWsaEC1Dn4CbMMcw3msM2
TPIwZ1wpgzGOajXzUh0wseN/B/QqdBy+AR/0cvTChRwKNnoDOqESuiO64a7h
ko6NLFGle/0DF0QzfA==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
rVMG/wEfZDrN
            "], "Children" -> CompressedData["
1:eJwdk1V0FgQARu8BpERFEBAbVEBSkJIevdEb3RssqA3+DcZoRneP7u7uLqVU
GpUuBTtBQi/Dh/udc8/3fPNExIVGpQHiM6ZOaHhiUCAQnhSWKVWCYxMioyMD
xUvHPP+PppLmf9KSjheYw1zSk4EWtCQjmWjAfDPzIll4CZ3nf871ZeZYmCK8
QlZeJRsFmW12XuMDPiQHOXmX98jF67zF2/zrLHPzBk99kyfO9LEzfOR03yHF
f5zmQ6eah7w8cIp/+z5/Odk/neQf5iM/E/3dAvzmR/zqBH+xED873p8c548W
pRgfU5wS/GBtPqEk9x1rKUpzz6qUoSxVGOOnlKMilfje8nznaO9agTuO8rYj
rcwIbzncIIZ506FWY4jVSfaGNbhuTWox2GsOMpiBhjDAq9bhinWpR3/r08/L
9rUhjQilj81JMozeNqYJTUn0W5vxjb382p5eMsFWtGYgg2hDvO0Jpy0B29HD
i3Y3gg5csBsdieS8nYkiznNGc9ZYzxhDJ7p52q52oYtd6exXdjKWGOPoTg8C
9CXaL43nC/uQQJQ9ibQXiZyyNyft6AmTOG4HjxlhP8LtzwA+t72f2c7BtHUo
w0imjUcdwhFbe9hWDmcEIxnFIWczmjEctKVjGccsWnjA8UykufudwD6buddJ
TGYKe5zKdGYwjabuNoVdNnEmjd1pmDsMdbuN3GZD5zGf7exgAQtZwUq2uohl
LGeLi1nCUjbbwE3Wd6P13GBd17uKdW5lNWtYSx3XsZ61hriBjWwh2DXWdrWb
WOVmVlrLFdZ0GzVcbnV3Us1lVnUXu9lDkHvZx1KruJ8DLLGyBzmU2kAlF1vR
w1RwkUdYaHkXWM5nFMOUlQ==
            "], "LeafValues" -> 
           RawArray["UnsignedInteger8",{4, 5, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 5,
              5, 4, 5, 5, 4, 4, 4, 5, 5, 5, 5, 5, 4, 5, 4, 4, 4, 5, 5, 4, 5, 
             4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 3, 4, 5, 4, 4, 5, 4, 5, 5, 5, 4, 5,
              5, 5, 4, 4, 3, 4, 4, 5, 4, 4, 4, 3, 5, 5, 5, 5, 5, 5, 5, 5, 4, 
             5, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 4, 5, 4, 3, 3, 4, 4, 4, 4,
              4, 5, 5, 4, 4, 4, 4, 4, 4, 5, 3, 4, 4, 4, 5, 4, 4, 4, 5, 3, 5, 
             4, 5, 3, 4, 4, 4, 5, 4, 4, 4, 4, 5, 5, 4, 5, 4, 5, 5, 5, 4, 5, 4,
              4, 5, 4, 2, 4, 4, 3, 4, 3, 5, 5, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5, 
             5, 4, 5, 4, 4, 3, 5, 5, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 3, 3, 5,
              4, 5, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 5}], "RootIndex" -> 1, 
           "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkstLw0AQxqe2Fmtr8HGpIj6I1ougPWhfabJJdgNe69VLhaonhSqI/72/
mYZlNrPffPPO5evX4m1LRL53uBbL33y9Xv49d3g8ff6s3lfr4eNHg9cLV1cS
8TKTkclcAq+AHiSTSMYykBy8hSUXJ6Ucc09AYmztGlf+AHYTmclUUumBprAd
uDM9lnM5RWvAHlrOXSwZyIQzJZLDEoGUxA14OOlLgaYe6llKB6wyhuc7QCIQ
D3IPP+Wr1V9xq9XXJ1glGViJ5o2vonEqs+Tk9xa5spgPVKBoAao1JNin1ved
5Q6c2KoPdFoygz42LxfMZZMrmJTWRSF7cmR4WkfVGCWaZgtyAzpimre2h7n5
T62yplXUB2tbtZkc8nbWeZeMKVPT7Inl69u8A3hMnVpJgVTImBMRs8CeMMXY
+qrYSCbbckbWBNbA6lCGA8nJnuDXAp0QuYd/qCfqZJ+j+SL8JvA22SLbpLO/
YdO/su+QxOo4gDOzTsa2I08lup3rmunNZ0wMvWOYGscR98Q2r3uYE6Mi3z8U
+1PC
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
4PyV6/fdzWLQ8WT/qDpShv8Dnm6SXQ==
            "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Zt2+6rbfvV2tq2bdu2bdu279n2J5lMEjfuENA8CNA5
1F8ENOpeODCwUc8qof9G6fZdmrVoFpg5R8t/v67BPwchKMEIjlTdQhCSwxwh
FKGZzBTCEJYMZCQc4XGl5I8iEJko/FZEIlFZv1RJUYnGTyUlOjFISCJ+KCbf
FYdYVNQ3xearKigu8fii+HxWeX1SAj6qnBJTVkkoow8qrfcqpWSU1Dsl561S
8EYllIriSk0xpSEt6Siq10rPKxXRSxXWC2UiH/nJTBayUkjPlYNnysZTZeeJ
CionuchNAT1WXvKQX4+UTw+VVw9UgGIUpyCFKEwe3VduFSGX7qkod5VTJSjJ
HeVQKbJrMNlUmjKUpRy3NZDyZNV/9KMCFalEFjUks26pMjcVQBWqckPVuK5M
qk4NrqkmdcmoWtTmqupwRRl0WelVj/pcUgMuKp0uKK0a0ZgmNOW80qgZzTmn
1GpBKrWiNS1JqbNKoTNqQyeSqy3taE8ynVZSdaAjp5REJ5VYgSRSZ7pwQl3p
SUIdVzeOqTs9SKCjiq8j6kVv4umw+tCXuDqkOOpPbB1ULA0gpg4ohvZrEPsU
XUMYyjCGs1cTGUE0jWI0ezSS3YqqMUTRLkXWWMYxnkiaQETtVATtUHht1yS2
KZymMo0FLGQ6M5jNHLYqrLZoJps1i00Ko42aywaF1nrNYz6htE4htYjFHOAg
S1jKWoXQMpazgY2sILjWKJhWsorVBNVqBdEaTGtZxyqhlVrPCsmXaxPLtJ/N
bGEr7kv1x7fx27fzy3ewk13sZol++h5++GLtZZG++z6++UJ99QX64vP12Q/x
yefpox/lGEEsqB3ng9/lHic4ySlOM1fv/Qxnuc07P8d5bvDWL/DGL/La5+iV
X+Iys/XSr/DCZ+kqM3WN6zz3GXrmN3nqt3ji0/XY7/DIp+mh3+cBzgN/yCO+
84PHPGGqPvOUZ0zRfX/OPX/JK15w1yfrjr/mDZP0gbe8Y6Ju+wS9Z7xu+Tjd
9LH6yCdu+Bhd99H6wleu+Teu+ihd8Z/8YqQu+28u+Qhd9OH6wzBd8KES2Hk3
O+dDdNaDWXALa+EshJ3xwTrtIS2UhbZTPkgnPYyd8IE67uEtgqWxtBbRIlkC
O+YDFNn6K5pFsaMe1Y54Px326BbDYlos+0+xra8OeR8d9DgW13rrgPdSPOup
+NZD+z2h7fNElti6K4kltWTWTXs9ue3xrtrtKWyXd1FK66xUFqjU1kk7PZ2l
t8yWxTLYDu+o7d5BGa29Mlk7bfOsls2q2VZvq+xW1spZDstpuSy3lbEt3kZ5
LK/ls9ba7K2U3wpYQWupTd5ChaywFbHm2ujNtMGbqqg1UTErbiWssUpaI633
hiplDVTa6mud19Nar6vyVkeVrIKt8dqqaLW02ivbKg+wKlZTK72qrfAaWu7V
tcyrqYbVtFpW2+pYXVvqVbXEq2ixB2iR/w+cysEO
            "], "LeafValues" -> CompressedData["
1:eJxFUMsOAiEMRDpNPPoL/oVXj17XePSwG3HjBRPWxPj3ltICTYa+ph04Lu/p
GUMI215gmr/nUubf9SDBLW+vNafHJX/Smspp2UnyLsAAgwXlsNw1oOa0gpkm
YH3aCUMonY1eMxFEqAaQ1lqzLbLBxOirlehsGIUb3fIsPglGDciFDDBJMIar
xigAfW5jR4oilAVVq4Tc38r+XFfQpKuQsdKHjrJ/pFL+uagSog==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1qFEEQhSsawQ2bYdWbgIEQhqwXXujeOLPz3zPdDblNniCBqFcKqyA+
gy/tVydLUd1d1adP/fX148+7ry/M7NdrlruHP+FwePh7v8K4/fH76dvTYffl
+wnWP5bOJqtttr311iKdLfbJMnJqJWvCn+wS70urWGtrLICK9spOsEc7Q7cg
Z9uA/IAG9B3WAN/AbQBdoyX2xPsKmeGtieE8PXwjnmfmCzhmK8BmXidFbThN
eBpk5rxFIvcNWnLfs09kubc1HCv2Bu8AZmU7XiRkLVwk0kjkDG60z6o0wrwQ
Z5JE8B4zoR5lAO1cWVrhj/B7TzynJMReNfbkPnO6QCvilborFcM7mZV9sDes
50Tfqf4s5i2+lpuG04JkZdjBUiABZAfDc2aeRaFZ1LLd8poKuj6QRYClA9WT
4w5vr477O59CYL9CF83p/XG6UXzZrrFbrIoq1sfc5+NsBpCJHHvqzdz7NN9y
N6krI7brJTxrTb3iPCrSR/2bkXdneD2PQawTGkFH9d0nM+gn+Dw2dqO+Dkwp
6Se0vEvCtuplgx006Sv9KxefWqH/4F2cVFlPHY4M7BVsjXqw1Uz8B43q0KLO
bfBE+w9/Yl9/
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
f41kYcc=
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42qbV9u2bdu2bZu7r+8nmUwSN+lYpUUQAF1C
/UOVxj0KBwQ07lU19L8o3aFr85bNAzLnaPX/DyTwv4MgKIIhOD7hM0IgJD6i
lEMhNCIjCuwwCItwkEs6PEr4r4s7Aoo5Ior6jyPht4s4KqJhCZYiOgo7D/Ii
BmIiFgo5NuLglws6LuIhG7Ljp+MjARLihws4ERIjE/I7CZIiI/I5GZLjuzMg
BfL6m/M4JXI7FVLjq9Pgi3M5LXL6s9Phk9Pjo3P4g7P7vbM5M7LgnbM6K7L4
rTP7jTM5BzL6tXPilXMhNzL4pdM7H/LjhRejAApiPhbguQthHtK5MNK6CIqi
GIqjCZqiBEqiMdK4FEqjEVK7DMqiFlL5mVO6HFK4PCqgIpK7EpL5qZO6Mqrg
iZO4KqqhOhL7sWuiBhL5kRP6oRO4NuqgLuK7HurjgeO5AeK6IeL4vmP7nmP5
rmP6jmO4GZpjBmaiBaK7G7qjJVqhNdqgMwLQFu1w2x1xy+1x09F8wx1w3VHd
CVF8zZHdBZF81V1xxRF92RHcAz0xGVPQC70xFMNwyeHdB33RD+F80QPQH2F9
wWE8EINw3oNxzqF91kNwxqE8HCE9FiE8AsE9EqMwGsEciDE47aA+5SA+aXoc
xuOE4QmwJmISjls65r866qmYjj+aht864l867J865Fk46Dk44NnY7x+ai+/a
52/a66/a44VYhC/a7c/a5U/a6Y9ahuW4jQ9agZW4jCtYhdU4imNYg7XY4SNY
h/XYgZ3YgPfa7i3YiE3Y5nfa6s3Y4rfa7K3Yhu3Y5Dfa6NfahVfajT3Y4Jfa
ixc6gIPYh+faj2da76c6hCda58da68NY40da7Yc6jge6gIs4gZM4hfs6j3s6
jbta5TNY6bNY4XNY7jta5tta6ktY4lta7Ju6ihta5Fu4huta6Ou4gWta4JuY
76ua5yu6g7uY63t4g7e4jweY44d4jheY7Ud4jCd4ist6hkua5Yua6Qt6ifN6
hXOa4bN6jTOa7tN6h/f4gFOa5pOa6hOa4uOa7GP6gq9Iw7T8hu8Ix/D8gZ8I
wqP6hd+YZPAP/mKij0gwJviwxvuQxvmgyAMa6/0Kyn0KxuAMwZAc470KdCiO
dliG5h6F4W6N8i6N9E5FYETGZCxGYmSOcAxG4Q5F43YNd1QO8zYNdXQO8VYN
9hbFZhwO8mbFZTym5ibFZwIOdEIO8Eb19wYlYmL2cxIm5Xr19Tol41olZwr2
8Rr1dkqm4mr18ir19EqlY3qWZhlmYEYWZwn2cCYW4gplZhZ2d1Z283JlY3bm
4DLl5lLlZC529RJ18WLl4SIFOC/zMT8LcKE6uyA7eYE6er4Kc546uAjbuyjb
uRjbeq7aeI5KcrZauxRbeZbKcqaqswZbuhzLswJbeIYqcroqsTKbuwqbeZqq
cqqauhqbeIpqshaHcwRrsw6HcrLqsh4be5Lqc6IGc4IasCEbuREHchAbswmb
shkberwaeJyac6xasCXruxXbswPruTXbsC3reozaMVB1PFq1PUod2Ym13Jld
2Y0B7MKaHqkaHqHqHq7uHKYe7MleHKoBHKLe7MO+HKx+HKRqHqj+HKCq7q8q
7qfK7qtK7qMh7K2K7qVh7KkK7qHyHsnR7K5yHsWy7qYyDmRpd9V/n7ce7g==

            "], "LeafValues" -> CompressedData["
1:eJxNUDsOwjAMbes8ibFX4BasjKxFHKAVpWIJUoqEuAOHxt+0dmTHsV/87OP0
Gh5d0zTrgc0wfs6ljN9rz8Etr88lz/dLfs/LXE5Ty48/NkiiIjAnEewNKu48
m2DJqILikEhNp6eqCFmFNbEbKLAKt68iVztIRDW1I6A4SpWi14RNflIAVNra
LWaBN4d9z0TNd8QzCHkikkKSqyghpthuMKCGTol8ZftdIuahjRu22XkjYv9w
FhOF
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kstuE0EQRcskIGKMldhZRCQiiRyHRRZ2WDAznvG8uqcltuELghRgFSSD
FOVv+FROXYRG3VOPW7ceXZdff959e2Fmv15z3d0/dbvd/fOXA5TPj78fvj/s
bj/9GKH94apsw6ltj5Mh59ZatJlNbLDCDm1rDdIWf0SaIpX8G1AnfCOQUfFu
b0GWSMlW8m1kq9CTXdiZzcG2sOYWQK2RPKoHF/jOYcltAXdnx+i9HRF7huQs
ObaBCiv7qArewxmwuPSGyJLT4nNrAy6DfQZnByZwt6Ai+Qq0QrrXsg/vFHzN
KeH26tayu/eAGjp8Ed+YfyV9A6YnKpLrnHuFp7MrZfIJvLOX3AnPlWa2wtMQ
0ava//V0sPhkO/tAjxMiAzEFFp9lVN9v6aImrrGlKi3E1MrmHfQglmAX3HNF
DHZNpQNYn+saXw5HCf8Jdd+CyGDwF8r0Uo6b47mhkwSnWz1HhZSUy7NN4Rpz
luoraZKNOkggR2yJz35MzKAeI5ak2nNy1EwkSh401WviD8nnPp+YV5rsFOlC
UQt4fSs3erNWXs/1Sjuxxe5sp5pS1N60ev99zbhiU4M2yiubE9vrVS5hjsyh
184F4v/tZdDkM217JsYafabeAjXmQi31aknfWBP3SUyo6y8rZmFf
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1:eJw9Vns8020bX0rW04mOU8oc0srjiUrodI3qaZFDilZKS0QHNToN9TZPikqM
HJbQOmmFIqeJum1Om6F1kspphIVQT2qKvLf3827/7PfZ/bt/1/d7Xdf3/t6X
gddRV58xBAKBh39aXmkyPhFLgF0ZXW7sEwmM5cJc29xOUBhCu6DnBXBI3d3V
SflAjdl3bG9UF+pPWbmxcdcHxCtLJD0VFCOXptzQfQuKoP7lzoGYoQ7QNlBW
/dtUjLKeT9kUti8TaOdXzO8+mQSMk+cqLDyJVK6Oo+BcXg2iNfqbaowTQEt1
vB/lURuI07b09WySIdbbtecnrn4ElM3fl/25vQ0IIceKbS8+A7/wh08WhcuB
dZqRUm/1FjhnfINupt4FyriL7yyuvAbF058Jsy9KkHjWbsk6z1fgN5t90BY/
uZ5Vd9/4R4Ig0I5VXvoQ6LnP/7QalwbkjLSilIF8IB+PL3SdlQXWU3SHJiZL
UYlOn1lSZxLwqXf3PMX5l5iNCbC37wBKY6YknydHEY/CC6T+CmSeHvtFT6cN
9ec5dMS380C2x+CDMek9aF8L3ZZrVoXEUURZgjQbyIfC163SuwPkRJ7WljHZ
wBef8Ag89A7YD2qC2r73oKx9Jqft1zcjZfiFmOVrqhHro6dGar0YZZWZZNae
/giqOIxsh0u5F0ugZQ3Fds9VGTCJJ3uO765EzKXBU62ULYg7/Y9bkTelYF7s
b/VdLgOa/ctbn9vSgeppNmgQ7AXaFR2ztRqEwMn5QY/D+/xWTXhpiPkyh4ZH
UjH/lg8z7fXdqpD5uI/CqnnlUDLl2urLB54hPvnr+SgtEWp5aeVppMsHBXul
3/WuIkTP4httfioDqvPG4hvVOcDjLI19g/uiqHiT9f1VEwja7qQkc7KB6PjY
LsSxFLEsabvmbMpT8+en34k3clYgVV782ZOe9DWXoIhi/oNWXBeC5Hzf/c5G
4BLHJtpjHFU8xeooH9OkGsQSVT/ZRJIhiueq8YY4Dk0waB3XKQSiR8eFK/nl
QDebu7vZ8IW6D5xizpzew+1A+nEvYC5FhMRm50yM+zSp9IK5Dds0U9X7aBUX
nbv0yyFC16M5dTTPcRYao3xo/HM1Byz/gyjh13MTvnBBhcdfYFDq3VmLIgpz
3E2MSxE3tCrol7wWibda+W7A/DiZbspRnnzBzPQVWuVqvanq6bf4eoZV/0Ng
LTP12tn0BcztL+hkj5QgWvxja/fgBqCbk7lVWG/Ubwveje3Ih9XUxbRs8lgq
rSwn9ZdNBXDmUl0/W8sRHdJ7d7iKkMvsjBmxuL9ik2R93+o2RC+YYtQ0TY4I
207NPy8rQQSa/IoEx2M0jbvu7BYPHNg5Jlr/JRDuG1mZJqQB9cJXC+uT7xC3
MSs/ze4ZlPh6mf7x4w1w4np5j7FO/G4erzXA9VZoP1gnb5MDdYWT1yWMp9IX
f4wyoRWvW9Mto6e+vgf1H1/4HIqrQCydJfIkt5dA/emNGN64H61jV391aEPs
wboDg1gv1kKXxCm7S0D214iN83QB6q+oHhZhPO3CvXbpmlmgCGFrXMX9EDwK
Gx7VjfJq4CEy1iv1HC/doa8M+ksTY2qwbpVPXg2FYz6kaQf8aJ3FiITG/3Nr
fxSwKEtmM+vKkfhRcnH0ompE1eMOt+19APUhgRU5F0Xq/hP8Kn54Z9YDaXPq
TR9cPx7D4HM4ZANPvma5N/6vuKFkEoPlwA43Tr6sVQ+0F3opOaH96nOq0qnf
WrnPetNSFPEx5Nz0CxJE7Zp1mWIZrY6nNDp82v+RGMncLQwPhMeq8f3m3687
w5Egcp1lA4VUBwqi64Opqy8BcVNe8mi+vPu6JdaDTYhtGyq3w/7G6y4Ppksw
DixMOflbCeSiCP2E+0IkCzX9+6jefWAY9X/+iuubtZUf12gbC7ThS/No+LuI
5vv+Gbffo5YdQS1f8Hs/08aOSxsKwSWgkrbPRQyMvmituIEEYFpUTo3EebZM
7jcKqSxExMhP64wbRIgVMUFzvF0sEPZ+cC4WNqJ6XuLRDt+bqISz5PG8wTdA
4hoXTPokUfsWe9vin7VGIqTC0V60RNn/bzlY2xhY5JqLgDjPK/a99mekLH5f
cEGjGjHXadEf6AiBdf3Lbtbpq0Apiz2kOfMNonVfSdTDuErHKG9e9ytEy+id
uLdNhHiF0g/B7A9AD+61Oe1RA8q18c9tTuN+6ds0OeD6KE3CRCuwT5LDosud
sC5UPLIMD+4wMMvBfs9Nab80ANwNT4pu255Xr6v8SqCxaKLl52wgjf1mOWmy
EDGcqfQp41qRONu6x967WK3T+utx5OLteJ2zwmmvYxVqcT84sXZhHbDrhtxH
9a46J6znMUYjxZXAswky2473cQNam6VlQpAVvPcYGElGWUae0r+L8iBrjMeS
ZT+KgRtAeWH4uR2JnTrjRn4IwWXs0IFVlUIUYffr+7WjnSAW9w82Yr8jpSc5
Ju3Bfu2u60CslyKyxrctdaFPgcni/7WzV44YhAtHj54shRKfzZ0p3u8RhZv8
bXRdlWeJXvjVjKE2tY45Pzozz60pBOpXyeUvQbXIGnISRn1FHCu5koBxBfcC
Qz3w97zjC/sarhQgVv/hv1Zi/4jgxUf3Z78Dv0v7V47ik6d1fDv7ZxVSvqc2
/8+XP/xzBKsKWV+bN6ca+5HyxsWGM7hvBGMbmqzsMtCdmAbe7RVA2+CoY8XH
PiR5PGGGdxtS9YXMHIyNVmLdrQ9cHpFXgZShXZvLvhWofVLAZIrtDdOA0xjk
thHrXdASKzGJEiIe3DUMc3qNtEv3jJNHSpDy7aLMb5gnVex7Km/qLfXTfIve
scDxtxBtuDffhvlR3V/aEbfKK5Zi8LMLKTNKakXagiPh7ovxHGAk+mf0PFI4
Y32uSflIFYepwZgTpS9CilIqfcfvVuQy1ef+KZxnf7PmpEWROJ+4vJmrt3ag
+v27fnvh+UrlA+ZeNQeUgWKkfB1sVmwiBO7xpUUUvJ+gm6h0/CVDdNuBu966
UsQ/sdliNeZHn/nZYk1YNqjyV81Xqv7JDmasyl/cDkqO65El8ySI8zZQf30a
5mN2knET32ec4Sdpc9nYhyN3Px3VKfnj0HqysxQRXRMjiJPSQfB18MTo3KPi
p52+IUpgX4uUxKGKSFwPZogU6ZwWAHfXsWdFiyVgrn8u9xj3HVC2hQz7ggL4
uhY+Bi2NiD/52O83aQVgzZgy/+QmPD/cNfM7i+czcoyzydIzX1CLj0bu96Mv
wbzoad+d7c8R/fbjDa7u7UixTLNFOaEIqOCw8YQ/1vdzsk3k/nsgW4aS06iv
EeWM715mHNbdveEwp5hKlPWEkZiM7wvVfcvo3j9n+ogc8R+bJvROLkV0y1q2
7hIpqq9/MkceIEJZB1tvmhjchiymfP/o/cURf2/uX/4fxO526Zzh0QRkb+OA
WTnYt9kdXS7YPxQHC41H9djv27HzyKc6EG9ask0rtgpKbtxTLM0vRZyzxg8O
h/CAoO39ZgJNiGgjrr2zBe+B9vVYs5MyU+0r2q/yrVmrpIg0oOE/Ac9HvLQw
xj1cD1mwl0vnS+wj/49L1goIs6rqAnrPFov8rhrU79jj2pl9G6hVzxZMx9+x
N0Z2zcT5ic+nN0/HfBXRIRuJ+0vV+RO3EGJ78JzP/0A6PlMmRtSrTm0pFKwD
mb55ridCXMfumnSM6yLL/pdUIEQuA1IZp7AJqOEea91+tSJln/BFmX0pEl85
YxuD1zkivZ7J2tWI1CQpb07Hc/NGVmohnpfZ9ms0GkJE6vmfcD05bzy3HLms
vDp+6x9iRPg7bmSGuxAphx9Vb79bC6TpC+3dVjSC7MTusoDhStRSJj21p1aM
/MS0zP09mcAZGLRbe6MVZXWfaToehM/vLksHbYoYCe6O+TkNZlAVT0WNtycO
qn2CZ/DoYTJIkUqPCmnG7Ndlz0Fh2shvOS5E9JVtsZDPB9YP+7Nt2K/+C9I+
2ZE=
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fQOB/B0NwhEBIfMYXhEJo
JENy2GEgx0RYhEN4RMBf53FE5HZk5HIk5PQf53AUREU0ZPdvZ3N0xMAvZ/VP
Z3EsZHZsxEFcxMMPZ3J8JMB3Z/Q3J8RX/4NEyOAvTu/ESILPTopPTuePTusU
SIkP/oRUSI333os0SIt33oZ0SI8MyIi3TuM3Tu1MyIye6IUsyIrXbo1syI4A
pHIO5EQJlEQupHQhpHBuJHce5MUrJ3M+5EcBJHVBJPFLJ/YL/+PCSOQiKIpi
SOjnTuDiiO9njudSKI2GiOsyKIvKqIKnjuNyKI8KqIgnju3HjuVKiOlHjuGq
qIYGiO7qiOaHroEHjuqaqIXaiOL7jux7roO6qIe7juT6iOg7juDbDu9bboSb
bowbDucmaIpmCOsWCOPrDsQ1N8dVh3ZLhHIrhPQVh/Blt0FbtMMlt8dFd0QH
BPcFB3MnBKEzuqA76PPuinOGz7obztjqAem0/+qUe+Okt6IP+qIf+mM9NuCE
/2gABmIQfmswhuC4f+mYh+Kof2oYhmMERmIu5mEURmMKpmIMxuKIx+Owf2gc
vuuQv2kCvuqgJ2ISvmgyPuuAP2kapmMOPmq/Z2CfZ2KvP2gW3muPZ2O332mX
32o+FmCnl2OHF2K732gRFmMJXmsplmGbX2mrX2qLX2gFVmIVVmOzn2sNnmkd
nmqT12Kjn2iDH2sjHmm9N2GdH2ozHmgL7mut72mN72o7dmC1d2KVd2Old2GF
72i592CZb2sf9uMADuIFbmmpD+E4buowbugIrusormmJj2Gxr+oETuIUTmOR
72Ohz+A8LuAsrugcLmuBL+kiLuoKrmK+L2GeL2OuL+gazusWzmmOr2O2b2CW
b2Kmz+o2zugOTmuG7+IeTmm6T+oBHuIRTugpjusxjukJjmqaj+gZnmOqD2uK
D+klXuE1DuodDugN3mKy92uS9+k9PmCi9+oj9miCd2u8d+krvmEGZ/I7fiAl
U/EnfiE+E/A3dmqcd2is/+AvBAMMzTAcY3K0g3GUtys4t2mkQzAkt2qEQ3G4
t2iYwzIKozIcwzMCI3KoN2uIN2mwI3GQI3OgNyoao3OAY7O/NygGYzIW16uf
16mv1yoO1yguV6uP47G3VykhEzEJV+ofrlBiLlcvL1NPL1VSJmMPL1FypmB3
L1Y3L1JqLlRGZmIapmVXL1A6pmcGzlcXz1Nnz1VmZmFlVmFWZmOQ87OTszMn
5ygHZ6ujZ6mDczE387C98zIfZ6qdZ6itp6sAp6kgC7Ewi7CNp6ooi7G1p6iV
J6s4S7AkS7ECJ6mlS7MMJ6qFJ6gsx6scx6k8x6q5x6giR6sSRynQI1WV1dia
bdjM1dnUrViDNdnEtViHIxTg2mzs4arLemzk+mzoQDZgQzbiMDVmABt4qOq7
Cet5iJqyGet6sOp4kGq7OVtwoFpygGq5v2q6n9qyr2q4E9uxj9qzA6u7tzqy
l6q5p4LYmVXdQ13YlVXcXd3YTd3Zg5Xdk5XcVb3YmxXdhxM4kX3Zj/3ZRRU8
kAPYWeUdpEHspHIezCEcymEczvHsqBHsoLIezTIeydIexVJurzEcy3Fsp5Ju
qxJuo+JurWJupUmczKJuqSKewsKeymlsoelsrkIO1Cw20wI21Ww20RzOZUEH
qIDnMb/nM58bK68b6V/j0EjZ
            "], "LeafValues" -> CompressedData["
1:eJxNUEEOwjAM2+pY4sgX+AVXjlxBPGATY+IypA0J8Rx+Stok3aqtbRzHjXPo
X5dHappm2el26T6nee6+170Gt2l5jtNwP0/vYRzmY98q+NNNSIoIpRz5Eov0
r2aZs8FzxEAHSEStRoBGBJJRoEimQ1mlGhIKpkrXsnddhNEJ4+36GyTrFeLS
4Jrmtv21nuHB89zwHalTKE6026ReWuSjWPOFjf3oywdX20RMyl3A7RjOZBxn
sMrl7B84FRP/
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtks1uE0EQhDvESCSxrBBysLCFhYydAxJxDmQ33p3dmd3xSlzDEwQpwAkk
g4R4LZ6QryvWaH66u7qmu2befvl5//WZmf16wXL/8Cft9w9/P59gfPrx+/Hb
4/7m9vsR1j+WrdUWmSvLnBsrse5swd7YBv/OCuvYL+yUfbCxTYhNLFgC1xK/
JvPEetADJ8+u7JJohS/Za7LG4DLWAHoH9wbuyG2BWBJrzajgzTYCtwTlMx98
rR2T0arCS+rwGm7IDmAX4NZ4t8R7Th2jsSO8yZ4T7RkdVq/8lc4JKx4yBm4s
qHkF2rsJ3NgR857n3FLaSyznyersishIuUusjqwBvqw6e5jcF+Ep8Y7sHdFI
PR34BkZXIuFxpd5LjyvmRn1dY3eqKzErMfXCBs4t3L2dw7vE05PlHLWdsc/F
vgO/UA+ubpSymXUsVTvholSYCvukaKvdVZmh6insEc6g/KhOnGcNJnCu0CDA
tKWSqJ5rXrjB04C50H+Z6j95ZCrkBL934/9siSIRzwLWkr6d3X/YGF633zCD
1PogtVzZIC1LfGt1XpA/sCapVcGe9b6VLP81WcrOud+rKA4/bCA6SAF/iXNi
t3i20rXmlqyT65xVa6+eg5hLdeBMBT28on5X8aMqcI3OqMbvPKa2GfyJ2egt
ZuT/B+bGZoM=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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

            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fROB/B0NwhEBIzGBWh0Jo
RGBE2mFwCqcRFuEQHhFQEIUQEZFQAFkcGVEg50VURENMxMJfZ3Z0ZHIMZPQf
Z3BspHcapEUcxMVvx0N8JMAvp3NCpPVPp3Ei/IPESIIfTu2kSOVkSI7vTulv
TuEUSO6vTokvToXPTo1PTuZ0SI+PTuoMyIgcSOIPTuz3zoR3zows+MdZkcjZ
kNBvnR1vnMCvnROvnAu5kQcvHd8vHM/5ENfPnR/PHMdPHduFUQSjMBpFEctP
HNPFUByPXQJVUQ0lUQqlUQaVEcNlUQ6PHN0PXR4PXAH3Hc33XBGVENV3HcV3
XAW3HYBbjuzqqIG+iOSaiOhGCEQtRHBt1EFdhPdNh3M9hHV9hHEDhPYNN8R1
h3JjhHQzNEcTNMU1h/BVB3cLtMQV98Zlt0JbBHNrtMEl0xcNt4N1we3RAR3R
CdJ5/9U5B6EzuuCs/6grfuuMu6E7fqkHfqonfqgXvuu0v6kPvuqUv+ik+6E/
BuCEP+u4B+KYB2EwPmkIhuKoh2EEPmo4PuiI32sk3umw32oM3mgCJuKQx+Kg
x2E8XuuAX2kSXmq/J2OfX2ivp2AqpmE6ZuAknmsmZmEplmE2nmkhnmoOnmgu
5mE+HmuPH2m3F2CXH2oRHminF2OHl2C772ubl2MlVmGrV2CL72k11mAbtmOz
72qT12Kj12GD12MD7mgjbmsTbmm9N2MLbmorbmidr2sHduIErmkXruogDmE3
rmgPLmut92KN92E/Lmm1D2CVL+owLmilj2CFz+sojuE4zmm5z2qZz2ipT2uJ
T+kMzuIVXmOxz+EBHuI8LuAiLmGRT2qhL2OB7+IKruIaTmi+j+s6bmCeb2Ku
7+AWjuk2jmqOj2i2D2uW72Gm72OGD+kRHuMZnmO6n2CaD+opDmiq9+sF9mmK
9+ol9miyd+sNdikMw/It3mGS3+MLvuIDdmqiP+ITdugztmuCt+kbtmq8f2Cc
v2Ost+gnfuE3/mCMQ/EvNis4Q1AwRhskN2mUN2qkg3GEN2i4Q3KY12uo1yk0
12qI12iww3GQw3OgV2uAVykSI3M8VyoKo7I0y7C/ozER/2F0xmA/x2QcxmVf
x2JsrlAfL1dvx2MvJ2BPx2cPL1NCLlV3L1FiJmF25mBSLlZWZmMyJmcKpmQW
LlIqLlQ3L1BqzlcapmU6pmdXz1MGZmQXz1Vnz1EmzlZmzlKQZ6qTZ6ijp6uD
pyknc7EYpyo387AIp6i9JysvJ6md8zE/J6oAC7KtC7GNJ6i1C7OVx6sox6ml
x6o4S7CFx6gkR6u5S7GZR6ksR6oqq7Gpy7GJy7OxK7AiRyjQlViZw1WFAWzk
YWrooarOGhzAgazJWuzAjqzNOmzgdqzLemzLIarPBqzvwWrIQarngWrEQNZ1
Y7bgADVhfzVlM9ZxPzVnX9V2H7VkK7Zmb9VyL9V0G9ZwT1V3D1Vze1Z1d3Vi
N3VjdwY4iJ3ZVV3YRV3ZWVUcpMrupB7sqJ7sxUruzf7soD7sy4purwrux/Ju
p3Juq0EczNFso7IewjJuraEcxuEcwdJupZFsqVJuoVFsrpJupjEcy3FsqhJu
ouJurAmcyEmczCmcymIOVFE3UhE31DQ2UGFPZyHX10zO4mzO4Tqu51zWU0HX
1TzW0XzW1gIu5CLWUgHX1GIu4VLW0DIuZ35X1wqu5FpW0ypWVT6vZl4HKI/X
MLerKJcrK6crKYc3cCMrKrs3MZsr6F/l0WzH
            "], "LeafValues" -> CompressedData["
1:eJxVUUsOgkAMZabvJS69grdw69ItxgNAROIGk8HEeC4v6LTMFCSh9Pte+zj0
z/Yem6aZd9m03fuUUve57HNwnebHOA238/QaxiEd+5CT32wCSIJm9VGvWCto
zWL9suatBeZ5sLQUiDopIp4AJQoEMTtiFX1tnJUefxgoKO6V3rIL1uGFUeiz
skXxIT/EqSqtc4HR4VGUIbdNaxHKGLIbLdRbo+gSYrdXJZ100UqFMKyNNHBJ
fUkqgP8IIeoWP8hCFGA=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk1trFEEQhUtZxRtBxIcQBychJD7sQ7IPydxnuqd7F/Ka/IIIUZ8UVkH8
Wf7DfHUmLNOXupw6dar35Ouv22/Pzez3K5bb+79xv7//d/eay83PPw/fH/ab
6x/PuP1nqfm1Fm1jJftgH2yne7KJ75R1ayO2xN7bzFrZMf7JVpaxR51bPFn+
2Rp7p6zFe4q1sUL5W/tElSzvGTlv7Qp7QdyMrbdgHdaWGI8cqFuQH6k4c6rg
NhOb7ZDYkdxJWK29oYdLeRIYbpvEpQfjDJ4JXwBnBn9la07nVHCmNRE7ZQRZ
OiznnAe7wO59e+cttVvtHTGH5LkK7+GWqO33xL2hnue7Lu7Pyiiw1k+5KxAH
EFznj9I9wc/ZDrCq1OnKvpBxIDWOpGKDv6O/TpwcqwOnEsuI3zXrsTp2pSm1
0trRvL9CPbx4mogr6J3W4Lp/JH4idgR9pqMgrUppFLAcsa7pMYM6UivqbUT7
zO1YrydwSqA4RoD/hqwk3hFrQU4Wm+V9OIML8XPMrI59MkF9dXptjhHFOuMp
7SW3LSzdM2nCo7qIemE+pyxE1+mArFJsltlGeHR2whc0kZmKJd9IpPe6vLud
FK8VXxIzcF6T6TGuwiXxkXftWDs0SUzJ30QmosEy6L/SK9rVHPAv+Ft7BF5X
aNg=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
G3nS37QF/g8IVAzj
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f/fSOB/B0NwhEBIFEUxhEJo
JEFmh0FYxEYchEN4REcMREAm21EREZEgR8ZfR8EfZ/RvZ/AvR8NPp3dMpPMP
x8J3p/U3p3FcxEMipPZXp3J8pHQCpHBCJPcXJ/M/SOrPToxPTuKkSOxkSI4U
SIn0+MepkMgfndAfnBppkBbpkMDvHd/vHM8ZkBGZkBlvXQhZkBVvXADZkB2v
Hdc5EMc5kQuvHNsvnRsvnA/PnQfPnBdPHcv5EdNPHMOPXRCPHN2FEc1FENUP
HcXFUQLHcQIlUQoPfAylUQazMQdlUQ6jMBrlUQH3HdkVEcnDMQKVUBlVEIAh
iOh7ropqqI67juAaqImBCO87DudaCOvaqIPbroumaIZ6qI8GaIhbDuObDu1G
COUbDsR1N0YThPQ1h3BztEBXdMNVt0RrtEErBPcVB/Nl023RDu0BX3IQLroD
OsLqBOmC/+q8O+Ocu+Cs/6g7fuuM++K0e6AneqE3fqkPfuqUf+ikv6sfvumE
++O4B+CYv2oQBuOov+iIP+uwh2IYPumQP+qgR+KAP2i/32sM3mkCJmIs3moc
3mg8XmufX2kSJmMmXmqvp2AqpmGPX2i3n2s6ZmCXn2mnn2qHZ2G7n2ib52Ih
FmGr52E+HmuLF2CzH2kxHmoHHmgJlmIZlmMDNmIF7mst1mEl7mkVVmOT72qj
12CD72i9b2ud12Otb2mNN2E7bmoztmC1t2IbbmiVr2ulr2mFr2ondmE3rmi5
j2IP9mKZL2sfLmmp92OJD2CxD+IQDmORL2qhj2CBL2i+z2uez+kkTqETg3ga
Z3UZV3AGZ3EOZzTXF3Eep3UBpzTHJ3UJJzTbx3UV19CRx3QdN/AQjzDLR3UT
tzDTR3Qbd3AXh3UfhzTD9zDdBzXNDzDVB/QYT1CJlfkU+5WF+/QMz/ECe/Ua
bzDFL/EKezTZu/UW7xCTsfgeu/QHfzHJH/ARnzDRO/UZO/QFX/EN2/UdPzDB
2/QTvzDeWzXOvzHWWzTGmzXawihvkgGSwRiDGxWcITjSETnCIRmBGxSK6xWa
6xSGazXcYTnM4RieazTUqzXEqzTYkRiZKxWFURmNKzTIyxWdyzTQSzXAS9Tf
sRmX8djPcdjXi9XH8fkPE7O3E7CXEzIRF6mnFyoJk7KHFygZk7O756ub56mr
UzAlUzE10zADM7KL0zI95yod56izZyvIs9TJM5WJM5SZ09XR05SV2ZidOdjB
FZmTuViW5djeU9XOuZmHednW+ViQhZifBdjGU9Tak1WYk1SERdnKE1WME1SC
49XSxdnC41SSpdjcpdnMZdjUY9XEY9TYo1Weo1SBIxXoEWrk4arCALZgS1Zl
NdblMFVnDTZ0LdbkUDXwENX3YNXmINVzHdb1QNVjfTZgQzZiIOt4gGq7vxqz
CZuyn2q5r2q6j5qxOWu4t6q7l1qxNau5A9uwp9qxh9qyu6q6mwLcnlXcVZXd
RZXcWZ3ZhQu4kF3ZjXMZpO7swUEczJ7sxYrupN7sw77sxwruqPLuoHLuz7Ie
wDJur4Fsp9JuqyEcylIeyZJuo2FsrRIezhFspeJuqVFsodFsrjEcy3Ecz2Ke
wQlspulsqolsokmczKKewiKexsKeykJurIIOVAE30kzOYn431Gw20BzWVz7X
0zzWVV7PZx7X0SLW1jIu52Iu4VLWUm7XVC7XUE6v4BpW10pW0ypWVQ6vZnYH
aC3XcT2rKJs3cgMrK6srKYsr6l8cKWrI
            "], "LeafValues" -> CompressedData["
1:eJxNUEkOwjAMbDO2xJEv8AuuHLkW8YBWhIpLkVokxLd4IbZjJ2SxnXjGnuQw
PYd76rpu24kZxvdpXcfPZS+H67I95iXfzssrz3k9Tr1cfsUQMZNOImgsJ7Nx
aYbL0ksZUIcAOs6JsuEs5mQ8JzsiSnq5mrJswVRJOsFIlBIQMhxWcoE29TpN
YjzDQsAYqF1KcdeDQLZC/sDaiv6TtVtC+TAibmivyk1rkEpLas42dIhP1Iey
3t/lXx1sjUHalH++9xRd
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtks1r20AQxSeBhCYxxocWQjAJxXYuPbQ5NLI+rF1ppYVek78gBbc9ueAW
Qv77/OYhhHZnZ99787Hz+effp1+nZvbvA8vTy2t3PL68PV9w+HH4v/+9Pz48
/jnhdGC5tCtrrbRoOyvs2iprLFhto23l7+3MvtpgCf+ofbRveHvLWCN7ADnA
buGv2XdoBVvoXGPXcBKIDo+vFZ4GVCdmsi9orLFHm0m/tI19wlqjkTlt+Utp
9Ki1/PewPZsNLI+XiXRiD9PtyHouZo9dUtNAzApshlmBL2E3ZOGejOfWPhLF
q2gVp0PPcyuwt6qy427FKUrTtQO+ES3fs/oQ2QPfXDkMrAPeFu0I11nOiNx3
dgEuqYsJy3uZpB7EiiC+0+UWfBIzCpnI1WstlH9jN9PLuNZSOSZlk+hGULws
hUwVUX0fxW6nt9jhuacWZ3rULdYC3EoTMEwdcR3vrHdkBmcgcqHs58o8gK/w
9JqYoGxnenHHltx0qjlMr1iDjpoB722l+ShBVKp9gU6DxlLRa/U6oZftDvRS
c7nUnNaqyiepnzpY6KU7xZ1z+w6PIVyh
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
/g/o6iZg
            "], "Children" -> CompressedData["
1:eJwViWN4GAYYBu9LbZup3aa27aZ2kzZ10y3tVm6dyq22bdu2bdu2vnfbn7vn
ngsM7R7cPgDoEf0/BIf0KhcREdKnfoz/olp4z7AOYRFBhTv+/8MN/ncAkYhM
FCpaJYtKNJJZcotODHrTh5jE4kfqKzZx6EKw4hIPqRPxSUB6AklIIpKTAlc9
JaauvisJSamjb0rGV9XWF9VSSlLxWan5pDR8VE2lpYY+KB3vVV0ZyMg7tSYT
mXmrRrxRFgpRmKxUUzayk4OcvFZVvVIuClJFuclDXiorH5X0UhUVRH5eqIKe
qwDPVF5PVU5FKMoTlVUxitOAMipBSWpQk1KUpjql9VhlqEBFylKO8pTSI5XU
Q5VQJYqrCsX0QJW5r6K6p6pUo4juqrDuqJBuqxa1KahbKqA65NdN1eWG6hFM
kOqTT9eVV9fUkKvKoytqTBOaclnNaEVuNSeXWpBTLcmhS8qui8qmNmTVBYUQ
Sha1pR1hZFZHMqk9GdWBDDqvQJ1TenUmnc4qrbrSjTNKo3BS67S6c0o/cFKp
FEFK9SCFepJcP5FMP5NUvUiiE0qsvvQjmkW3/vzCRz7xKwNYwUp+43eWkUjH
9QdDGcaf/MVABnFMCTWYBDqq+BpCPB1RXP3NP8xnAcOJoxGM5LBiaxSjOaRp
jGEsE4ilccTUeGLooKLrgKJpvyYyicnsU1Tt1RT2aCq7FUW7NJ2dmsFMZrFD
kTWbSJpDgOZi2q55bBNayCKWsJStki/GfYu++2Z980366hu1nA364qtYzTnO
s4a1bGM76/jsG9jIeq1nnT75Jj76Wm1mjT74am1hK+99ld75DnZynBPs4q2v
1FF2s4e9vPEDHGSF9rGf175cr/wQL32ZDrNUL3yJjrBYz32RjrFQz3yBnvpJ
nvgpTjNfj32eznCWRz5XD/0CF5mjD1zigV/jOpe577N1hVm6ykzd8xm6wU1u
MV13/TZ3eMs77nKPabrj93nAE277Q275VD1mih4xWTd9km74U677M675c676
C674Sy77Ky75ay76RL1hgi74e877eJ3zcTrrY3XGP/OFMYpqXznto4V94zuj
5IyUGKFTPlwn3SzA/tEJj2SR7W9FsWE67kN1zIfoqMewmJbYklgsi23xLYEN
VhwbpCMe1w57PDvkA3XQ/9IB/1MJ7Q8lst+133/TPk9qe32A9ngKS2m/qrz9
olSW2bJYatvtaSytpbP01l+7vJ92eqBlsL7a4X2U0Xork/XSds9q2exnlbHs
ts1/UjHLYTktl+W2IrbV81heK2BbPJ9t9p7a5EG20Xsov0Vog/+oglbICtsP
Wu/dtc6L2loP1xrvpuJWwkpaV632UrbKu6i0ddZK76Sy1lHlrINWeAVb7u21
zCtbFQvTUq9q1aypNbPqtsQb2WKvYTWtltW2hrbI61hda6cG1lYLvZ4t8GCb
7/VtnodqrodojrfRbG+txtbEZnkrzfTm1sLaWjtraa2stbWxlprhLTTdm2ua
h9hUD7Up3kyTPczaWyfrbE3VwZpokne0id5YE7yRxnsX62rdbJyH21hvqDHe
QKP9Xyc45Pw=
            "], "LeafValues" -> CompressedData["
1:eJxVUEEOwjAM25pY4sgX+AVXjlyHeMAmysSlkzokxO9JkzQSbZWknhO7Oy3b
9EzDMOwHCdP8udQ6f29HudzL/lpLflzLO6+5npdRwE0CM0M2A0y9gkVmhWGJ
O6w4MckCUmp1YkJwrM/aYvg/6BHWpLqa/agVIyilod2H4XoNQVPtEwkh23WU
phbRjNsDmkyiVoRX8qe6MzKnrsFIzgIQv8e/hTPwaOZsq3n4bEk/EyIS8A==

            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkltLHEEQhUsJIYtG4gWVIGxkWV98cFR2Z3pm59ZzAV/NLzDg5UlhDYgP
+e/56rAU09NVfepU1ek+//N2/7RtZu/fWO4fPtr1+uHz9wTn7vXv4/Pj+nr5
soX3j+XUCmsstdyC9XZjLWtn+/jRpjZahf2wxGpb4SVWghtBtPiFXdmAN4Io
yCvhaYkcw5iTl+NPwfY2IVoK0dkM/Bl8BacFLCv2h8QjWZlt8Q/wXYJuQc7F
WnPua6ZeT9TtQLcrcAX7kkjDudcYyJsoc8BL2LXC5HgNsU5TOS4nnmO/QMyJ
BLgT1Y+20Fy9shbwVpq5VvaSL1M3qd3CGdn3fBG+Xcy1G2WHdqRanTTrOMk2
+rkqMyzVbpQKrteARdUJzHZM7cr2QEQ0iVhFFw28NbuFcH4DNeaTeTTaAfvE
dmBrxF1Lw5LMwLmr4nxzTibUHNXPT03d6h6cdQpyRBmv6d27Kq30mKnDiv+F
7uO7biPgVxuNC92DM5WaONPUnpXqTgOZOeeePbMvYDN5NVzn4PwtfdXb6IT3
/vydDlTIeDsp655087lTrSuQ+Ua9lFc0StmgFxfwe1UowZ2x+iv6D9J2Xqk=

            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
f7UICB/9V56JXkHw+B8CgUgi
            "], "Children" -> CompressedData["
1:eJwViVOUGAYUBefFtm3btp2NnU2yMTdW08a2bdu2bdu28W7bn5kzZ5I36xTQ
MgTQNdx/CAjsWTw4OLB3jfD/RfmO3YJaBQVnz9P6/9/f4H+HICShCE0SS2ph
CEsZyhKO8CQhKRGISFziEYnKkiopMlFwRSUOFRWN6MSggv6ovH4rJrEop1+K
zU+V1Q+VUXwS8F2llZBS+qZEfFVJfVFiPquEPikZ6clAcoorBSlJRWrSko40
FNNHFdUHFdF7FdY7FVJGMpGL3GSmoLKRnbfKQlYK6I3y67VykJN8eqW8eqk8
ykNuFaAgecnHC+XSc+XnmXKqEIV5qhIUoShPVIzHyqFHyq7iZNNDZVVJsuiB
SlGazLqvTCpHeWYyi3uqwAQmUpFKVKYKYxhLVTKqFrW5q2rcUXUCyKAapFdN
0um20qoOdbmlUdSjPjc1kgak0Q31oiGp1YhUakwTriulmpJC1xRIM5Lrqppz
RS0IoiWX1YpLSqbWtKEtSdWDnrSjPR3oSBeSqBOJdVGduaBEOq+ECqYr55RA
Z9WN7sTXGcXTacXVKcXRSfWmD33pR39OaAR/EVsDiaUBxNRx/c0/xNAxRdcg
omkwUTWEoRzVMI5oOIcVRYcUWQcVSQcUUfs1mn2KoL0Kr3GMZ4/CabfCahKT
mUEYTSG0dimUdmoq0wip6YTQDpm2C22TfDbuc5jLPOaT0BLZAhayVcdYxB/f
wlYWs4SlLGMzv305v3yLNrKClazip69lHZu1mk1aw0b98A1az3p99w1883X6
6pv44mv12dfok6/WNvaxn+3sYCe72MtH380HX6X3vlJ7WKF3vlxvfZne+AEO
slSHOMprP8wrP8JLX6IXvljP/TgnOMkp4tgzP80ZXvLUz3KOO9xlkc5zhSd+
gcd+kUd+iYd+mQe+UPf9Kte4zj2/wV1foDs+XzeZp1vM1W3m6LbP1i2/x31m
6QEPuekzdcNn6BGPue5PeMozrvl0PWearvpUvWCKrvhkveI1l/0Nb3nHe75x
yT/wkU98ZpIu+kRd8C+c96+c8wk66+N1xr9z2n/wk1/8ZpxO+R+cUBbaBBbC
TvpYnXCz4z5Gx3y0QtooHfUwdsSj22EPa+EsvB3ykYpgI3TQI1oki2xRLJod
8OHa78MU1YZqnw/RXo9hezym7fZYtstj204frB0+SHFtoOJZfNvu/yiB/a1t
PkBbPbFt8b+02ZNZcitjZS2FpbSsls1S2SZPa+kstW30NLbB+2u9p7d13k9r
PYOt8Yy22jPZKu+rzJbFVnofrfDslsMK23LvrZzWS3ktly3znspteWyp99AS
z2f5rbsKWDcVtK5a7IVskQdroRexotZFxayzFnhxK2Elbb6XstLWSfO8o+Z6
B83xclbemllzq2CzvYpVtfaqaO1UydqqsrXRLK9m1S3QZnprBVgtq22tVMNq
2gxvqelex+pakBpaC03z5qpn9W2qN1MDC9QUb2SNrakmexOb5E3U1BprojfS
BG9hQdbZulhDtbQ21tZa2XhvoNZWX+O8nbW3ehrrHayj1dUY72SjvY5GeW2N
9GDrarXUw2pqhHez4d7dhnkNDfWe1st6Wx8L0BCvrr7WzwZ7NQ3yqupvVTTQ
/wXB4AL8
            "], "LeafValues" -> CompressedData["
1:eJxVkDEOwjAMRdPYX2LkCtyClZG1iAO0IlQsQUqREAtnx06cNKSNW//62y89
zM/x7p1z607COL1PKU2fy16Sa1wfSwy3c3yFJaTjPIj4lQBdLItIHvqG/oJG
Ji1gVI3LzoK5s90S0noMPntKHcjMvijtVgM1hjKc+28MMhUGRGVaRiW2qX3X
xlVpuW5Gn8LSeqI8j8grvzegjasemv9RrSOY7Jd17YCuNbjyYKP4AVFyE04=

            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1LW0EQxY8SS9UYLPhQirSGoL4UjA/tzb039zN7A77qX2BB7VOLUSj+
9/3NMSy7OzM758zXTn/9vX3clfTykeP2/l+32dy/3e2j3Px5fXh62Fz//L2D
9sxxoEpTZUpa6li5vqvkrFSrZRf6wtlozS7VIw+ch+qwdHg1muE3xpp0yusa
qTZPiT2Hs+JcaKIVa8FbYq3RAz9gu0JfIJfeE80dKXOU3pg4O5CdjkCtQHXY
lhohn9gyMtMh2PV2RYySdQE+9KhhDi5yDkyLNmBrsCR9w6vFmiMl8y9d+0T7
rnmK38qscyN6VxoVNeaOnI51Zr5AR+dqvyRH770mvDS65B6MqJCj/uDJ9QPu
hNdA3LE7mrnjmdla7iu8Er4lHsl1xTRmzrN3rIK7daWDa/zkjgZrTGJPO3j3
jt7qfJvpV09sgVeDFqyZM1oiR46h9dyFZ1xgzcGNqTfB3jD10r1fbSf9Adv7
L5m5px0MOa+Bj19Q4x95NNQTfY56o67PYE+dd+18a3NXzqHkPfNEW//OwrFG
zjf6kzydSrv+bwfuVq5rbFHXfzpAWr8=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
/wUgIAla
            "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufbtNm2bbvNxm72Vtturq27fJ192bZt27Zt2/jeqz8zzzyT
sV2P4I4BQO/ArwgO7RsUGRnaPyTm16jRvU9YeFhkwWIR334vg28OIApRiUZt
a67oxKCYFbdAYnKP+8QiNvvYTxziUp4KxCM+uclDAhKSlWwkopkS01RSEyUh
Ka5kZKaxkpOClKQiA430RQ2VmjR8Vog+KS0flY70BOuDGui9MvJOmXir+spC
Pb1RXb1Wdl4pJy+Vgxeqo+fKxTPVVl5qqRCFyUdNPVV+ClBDBamuJ6qmIhTl
scpRjKoqRWmKU0UlqKySVNIjVdRDBemBynBfZbmnCrqr8gqiIiE0pBKVuaMG
3FYVbqkeVanGTVXnhmpwXeVUk7KqRRnVpg7XVFp1KaWrKqn6lNAVFddlBXNJ
xdSIxrSkFU1oSguKqhlFdFHNuaDCOq9COqeCak0btrCVthRQd/IrlHxqR3vO
qgNh5NUZ5VFHwokgt06rK6fUic7kUhdy6qRy6IS6cVzZdUw96EkvIsmm7+nL
UfWmD99xRFl1WFl0SP3ozwAOKrMGMohNZNJgfmAkGXVAQ/iFX/mRDPqJn9mv
9NqndPqNtPqdP9irNNqjP/mHf/mL1PqbVNqtlNqlFPqPoezUMHYouYaTTCNI
qu1KolEk1mgSaQxj2aZxjGcCW5VQWzSRzZrCJBJoMvG1SfE0lWls1HRmMosZ
xNUGxdFsYmu9NrBOc5jLPOazgLWKpYUsYh3rWaOYWswSlrKM1VrLcgK1SitZ
QQytVHStYjUrFE3LtYZliqqliqIlCtBimTaCFkm+GfeF+uLb+OwLtJvtfPL5
2sFOdjFPH32uPvge3vte3vkcvfUDHGS23vghDjNLtzjCaz/GcWbqKDP0yk9w
kmu89FO88Ok6zTQ99zOcZarOcYGLnOeZT9FTv8QTn6zHfplHfoWHPklXmagH
fp0bTNB9H6+bjNM9v80dxuqu3+WOj9Ftf8BDCtotf8RjRiuPPeEpSSypPeM5
Ue2mv+AlX3BeccM/c91fc83f8JZ3XPVRuuLv+cBIXfaPXPIR+sRwXfRhuuAC
G6rzbnbOo9hZ/08B9q/O+D867dEsusWwU/63YtpfCrQ/ddJjWWyLYyc8sR33
uHbM/1A8i28JLKEd9UR2xH/XYf9Nh/xXHfRkltx+0QFPYfs9k2W2lJbKflZq
S28ZLI3t85+U1n5UOhuivf6D9nhG2+2Dtcuz2E7Pbjksq+3wbLbdB2mbD1RO
G6Ctnsu2eG7b7P21yfNaPstvBayfNnpfbfDvtd6/UyErbOu8iK31orbG+2i1
l7CSVs7KWykrbWVtlZexld5bKzxSy72XlnkFC7JqVt0q2lLvqSVeySpbFVvs
PbTIq9pC764FXsPmezfN85o212vZHO+q2V7H6lo9q29trK01sGBrbbO8i0Ks
kTW2hjbTO2uGd1ITa2rTPULTPFzNrKOaW5haWEub6q1sinfQZG+vSR5q7ayn
TfT21sE6Wri10wQPs/EeqnHeVhHWycZ6G43xzjbau9go72ojvZuN8Nbqbq3U
w1pquPeyYd5CQ/1/j8Pq+Q==
            "], "LeafValues" -> CompressedData["
1:eJxVT0EOwjAMG00iceQL/IIrR65DPGATZeJSpA4J8XuSximwpnGSRba7nx/j
LQ3DsG41jdPrWOv0Pu+0uZT1vpR8PZVnXnI9zBsdVk3CQolYD7FdYU5skKzU
4P/coP3x5K0QagvFJIwjbd4KVGganaPEB1osGxJadeX+zCbkwmAwuZmwx9AN
MdxfS1iGFZYIlm7UqfukiwpTp4eojb7L1B+Jx4QR+QBT6RMc
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkt1OGzEQhYd2W5UqIApVFVWVQrQ0N9yQG/BukrW9fxK39AmoBPQKpFAJ
8RJ9Zr45qSx77TNnjs+Md/776eb+nZk9f2K5uX3J2+3t6699DtePf+8e7rbL
yz97nP6xbKy2M5va2oL1nCprGY76bC0yg3X2k/WLZbBA5MhWjA+gmYwV8d4+
27El+AGtjR1KaZRGBp8JGeCN8Af7CifZBbEOpANZ2QKGc49g11aCN1ZwDnwH
xpUyoxQK6XtGBfcH+zWo+z+Q56k0R+ac1Z2cqa6OOcHLobhrNGtio53Ivd84
8t0jsnN1peoGWIVqjzjsVUeD3kr8knNizthFVTyquojKhOxKfViQ06HnHbvg
tkLKHd69nl7+3XUks0HL7z+VN+9NRNE7WxHzO5IyWmIbNBtUXSP9dxzZB03v
R60bvsE5RzPhpFTd0ZZwMsN70XNulOk6XlvFaUYs061RLxfIS6q5BjsGa1HM
3LrDeuIn8pVZXblh9PTT/wDvW8df5J0rwXq6swBbqPYCJKtvE71EkFf3UhMN
sDyS2QVptvZRL+7uMtnet2z7cGr7zmkKy90mvc5urfA8J+Z/UwljKQ9ed9I7
vUd7UIX+Km/pNF7O
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
XVx/ppEXdbLbfRAGxdqxSWXov3mPYrA=
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42rb7dW2bdu2bdtud1/fTzKZJG7SsUqLIAC6
hPqHKo17FA4IaNyrauh/UbpD1+YtmwdkztHq/x9I4H8HQVAEQ3B0YVeGQEgE
oAtCITTqoC7CICySIwXCITziIT4ioJhjICYioqgjoYgjo7DtKIiKQpajIToK
+q8LOBbyOzby+Y/zOg7yOC5y+7dzOQFy+pdzOCESITGSIBmy+6eT4oez+buz
+puz+KtTIhUy+4szOTUyOg3SIh3SowIqIgMyOBdy47MzIhMyIwuy4pNz4qPT
Oxuy44PTOQfS+r3T+J1TOw/yojxSOR9SOj8K4K1TuCCS+41LoBAKowiSuSiK
4bWT+pWL46WT+IUT+7lLohQSuTTKoCwS+pkTuBzi+6nj+Ynj+rHjuBIq45Gr
oDpqoCqq4aFj+4FjuSZiuhZi+L6juzai+Z6j+q6juB7q444boBma47YbohEa
45Yj+6ab4Iab4rojuQVa4po7oRUi+qpb44ojuA3Cuy3CuR3C+rLb45I74KI7
4oLDuDNC+7xDuSu6ISqjsTt6IDJDuidCeARGoheCuzf6oC/6YQiCuT+CeiCC
eADoc4bPehDOeDBO2xqKYRgO6ZT/6qT/aBR+awzG4oRH47h/aRx+KhDjccw/
NAETcdTfNQmTsQzLccRTMA3TMRXfdNhfdchfNAMzMQuftQCfNBtzcNAfNRfz
MB8fdMDvtd/vtM8LsQhvtdeLscdLsBRvtNuvtcsrsAqvtNMrscMvtRprsN0v
tBbrsB7PtQEbsc3PtNWbsAM7sRlPtQVPtMVbsQ3bsdmPtcmPtAu7sdFhuQd7
IRj7sB9v8FAHcBCXcQWHcBgXcQlH8EAbfB5HcQzHcV9ncU8ncFcncQrrfRrr
fAZrfUdrfFvncEurfVOrfAErfUMrfF3LfU1XcQ3L/BhLfR338QA3cFVLfBO3
cBuLfQeLfA93cUULfVkLfEnz/RDzfFFz/QhzfEFP8BSzfV7P8Bwv8BKvcU6z
fFavcEYzfVozfErT/Rbv8B4f8BHf8B3TfFKfcEKfcVxT/QVT/BWTfUw/cFST
fEQ/cVgT/QsT/Bt/cEjj/ReBPiiQHOcDCsL9CsbgHOugHON9Gu29GuUQHOmQ
HOFQDM09CsPdGu5dCsedGubwjMCIHOodGuJIHOztisJtGuStis4YHOgAxmQs
FmUxDnBs9ncKxmFc9vMW9XU8xmcCJuRmJeUmJeJGJeYG9XES9vZ69XIy9nRy
9vA6pWQqpmYadnc+pmU6dnNepmcGZmJmdvVadXFGBniNsjArOzsPszE7O3m1
cnCVOjoXc3KlOniFcnO52nuZ2nmp2nqJ8rMAC3KxCrEw23iRWrsIW3mhWnqB
inO+arE2S7AkS7E0a3CeynCuWniOyrIcy3O2qnGWmrsCm7kim7oSK3OmmrgK
G7sqG3mGqnO6GnqaanKqGniK6rAum7MF67E+63uyGrAh63mS6roRm3Ci6rgx
a3uCarkpm3G8ajpQLTlONdyZrdiabThWnThGbTla7dieHThK1T1SHTlC1Txc
VT1MVTxUlT1E3didlTxYPdiTFT2cvThIvTlQFTxAfdhf5d2X/difAziQQziU
5dxPg9hXg9lHZd1bw9hLZdxTpd1DpTyCI9ldoziaY9hNJd1VY9lFJTyOgQxQ
cXfWfxExJOs=
            "], "LeafValues" -> CompressedData["
1:eJxVUEsOwkAIbeGRuPQK3sKtS7c1HqCNtXFTk9bEeAqvLAwwaj8w7wEPmN1w
767UNM26UdP1z8Oy9K/TVsF5Xm/TPF6O82OcxmU/tEq+1UDgn76iB5gTZwo2
b5YhSSCsh8xEkiXIl3UxL0iTCsa3XmQ/M0Dawx5SaEcNMAlaGGLJyeSvfTAR
kTq8xzm2y9FzowjXzX0Kb1/r8ZOMKhqNkHpSdUqYmW16BlGWqSxz2YfKRqmg
IG4snMIPvDQTnA==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJxVk89uFDEMxr0IJAoUdQuHlVh1qUqXI+XS+ZvMTCYTiWt5giIVOIG0ICEe
infk549eUJTE9tifP9uZ80/fbz4/MLMfjzlubn9Nh8Pt749HKB++/bz7cnd4
f/11hfaHo7M1u7bIruyhPbPZsk3IxQakAb2yHavgs9iIPtmWmMVavCc8ImfE
EhVdbIN3Qhrwme3cLsFJfL0iOpIjWI+0YG3skfItICb8T4h9AlLA2nBmbs/q
uQd4JEU5pxqEmhVAd7QVth4ea+KKeCZ7gTRzZzsWz8JK7AnrKI9J5/7e27XM
KtRRQB7Zr+RbY30KQkI+4dwgD+J9qRivZseOdsFZUU0vpjt4bcDasmatIi9n
ku0tcWvVn+GQxTpweicrdWGjajph9dxezRl7C4tG9pmuekdGIgLZ9+pchvFL
9Ii2KDJi9ewtknfxDdoxUhJ+Jf4tOD1RjtZpHq4Vobwj3idwyvwKvnv1xbu+
Ui+LsCZNbNbEBvV5uJ+gY+746nIA/UxvYtA7GZl5stdk2yvaO9tpYhfC8he2
BfGIe1QdPtF/zJ7r7UWiPWOnar2rE3LWWsRmUc+L8AOrpZZBr7yjl6fiFf+L
SHoJbr+CedDkr8ne6C27T6OKHdv/nRa2gbvWu57tLzjSaU4=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
Ek8s/Vn00+YC+D/RYwWq
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm13a3drY2vbtm3btm3btmfu7id5eUnSuENA82AA
Oof5DwGB3YsEBQX2rBr2vyjTvkuzFs2CsuRs+f9fS+B/B0NwhEBINEQjhEJo
1EU+h0FYZEJmhENeR0BE2OEh53Ek5HZU5HJk5HQU5PBfZ/cfR0N0xEBMxEJC
JEJsxMFvJ8Avx8VPx8MPZ/N3x8c3Z/VXZ/E/SIwvzuzPToKkSIZPzuTkyOgM
yOAUSImPToU0SO8PTo33Tue0SOt3Tof0SOO3Tu03zojXTuUsyIrKSOlXzobs
SOGXTu4cyIlcyI0KSOYXTuo8SOK8yIfnTuz8KICC+MeFUQTPXAhPnchFUQyl
kdBPnMDFUQIlEd+lEM+PHdePHMdlENtlUQ7lEcsPHdMPHMMVEd2VEM33HdVV
EMUBqIp7roa7roM7ro7broGaiOxbroWbro0bjuTrjuh6qI9rjuCrboArDu9A
NEZ11mATNMVShHMzNEdLtEILhPVlh/Elh3ZrtME4jEdbtMMohHJ7dMBADMJF
d0QnhPQFh3AQOqMLgrsbuqMrgvm86R7oiXOGe8E66944Y+m0+6Av/qof+uOU
/2gAfuukf2kwfmoERmIIfmgovmsYvmk4vuqEv+i4P+uYP2k0xuCoP2osPuiI
32sCJuKwl2ASJmMB3mkK3uqQ52AqpmE6ZuCg3+iAX2smXmkWXmo2Xmi/n2su
nmmf52E+nmqvn2iPF2IRHmsxHmm3H2qXH2gZlmMFViIao3OnVyEq72s11mCH
1yI872kd1mMD7uokTmEjNmEztuA4TmArtmG7j2E77mg3bmsHdmIXbmmbb2qr
b2gP9mIfrmuLD2Cz92OTr+kgDuEwruoIjmKjr2iDL2u9L2mdL2qtL2iNz+s0
ziAMw/IszuEGbuI8LmC1r+EizukqzuoSzugyTusKTmmVT2qlT+g6jmuFj+kW
juo2jmi5D+sO7uIeDukxnuA+DuoBHuIRDmiZ92up9+kpnmGJQ/M59uol9ugF
dmuxd+kVXuMN3iIUd+od3iMYg/MDdugTtmuRP2Kht+kzvuArvmGBf2G+v2Oe
f2Cut2qOf2K2t+g3NusP/mKWhZneJGOjwA0i12uG12m612qaQ3CqQ3KK12iy
V2uSVykcV2qiV2iCl2u8I3CcIzISlykyo3Csl2qMl2i0FysGY7I4S3CUY7EI
izI243CkFyku4zE+FyofFygBEzIR5ysJk3KE/+FwJ+Ywz1MyJudQz9UQp2A6
ztFgp2QqpuYgp+FAz1ZaztIAz1R6ZmBGZmJ/z1BmTldOTlMWTlVWZmN2TlE/
52BfT1YfT1IuTlRuTlBv52Ev52VPj1d+FmAPF2QhjlN3j1U3F2ZXj1EXF2Nn
j1aQR6kkR6osy7EUR6iTS7MMh6ujh6mDh6q9y7OdK7AiK7GtK7ONq7K1qzCA
Q9TKg1WNg9TSA1WTA1SbdViL/dXC/VSX9TiN01mfDTiZU9iQfdWTvdiIgWzM
JmzurmzKPmrmlmzqZmzOFmzi3mrsXmrF1gx0T7VhD7VlO7ZndzVyF3ZgRzZ0
N3ViEBu4M+u7q+q5i+q6s+q4G7uzB2s7SLXcSb3ZhzU9kH3ZjzXcUdXdn9Xc
QVU9gAFur0EczCoewspup6Fsq2EczhEcyUoex4oexbFsowoezTFsrfJupXJu
qfFsoQmcyLJurklspjJuqqlsotJurFIO1Aw20lo21Ew20CzW12zO4VzOY0nX
UwnX1Xwu4EIuYnGvYTHXUVEv5hLW1lIu43LW0krW1ArWUBFXV2GvYiGvZkFX
UwFXVX4H6F8JImLM
            "], "LeafValues" -> CompressedData["
1:eJxNUUEOgkAMhJ1u4pEv+AuvHr1ifABEJF4wARPjp3yjs9t2F0pL2lmmne5x
fPWP0DTNdmDoh895XYfvtWNyW7bnvEz3y/Ke5mk9jS2LP4YYhQ9jfukpA00c
cUARQYpAwiQAQeiB9ag0DGqaK4fzV8TaZfb86/6ceEO1nGPHlDp76gWg9iqs
sRX9Kn3loKfBOX2OMExlQVLZkjKCyxPYhN4oVrm+MBfpGmwTsSxaijCFoFAl
8t3AbsDu5g8/zRQ6
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkktLA0EQhDui+Aqi4CFIMMoGBT2oF/eR7HtnwWv8BQo+TgpREP+9X5fL
MjNdMz3VtdVz/vy5et0ws68dptXTT71eP/0+7gIePr5f3l7Wd/fvI9Ab09hS
W1jHCLa0nqgmzi2zwmJwzHnLXkrsqGW/F05tprNAdmK3fA1xaRXjFJ4UXLM2
5LfsXpFRgHy3pUZNVFHTGW5hTtjxLyP2GqXqt+Bc2T0ZCThndHbN+RKGQqgA
d7pdSmfFSaRqXmtbTKluZ9SqUN5Ltd89Yc3hOiOrUp0pio6Zt4R6WFrmyG4G
9kbaG+7k8mEuJc7i/57IB3eg5Uvg7ZiDFGTEwQ7IrMWeyXVXPkdtzqjtCFyR
40662wFdtZws0B3k7Kb6U6Ap435pF/QxkH9nE4ZrKsiLpGDPDolLdrxaI/al
tHjnRmjzri/B7uhs6NA/qytaqP8RfhwSTzgZw+AvJhpUjOV4UFf91WR6J6ne
TFCUs9MMWTFMCaom6mRDnX25k6hDl/AfsBasCymL5etUChP55326VB8y/WM3
3I/tD295Wic=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViXOcEAYcR98vX7Zt12Xb7i77rq4LW7ja8toWh9yWbdu2bdu2f9+1f977
vM/LENo1qH0koEeM7wgK6VU+IiKkT3DA96jepWdYeFhEYJEO//9wg/8dichE
ISpnOEs0olOdGsQggPJUICaxyE4OYhOHpCRDqqu41FE84uOqrW9KwFclJBGJ
SUItfVFNfVYNJScFaUnHJ1VXSlKRmjR8VDV9UFW9VxWlJwNZqax3yshbZeKN
KikzFfVaWXilCnqpbLxQeeUkF8UpwXPl5pmKkIe85KOcClNW+SmjpwrkiQpQ
kNJ6rEI8Uik9VEkVpYQeqBj3VVwlKaZ7KsVdFVVpiuiOynBbZbmlctxUYd1Q
RSpRSNdVUNdUmSoU0FVV5YqqcVmBqkkt1rKO2tRhBjOpSz0i6EF98uuS8imI
YBrQkB/pQiMac1F5dUFNaE4Lzqsp59SMs8qjlrSiLbnVmlwKJafaEMIZ5dBp
ZdcpZVM7wmhPVoWTRSeVWSfUgePqyDF1ojOZ9AMZdVQZ1JX0OqJuHFY6HVJ3
DiqtevITP5NGB5Ra+5VKvehNH/qyTynVj/6M5x8G8AtjSaGB/Mpe/c0eJddv
/M4gBjOM4QwhmXYrqXZpKDuVRH+QWDuUSNv1J3+RUNuUQCMYyVbF1yjiaTRx
NYY42qLY2qxxbFIs/csENmoiGxRT6xWgdZrEZGJoCtE1lWlMJ5rWKqrWKIpm
MZtVrGYOc1mtyJrHfJawlAVE0iqZFoIWIV+pxayQ+zKWs1wrWcE3X6avvlRf
fIk++2KtYZE++UJ99PVsYD8HWKCN7OSDb2Iz87WFrWxjnt77XG1njnYwW+98
lt76LnYzU298hvawl9c+XfuYplc+VQeZomMc4jCTdYSjvPRJeuET9dyPc4KT
PPPTPPVTPPEJeuz/6pGf4zwf+MgFLvKPXnOJh/6Cl1zmCld54A94yDWuM143
uMVtbnLfx+me3+Guj9U97nLHx+i23+eWj9ZNH6VHPOEpj7nhI3XdR+iaP+M5
f+uq/6Ur/qcu+ysu+R+66G94y3Bd8He8Z5jO+1Cd8098ZojC7AtfKWEl7RtO
GjvrAktuKczsjA9WFItkpz2ynfJBOulR7YRHs+P+u6JbDAuwmBbLktgxj21x
LIEltLh21H9TfItnR/xXHfaBOuSJLLH9ooM+QAe8v/Z7PyW1vkpmfbTPe2uv
p7Q9nsp2e2rb5b2009NaOktvGexn7fCflNGKWFHLZJkti2W1AlbQeiqbZbcc
1kPbPadt89yWxyKUy7prq+e1fNZNWzy/bfauCrQu2uQ/aqP/oA3eWYWssK33
TlrnxWytd9QaL26rvYNWeSkrbeFqa2WsrNW0WlbOVnoFW+Hlbbm31zKvaJUs
TEu9slWxqrbEq9lib6dFXt1qWFst9FAt8NpWx5pbC6tr9ayxzfcQ1bcgC7Y2
mucNbK63ViNrpYbWUnO8hWZ7czWxZmpqzWyWN9VMb6KW1traWCub4Y013Rsp
xEJtmjfUVG+gKd7OJnuwJnmQ2lt9hVs9TfT/ACDz1wM=
            "], "LeafValues" -> CompressedData["
1:eJxVT0EOAiEMZJmSePQL/sKrR69rfMBuxNULJqyJ8feWtrAIpDDTdsoc5td4
9865dcdhnD6nnKfvZc/gmtbnkuLtnN5xifk4D0w+OFAI9RCvcoUeB+HKgRDC
QGssq13yUpYsTeSVAEA0mKo1mbA0Fu0+BaoZG7r9TIW5ouJuXAmwn1D43628
maJq0qzKAnyx51nHhm2WWplOBJQU0aZcGcUQ5wX8AJ6vEuQ=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkstKA1EMhlMtxWIVHTcVu7DUupW6cO7nzJkbuK1PUKHqSqEK4tv7JQxD
TpI/92SWr1/btyMR+T7h2e5+w+Gw+3uZojx//uzf94fN08dINZ6VZJLIqXRS
SS8OrZalXEuKNJIbucRyLAFbI5F4/C+kRSuhishOxsgRvINviMrxctBIHvCo
pJBz0NT8C7mF5+SreWfgM/SCWC8xaLDIM6wZUgVv8EtlTqUcCkPVhh4WFteh
eTQHVuLTgCxkQrz2qZY1eMDSYsuI75hvxevAepAIa8WkMdUi66203hwRmmGM
NIHP0TLLUdqEmjPm040lll+3klpHDXiKx5qvR56CaIeJ3IN6IlroyrBgU3V2
gRnUMZeH34FG1nvPLI9Ws7Q6GVZvm9Gee7tcNkyYGOKgYFvVzjR3itQP+9Oa
sfm21Gptj878c+TGJtcY9a4tqrBMOm1if0Jqt6jB8yFGc/TD/bRGazcK+OnV
dUa9jE7t7eLedhRsUs2n3vqPtPIP2WpTyA==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27ZtW6+2bePV2tq2bdu2bdu279n2J5lMEjfuULl5EKBz
qL+o3Kh74cDARj2rhP4bAe27NGvRLDBzjpb/foDBPwchKMEIzjWuE4KQrGEt
oQjNdGYQhrBkICPhCE8iEhOBuopMFCISCamOXLUVlVr6owREo6aiE4Pfiskv
1VAsqis2cYhLNcWnquJRRT9VWT9USd+VkG+qqCQk5asqKBnllYpySk5ZpaCM
vigln1VaqUlDWgL0SaX0UelIT0l9UAllIjO9Ka4sZKUq1chGdvJTgPcqphzk
JBe5ead8vFUe8lJUb1REr1VYr1RIBSmospSjEIV5qSIUpwRFKcYLFdBz5VdJ
8qk0efVMpQggj54qt56oDI+VS49UnoeqSAVy6oFyqBLZdV+VqUI23VNW3VUW
3VF1bqsGNalFbTLrljpSh7rUI5Pq04CbyqiGZFAb2tKIxtxQejUhnZrSjOak
VQtacl1pdE2pdVWtuKLWXFYqtSOl2pNCl5RcF9WBC0qmTgRyXp05p250Iam6
kkRnlVjd6UFPEumMenFaCXVKCdSH+OrLf/SjP0MZxgAGMoh4Oqm4OqE4Gkxs
DSGWjiumhjOCyUxhJDE0ngkc0yiOajRHNIaxRNc4oumwouqQJjKJKDqoyDqg
SJpKRO3XNPYpgvYqvPYonGYyi9nMYbdWMJewWswS5hFG81nALoXWQkJpESG1
UyG0lODaoWVsVzAtJ6i2KYi2aiWrWM0WmTYLrWM9m3SKDcj34r6RTWxmC7v5
41v57Ru1k2388g3aznrtYJ1++i5++Fp99zXaw2p9833s5wBffZWOcJBDrNRh
VuiLL9dnP8oxjvPJT/DRl+mDL9VJlui9n+YMi/XOz/LWz/HGz3OBRbrIQl1i
gV77fF3mCq/8Ki99nl74XN3gEY+5yXO/xTO/zR3m6Knf5Ynf4z6z9dhn6QEz
9ZAZeuRPeEoRK2rPeE54i2AveMlXvvGK10zXJ6bpob/hLVP1jg888Cl6z2Td
90n6yETd8wn6zBfu+njd8e/84Be/GafbPlY/GaNb/gcniAW10RKjdNNHChsh
s+G64cMUzIYquA3RdR+sEDZIIS2UhbaBCmMDdM37K6yFs6veT1f8P0W0AlbQ
Illki2JRLaElsmh22fsqlkW3GNZHMa23LnkvXfTYFsd66oLHtXjWQ+c9viWw
7jrn3XTWE1sSy2JZLamd8a467cksuXVRCuusTBaolJbKUlsaO+UZ7aR3Ulrr
qHSW3jJYB53w9jru7XTM2yqztdFRz2bZrbXyWA7LabntiLdSLmupw95Ch7y5
DnpeO+DNlM/y235vqn3eRHu9sQpZYdvjjbTbG2qXF7PiVsJ2egPt8JK23UtZ
gNXXNq+nrf4/nO2bIQ==
            "], "LeafValues" -> CompressedData["
1:eJxNT0EOwkAIXAskHv2Cv/DqUY81PqCNa+NlTbYmxt8LU+i2DSwDwwDH8d0/
u5TSvFfXD99zrcPvdlBwL/NrKvlxKZ885Xoad5q8qhO2n1nwdQqEYeoJIRgg
CfIEQxhs0GmRCiYqm3aHIYWRocJtheUB5nUXMXWn6xjiVmXejHWhpmRmDT6U
rFWcZgXNCMW95KesCzYsETsgjj39Ps39AU2GEk4=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kttqFEEQhms0AcMuw0q8EBliwmpuRNjcOOdTb0+Dt/EJIkS9UliFkPfx
QfPVbwzN9NThr79OffH11/W3Z2b2+wXX9c3dfDjc3H85Qfn888/t99vD1acf
GdpfrivrrLTBGuuttYoT0Qv+tb3GkluwLZgR2REzd+BEYgY7xr5w1vwH/iV+
v3vbIE3EdcgjfB6Z42st2Ruwr9AzfCXeI3vL3VHDYJdIFdYENiPLKOYNd7Tn
tifCOR0XwARi/mftkV0/wz6pogktYU9EJFCdWDLl97pr+wCjy3tyJu4J9IJU
PfXkud7hGZnGQp5ATK66E70MIAuQC/4TeUdYGzpqyFSAcezMP4k/8O3wnPKP
oFayev5Wk+9hdFSrjpzLa18hzbC9RM6xee4dGK9tQq8V2aiXSgynYGvtYMGX
8NXa7RamnhifxjGegH2nKdX2Hu+les9gcG6vqaN7tzTiD/Dtdf51FLWnqG5K
vLOdyz5xfHYbbcd38JH4Up7EJGu9olnVjHi2oIMmOlOD520e6+7grrGMmmP9
OKNKr62HqZOv0NuMHI9dseEEZ9QbONImgyJ8hmtlzsH1ek8+jyBm7zaqwwK0
dzXrlTjrWjOqsJTaVgum0GajNvAAA/Zk9w==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
fieNtMvYvqcU/wOuPunb
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fQuB/B0NwhEBI9GU/hkJo
fMQn2GGQGmkQFuEQHhEgp0BEZPVfZ3EkREYURMUfZ3Y0REciZPJvx0A8xEdM
ZHQsZHBspPcvx0FcpPNPp/UPp/F3J8A3J8RXp/Y/SOXESOkkSOGkSIbkSO4v
TubPTupPTolUSOKPTuy0SIdd2I30yIDVWIOMyIRx+MeZkQXd0QMfnBUFUBDZ
kB3vnQP5kMg5kdC5kBt5kMDvHN9vnRdvHM/5EdevHceFENuFUQSvHMtFEdMv
XQrFUBwlEMMvHN0lEc3PHdWlEcVlUBblENnPXAPlUQEVUQlPXR2VEclPHNFV
UBWPXQ2PHMEPHd4PHM41UQv3Hda1EcZ1UBf1ENr3XB93Hcp33AAN0QiNEdK3
HcIBaIJbboqbboYbDu7rDkRztMA1t0QrBPNV063RBm0BB6Ez2sFqD+mKO6Aj
/uqyO+GS/+iiu+CCu+G8u+Kcf+usf+mMe6I/BuC0e6E3fqoPfuiU++Kk++GE
v2sgvmkMvuq4B2EwhmAohuGYR2E4vuioR+CIP+uwR+KQP+mgR+OAP2osPmi/
32s83mmfJ2AiJmEypmAWZmMq3mqvZ2IapmMG3miPX2u3X2mXX2oOXmgZnmsu
nmmn52E+FmAhFmGHn2q7F2MJnmibH2url2KLH2k5HmqzV2AlVmGTH2ij72st
7mkb7mqD12E97mgDNmITbmu9b2mdN2MLbmorbmitr2uNt2MHrmm1d2KVr2oP
9uISLmMfrug4Lms/DuAgDmGlL+kwLmqFL+gIjmK5j2GZz2upz+kEzuokTuE0
zmCJz2ixT2uRz2Khz+E8LmCBT2m+L2KeT+oKruI1Tmiur+E6bmCOj+smjmm2
j+oWbuMO7uIljmiWD2um7+E+HuAhDukxDuoRDmiG9+sJ9ukpnmG6n2Oa92qq
X2CK9+gVdmuyd+kN3uIdduo9dmiSt+sDtmmit+ozvqA9O/ArvqEyq/A7tugX
fmOCf2C8f2KcN+sP/mKsQ1LYJGOjxniDRhskg3GUgzME12uk12mE1yoUQzMM
1ygCIzIsV2u4w3GYw3OoVykSIzMf8zMKozI1Vyoao3OIUzIGV2iwl2uQY3Kg
YzE24zAu4zEBE3KAlyk+l6q/lygR/2E/L1ZiLlJfp2AfJ2FvJ2UyJmcvL1RP
L1APz1d3p2I3z1MapmU6zlVezlF6ZmBGZmJ25mBmzlZXZ2UXZ2Fnz1I2zlSQ
ZygnpysXp6mTp6qjc7OD87C9p6idJ6sAC7IkS7EQJ6mti7GNC7MIJ6q1i7KV
J6g4S7Clx6uFx6k0y7C5xyrQZVmeFViOY9TMo9XUo1SRldjEIxXgEarKamzB
lmzs6mzKZmzkGmzomqzF4arNOqzLemzgYarvoarPIarnBmzIRqzrwWrMANbx
INV2E9byQNV0IJtzgGq4v6q7n6q5r1qxNduwj9qyt6q6l9qxp6q4hyq7I3uw
JzsxiJXcXZ3ZTV3YlRXdVd3YRd3ZWRUcpPLuxXLupN7sqLLuwzLuoP4cwMmc
woEcxImcxMEcwtIezaEcxpFsr+FspxFsq1Juo5JurRIexeJupTFsqWIey3Fs
oaIezyKewMJurkIOVEE301RO40I21XTOYAHP50w20WzOYX7PYj4HaC4bK6/n
MY8bKbcbKpcXMKcbKIcXcTHrK7uXMJvr6V94i1DV
            "], "LeafValues" -> CompressedData["
1:eJxdkEEOwkAIRVv4JC69grdw69JtjQdoY23c1KQ1MR7IewozQBNThsIAD5jD
8Ozu1DTNulPV9e/TsvSfy16d67w+pnm8nefXOI3LcWj18qtKRAABM9hMk/KZ
wHRNEHEPcQ0SyaRQQGUYjUEkzIplqKunCCpOKpvFK+DducTEQd4hJ0MmZriA
g5cz/yuU3rmgJMqtKA341loLueaQNTIOcb6BWYTWApxUbE+R/5g1ty1Txwhx
PAPbtqXPD5FSFB4=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kt1KHEEQhWuDSNR12UAujC5R2ZjLuAbMbk/P//QMeGuewIBJrhLYBMSn
yavmqzOLDNVTXXXqdP1dfvt9//2Vmf15zXH/8NRstw/PXw+43P36+/jjcXvz
5eeE2z+OE8vt0nqL9sla62xipW0ss7UV/CPehPeNNdivQQRuPT6P2OjMud3a
QMQMreY/gHZvhVbB5RLQA/ElvsC3BtmjO/tgZ6Dd/07Rzn/FGeCu7ADkGNcL
XWMr7YJcAxJtpfcCUmN9r5eWRAzCnSLO6AylveXfcutg8voKVZpAdURPYYt4
3eL5reBJip9Se4EWYfdIrzPt6utAldyDvC2RUZiBzP2lDN3PufKo1LUK1Bxt
CbaxIyy5LZRjAlWDb8SU22dZa6yHWBdwtersUjlcYzskuxqeiq+hA15XrZxL
O4cv55apfy2+HKRX/QHUCktGp/2M6onPaooE/AO3cdINXyH2DEzSJLz2GZJe
xKvu8Kw0pYoI34L6pRtX/Fve93qOdnPLdjP26a31XkNfWm3D2o5BLdjIqI5s
bE87M2FnC+3daBlf69XXBD5q3z6qSp9eh/hcxp75ZM/E14thH22+258Nvn0i
I5G53fCOdyNper14GvIahPVpz+w/GQRl1A==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f+fT+B/B0NwhEBIFGUxhkJo
nMN5hEFuL8QihEU4hEcEJMI/sCNCzuW/joTIiIKoiIY/TojoyOlYyOEYiInf
zu5fzubYyOo4iIt4iI+fzuIfToDvzuxvzuSvzujEyOBUSI0kSIpkSO8vTo7P
TucUSOuUSONPTu00SIvCSOV0SI98yI+PzoAsyIqMSOlMSOEPzoz3Tu5syI53
Tua3TuocSOKcyIXcSOw8yIs3/sevncivnNAvXQAvnMDPXRCFEN/PHM9FUBTF
UBxTENclUBKlEcdPHdtPXAqPHctlENNlUQ7lEcN90Q8VUBGVEN2N0BiVUQVV
Ec01UQvVENXVEcU1ENmPHMm1UQd1EdEPHcEPHN71UB/3Hc733AANEdZ3HcYB
aIIe6ImmaIY7Du3bDkRztMAth3JLtEIHhHRrtEF7hPBNt0U7BPcNB/N109cM
d0QnXHUQusDqDOmK/6oruqE7/uiyf+uSf6kXfuqif6g3vqsPvumCv6o/BuC8
v+icB+Ksh+OMB+G0B+OUh2AoPuukh+GEP2kEPuq4R2IURuOYP2gMxmIc3uuo
J+CIx+Ow3+mQJ+KgJ2Ey3uqA32gqXmsapmMGZmK/X2kWZmMeXmqfX2gO5mKv
n2uPn2m352OXF2Cnn2qHF2MlVmG7l2AplmGbn2g5HmsFHmmrH2o11mA/DmAt
1mGL92E9NmA39mAjHmgLtmIT7muzN2OT72kb7moX7mg7bmsHbmmjd2KDb2q9
b2idr2svrmmtr2qNr+ggDmG1T2GVD+MoLusILmmlL+oYLug4zmuFT2C5T2KZ
z2mpT+MMzmKJz2qxz+gCLuI9PuASLuMdTusKruIZnuMarmORn+AGTuke7uMm
Tmqhb+E2TmiB72C+72Kej2uuH2COj+khjuoRHmO2j2iWD+spDmmmD+oFDmiG
X2K69+sV9mmaX+MN9uot9miqd2uKd+kjPiELs/IzviAiI3Gyv+IHduobdmiS
v2Oit+sntukXfmOC/2C8t+ovBGOLxhkc680iNykYgzMEQzIMNyoUN2iMQ3O0
12uU1yks12qkwzE8I3CE12i4VysyozATVykqo3GYV2qoozM9VygGYzIWlysl
UzE243CI4zIe43Owl2mQEzAZl2qgEzIR/2FiJuEAJ2V/L1E/L1ZfL1JypmAf
L1RvL1Avp2ZPp2MapmUPz1d3z1M3z1UGZmRXz1EXz1ZnZ2aQZykbs7OTZyoH
czI387CjZ6iDc7G9p6ud8zI/C7Ct87GNp6kgp6owp6gQJ6u1J6mVi7ClJ6o4
S7CFp7EkS7Ezu7C5S7MiK7EMJyjQZVmO5VmB49XM49TUY1WZVVibdViVY9TE
1Rjg0Wrs6mzkGqzJWmzoUWrgkarLegziCNXncDVgQ9b3MDViY7ZkKwawCeu5
OZtyqOo6kHXcjLU9RLU8WC04SDU9UDU8QNXdmm3Ylu3YX+3ZT9XcV1XdgR3Z
R53YW1XcS5XdU13ZjWM5jpXcnaM4mj3YkxXdi4PYQ73ZhxXcl/3YXeXdTf3Z
VQPYRQPZWeUcpLIezCEcymEczpHspDLuqNIewVLuoJJurxIew+Jup2Juq6Ie
zylsowmcyCJurUmczMJupUJuqalsoYJurukM1Aw200zO4mw2VQHP5Rw2UX4H
KJ/nMa/nM48b61/9PUba
            "], "LeafValues" -> CompressedData["
1:eJxNUEsOwkAIbQde4tIreAu3Lt3WeIA21sZNTVoT4208qjC8mUpm+MMDDsOz
u6emadadsa5/n5al/1z2Zlzn9THN4+08v8ZpXI5Da86vMaioJjWCwh/ETIEW
cs1SgEjR+uhAytx+CqeAVd7LA7k252QISwgZcGA04kT0KUK4IoRGVokWtexq
gQjqNqVZksTQpCVONCWu4m9BgnLObUd+8UFcitYy+cPiMnEo1dqqTFfwS/ty
bYlr8PJ1ON0IPx0yE/0=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkltLxEAMhaOCN1RUEC8sXlj1RRB90M5Ot7dtp+Cr/oIVVn1SWAXx3/vl
KEPbTJJzcpL07Pnj8WXRzD5XeT1Ov5v5fPrztMbl4f1r9jqb396/LXB757Vh
E9u2ZNdWWGYjqy1YaR23PW7JTqzF7njv2IqNrbEj68lpsXoQf5io3Bxvzxlb
xVPgy2VVdkxeSZZzTTg5WaVyK+wbvA0sXiuS7/5I/JRMZxsQr7FbatRoiapa
cQLRIdiAr7crosm2iLo/gaqkMpDd2yGnwlfia8TsmjswrmICwznfHTF1YBJx
7yHYvvq8k2pHnMIeOXegStWcEC+keqwTNLESK5NK13IiNQMhGmFKxVxltE0e
VzXCm0v1BdYIqyL/kh0N+Q6l2mdRUSEH7co6zdWZkrT79tap1MKaqedb7Fpd
Fnag3XRwNlISNdFI7FJT7VTV+17WPgNMSaxJW4vUzW2JfnrbRVGixkC4Fn9S
B4Et1PpLXG2hnWZUHugv8+6jNuv57f+8R9p+o+q5qiVtpgGxQDxoCi2qnK3V
NjJNZ8ytk5XBkDT5DaK/zkZb4Q==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
tcfhQkhURlOk1ir8P6Nb9oA=
            "], "Children" -> CompressedData["
1:eJwViWN4GAYYBu9LbZup3aa27aZ2kzZ10y3tVm6dyq22bdu2bdu2vnfbn7vn
ngsM7R7cPgDoEf0/BIf0KhcREdKnfoz/olp4z7AOYRFBhTv+/8MN/ncAkYhM
de1kF1GopqhUVTSiE4OYLGcFsYhNK1oTh7jkIS/xiE9SqigBlZWYJCSkkhJR
UVIFucrru8opGclJQVl9U05SkorUpOGryigt6chIJr6otD4rPZ8UyEdl4INK
KTMllZUSykJxvVcxvVM23io7OSiqNyqiXBRWbgrptQoqHwVUklIEkZ8CFKQ4
+fVKQSpEPhWmCC9VlGLk1Qvl0XPlVgly6Zly6qlKU5ZylCGHnii7ypNNFajI
Y2XVI2XRQ1WiMlWoSjUa0JDqZFYtMqkGGfVANbmvDKpNHe6pLvUJ1F3V446C
ua30uqV0akRjWpJWN9WE5qRRU5pxQ6l1Xal0TS24qpS6ohRqQ3K1pR2XFUIo
yXRJSXVRYfzEz7SnAx3pRGe6cEFJdF6J1ZVEOqeE6kY43Umgs+rBGf3Aj8RX
BPF0WnHVkzg6pdjqRW/+Ipb6EFMn9Qd96Ud/fuE3YuiEoutXBnBc0XRMUXVU
v3NEUfQnkXVYkTSQQQxmCKMJ0FBMo0DD+Jt/GM4hyQ9qBCNxP6Dvvl/ffJ++
+hjGMo7xTOaL79UEJvLZ9+iT79YkdumjT2Eq0/jgi3nvOzWdGbzzmbz1Wbzx
2bz2Obzyucxjh+azXS99mxawVQvZokVs1gtfwlI26bkv45lv1FNfyRPfxGZW
sZoNeuxreOTrtZZ1rGedNrBWD32NNrJaD3wL930H93wr21il7azUXV+hO75c
t303e8huOWwv+3DEfg5wjvMc5BCnOM0yHWapbvkSHWGxjrJIxzjOCRbqJAt0
0+frhs/TdT/DNZ+rs8zRVb/ARe5xn0tcZrau+BUu+x0u+VWucZ0bzNJFn6mb
zNAtpuuCT9Ntpuq8T9FdJuucP+Ahk/SdiXrEY54wQWd9vM74U57xnBeM02de
ctpf8ZqxOuVvOOlj9IHRess7Tvh7jvsoHfOR+sgnjvoIHfEvfGW4vvGPDvvf
OuTDdNAxs7SWzgIskiWxpDZUkW2I4thgRbGoFs2i2wGPZfs9hsW0QdrnA7XX
/1Js+1N7/A/FtXgW337Xbv9NCWyAEloi2+W/KrH9op2ezHZ4SktlyW27p7Bt
3l9bPbVt8X5KY3212ftok/fWRk9vgZbBMlpW2+C9tN4z2Tr/WZntJ2Wxnlrr
2WyN99Bqz2m5rIAVtNy2yiMUZD8qj+W1lZ7PVvgPWu75bZl311IvZIUt2Opb
EStqFayihWuJF7PiVsJKWjct9lJW2rpqkXdRGeusctZJZa2jFnoHlbf2WuCV
rLLVtjpWxeZ7dZvnVW2uh6matdMcr2Gzva1qWqhqWYhmeRvVtdaqZ60001tq
hjewhtbGQqyRTffG1sRaaJo3tWbWXK2tmaZ6c5viTdXCmqiltbLJ3liTvJEm
eqi1tTBrbw01wRuondXXeA/WOK+nDtbROllddbY6GutdrKvV1hivpW5WU+FW
Q6P9X8/b5Pw=
            "], "LeafValues" -> CompressedData["
1:eJxNT0EOwjAM65pE4rgv8AuuHLkO8YBNlIlLJ3VIiN+T1kmhlaLEceL4uGzT
I4YQ9oOGaX6fS5k/11GLW96fa073S36lNZXTMii4aRBmEcZnixVqSG02kDgy
GkwSayFOEWQifcwWYLrjbRVpSjUnrO5iPkqgdhiayAzosrbBLu86rRtxYH3R
DwWfpJmot5D75J8DV9SmCRPKRuGBnINE7YBke8hb7pz//Qh/AST2Evw=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkllLXEEQhWuiBmUGURJEoiSGMVEwDyroXWZu36VvN/hqfoEBo08RJoLk
3/vViRS91Haq6nR//fV0+/udmf3dZLu9e+lXq7t/P7dQbv483z/cry6uHydo
T2wXVtqlNba01mpLlllTm3MeWLBdi8ihrduIf7CKyAK9Q2qksmNuA5KI+MY9
2LbtoxfEN0TscpvaGtYafcLuuRvoUVUGzhJLK3vE04KalZ9Ba+wUvILYQIUT
m1Ep2Q9bCKmyMzwRlBFZMIVPEDm9qwnZibgjfBX6nIh1VkHFGrykCVrOaFdk
ZFl7JAplJKcXtq8dWVr2z1i9u2PlemRPjRnIiRWoUYgRnzggBZE+Yy+mPmqu
c02bQexU+VD9BPskVOfcu5qRE8SRMxK5H9l3ciJ9j3qz9i3fWRnU+x7eTl3N
3zhMRP7vaMm+rbdqxEbHOVJliucDkR22Uuz19gVfySznYq9Qv40YKjmjWK8U
kzV1RiayLfHVZNX4Wr2U8xawz6lVK9ZfIcua1NNCOBFrYi2EkzVhEMYa/9F9
3lGn+pX+Q+AvDKqQ8TmL78W8v0tjr9xZWaU=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
rDrh/4p5Gi8=
            "], "Children" -> CompressedData["
1:eJwViWOYEAgURc/Ltm1rsm032c3UzOTZJtfuhjVqs23btm3btnt3688953w3
Y3B4YGgkoGeMbxMY1LdCRERQ/4Yxv0WN7r1CwkIiAop2/P6HG3xnJCIThagE
WkOLRnQKUogYxCQJSYlFbUmxcdVSHOISj5pKRA3Fp7oSUE1flZAvqqrEVNFn
VVYyKik5KfikikpJKtKQlo+qoA9KzXuVVzrSk5dyykBG3qms3qqMMpGZLGTl
jUrrtUopG9l5pZLKQU5yUUJ5KK6Xys0LFdNzFVU+8lOAInqmAJ6qsJ6okApT
hGgW3YpSjHOcpzglOEtBlaQUFajIY5XmkQJUhgIqSzkeKr/Kk08PlFeVqEw9
6nNfVahKHt1TblWjOjXIpVrUpiY5dVc5dEfZVYdsuq263FJW3VQDwvmBGwqk
IVnUiMZcVxO6kVlNacY1ZVJzWtCSjLqqDGpFerUmndqQVm1pxxUFEUIowaTR
ZbWnA6l1SakURkcuKqU60ZkLSqHz6sI5deWskuuMkum0unNKSdWDJOpFbyLo
yUkl1gkl0nH1oT8D6EtCHVM/jiqBBhJfK1nFEf3IT/zMIAYzi9kcVjwNYSi/
8CuHNIPf+J2xjOOg4uoP/uQv4uhfhnFAf/MPsbVfsbRPwxlNTP3HCPZqJHsU
Q7s1il2KrjFE005F1Q6NZypRNIGJbNcktmkKWzWZLYqszYqkaZg2aTobhTZo
Jusln8NcluO+TvNYzFefzxdfwELWahFr9NlX65Mv4aMv5YMv472v0jtfqRWs
0FtfzRvfxGbWsJZ1vPblWs8yvfINvPSNvPCleu5beOa72M0SbWUb21msp76D
J76Tx75Ij3wPe1moQyzQPg7y0OdrPwd44PN03+fqnh/mrs/REY5yx49x249z
gtk6yRlu+Slu+iydZqZu+Axd9+m65he4yEc+cYnLvOaqX+GKX+Ua03TZr3OD
hzziJreYqks+RbeZrAdM0h0m6i73uM8EXfTxuuDjdN4fc85fctbH6glPecYY
PWe0XjBKZ3ykTvsIveI/nfLhesNbTvo7TvgwvedffeAfHfe/dcw/84WvOGaR
TBz9Jkf8Lx32P3XII1sU+0MHPaod8N+133/TPo9hMa2m1bJfFcuq2F6PbXEs
rsWzxJbEftEej28JLKHt9qHa5Ylspw/RDh+spFbEitogJbPklsJSWipLa+ks
tW33n7XNf1Ia+1FbfaDSWwbLaAO0xfsrk/VTFstsm72vNnlWy2Z9lN1yWE7r
rY2ey3JbL23wnspjEcprPbTef1A+C1d+664CFmDrvJsKWiFb64VtjXfVai9m
xa2LKloJK2llbJV31krvpFLWUaUtTCu8rC33crbMy9tSr2BLPFSLPUSVrLIt
8g5a6FWtmrVXdQvWAq9h8z1I87ydalsdq2ttNdfbaI7Xs9le3xpYa83yVprp
jWyGd7Vu1tiaWFNrZm2srTW36d5S07yFWlhztbRW1tqaaao31RRvZ5O9g4VY
kE3yJgq29jbRG2uCN9J4D7Uw62jjvLON9YbqZIEa4w3UxeprtNfTKO9u4VZX
I72ORvj/FF7m+w==
            "], "LeafValues" -> CompressedData["
1:eJxNT0kOwjAMTGJb4tgv8AuuHLkW8YBWhIpLQCkS4vfEW9PGmY63iX2cX+Mj
hRDWQ4Nx+p5rnX7XoTm3sj6Xku+X8slLrqc5tuC7ASJRMwE2NI//STjyp6yd
yIh6rcxACYIqogkSAjCDJEKSJS+zKgltXMVNoUupqg5DPgL0kbWTbwRrwn0T
9k09s2Vd1yf3pAaB3wEx9nR4QO/dP8WLmhoRmBT3gO5I9AdANxMJ
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kstKA0EQRUsRMaISdy4CIQzGrW6cR2Z6Zno6A27jF0TwsVKIgvj3nrpG
mq6u6rp1ux69ePrYvBya2ecJYrP97ne77c/jBOPh/ev59Xl3d/92gLVFnFpj
C7u23lZ2ZHMb0DorbM2qLLcWO8eX0GZgO+zWRougV1Zjd1iFZMJ3QVQGIljJ
XQvLyFmBrTgTa4qvZVW8FYgIdiDGNTKyOrSkuIg36gXnKeEeFNlz1mxHB84B
b0aMvzQgW/TA3UDMSPa5+BLoJbFrfCuhavQcjMu1EB5Z4u0V2WDndruvMGBH
7p2h45zZFRkVoAswlWK9N0vQQR1IWp5HJ+n850S1doZ1par/M42SXt2gTC73
VVbsArtWfwrmlfF2YRMi/K7RnEp0n2CpHvRiy/ZcNdqKFVRVQ0WOT8p7xi6w
o7oYQQ4ggroRuPe6vYslXD7Fv2yCplcxN5/7RP1pNJ2lOH0uSfOYqlujejEF
k9i16u6053ukzyLX/xjtTn1uxXkjT69uXqBF/Rmv8FisPZhfx7Fang==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
B4m9J3OW+9C9/Wr4P8Rt6zg=
            "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufbbNu27TYbm91Wm7lZF+7qLuOu7rJt27Zt29b3Xv2ZeeaZ
VC26BLUOALpH/Img4N6BoaHBfWtF+hkVO/cIaRMSmit/218/2OCXAwhDWMJR
wApaeCKQ1JJZRCIRycopMlGQ7hKVaJzlHNGJges0PxST5KQgFrH5rjh8U1K+
Ki7xiM8XJeCzEpGQsvqkMvqoxCShtD6olJIRqPcqqZSkYhrTSU0a/mESaUlH
fwaQngy8UxPeKiOZyMwblVAWiisf+XmtrLxSNrKTg5wU00vl4YVy8Vy5eaai
eqq8PFERFaAgdahLIQrzWCV5pCI8VGEVpRgPVEj3VZx7KsFdFdQdBVKK0pSh
LOUooNvKr1vKp/LkVQXyqCKVqEwVgqjFTeXWDVWlGtW5rhpcUy5dVU2uKKcu
K4cuqTYXlV0XVI8GNKQ+2XReWXVOjTirLGpMZp1RJjWlGc3JqNMK4ZSCOakW
tCSDTqgVx5Vex9SaNrSlHenUkU60J62OqgNHlEaH1Zk+9KULXelGanWnB6Gk
0iGl1EGlUE+SqxfJdEC92a+k2qck6kdi7VUiDeQ3RjCSPRrEbv3OYBJqCAm0
S0PZqfj6g3gaxnB26E+26y+2Ka62Ko62aBSbFVujiaUxjGUcMbVJExhPDG1U
dE0kmv4mqjYoiiYTWesVSf/yH+sUUWs1halE0BqF1wxmsoSlzGI2qxVOc5jL
YsJqHvNZpTBaqQCt0AIWsojlMi0TWir5Ei1jN+7LWcFKVrGZLaxmDZv44Yv1
3deyjvVsYJG++UJtZIG++nx98Xn67FvZxk4++VxtZ44++g4++Gy9912881l6
63vYyz72c5A3PlOvfYYOMF2v/BCHOcJLP8ZxpukoU/XCp+gE/+kUJ3nu/+qZ
T9ZTn6Qz/KMn/rfOc5FLTNQFJuixj9dlxukWV7jKWD3yMbrGdR76aN1glG4y
Ug98hG5zh/v+l+75Pe7zgId85BOPeMwb3vKEp7zgrj/jOX/qjg/XbR+mW/6S
V/yh1/yumz5UN/wd132IPjBY7xmka/6brvpnrvhARbAvfGWAvvGdH/TXZXdE
GAtr/XTJ+wrrI7PeCrBeuujh7IL31HnvofDWXec8op31UJ3xyBbFuimqRbPo
1lWnPYbFtMSWxLoolnVWXOuk2NZRcayDTnk8i28JLKElspPeXie8nY57Wx3z
NjrqrXXEk1sKy2eHPUSHPKWlstR20HPYAU9jaS2d7ffsts9bKb1lsIyWyfZ6
ZstiLbXHs9pub6Fdns12erB2eHNt95yWy5optzXVNm+iPJbXtnpjbfFGym8N
tdkLWWFroOZWxIpaHatr9VXM6qmcFbcSVlclraxt8kDb6KVsg5e29V7G1nkd
rfXaWuPlrYJVtNVeS7Wskq3yylbFqtpKD9IKr2bLvbrVsJq2zGtqqQfZEq+h
xV5dta2aFnk9W+hNrKlVVX1rYAu8oTWyKprvjW2eV9Zcb2ZzvJJme0XN8goK
tvKa6f8DszLLCQ==
            "], "LeafValues" -> CompressedData["
1:eJxFUEsOAjEIrQUSl17BW7h16XaMB5iJdeKmJh0T4+19FKhNC6/w+B6X1/TI
KaVtDzHNn3Nr8/d6wOdWt+day/1S32Ut7bTsYFQhLELCzAAkEECq8Ij7kZBm
loDs+M9xrZm6ysxEuHg5ynDkGQEylLeh0ZY/jFFKDIqHd4p7zS2jQHeF26dy
ngTL+8/aIhlEaXTrw3HQTehA2IquSbmICfvIHB3aBuz3AxCnEq4=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkU9Lw0AQxV+tSKO1aPHQg0pF7VkvJtuk+bPZBLzWT1Ch6kmhCuK397dD
CTPZebPz5s3szevX+u1A0vcIt978Nrvd5u8lIXj+/Nm+b3ePTx8DohHuQYUy
LfGdcq3UYJ5zB9ZqTC7w78BLoqkcePTx/r2OtFBNLmAVp55Tp5mG4Ck3HbXe
eK7J1ko4t3B2ZBPDCx2Cd9xymlPV65Io0C2yjc1ipedmg8IS1gAWjMWb+iGa
aw3IOvDAvyDOyQbqZ8Zdoy92nfA1oLHnhLg1jqlO8HHOng4pvoDTGVNnMzlw
T6bSHQqGuuJOivZSFyiImk+xyjjGbMaTz01Nbedge+ptvohE9XN6rGAodUa0
0Lluqals3gEcCZljFKR8ORVRdbZ/oxYfN5La2xS2rQze2CUjW4JFNbVZZmp6
pkgxZ9tb7RV6m6SxLRX6B5phQhA=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
QtKxVpNKv1b4Ly7FUKI=
            "], "Children" -> CompressedData["
1:eJwViWPYFgYAAO+NX7btVsu2uVpatZZtfdk2t7TaWraXjS3btm3Xe2t/7p57
LlWTjtVbhAG6hHxD9cY9SoSGNu5VI9K3qNCha/OWzUNz5G31/w8JwP8OQ1jC
EZ5TnCYCEWlDW0KIRCYyE5koaEqiEo2gfYxODL6anJjEIh69/WJsPhuHT/by
o3H5YE/j08MEJOS9iUhMd9/ZzSR0NSldfGsy3hjqa1Pwys6mopOpSUNaOvrS
70hHel6Ygedm5JkdfGp7n9jO78lCHX4hK20tRGGy0cbHZicHOXlkLvKQl4fm
5oGtzUcr89PS+7awAM0tSDPv2dQiFKUmtShGccpTgRKUpBxNvGtjS1GaO5bh
to0sS0Nv2cCb1rciP3DDn6hEZa5bzx+pQlWqcc26XvUXr1jH6vzsZWtwydpe
tJa1qekFf+a8P3nOGtalHq2p7lmrWZ8GnLEhzWnBaRvRmCacsqpNqWIzfvSk
lT1hJVvyg8dtxTEretQKtqM9hzhMB8o7icl0pBOdCaULXTliOQ9b1m50ZxCD
6UFP+tKPQ/aiN2U8aGkP2If9lrI/A9hnSQdSwr0W91+L+Y9D2ON4djuUYQxn
BEXd5ShGUsSdFnY0Y9hhIcdS0HEUcLv5ncBEtpnPX/mNreZ1i3mcQm4Pksup
TGOzv7OfnE5nBpv8g3/J4Z9kdyZ/MYtsbvQfZjOHucxjK1mdzwL+Zi0LWcQa
sriY711FZje4hKUsY73LWedKVpDJtX7n32Z0jatZbQZXmd51pHM9aV1pGjew
kRVuYjOpXW4qt5DSZaZwG8ndzg52sos9JHOpSV3ibhabxEUmdqGJ3EtCF7iP
+SbwAPGdZzznGtcjHOUYx5ljHGcb21me4CSx/MuYzjSGf3qGK1zlLOc4T3T/
8AIzjOZFLjHdqP7uZaYZxWtc5ya3mGpkbxDJKYZ4mztMNmLgLvcIE4joJO/z
gIf8ZgQf8ZhPfOYJ4X3LO57yjF99zkRfMMFwvuQV433NG8I6zjCONeAY3/MR
HO0HRmlwpMHgCL8Gv/CV4QYZZiAwVBkigcF+CQ7yczBsIFxgoJ+CAwwfiBD4
GOzvh2A/QwJ9fR/8Dya7GWI=
            "], "LeafValues" -> 
           RawArray["UnsignedInteger8",{4, 5, 4, 4, 4, 5, 5, 4, 4, 4, 5, 4, 5,
              4, 3, 5, 5, 4, 5, 5, 4, 4, 5, 4, 5, 5, 5, 4, 5, 5, 4, 4, 5, 4, 
             4, 4, 5, 5, 4, 4, 4, 5, 3, 4, 3, 4, 2, 4, 4, 3, 4, 4, 3, 5, 5, 5,
              5, 4, 3, 4, 5, 5, 5, 5, 4, 5, 4, 5, 5, 4, 4, 4, 5, 5, 5, 5, 5, 
             5, 5, 4, 5, 5, 5, 4, 5, 4, 5, 4, 4, 5, 5, 4, 4, 5, 4, 5, 4, 5, 4,
              4, 3, 5, 4, 5, 5, 5, 4, 5, 4, 5, 5, 4, 4, 5, 4, 5, 5, 4, 5, 4, 
             5, 4, 5, 4, 5, 4, 5, 4, 4, 4, 5, 4, 4, 5, 3, 5, 5, 5, 4, 5, 4, 4,
              4, 4, 3, 5, 4, 4, 5, 5, 5, 5, 5, 4, 4, 5, 4, 5, 4, 4, 5, 4, 5, 
             4, 5, 5, 4, 4, 5, 4, 5, 4, 4, 3, 3, 4, 3, 4, 4, 1, 3, 4, 4, 4, 5,
              5, 4, 4, 4, 5, 5, 5, 4, 4, 4, 3, 4, 4, 4, 5, 4, 5, 4, 4, 3, 5, 
             5, 4, 4, 4, 5, 4, 5, 5, 5, 4, 5, 4, 5, 4, 5, 5, 5, 4, 5, 4, 5, 5,
              5, 4, 4, 3, 4, 5, 5, 4, 5, 4, 5, 4, 5, 4, 4, 5, 4, 4, 4, 5, 4, 
             5, 5, 5, 4, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 5, 5}], "RootIndex" -> 
           1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kk9PwzAMxT3YgX8qYlzQOjYQGhwZB2jTriFd20hcxycY0oATSAMJ8e35
2RqyktjO87Pz2suXz+Xrjoh87bEtVz/1ZrP6fd4nePr4Xr+tN3cP7z2iIVsu
LSuXTmq5lkyC2ZzsTA5lIlF2uSnkhH2BBfGgLrhPzO/wUhlJI338CCqRHnwJ
2QJ7NERH5ZQVyas/AjGApw/ewdNJCTI1xEKu5IzVwtlyNnLECtwEJqrN1wpl
njGBp8LLKcx6RuwAzICVgm7lGJzOds/7piACuchk53TRUzvnpkNlKrS8PrE+
mc2QE8/Y43amwtCK9/jKNiby8OjLauPQikCkqBr+SDYzhkCuMe4K36FEgspz
sLfGVJupYoE61akwnaOp+8/XonGDV/JdPPoMYa54XzDmhfV2djMmdvB7qpyx
OTpG9NFd89rthvrcZtT3TqhWXGWTR+5L+yPm20n+ANn4RYA=
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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

            "], "Children" -> CompressedData["
1:eJwViVW0UAUAwHbJR3cr3Ui3IEin0oh0l0g8GoOQ7m6luyREDDoVpUuQ7u6G
O/FnOzvL0LJL7bZRgO4R71C7Re8ykZEt+taJ9S6qdO7Rpl2byPxF2v//Uwfw
v6MQlWhEpyzliEFMPiA3EcQiMUmITRzi0U/ta2hc3trH+PQ2Ab1MSE8T0cM3
djcpkWYjO8lITgpS8h7vk4puvrarqeniK9Pw0s6m5Usz0cl0pOeFGXjuF2ak
o8/sYGaykJX2PrWdT2xrDnLy2DY+MhcPbe0DW5mHvHxES/PRwvsW4p75KUBz
71qQOzazMEUoSjFK0tTbNrE4jf2QRt6yBDdt6A0/97qluGZpPqaBZfjMq9a3
PBXozwAqUokv6ERlqtCeelalGjWoSXU+4Yqfctm6XrKOF61tLWpzwZbUoS7n
bcI5a1mPmp61Pp/RgM+pYUM+9V8/sRHVPWNjTlvNpjSjOS34x6qesoonrewJ
W9GaSrahom2p4HHbcczyHrUDHSnnEcv6JWU87Nd0pgtd6UY/PvaQpT1oJN0p
ZQ960ouPPGAfelPSvy3hX/Zlvx/6p1/xh8X9hmJ+S1H3WcSBDGIlq/iOwey1
sHscwjCGs9uh7LKQOx3BTGaxw5GMYjTbHcM0CjqWcWyzgFsdzxYnMJFJbDa/
k5nC7+bzN6fyq3n9xenMII+bzO1sPnAOc/meXP5ATn82hxudx3wW8JPZXcgi
lpLNDS5mvVldQhbXmdm1LuNHl7PGFaw2k6vJ6EZ+Zg0/spYMriO9q0znStez
gZ9YYVqX+76b+IVlxg9+5TeOcJSl/s42trOZ99zCVpaYxsWmdgc7OcBBdpHK
ffzBblK6hxTuJbmLTOaf7OdvkrrQv1hgEueb2Hkmcq6HmONhfjCh35vAYxxn
tg84wUnOcZ5TxPc08fyHuM4yjmeI7Uz/ZYZnmW4sLxDhNWI6zYtcIoZTvcwV
onuVaE4xqte5wU2ieJfAW9xmsneYJE7U8B5hOMH7jPdt+JBHPOYJ43wTPuUZ
cYPX4Vif84rXjPEFL3kVjvZl+Ia3jDJKMNIQghfhCGW4z8MgeBYO82kYNYgW
RA+ehDGCx+FQH4Uxg4dhRBAriB08COME98Mh3gsHezeMF9wJv/N2OMgEQcIg
UZA4SBKkClIHSYNb4UCTBwNMFvT3ZpgiSBl8643wG6+HX3st/Mqr4X9aPT1Q

            "], "LeafValues" -> 
           RawArray["UnsignedInteger8",{5, 4, 4, 4, 4, 5, 4, 4, 5, 5, 4, 5, 4,
              5, 4, 4, 4, 4, 4, 3, 5, 5, 5, 5, 4, 5, 5, 5, 3, 4, 2, 3, 3, 3, 
             2, 3, 3, 4, 3, 3, 2, 3, 4, 4, 4, 3, 4, 4, 1, 4, 4, 4, 4, 4, 5, 4,
              4, 4, 3, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 4, 4, 4, 4, 5, 5, 5, 
             5, 4, 4, 5, 3, 5, 4, 3, 5, 2, 3, 3, 5, 5, 4, 4, 4, 4, 4, 4, 5, 5,
              5, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 4, 4, 
             5, 4, 5, 5, 5, 5, 4, 5, 4, 4, 5, 5, 5, 5, 4, 5, 4, 4, 5, 5, 5, 5,
              4, 5, 4, 5, 5, 4, 4, 4, 4, 4, 5, 3, 5, 5, 5, 4, 5, 4, 5, 4, 3, 
             5, 3, 5, 5, 5, 5, 4, 4, 5, 4, 3, 5, 4, 4, 4, 2, 4, 3, 3, 4, 3, 3,
              5, 4, 4, 3, 4, 5, 4, 5, 4, 4, 4, 4, 4, 4, 1, 4, 4, 5, 5, 4, 5, 
             4, 4, 4, 4, 4, 5, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 5, 4,
              5, 4, 4, 4, 4, 5, 4, 5, 4, 5, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 
             5, 4, 4, 5, 4, 5, 4, 4, 4, 5, 5, 4, 5, 4, 4, 4, 4, 5, 5, 4, 4, 5,
              3, 3, 4, 4, 4, 4, 5, 4, 5, 4, 4, 4}], "RootIndex" -> 1, 
           "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw1kk9PAjEQxQfxIGIM6oUYEjWKHjwIF3fZ/7vdknjFT4AJ6kkjmhi/vb8+
IE3b6cx03nvTXr18Ll73zOz7gGWx/K3X6+Xfc4/D08fP6m21nj6+dzh9sZxa
yqgsttq8RdYyJ5ZgDy23kvOA2WCPiBTmsIbsE05z4t6usRI7xn/EbMiYEG/w
OUZN1sgym2EleMfsNyA6siNQN/7Yzpg5efvECvaENaJqq+qpdUGK8dfimotv
Kc4tCM7uqZ1y7klDg1ULpU+Ws440ZuwtSKFGI/xru2RNYVFsVW4Ultgz8j25
BfVzoTn4ePzHWClKvLiHWEc8nJhU6l7OTNW1UKlkZJx6ZHmyWrsj8xwOsdRG
6vcD/kQMZsKa49+n3ol6MCZa6Q1abjRSsOGT2aHyKmW0qpmqc6XOmdg37A5f
A1LYc+rPxSX0cmCPRCp134O2e5u+tBypt4U05ERnsr06O2DtEg3vUNHRmOwM
vKAkvL7XndDxUuods1S/dnzn6Kj0lh3+TtARbl2A0m77HX6mo0K0/aOpqkXb
HxDuTrmTsIZ4F7yg/hZPYv+YK1nv
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufbtNm2bbvNxm72Vtturq27fJ192bZt27Zt2/jeqz8zzzyT
sV2P4I4BQO/ArwgO7RsUGRnaPyTm16jRvU9YeFhkwWIR334vg28OIApRiUZd
q2fRiUF9GhBIXaUmDTGJhRSbBCQkDnFxxeOL4vNZdfRJtfVRiUhCLSWmpj6o
ht4rKcmoruRU0zulICVVlYoqeqvKSkslZSQTb5SO10rPK2XgpSoqM1moQBAv
lJUSBCkb2clBTgpSiFzkJi/5yEMFPVd5PVM55aesnqoAT1RGj1Vaj1SYohSj
CKX0UCX1QCV0X8W5p+IqSSnuqphKU1RlKKKyFNYdlaM8hXRbBVWRStSkFpWp
wi0V0E1VpTr5dUPVuK58uqYaXFVe1SaPrqgul1WHS8qti6rHBeVSMCEM4Uca
0ohudKcxTTivnGpKDjWjOeeUXS1oSUfCaUU2tSOrWtOGs8qitmRWKJl0RhnV
ng6cVhinlEEnlV4nFMFxdeKY0qkzaXVUXehKGh1RavWgJ/0ZQC8iOazvOKRU
6k1KHVQfDiiF9ut7+pJc/UimfUqqgQxir5JoMD+wR4m1W4m0Swn1Ez+zkEX8
QgLt1GR+5Td26HfGMo4/+JO/iK9/iKe/iavtiqN/ia3/GMowYmkUoxlOTG3T
CEYSqK2KoS2KrjFE02ZF1XgmMJEo2qQAbZRpEmiD5Os1halMYzru6zSLtZrB
Gs1ktb74bOawSnNZwGefxydfqfms0Edfrg++mCVc4SpLWcYe9rKcFWznvS/T
O1/JW1/FapZqDUu0mbWsY7He+Ho2sJFNLNJrX6hXvkAvfb62sJUXPk/bmKvn
voOd7OKZz9FT380Tn63HPkuPfB/7OcBBZuqhz9AhLvLAD3OEoxzjBCeZrvs+
TceZqnt+irt+ljt+mjNM0W2frFs+Sec4zwUm6qZP0A2/xGXG67qP0zW/xnUS
WWK7wU0CLIrd4javeM0d7vKEq36PKz5Wj7nPZX/AQ8boko/WI0bpoo/UBR+h
pzzjvD/nBcN1zl9y1ofpjL/htGOn/C0n/R3vGaoPfMH5yAn/xHH/T5/5V8dc
HPV/dMT/1mH/S2Z/6pBHtWj2h+Lb74puv+mgx7ADHmj7PabFsl+1z2NbHPtF
ce1nxbOftNd/1B5PYLs9oe3yIdrpP2iHJ7GklsySWwpLaYO13Qdpmw9UKhug
rZ7a0lhaS2f5rYCltwyWy7Z4RstkWSyr9ddmz2ybvJ82ejbb4Dksp/VVdvte
6/07rfM+Wuu5bY3nsdWe1/JZb63ySK30Xipo1a2GFbLCVsRWeDErbj1V1Hpo
uXdXCStpy7yblnopK21dVcbK2xIva4u9i8pZZy3yChZkFW2hV7YFXsnmeyfN
8yo21yNU1cJVzTpqjte02R6mWtZBs7y9als71bFQzfT61sDaWFsLthne0lpZ
iDW0RtbY2mq6t1ETa62m1krTvJk1t5aa6i3Uwpprire2yd5Mk7ypJnoThVqY
dbR2NsEbq701UgdrqPEebhHWzcZ5JxvrXW2Md7bR3sVGeYhGerBGeHfrYQ00
3Ourp/WyYV5PQ/1//S/q+Q==
            "], "LeafValues" -> CompressedData["
1:eJxdT0EOwjAM21pH4sgX+AVXjlyHeMAmysSlSB0S4vekddoKqtVLY8dJDstz
urthGLadwjS/TynNn8teH9e4PdYYbuf4CmtIx2XUZFKA5AN4gaIT8fonaFyo
DEyozMPp9YUGcg2MYlnzKrZSFc1IyIGcJViN/jUNXcQiy9Lzx9QC5BkyiL1c
kerAIzzIwAzZp85DR7RBdOW/BarCCtFKrFedTaSL+r5sn6MvakcTIA==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkktLA1EMhaOIaC2tiuBgB7TUzkYEu3E677nzArd17aJC1ZVCFcR/75d0
uGRuHicnuclMX79Wb/si8n3EZ7X+ddvt+u/5GOPp82fzvtkuHj/2sF74VDKQ
TCJJJZaRzOVCQrRGWlkiIafDF2OlSCYJ2A47Q3bICN9YHohGnGsJpAbxQHYH
KpUSiXqGEi0jR/mVNaB+jl7gmZDb4PPEBzWDxSOjIW/IUe4rY0nkHkmtu4bb
hyMm2vLNqbm0nBrOCu2S+LivUosjXhKpTa+wVGvMnyIJ0dxs7UmtEH+Ib4l9
S5WKXjrsCkQgd9wpL6qJO2MszXIgtOPcZtByu545l0OYlN03fyun9O1b/zPs
hdzYXTIPnUohJ8zBg8W3VxTUy22CDl9GN62cUz20rpx1XpPtQA7J0Tlpj2dg
dUe7jRWGDMB1htHsxurl/APKM7C5FDZHz9BD20+JVOR0+Je2x1gO0HRLzqI1
Wt3/F61V1xkHRGNydKL6moq45if4J8xAmebwFkygRTx74Yi3TW0aOXdg/Sle
9/8P6jxVCg==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1:eJw9VnlcU1cWxm2IrUJExaiIQWAE3HAZiAueiKABWQLosCgSFZTaKEGoRKQU
sKwOGlkkikoUxQiiQQpEIL0JSwgQMWiFsEkCgpStQUpZqtO5zK/wz7u/8+67
55x3vu989xidDHIPmKOlpeWLH2QfqevW70cQ8eUJ27wFAlAkT5k6O/ZCn0tQ
q0niK+Ca5+sau/YhMvtCp+vhNOBdijqQaJMOrP3aXrlLJCDsfnj3DqcAtDzb
W9dwmoF/fFIcN0eOBJ2fxwzqpIgdFD8avVMCpB3p66J6RcCpfzEmT2tFpNXc
gwdICkTL2ZRl8qkLtCqLRy5vlKMZf5Yr3R12OXSA6tthvxPOdUhoP1687VEL
MK5/xelY04gC5yTfMyW1Aq3jt3OyHh4QFxFfx9+vB4F/+Z+Kv2RIMeb76vWa
aiCXtd37J/5OY/701Cts05bnD9rhuJyFORG12Kbrs01jliNEXtE+3O/6HrFt
X/0hwP54kUdKuxbIgSjtXaHdLoEobt1FL5yH156vHWNxHPHDuxVJeFW9sT5u
vJIPNNekufZHxUAj/CPDUwchUiP3YHJvMZo5z3fcuKLMowKUaUyOc0odYi35
spFHUALv6aZjvxLwuXUScdrnXlA+k41vfvQAAuui70gdKxHNxDJbaJMC5JXp
3kcDmxHp7Meg7TcakIBxtab2XB/i/aZrZ5BSBYLF1y3OXK4B7vz0TRuT6hEl
btijLbYesccMr2R4d8/WVSv8k7pKWI54piHJPnqlEJWpXm4SKQDCjmdRjHwl
EB7QPHf90A2WcQuzkoffAFk0teXbX6oQ23wn62lLIXDGP+ZfsXkJgt7GP/Ie
lgO1N7fmmzX9SHjBll1d+Qz4fw1Plq56DrzGjN0/er5FMpttOc5FxUDpOen5
ZtFHEMw5umX7eDkQnSYiT8+tQRrx2+IU6lXQNDTedRIpgMa1P7R6/rXZVXOn
vD8V15m3NdvWWrsaZNcIipv1BZDw3OlFxTSeh42n6qUyZOZxPiEb48aail9c
mVwFFKN5Iy+x3efdFrPbRo40iwzMB4oViJfrWuLsVAkEnYBboyNipGLsOTPN
b0bBoaSfEsXA3ujKo0R0oygLj7uV2H+fmNYzjTfJLXDDYHghaNrSLKT4vVYn
eJ7A9aLcPnj6QX0FEril1kznYel2ftktqRwRrk/Yy7DNbzgSYsSUIFk6c/Kq
0ztETLzItML+J5K3CktqKpFitcu9qjApzMSf4R23rmx9yunHoFllUZvZX4bo
9pUrcecgRcxg9HO6GJEKD14fffseNLccLZeHVSHyTeNwVbca88jjcce6RqTa
JK+UMiuQgqzj/Wu2GLG0j3VEcmqRIvVESPsyNaLk7z5Dwn3CbqJvv5RZgjQH
nviciy1HdALcCL6TjxI0PqET2D9jlchljagCUXoKV5jgOiWI5m1/tjgReBrr
JWY3pCDTPE7tdugEjnfp/SScJ6Gyzou5tAopvq4tPC3vRmRxQy81eAg4cXrF
KpwX+8VaQ4RxsfwcZNSN82V9fXjtftyP9IL1vxth/5TuFx9ssS2r+XMRB/tj
De5rO3++Eeh3bOxe0bOBxzAaiocC4H/nHr0V82HCVdh2qkcKfaboWiZdAJof
zfct9WkCzdCIhXdxA/AyqaLvmuWInDf4WKTbhVQxoYu9DwlndYs/V8fPNLcZ
cdX3c6fjC38fuLoO60VUR6b6UXwFIu3dou+KeUn//PD8yfl5iNoUs8ixthJR
On7PWpvaCFS39dJEbSXIxFvdjPE5qssCG32GBGn+U8rnGjwBItqcI7SsAN6/
mq0SMI8I7q37DdolSLUn1meaP+KLobVlRDliBAXkmeDzysTjbs3AQ2xX92F7
WTZoRgczRjAOlG90VnXhevGqleeicV3YH1mio4fLkGp/xMdi7F84teKY1YcK
4NOScgmhj4BR60/aSvoCmkatnTrj74C2j2jnIBID1UdtFfdlCDRT+iP0zDJk
6ZTzonxiAibqX2xp6ckCcf/zDd9EtwNN19ds6ZGHoEkI97+O85alebrF7hsB
1uV6tCRCCCqmOHivfyuQQ9NfuusLZvtyZl9h/n1q2WAjCGMVWbtYH0DwWsfh
x1P5wPNz5r2zbgbBZHWM74oKRHAtMsjUbgIKQ8fwooNiVh8EnJBenkUeCFTq
a7cl7UBw8GnRcxCBzD4xwBzjJVToftFzfgdaL4erLUhNYKZfaNZ4OhcsG/xY
W3DdtEIH78/zzoM+vc8SyQAX0Rkbr3hg3GSnuFfIk++A5xKzyAivfPbAfhor
C1QXbBxDmZ0gc/mY9te4BAQOmXt9sd7z2jZ7DY9Wg9nowXZCvByRho42/2N+
AYh3hiQyp3ogwbPa5/A0H5iGB54LuxA5ODxWc/YRcIcKV3TqqRHpS+2g6Gcl
YvneC+DEpyCB8fH6A2VFs/VlNN2oX+TxAaJ+Iu2czJQj2RUH7U+HupGyaZNr
o1wNKhuzfX6pCpAN3RvY5qSavY8okaXhblYdQPMzzbvQ1Akkh66jesm1iKa9
raUB3xvcuYa17bjfGOIhYSTmYWD+Xrt44kukpGSErhY/gqhP5TROhwpNjIYW
mm5Xzeo2Mc4kMvZBB0z8FDb4VL8dhM3Gdscuv0JcQt4J/Rv1iPPVQt8Dx9+C
Wb4VJSK8HlFbfjiOMM6BMlr+6cF8UKx/ZfcztsVpY9bncX1m5grC67TcvjsV
iDxkvDiZX4G8/lt4djo/Qv/t9y2GEkQh+p5bwG8CL2frpohrYlBaVy7UJTQi
bu/JN8EblEjjPOj+sSAbqAbcL90ncsErrFrH1PIyopT79UzrCGHYT+zm9AEs
aXOYR26koRm+B1qaW/0qeo1oF3U3teB4rAWXTgWZliAa8ykl4Cq+t8N3BBNi
S4Ff6x62Hc83USWVI/9OeQKWDN4O2aqnoBzc+my3pBsSxrwbVp7lg8Dwl5Rx
3I/EtXmTSbjvvbrXykY31CBi0Px+2rcViPHbde20sZvA6UiVfrdGBIGNS6++
/iRD4s1pHt7yKiDvHtV5LP0A1KHv13XOL0NC/1za+7dqRJ03L6yNOIQUn3Mv
LXGRoMAB2y0rBXjVc8255f8MOMfXlNIxzzhq5a2iP98grwJTZgvuI/Zw86F9
aalAX7jwjVVdP3B2F8VtE5UDN7IoplWIdSmkJHKPugUxVBtCS+69A+GqruUZ
/q2If5HFkhkWIbHxhqKjw2rEjhTHnMN4zfCfKjsTVqT7AKgXEoqGfqlHfSHh
pllmbWgGZzLHKuCCbQ6Qw6bs/q/rf88HjBDVE8EcrPt/68IMnl4Ztx/rVNci
s4YtXy5M4/kpxyp4igcTbQbvl8l+Bg5pYEB+uxgs9Zaez8L6JiixX6vGuDK2
+0f7YZ2c2Z+Zs0wibgZK1MuoZpc91gfgfdLd0+kvcZ/NxOUHZwRN/xft8y5f
Jp4z/gekJ7GG
            "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Zt2+6rbfvV2tq2bdu2bdu279n2J5lMEjfuENA8CNA5
1F8ENOpeODCwUc8qof9G6fZdmrVoFpg5R8t/v57BPwchKMEITmayEIIakqor
JKEITRgiEomwVJOrqsIRnj+KwG9V0S8FKDJR+KlMRCUa8YhPdGLwQ5UVk1h8
VyV9U0XFpoLiUF5fFZcvKqcEJCQlqUhEWX1WMhJTRklIyieV1keVUnJK6oNS
8F4l9E6pyUhxpaGY0lJU6UjPW2XgjYrotQrrlQrppQoqK9koaAWUnRy84z05
ycVRjpGbPJSnAnnJxwuV5Lny80wleKoCFCS/CpFPhSlCUYrxRHlVnDx6rNx6
pFx6qJwqRQ6VJrvKUJYHyqZyZNV9ZdE9ZVZFKlGZAPaRSVWoyha2Uo3qzGcB
NajJdGZQi9rc1TTqUJfJTKEeGdWIxtxRfRqQQQ1Jr9tKp1tqwlDSqinNaE4L
WtOGm0qjG2rJdbXimlLrqtpyRR24rHZcUnsuKpU60okLCqQzKXVeKdSF5OpK
MnWjO+fUg1705qx6ckZJ1Ye+9GcAp/Ufp5RE/Uisk0qkE0qogQxiMAl0XPE1
hHg6prg6qmEMZwQjiaMjiq1RjOawxnBIExhLLB3UOA5oPPsVUxOZxD7F0F5F
11SiaY+iareiaJcia6dmModImkVEzSaCdii8tmsu8winbQqrhSxiqzazmCVs
URht1lJWsoplLGcFobVJobRRIbWaNWzQBtYSQutYz3oF1zoF01oF1RptZBNB
tFqmVUIrtY0dyLfjvkJ/fCe72M1vX65fvoefvpcfvkzffan2s0QHWKyDHOKb
H+arH+GLL9JnP84JznKOk3zyhfrop/jgp3nvZ3jnC/TWz3OBJzzlIpd4wBu/
zBWucZ35uso8vfa5euU3uMk9XvocvfBb3Ga27jBLz32m7jJDz3y67jNNT32q
HvKIJ/6Yxz5Fj3yynjFJD32invOCl7ziNRP0wMfrDW+57+N0z8fqrn/gjiex
pPaRT3zmC/Esvn3ltke0W/6N7/zgJ2MUwn5x00crqP3mD6PkjJSZuOEjhA3X
dQ9i13yYrnowu+JDFdyG6LIPVkgLZaEtjIW1cBbeBumSD9RFH6ALHsHOe3+d
80gW2fopikWz6BbVzvp/OuN9FcNiWWyLaae9j055b530Xopjce2E99Rx76Fj
3l0JLKEd9USW2LrpiHfVYU9myS235bEUltJy2SFPZQc9taWxLjrgaS2d5bT9
nt72eQbb6521xzNaJstsuz2bZbdAZbGstss7aad31A7PYdu9g7Z5e231dtri
eS2f5bfN3labvI02emsVsFba4IWssBWxotZSdayYFbcatt5LWElroepWykpb
c63zMlbWKlola6a13lTlrLxVsCZa44212htplVe2lR5gVayhqloDVbP6WuH1
tNzrapnXtFpWR0u9ti3x2lrsdW2R11I9q6mF/j/jK8MN
            "], "LeafValues" -> CompressedData["
1:eJxdT0EOwjAM2+pW4sgX+AVXjlyHuE7aRJm4FKlDQvweN8k62Na4qeU4yWF8
dnfXNM28I3TD+5Tz8Lns+bim+TGleDunV5xiPo4tyZ7gfZCfXyCigDGalsAq
kcubPChl6l9NLZVaMGM4D8A8QvWQMHX4O0JXd8gbWlvnIO1UtqAaLeZywdox
b3VNm9tvNmUXFEnpwzKocJ1iaWo8tlvofDY6zxfH9RKh
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtk9tu00AQhidQVTRKKxBcRK2hjdKGC26aC7AdH9Zrry1xW56gSC1cgRSQ
EK/Dk/LN32i14zn+c9jx6uvPu8dnZvbrBeTu/k/c7+//fjlB+Pzj98O3h/32
0/cZ0j9IbY0N3N4SN9gCWnFKu7ECfmeR79ZyebSW2Rm2kYiIb25z+MpOrLMJ
nfMX2Bs8a3SlIjIyDEgtCDU32hI5oEn2Aaknzq0TZ43uCF1SVIAL2B3lPXxE
l+wWvxzuOfQMfuC6xaOW0IYsPXJv11jmVB9AGKi3I9NLvgn9FdEFntdU2RNV
YyvBO6WHgPcOnEqZZnCvbYNPqyytZrSj9lJoOXzS6UCN4CRVtADnVF15555l
spUdg9TSY69eRqH1RAb5TcxyENIo2wCdQ9fg3arTtfTdoWP3e3qZpBknO4cO
mnOQvabLZK/gV3wL6iipLNJ3j7TRm3juDcgZ3KXkrV6x5lSapPvGw6wn+B2W
p1co8CuIragkkr3QdgxMcqk5TMzIozN7hzbXK/aqN9d++c4UylKo5wjv2AvF
eS0lGu+zFs4WS6ut8K58s44U1x2mFRQzSBfweUt8BlYj/GP14Fs/8X6TvHye
uXKNms6oPSqprQS1sY/QTNN8I8xGFU36E2ag/gfNl2UT
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOUGAgAxGZq27ratm3b2rZbc2vbtm3btm3btmfu7id5eUnSpEPV5sEA
dA7zH6oGdC8SFBTQs1rY/6JM+y6BLQKDsuRs+f9fROB/B0NwhEBIfMJnhEJo
NEA2h0FYpEU6hEN4JEYSREBE2IkQCZEhZ3UUZHFsxEFUREN0ZPZfZ3IMxMQf
Z3QsZPBvp3dcxMMvJ8RPp3N8JMAPp/V3p/E3p/Y/SOWvTumkSIZUSOHkSO4v
TuYUSOrPTolPTuLUSOw0+McfncjpkQG1kdAZkQk1kcCZkQUfHN9ZkQ1VEM/Z
Edd5kBfvnQM5EcfvnAtvnRtvHNv5kB8VEcsFUBAlENOFEMOvHd2vXBhFUBQv
Hc0vXAzFEdXPHcXPXBKlENmlUQZPXRZPHMmPXQ7lEdEVEMGPHN4PXQmVEc4P
HNZVUQ3VUQP3Hcb3HNp3Hcq1ENJ3HMJ1UBe3Hdy3XA83XR83HMwN0QiNEYB3
oJugKWZiFpohEC3RCtcNN0cLXLN11VJrtMEV/1VbtMNU/FF7dEB/DEBH/NZl
90Un/FIQOqMLfqobuuOSu+Kif6gHvuuCv6kneuG8e+Oc++Csv+qMv+i0++GU
P+ukB2IQBuOEP2kIPmoSJmMoPui4h2E4RuCYR2IU3uuo32k03moM3mgsXmsc
Xmk8XuqIJ2AiXuiwn2sKnumQn+qgn2gaHms6HmkGHuqAH2g25uAN3mIu5mEB
FmK/52Of72uv72kRFuMl7moJ7mg5VmCPl2K3l2GXb2slVuEFbmk11mAbtmMt
1mGnb2o9bmiHr2sDrmkjNmG7r2qbN2Ort2ArrmiLL2sHdmKzL2kXduMsLmoP
LugADmIv9mGTz2s/zmmjz+oQDmODT+MIjmK9z+gYTus4TmCdT2mtT+okTmGN
T2i1j2uVz2Clj2mFz2G5z+MCLmKZj+oSLuMKruIpjugaDmupb2CJr2OxD2mR
b+IWbuMO7uIJDmqh7+E+HmCBD2i+92ueH2KuH2GOH2O292mW92qmn+E59miG
d2u6d2maX+E1dmqqd2iKt2uyt2mS32OiP+AjtmqCt+gLvqIcy/MbvqM0N+sH
fiIlU/EXfmO8E/IP/mKcE3CsN0kwwI0KwZAkg3GMN2i0g3OU12ukQzE0w3CE
1yks1yoyozAcw3O412iYIzAiVysSV2moVyoqo3GIV2iwozMGl2uQlykmYzE2
lyou43Gg43CAlyg+F6u/F6mfF6qvF6iPE/EfJmYSzldSzlNvz1UyzlEvJ2cK
zlZPz1JqpmEPz1RapmN3z1B6ZmBxlmBGZmJRFmNmTlcWZmU3T1NXZ2Me5mV2
TlUX52Bn52Qu5maQp6iTJ6uj87GD87O9J6mdC7CtC7KNC7G1C7MIJ6qVJ6il
x6uFx6m5xyrQJdnMpdjUY9TEZRjgsmzs0arAimzBlqzEymzAhqzCqqzPUWrk
aqzHkWro6mzgGqzJWqzNEarDuqzv4arnYarroarjIartwarlRmzOQWrMgQpg
EzblAAWyv5qxn2q6r2q4j6q7t1qxNSdwItuwLXuwJ9uxl6o5iFXdnh3YkVXc
U53YQ5XdXZ3ZTV3YlZXcjRXdnRXcVeXdReXci4PYWWXdm2Xch6Xdl/0YpFLu
zwHspJIeyBLuqMEcwqEcxvHsoOEcweIey5Fsr2Iew6IexdFspyJuq8Juo3Fs
rUJupYJuqUlsocmcwgJurqkM1AzO5DQ203Q2VX430SzOZj4HKK/nMI8bay7n
MbfnM5cXMKcbKYcXchEbKrsb6F+SqEzX
            "], "LeafValues" -> CompressedData["
1:eJxVUEsOgkAMhfY1cekVvIVbl24xHgAiEjeYgInxPF7UDv0IM0Pb1+m8vnLo
ns2dqqqad2qa9n2apvZz2Su4jvNjGPvbeXz1Qz8du1qTXzUQ6NG9GDCYWE3B
6tQWSExZpV94lCVigVjEJTIML1xVJkHQ+VUgU4OVZ1eWWXtMBuIW8dwjRrIV
jqWJzgHSLcwsOg9nY7jGEIGU5dwkoRk2z79xCqu3U7i4wM4aallW02wKo8eS
tT/3A1eyFAw=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkl9LAlEQxccwSBIReomyRCx7iDBf2r/uenV3oYde7BMYWD0VWBB9+35z
ksuddWbOnJk519HL5/r1wMy+jjDrzU/Y7Ta/zx2cx4/v7dt2N3t4b+E9YXqW
cWLZ3BrsyiKbW8C7wEbcpR3aOfGguH+DlWAbW9iU2tIq5QqQCXW51Zbi5VSX
fBtsjBeTb+wSbKGzoK7Gr4jeUrnCy2wMU83virMiMwXp3bx3R50ClY4ecjPi
zn9PzFkK/AV9c5BuE7iCnYGYU50yQ2NXIAIZZ4k1WU6+JDYE7Z7v4azOHmue
Zo8o5AXugjvfb15rqqV29cqISMl0Y6oLMBO+A+1b2bU0PaFLsL5YGzCOOIYh
B+e6pcTb+APuCq8LaqiXSuHI1K+CsdBOd3SNtIWrnIjV2ZbScQ7G9SrBJGL2
TCR1XcGuNhhJwaAtXe2e3rpnLZARkRmYWEp4ZSLblq3xekz6r4T/j1LiYzJd
TiZNXZVYr3KjN+hjT8EF4X2jQq/imk40yR/5LlRa
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOwGAgUxXJr27Ztt6+2bZuv1ta2bdu2bdu2fc+2P8lkkrhxh8rNgwCd
Q/1F5UbdAwIDG/WsEvpvlGrfpVmLZoGZc7T898sZ/HMQghKM4GxiMyEISVay
EYrQRCQSYWikcDRUWBpIqi9XeP4oAr9VT5GpqwTUURSiEo3a+qUYRKeWfqqm
figmsaih2FTXd8UhLtUUj6qKTxV9U2UlJBGJSUJa0pGUSkpDRSUjOV+VglRU
0Bel5LPKKzXl9Ell9VFllJ4MfFBpvVdG3qmUMpGZtyqpLJTQGxVXdnLQje68
Vk6KUoxc5OaV8vBSBchLMb1QPvJTVM9VRM9UkKcqRACFeaLCKkKAHquQilOC
RyqokpSiKc0oTRkeqhFlKUclKvNABVSe/KpAPlUkr+4rj6pQlXvKrWpUpyG5
VIOa1KEud5VTtcihO6rNbWVXPbLplhpQn6y6qSy6ocy6rky6psZcVROuKKOa
04LLyqBLakkb2tKK9Lqo1lxQOrWjPV1Iq/PqQCBpdE4dOatOnFFqdSaVTiul
TqkrJ5VCPehJb/rQi+Q6oWQ6rqTqSxKtYS3/kVj96M8AEmkMYzmmgRzVIAYz
hKEM44iGc1gJdUgJNIL4OqiRHNAo9ms0+xRP4xjPXi1nAhPZo3lMIq6mMo3J
xNFuTWGXYmunpjODmexQLM0ipmYTQ9sVXXOIprlE1TZF0XwWsJBFbFVkbdFi
NmspS4ikTYqojVrGBkXQClayXqtYp9WsVXitUTitI6xWawPrCaNVCq2V2sgK
hdIWtvKQR2xjO5cJqR3s5CSn2EUILdcJlmk3e9jLPoLrEMG0VPs5QFAt0UEW
K4gW6TBHMB0FHUN+HPeF+uML9NtP88vPco4z/PT5+uHzdJ4LfPe5+uYX+eqX
+OJz9Nln6wqzdJVrXGemPvkNbnKLj36PD36b9z5Dd5iuu0zTO7/PW5+qB0zR
G5+sx8Sz+PaE1z5JT3nGc17wkhAW0ibqFa95wwS98re89Pd84B0vfLye+0c+
gZl95pl/5Rvj9IWxeurf+cEfnvhPfjFGj320Hvko/WakHvoIOeKBD9d9D2JB
Lbjd82EKZkN114fojg/WbQ9lt3yQbnpoC2NhLZzFshse3iLYQF33iBbJotk1
j2xRbICuen9FtX664v/pske3GBbTLnlfXfQ+uuCx7bz3VhyLa+e8l856Akto
PVXCElliK2AFLYkltXR2xnvotCez5NZdKSy1pbFuSmldlcq66JR31kkPVFrr
pBOe3jJYRstkOS2XZbbjnsWyWkcd82x21Dsoh2W3I95eh72dDnluO+htlc/y
2AFvo7zWWvs9v+3zVtrrhSzAitseL2xFrKV2ewvt8qK204vZDm+u7d5M27yk
bfVStsVLWxlrqs1e1jZ5E5Wzxtro/wNu6aMd
            "], "LeafValues" -> CompressedData["
1:eJxVUDsOwjAMbWM/iZErcAtWRhaGoh6gFaViCVKKhLg9jh0bkc9L/Gy/2DnM
z+Geuq7bdgLD9D6VMn2uezHGvD3WvNzO+bWsSznOvZAXAQZz3YAg9FKHXs3X
QBeMY4ocGJGIiEOJW4rEqRZxi7R8IhCgGviBnZXWNBeD63ETsirbdM8/4W8x
GVEfrPUlJEreaNQvor03plb4E3pqwogy46M4IuH4BYagEkM=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkstKA0EQRSsaRGMMWbgIIZCEwQi6MC50JpmeR8+jwW38gghRVwpREBf+
u6eKUEx1Pe/crur5y+fm9UhEvk5Rm+2P3++3v89nOE8f37u33f7+8b2D94da
SSxX0kqQtZQykErmUktfRuhCcknRt5KgO0QC/pC6c7mk00mEHROPpOEs0GdE
e0QmYHTpz4muyVVYMdVDEAK9EboBpwHbS2bZDB6OXJ9si2R0JWClSElc6xYg
exiXoDq054+B7gjPkcvQKT253NG9xEuQyO4SjGufmiV2j7MLSkVW/+7homcu
M/49AWVtTJW58syQmlNvuSL7cOCmVSfErvFG9DsqCjBvYFcbP71LYxPSmSb2
l8L8MZgpXSWfzriksjbx2AHdgqu9zqI6ES9T/AFfoMMbsxoWC24T7O4FVkVc
rWNwGrZVkKsQPad09Yn2YDmGTWmoeufcUHOsLpZiR/YmlEnOWVOlLBMmoOcM
rLVtvzXGymNgG16SiW1vEdUTm5kjq1vV2cf2BvxBnFyga+OhrFuygb6B7UQn
ukJa41EcJpRZbWqYzm7e2tz0LWneWeXK3khteyzJNbZTfR//WvtcKQ==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOUGAYUBefFtm3btp2NnU2yMTdW08a2bdu2bdu28W7bn5kzZ5I36xTQ
MgTQNdx/CAjsWTw4OLB3jfD/RfmO3YJaBQVnz9P6/9/f4H+HICShCE0FKhKG
sKSkhsIRnnjEJwIBikZ0IlJdkaimyFRVFKpIioqrsmIQkz+Kw2/F4pdi81OV
9EMVFZcK+q7y+qYEJKOcElJWiSijxCQhKaX1VaX0RSWVnBJKQXF9VjGlIjVp
SEtZiiod6clBTjJQRJ9UWB+VkUxkJguFlJVsfFBBvVd23qmA3iq/cpGbNypB
HvJSiMLkI59eqwD5yatXyqOC5NZL5VIRcuqFivFcRXmmHHqq4jxRdpWkFI9V
mkfKpjJk1UNlUTky64HKc1+ZVInKBFgNq0JValCTe8qou6pGdQK4owy6rfSq
RW0WsJBbqkN7OlCXetSnAa1pQ0MacVPp1Ji0uqE0akJTAmnGdaXWNaVSc1Kq
BUFcVQpdUUtakVyXlUxtSapLSqJ2JNZFJVJHOvEXA+hMQnUhmAtKoK50ozd9
OK/unFMvehBfPYmns4qrM4qj0+pLf2LrlPpxUrF0QjH1N/8wlxgayCCOazaD
ia4ZzGQI0TSUYQwnqsYTRcc0gpFE1igiaTQRNYaxjCOCjiq8jiicDmsChzSR
g5rEZKZwQGE1lTDar2lMJ7T2KZT2KqRmEUJ7ZJoD2i35PNx3aT479ccXsZj4
lsCWsJST/PZlLGcvv3wFK9mhn76K1WxnB2tYy3ZtZZvWsYEfvlXr2aLvvpFN
bOabb+Grb9YX36TPvlHb2KBPvl4ffZ12sla72M0H38N7X6N3vo/9rNYBDvLW
V+mNH+IwK/XaV+gIR3nlx3jpxznBcr3wZXrup3jmpznDUp3lMk/9HOdZogss
1hNfpItc4rEv1CO/wlWucZ0Feug3uMkjHnOLB/6A+36be36Hu9zjrs/Xfebp
js/VbX/ILZ+jm/6Ep4S2MDZbz5ilG/6c6/6Cl7ziNSEspL3hLWbX/B3v+c4P
PnDVZ+orH7nin/jMDF32L1zy6bro0/SNqbrgPznvU/SbyfrFJJ3zP5x154xP
lMBO+wSd8vE66eN0wscqlI3RcQ9rxzySRbZwdtRHK7xFsCM+ShFtpA57FDvk
se2gR7VoNkIHPLrFsOHa7zFtnw9TLBuqvR7H9nhc2+1DFM8Ga5cntESWy3Jb
Yktig5TDBiqp/aMslsySWwrb6WksraW0Hf63UtkApba/tN3TWXrrr23eT1s9
g2W0vtrifZTJeiuz9dJmz2qbPJtt9Oy2wXtqvee0dd5Daz2P5bXSVsbyWX7r
ruJWwNZ4YSti3VTQCtlq76pVHqyVXtRWeBcVs85a7iWspHXSMi9lS72jlnhZ
W+zVbJGXs/JWwSpaB1W29lro7VTJ2mqBt1EVa62q1krzvbrN85aa6zWtlnW0
Tlbb5ngHm+11bJbXtXoWpJle3xpYQ5vh7W26N7LG1sSaWlub5oE21VuotTVX
M2tuLSzIpngztbRATfZWNsmbaqI3URtrrAnezsZ7I43zhhrrDTTGO9to7249
rIsFW311tW42yutppNfVCO9pw72O+lkvG+a9bajXVh/ra0O8lgZ7fxvkNTXQ
/wVysQL8
            "], "LeafValues" -> CompressedData["
1:eJxVkD0OwjAMhdvYT2LsFbgFKyNrEQdoRahYgpQiIRbOjn+SElQpcZ+fPzve
z4/xFrquW3dyjNPrmPP0Pg/yc0nrfUnxekrPuMR8mHsRP3IwM/wDPJQTrsJ1
DWBpJmKSm8zXZL2aTa0Ei/9Vvcg1/hFQMoZmCgzSPm6yJNVpCpe9qRilhqhM
be5m7DoBYGAjtoBa1cwrRCOTA+oLsLnb9ZQdebsNq22kPOiyELg+u+xA8Wrg
3hJfX4MTTA==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJw9kltrFEEQhU9MFHcJEqMPkoTEEHfzkAcTUGd2Z3bu3eBr/AURoj4prIII
/ni/Ooo00zV1O3Wqqs8/frv99EDS98dct3c/++327teHGcr7rz/uP99vb959
2UH7zVWp1EIDMmmNLPmONelUFzpUoRNtNOoVd6kbPcJzROQBes1Zao52rJ7T
qiN3QV6Hba4n5O8TP9m+pkLGe6rGlkk7RA1EVToDOyoUREW9CU+NrccXqIGd
tMK7ArPWHpYSX+PIFqQKji+ouUYfwSiRFXIi5troe3qoXTMZOQ0155YJf49s
zeYSeYE9ubuJehlfpytkZcweliUcB76Gr3V0AYcCBp0jIqvUW53D9swVkruM
nrK7LNALphh/mTozqp5gu/a0E7ZLPTPO6I5i2o0rNmY06imVl+wjcTdkdt5V
YNee14qeE5YBT4bZaKa1XmPr/jHP7Gfl3dXe2cZcenfR6CXx/X/OA9wyMbHP
1oyWnlrvfUxkTNSOWi07zeAmn4gf/K4SE3lOzOjuYw+BMEMLxBbbmqjY9oE5
1sxk4R31ZrCLf8MJ9DfuIbviZOy/76klK1sPS+wwmXX21uNlbawt9Af1kFrx

            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
            "], "Children" -> CompressedData["
1:eJwViVOUGAYUBefFtm3btp2NnU2yMTdW08a2bdu2bdu28W7bn5kzZ5I36xTQ
MgTQNdx/CAjsWTw4OLB3jfD/RfmO3YJaBQVnz9P6/9/P4H+HICShCE1DGhGG
sGQlG+GorvgkIDwRiEgkYlNNkamqqEQjClUkVVZ0KslVUTGooD+KSSzK67fK
KQ5xiUdZ/VIZ/VRpJaSUElFSP1RCiUlCUpKRheJKTjGlJBUpKKrvKqLUpOGb
Cuur0vJFmUlHIX1WejJQUJ+UkY/KxAcV0Hvl1zvlU3ZyUInK5CQXFcirt8qj
3OQhL/koTBHyU4CC5NYb5dJr5dQrFeKlcqgoxShDdhUnm0pQkhfKqlJk0XNl
Vmky6Zky6qnK8kTlKE8GPVZ6VSSdHimtqlCVBqTRQ6VWNVKpOgHUoCa1SakH
SqH7qsU9JVcdkqku9bir+txRUt1WEt1SYjWmCfUskZoSyApW0oyEWsgimtOC
IBKoC8G0pBWtia9OxNNNteGG2tKOuGpPHF1XB66pI1cVW52JpSuKqa50YzwT
uKzujCSGehBdPelFb6LpkqLqovrQl3705y+GE0UD+JvBRNYF/cN5RdI5DeSs
BnFGETWEoQwjgk4rvE4pnEYQVicVRic0itGMYSyhNY5QOq6QOqYQmsgkZjCT
o5rMEU1lCqbDQtOQH9J0Dsp9Fn98DnOZzW8/oF8+j5++XwvYp/ns1Q/fo+++
mCXs1jKW8s136avv1BdfzmffoU++itXsZg9r+Ohb+ODbtZZ1vPf1vPMNvPWN
vPFNvPZt2sxWvfIt2so2Xvp2drBZL3wnz32TdrFRz3wv+zjDWfZzgOM89Q06
yGGOsF6HWKcnfpTHvlbHWKNHvloPfZVOsFInOcUDX6HTLNd9P8d5clluu8BF
lumeX+Iyj3jMUt31K1zlGte5xR1fohvc5LYv1i1fpJu+ULe5ww2/y3W/x30e
cM0fctUX6IrP12V/wlPm6Tdz9Yx3vOc5L3jJJZ+ji/6KCz5br3nDeZ+lt8zU
Of/AR75z1j9xxr/wlRn6zHSd9mk65VP1jSk66T/4yWSd8F8c90k65n9wBBbd
YphZCItiUS2khbIIdtRDWxibqCM+QYd9vMJaODvk4xTexuqgj1FEi2QHfLQi
2yjt92i2z0dqr4/QHo9psSyhJbLYttsT2C4frjg2THFtqOLZEMW3wdrpg7TD
E1sSG6jtntSSWWrb5v8ouf2tlJbCtvoAbfFUttn/0iZPY2mtv9JZZsti/ZTe
MlhG66uNnsk2eB+t995a51ltrWezNZ7dclhOW+29tMp7aqXnsbzWQys8n+W3
WrbcC1hBK2NlrZAVtu5a5t1UxIrbUi9qS7yYLfauWuQlbKGXtFIWrNLWRQu8
s+Z7OZvnVayqlbe5XsHmeCdVtI6qZB1U2dprtlezWd5ONa26zfQAq2FtNcPb
aLq31jRvpdpWx6Z6XZviLTXZ61sDa2iNrKkFWpAmeWOb6E1sgrfQeG9mza27
9bDmamEtrZUF2ThvprEeqNbWVF2tidpYWxvj7ay9NVYH62LB1tE6WSON9s42
yhtqpDfQCK+v4V5P3ayuhnlP62V1NNRrq7fV0hCvqT7W1/pZDQ32AA3yfwFV
aQD9
            "], "LeafValues" -> CompressedData["
1:eJxNULsOwjAMTP2QGPkF/oKVkbWID2hFqViKlCIhBv4dX+ykWNU5udrncw7j
s79TSmndGfTD+5Tz8Lns7XJd1se8TLfz8prmKR/HzsivgShC8AEQjkLgC4uk
LF5UKGQWtsxEwf6Bsv10JQ09rX1FzKkQU61t4hcV2mywEs4s4ZPDSi2GDfAd
MgzFGuoDYjcLqvvV7nBkAiR1slthKoNchu3EzYFuj6TNoSuFdjyTtoq2JySa
I3A/PB8TQw==
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkk9P20AQxSdViloURUB7QCWiigIceqG9sOvYXjte21Kv9BOAxJ9TK6VI
iFs/en/zElnenXk78+btzC7v/9w+vjOzvx9Ybu9eN9vt3duvjzg/f788PD1s
f9w8T/D+sVS2tNKiFVZjB2uts4a/Yu1txh5tIKK3jWX8zJ6I6on5hD23E5vg
DcQFW8Mz2AjqmKNzZQTYBxij8Mx+xr62BVZJ/EidJA1rvkbcrqcTXtuRfWPP
xI+wdeIa8c+xV9jf+RvQjN9x4hEbu5DSKzslf4Wd7Itu0aKnkdJIZEBJhGkB
XvJfCklgLREDlvP3oK6nJqYCDVRpOXO+jOas+u/xI9EB9m6vJ6Jgw1eROZBT
g/TKGrEz+Fd1eNfTuFfls5iCHWgOCdv3qeodsY7YQatHnXHaSukhmWusQXO4
Uq7fx61W1Wtu+hmv4aYrKpVode1TMrPmVJFZgK+wKs3evcT0fcYz+D2yQIXr
P9Xdveveo4A1w17KT2KZS00p1qTJNHpFE5h6O5byWj0dNOXGrlmD6jaqkmCd
i6Hev9CAlmPOC/CCyIqu+O28z7vJeu1and5Nx7tRMaGRtxXBItjC/gPYRV00

            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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
UpWDlIoep5xp0EbcX+6uicd5NjU//R+SuT2Z
            "], "Children" -> CompressedData["
1:eJwViVOQGAoAxHZr27Zt27Zt42pfbdu2bdu2bVu7r+8nmUwSN+lYpUUQAF1C
/UOVxj0KBwQ07lU19L8o3aFr85bNAzLnaPX/DyTwv4MgKIIhOG7iFkIgJK7i
GkIhNLIhO8IgLKIgKuxwiICIkMPjrws7Egr5jwv6tyPjlws4GqIjBVIiBvI7
JvL5p/P6h2MhNvI4DuLiu+Phm5MhPhLgqxPiixMjEXL7s3P5k5MgKXL6o3M4
ObL7g7P5vVMhNdLgnbM6LdLhrbM4PTIgKzI7IzL5jTM6EzL4tTMjC9L7ldP5
pdP6hXMgL9I4J1I7F1I5N1I6D1L4uZM7H/KjAAqiMIrgmZO5EJL6qZO4KIrh
ic+gOErgsaehJEphEAajNMqgHxK7LMqhNuqgPCqgFhL5kRO6IiqhMhK4Kqrh
oavggeO7OuK5BuL6vuO4JmL7nmP5rmO6LurhjvuiPhqgK7qhIRqhCZritmO4
MaL7lqP5ppuhIzrhhpujBVqiFVqjLdrhutvgmqP6qqP4iiO7PTrgsiP5kiO6
MyL4osM7AOHcBWF9wWHcHaF93r1wzj1w1j1xxqHcGyF92n1wyiF80sF9wv0x
AIE47mA+5oE46qA+4iEYiSA+7KEYBno44EMegYO2RmE0xkAai7864D8ah/GY
gInY7ynY50mYjN/a61/a45/a7anY5R+ajhnY6ZmYj++ahdmYg7nY4XnY7m/a
5q/a6i9agIVYhMXY4tNYgqXY7PXY5GXY6HVYjs/a4BVYiVVY79VY509a6zVY
47VY7Y9a5Q/agI3YhM04hMPYgq3Yhfda6Xda4W3Yjh3Yibda7jda5tda6t3Y
g73Yh/04gFda4pda7Bda5INY6Oc6gqM4hWda4GM4gZOY7+OY56ea6yea48ea
7Uea5Yc6i3M4jwea6fua4QuY7ou4hHua5su4grua6jua4uu4gdua7Fua5Ju6
jRv6hu+4g7u4h/v4gut6gGt6iEeY6Kt6jCd4hdd4imeY4JcY7+cY5xcY6ysa
48sa7Ut6g7f4gIsa5Qsa6XcY4fcY7vP6iHP6hM8Y5rMa6jP6itMa4lP6gZ/o
xu78hd8oxdL8g78IzwgUTioYg3OwDZAMwhMa5OMKymMa6KMKdAiG5RENcEiG
YmiG4WH19yH180GF4wH19X5FZCQWYmFGZhQmZTJGZTQmYEL28T5F517FYEz2
9h71cizGZhz2dFz28G51dzzG5y518051dSJ28Q4l5nYFOAk7e5uSMwWzMwdT
MhWzMCtTMw0zc6vScovSMwM7OR07erMycpM6eKMycYPae73aeZ2yca3aeo3a
eLVae5VyMhdbOTfzMC9beqVaOB8LcoXyc7kKcJmae6maeYmKcLGaepGKcqGa
uBiLswQbuyQbeYEaer7KsCwbswnLsTxrsw4rcJ4auAYrshIrswrruxrruSrr
eq7qeI6qc7Zqe5ZqshZreaZqeobqsh4bcbpqeJqquz4bcKqquSGreoqqeLKa
cpJasw2bsTkruwVbcqIqeYJacbwqepzash0reKzaswPLe4w6crTKuSvLuhM7
c5TKOICl3YWlPFIlPUI92JOBHK5e7M0SHqY+HKriHsC+HKJ+HKz+HKRiHqii
DlQRD9B/jWMI+Q==
            "], "LeafValues" -> CompressedData["
1:eJxVkEEOgkAMRRn6m7jkCt7CrUu3GA8AcSRuxgRMjEtvbqed1jiQMvw//X2w
nx/jre+6bttJGafXcV2n93mQl0vZ7kvJ11N55iWvhzmJ+JHCYFkAg0CyUiKW
nSiAGVyP6N2e1mFbXSpRSBZJYaljXRxpHgUbbRB/M/WCs4XSaNUgC6+dROhr
O5ED1a7GYlMAx0d8UYNRm/wQYpA5TMHmf0FL78wIzYMZ+E1oEKE1Ngv8ApqW
E3c=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
         MachineLearning`DecisionTree[<|"FeatureIndices" -> CompressedData["
1:eJwtkttOAkEMhqug8QBEEy8MEJEgxMQL9QIXlmV3Zg+TeKtPgAnqlSZoQnx7
v3bJpN228/fvYWf49v3yvi8iP0eol9XWbzarv9djnOev3/XHevP49LmHt0Ut
xEsisRRYpWSylAuZyIkEtJec05MKydE3ksqI42QG7pacrsy56eNX5FZ4MZgc
phknIBdEG8RKvISsAplzziXCfgDrucupOOXrzAtwtYiNZCyX0iQW0BW3+k3I
jPD6sMys3gDtwTYMo7UmeClR7ahFTKecw9eGNcGv0FN0apUCp8TTGTy6tBk8
LBl2Xw7xNBLkmmiBpNh9ObNplthtaiU2sTcGnfCRW8e3RIY2Q2HYwmbUXWfS
IZIQCeT3LFN7cVahtH0UZOtUQ6QFvs7MkbDjqqz7iW09BdWxafeMPSKyhFv3
lIG5h+2SeG78A3DOmJzNWdpNZfXqObTrXE6Z1IM7IFe3UiPcbn9dOTa845+O
dvut/SbYK6wFiAU3MUwdsmK6uAOn7y7Y3/RUSNGRReo5xuQE8NqHvqYu/SaW
nbKrwjaXg9P3FKHHYHQ3A7J69ipjGDKQGbazf/EPMmNZ1Q==
            "], "NominalSplits" -> {}, 
           "NumericalThresholds" -> CompressedData["
1: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

            "], "Children" -> CompressedData["
1:eJwViWOYEAgYBufLtm3brs3GZrfVZm7Y66rrmG3btm3btm1+79WfmWeeSd2y
a2CbMECPSD8RGBQaEBIS1Kd25J9RqUvP4LbBIbkLtPv1Qw1+OQxhCUd4mtKM
CEREakIkIlOCkkQhKslITjRqKh7xiU4NxSAmsaguVzXFpqp+KA5xqaLvqqwE
VFISkvJNCUlERX1VYr6ogj6rvD6pnFKQktzkIRVl9VFllJrSSkNaPigdGcjI
e6XnnQKUicy8VSllIStvlIvXykZ2SuqVSigHOXmp4nqhYnquospLPgpSiPwU
0TMVVgEK6akK6okK6LEKU4T8eqSiFCOfipNXD5VHpcitB8qlAEpThrI0ojHl
KE9NalGBnLqvHKpIJe6pMtXJripkU1WyqhpZdFeZVYNMuqOMuq0MCqQ2dahL
PepzS+l1U+l0Q2l1XQ24poZcVRpdUWpdVipdUko1pwU5LKcF0ZKZzKIVrbmo
3gSTQu3pQBuSqy3J1I6kuqAk6kgnziuxzqkzXUmkLiTUWSVQN+LrjLpzWiH0
IJ5OqScn1YsTiqtQfuO4+tCfOPqd2OpLLB1TP44qpv5gAH/yFyMYyRH9zWHF
0D9E179E039E1UCi6JAGMZghDCWyDmoYBxRJw4mo/YqgfQqvvRrFaMJpDGG1
R2MZRxiNx7RbE9iliUxiMjs1hWmgqch3yH27prNNM9iqHz6bOezju8/lm2/R
LuYxn81awCK++kK++CZ99sUsYSnL2MJWlvPJN2oFG/TRV7KK1Xzw9VrDOr33
taxjrdazmXe+gbe+kU2s0Rtfrde+Sq98pbaxQjtYru0s00tfqp0s0QtfrN3s
YS+L9NwX6pnv5wAHOcQCZbTDHCGuxbOjHCO2PfXjnOAVrznJKZ7yjNOcYb7u
cZZznOeJz9Njn6tHfoGLXOKh3+I2l3ngV7jvV7nnc3SN69z12brBTe74LN32
mbrDDN3y6brLNN30+zxgqh7yiBs+Rdf9Mdf8CVd9sq74JF32iXrOBL3gJZd8
vC76Gy74e877W875O876OJ3xD3zkE6f9K9/4zCn/wkkfqxP+neP+g2M+Rkfd
OeKjJTCzMHbYY9khD2vhLLwd9FGKbCMVwSLaAR+hSDZc+z2KRbVots+Haa9H
txg2VHt8iGLaYO32QdrlAxXH/tNOj28J7F/t8ISWyP7Rdk9s2zyVpbYkltSS
2Vb/W1s8uaWwv7TZ/1RKG6BNnsbS2h9Kb/210dPZBu+n9Z7B1nlfrfVMtsZ/
V2broyyW1bLZb1rtocpuvbXKc1lu66XulsfyWnNrYfksv/VUEytgK724lbCC
tsJ7qJAVtuVexJZ5iIpadxWzblrqXbXES9piL2UB1kWlraJVss4qY2WtnJW3
RV7BFnonLfCOmu+VrYp10Dxvr6pWw2paNatu7TTX22qO17JAa2izvbbN8jaa
6XWsrgWrntW3Gd5a072BTfNWmuqNrLG11BQP0mRvoabWXM2smSZ5kE30pprg
La2VtbZga6Lx3lhtrKON87Y21hupnbW3DtZQY7yBRnt9dbLONsq7WFfrZiO9
nkZ4XQ33EOthPa2X1VFvq61hHqihHmpDvJYG+/+PH/bz
            "], "LeafValues" -> CompressedData["
1:eJxNkEkOwjAMRRsPEkuuwC3YsmRbxAFaESo2QUqRgNtjO3ZDBjvO8P2cw/wc
7zAMw7oTM07vU63T97KX4FrWx1Ly7Vxeecn1OCfZ/IihxERMarSFYzBrYTgU
TyjdNmxoM4eUkBGAgFAuyFpFbdgMHUvF7ZmnCykOQRflBqZ5Xcom94sKhBZj
B8JWgQOwS9gJbsU4h5crxxDloOJ32GDZkNonxXP/sr8SesjMnSDUXATpB8he
Eyc=
            "], "RootIndex" -> 1, "NominalDimension" -> 0|>]}, "Processor" -> 
       MachineLearning`MLProcessor[
        "FirstValues", <|"Info" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

             "], "Type" -> "NumericalVector"|>, "Key" -> 
          "(f6(f1f2)(f3f4f5f7))", "Invertibility" -> "Perfect", 
          "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "OOBConfusionMatrix" -> {{0.2000023629943273, 0.19999940925141813`, 
        0.1934842771968276, 0.08351338782610179, 0.1304750811007152}, {
        0.19999940925141813`, 0.2000023629943273, 0.19577029519636183`, 
        0.08619515855055168, 0.13086047208468582`}, {0.19999940925141813`, 
        0.19999940925141813`, 0.20891775621618303`, 0.10569894563745995`, 
        0.1366413368442452}, {0.19999940925141813`, 0.19999940925141813`, 
        0.2066288806941494, 0.43336378768421174`, 0.24609237629190286`}, {
        0.19999940925141813`, 0.19999940925141813`, 0.19519879069647827`, 
        0.2912287203016748, 0.35593073367845096`}}, "Calibrator" -> 
       MachineLearning`CalibratorFunction[
        "TemperatureScaling", <|"Theta" -> 3.359908127117532|>], "Method" -> 
       "RandomForest", "PostProcessor" -> 
       MachineLearning`MLProcessor["Identity"], 
       "Options" -> <|
        "FeatureFraction" -> <|
          "Value" -> 70^Rational[-1, 2], "Options" -> <||>|>, 
         "LeafSize" -> <|"Value" -> 5, "Options" -> <||>|>, 
         "TreeNumber" -> <|"Value" -> 50, "Options" -> <||>|>, 
         "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
         "Implementation" -> <|"Value" -> "Default", "Options" -> <||>|>|>|>, 
     "TrainingInformation" -> <|
      "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
       Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
       "PreprocessingTime" -> 0.432993`6.088025868865628, "LossName" -> 
       "MeanCrossEntropy", "BestModelInformation" -> 
       Dataset[<|
         "MeanCrossEntropy" -> 
          Around[1.1232324204722235`, 0.009466922208269942], "Accuracy" -> 
          Around[0.572563025320072, 0.021480373142992424`], "EvaluationTime" -> 
          0.000012962269489304084`, "TestSize" -> 1052, "ModelMemory" -> 
          695544, "ModelUtility" -> -0.8112491945459854, "TrainingSize" -> 
          4209, "TrainingTime" -> 3.1622776601683795`, "TrainingMemory" -> 
          9495088, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
            Around[1.1232324204722235`, 0.006694124890433201]}, 
          "AccuracyHistory" -> {
            Around[0.572563025320072, 0.015188917511827335`]}, 
          "Configuration" -> {
           "RandomForest", "FeatureFraction" -> Automatic, "LeafSize" -> 
            Automatic, "TreeNumber" -> Automatic, "DistributionSmoothing" -> 
            0.5, "Implementation" -> Automatic}|>, 
         TypeSystem`Struct[{
          "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
           "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
           "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
           "AccuracyHistory", "Configuration"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}]}], <||>], "Configurations" -> 
       Dataset[<|<|
           "Value" -> "RandomForest", 
            "Options" -> <|
             "FeatureFraction" -> <|"Value" -> Automatic|>, 
              "LeafSize" -> <|"Value" -> Automatic|>, 
              "TreeNumber" -> <|"Value" -> Automatic|>, 
              "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
              "Implementation" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.3159034285993942`, 0.0035390892928730236`], 
               "Accuracy" -> Around[0.5218788993206083, 0.009711134652680625],
                "EvaluationTime" -> 9.08872960672905*^-6, "TestSize" -> 5251, 
               "ModelMemory" -> 85952, "ModelUtility" -> -0.9682736010416615, 
               "TrainingSize" -> 10, "TrainingTime" -> 0.19952623149688792`, 
               "TrainingMemory" -> 224056, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.3159034285993942`, 0.0025025140382152183`]}, 
               "AccuracyHistory" -> {
                 Around[0.5218788993206083, 0.006866809165926137]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.2476829358416233`, 0.02199309997251438], "Accuracy" -> 
               Around[0.46187306271188105`, 0.027804190587577472`], 
               "EvaluationTime" -> 0.00001995262314968879, "TestSize" -> 900, 
               "ModelMemory" -> 93242., "ModelUtility" -> -0.9180215221801857,
                "TrainingSize" -> 40, "TrainingTime" -> 0.01687485473088055, 
               "TrainingMemory" -> 230984., "ExperimentCount" -> 3, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.2678156664383153`, 0.011775505231981237`], 
                 Around[1.2701664747254497`, 0.008308253057835292], 
                 Around[1.205066666361105, 0.008926951104249185]}, 
               "AccuracyHistory" -> {
                 Around[0.4843456025063813, 0.035250137156328146`], 
                 Around[0.41705599100330265`, 0.028118376036333992`], 
                 Around[0.4842175946259593, 0.024834270850209762`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.181812599493804, 0.004148048849304813], "Accuracy" -> 
               Around[0.4729201378288387, 0.020505657926428257`], 
               "EvaluationTime" -> 0.00001995262314968879, "TestSize" -> 1800,
                "ModelMemory" -> 126136., 
               "ModelUtility" -> -0.8609728655976949, "TrainingSize" -> 200, 
               "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
               617581.3333333333, "ExperimentCount" -> 2, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.1813811757772057`, 0.005955373046281903], 
                 Around[1.1822440232104023`, 0.0057205346558892]}, 
               "AccuracyHistory" -> {
                 Around[0.4560594515794522, 0.017480230318279576`], 
                 Around[0.4897808240782251, 0.015675815953872206`]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.1403313747565471`, 0.004563809646715425], "Accuracy" -> 
               Around[0.5871457838383077, 0.010656954921171578`], 
               "EvaluationTime" -> 9.691883841841186*^-6, "TestSize" -> 4261, 
               "ModelMemory" -> 262216, "ModelUtility" -> -0.8253724585332893,
                "TrainingSize" -> 1000, "TrainingTime" -> 0.6309573444801932, 
               "TrainingMemory" -> 2532888, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.1403313747565471`, 0.003227100749237059]}, 
               "AccuracyHistory" -> {
                 Around[0.5871457838383077, 0.007535605091559771]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.1232324204722235`, 0.009466922208269942], "Accuracy" -> 
               Around[0.572563025320072, 0.021480373142992424`], 
               "EvaluationTime" -> 0.000012962269489304084`, "TestSize" -> 
               1052, "ModelMemory" -> 695544, 
               "ModelUtility" -> -0.8112491945459854, "TrainingSize" -> 4209, 
               "TrainingTime" -> 3.1622776601683795`, "TrainingMemory" -> 
               9495088, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.1232324204722235`, 0.006694124890433201]}, 
               "AccuracyHistory" -> {
                 Around[0.572563025320072, 0.015188917511827335`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.000012962269489304084`, "MeanCrossEntropy" -> 
              Around[1.1232324204722235`, 0.009466922208269942], 
              "ModelMemory" -> 695544, "TrainingMemory" -> 9495088, 
              "TrainingTime" -> 4.152185478383522|>, "Index" -> 1|>|>, 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 5]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
               "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
               "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory",
                "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
             5], 
            
            TypeSystem`Struct[{
             "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
              "TrainingMemory", "TrainingTime"}, {
              TypeSystem`Atom[Real], TypeSystem`AnyType, 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real]}], 
            TypeSystem`Atom[Integer]}], 1], <||>], "MaxTrainingSize" -> 5261, 
       "PreprocessorEvaluationTime" -> 2.125*^-6, "PreprocessorMemory" -> 
       194128, "InputDimension" -> 70, "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -0.8693687048950245, "VariableBudget" -> 
       True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
       False, "NaturalStop" -> True, "AbortStop" -> False, 
       "LastReportingTime" -> 3.879423197631726`16.34134214756153*^9, 
       "RoundPartitioning" -> 
       Dataset[{<|
          "TrainingSizes" -> 10, "TimeBudgets" -> 0.00664349676541364, 
           "ElapsedTimes" -> 0.237883, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 40, "TimeBudgets" -> 0.03321748382706821, 
           "ElapsedTimes" -> 0.100396, "ExperimentCounts" -> 3|>, <|
          "TrainingSizes" -> 200, "TimeBudgets" -> 0.16608741913534097`, 
           "ElapsedTimes" -> 0.187903, "ExperimentCounts" -> 2|>, <|
          "TrainingSizes" -> 1000, "TimeBudgets" -> 0.8304370956767049, 
           "ElapsedTimes" -> 0.756365, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 4209, "TimeBudgets" -> 4.152185478383522, 
           "ElapsedTimes" -> 3.024812, "ExperimentCounts" -> 1|>}, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> 
     None, "Log" -> <|
      "Example" -> 
       MachineLearning`MLDataset[<|
         "f1" -> <|
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"}, "ID" -> 
            4840131171699015203|>, 
          "f2" -> <|
           "Type" -> "Nominal", "Weight" -> 1, 
            "Values" -> {"Information Technology"}, "ID" -> 
            5042234179079910413|>, 
          "f3" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537}, "ID" -> 
            8143623558489070887|>, 
          "f4" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {10.982}, "ID" -> 
            7788679715678402894|>, 
          "f5" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.982}, "ID" -> 
            4867089090251939422|>, 
          "f6" -> <|
           "Type" -> "Text", "Weight" -> 1, "Values" -> {"Estimated data"}, 
            "ID" -> 1244584425521089410|>, 
          "f7" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {624.605427784142}, "ID" -> 824640885889355554|>|>, <|
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False|>], "TrainingTime" -> 4.771377, 
       "MaxTrainingMemory" -> 13123832, "DataMemory" -> 8209648, 
       "FunctionMemory" -> 972152, "LanguageVersion" -> {13.1, 0}, "Date" -> 
       DateObject[{2022, 12, 7, 17, 33, 17.645801`7.99921636169828}, 
         "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, "ProcessorType" -> 
       "ARM64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
       "Evaluations" -> {}|>|>]]]], "Output",
 CellChangeTimes->{
  3.878619160734618*^9, 3.8786192245310097`*^9, {3.878715800641226*^9, 
   3.87871584525163*^9}, 3.878715887355948*^9, 3.8788055501495533`*^9, 
   3.87880572388905*^9, 3.878806815602689*^9, 3.8788070723199997`*^9, 
   3.8788071152477303`*^9, 3.878811629852172*^9, 3.879149119975829*^9, 
   3.879325483862817*^9, 3.879333011347499*^9, {3.879354686929783*^9, 
   3.879354696685204*^9}, 3.879419598365403*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"796e1529-b89f-4609-8286-405606559a50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cm", " ", "=", 
    RowBox[{"ClassifierMeasurements", "[", 
     RowBox[{"cRisk", ",", "testset"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Test", " ", "our", " ", "classifier", " ", "on", " ", "the", " ", "test", 
    " ", "set"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<The accuracy is: \>\"", ",", 
    RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}], " ", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "the", " ", "accuracy", " ", "of", " ", "our", " ", "model"}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"AccuracyAss", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"AccuracyAss", ",", " ", 
     RowBox[{"\"\<RandomForest\>\"", "->", 
      RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "the", " ", "Confusion", " ", "Matrix"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.878619179671941*^9, 3.8786191833045883`*^9}, {
   3.8786192222213593`*^9, 3.878619249704307*^9}, {3.878619342065884*^9, 
   3.878619346687873*^9}, {3.878619378625424*^9, 3.8786193862338676`*^9}, 
   3.878805729554159*^9, 3.878805819596631*^9, {3.878806143346759*^9, 
   3.878806195391272*^9}, {3.878806763106118*^9, 3.878806811062291*^9}, {
   3.878806841172628*^9, 3.878806863962813*^9}, 3.878807078662706*^9, 
   3.878807117804838*^9},
 CellLabel->
  "In[167]:=",ExpressionUUID->"99020af7-66ff-4247-b63c-5a1edaef53dc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The accuracy is: \"\>", "\[InvisibleSpace]", 
   "0.6083650190114067`"}],
  SequenceForm["The accuracy is: ", 0.6083650190114067],
  Editable->False]], "Print",
 CellChangeTimes->{3.878806864557898*^9, 3.878807079067741*^9, 
  3.87880711843373*^9, 3.87881163245848*^9, 3.879149124769641*^9, 
  3.879161018527553*^9, 3.87932548708288*^9, 3.879333014353814*^9, 
  3.87935470072289*^9, 3.879419602123886*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"b0268f54-879f-4440-b689-4e6569187364"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGwI+2FNKP+oLsLtz7o19qpHBhNg5D+x38zAeyg8v
sV+qnyVjaPHG/sut2bXhL57Yr+r+t2Hu+hMU24dOP6wSWef+8JY9zEeS2Xxb
F4m/tX83x9+2ducLe6+8yBbe6NtUsy9xZvvq81lv7T8neTVcZX9lbzJ3y8VZ
Wx/Ym+xfs3+z2Dt7Z5v9M2InvrF/tnPWOnH/51Sz9zT34X+Z59/aW4Yfq/jT
/Np+xsP3NzMnPbGfUzSt4W/sO3tfxR079s17a288ybX5KPcrqoczOo3LXgC0
6qWs
   "], {{0, 0}, {5, 5}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "\"B\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.008482563619227144`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.9`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", "B", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.008482563619227144}], 
         Row[{"Row fraction = ", 0.9}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["46", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "46", "\" examples of \"", "\"C\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.043355325164938736`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.9019607843137255`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{46, " examples of ", "C", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.043355325164938736`}], 
         Row[{"Row fraction = ", 0.9019607843137255}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["610", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "610", "\" examples of \"", "\"D\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.5749293119698398`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9145427286356822`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7060185185185186`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{610, " examples of ", "D", " correctly classified"}], 
         Row[{"Precision = ", 0.5749293119698398}], 
         Row[{"Recall = ", 0.9145427286356822}], 
         Row[{"FScore = ", 0.7060185185185186}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["396", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "396", "\" examples of \"", "\"E\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.37323279924599434`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.6757679180887372`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{396, " examples of ", "E", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.37323279924599434`}], 
         Row[{"Row fraction = ", 0.6757679180887372}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003937007874015748`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "A", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.003937007874015748}], 
         Row[{"Row fraction = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003937007874015748`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.1`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "B", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.003937007874015748}], 
         Row[{"Row fraction = ", 0.1}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "\"C\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.01968503937007874`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.09803921568627451`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", "C", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.01968503937007874}], 
         Row[{"Row fraction = ", 0.09803921568627451}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["57", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "57", "\" examples of \"", "\"D\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.22440944881889763`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.08545727136431784`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{57, " examples of ", "D", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.22440944881889763`}], 
         Row[{"Row fraction = ", 0.08545727136431784}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["190", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "190", "\" examples of \"", "\"E\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7480314960629921`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.3242320819112628`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.45238095238095244`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{190, " examples of ", "E", " correctly classified"}], 
         Row[{"Precision = ", 0.7480314960629921}], 
         Row[{"Recall = ", 0.3242320819112628}], 
         Row[{"FScore = ", 0.45238095238095244`}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "A"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "10", "\" example\"", "\"s\"", "\" of class \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{10, " example", "s", " of class ", "B"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "51", "\" example\"", "\"s\"", "\" of class \"", "\"C\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{51, " example", "s", " of class ", "C"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "667", "\" example\"", "\"s\"", "\" of class \"", "\"D\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9145427286356822`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{667, " example", "s", " of class ", "D"}], 
        Row[{"Recall = ", 0.9145427286356822}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "586", "\" example\"", "\"s\"", "\" of class \"", "\"E\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.3242320819112628`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{586, " example", "s", " of class ", "E"}], 
        Row[{"Recall = ", 0.3242320819112628}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "A"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "B"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"C\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "C"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1061", "\" example\"", "\"s\"", "\" classified as \"", "\"D\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.5749293119698398`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1061, " example", "s", " classified as ", "D"}], 
        Row[{"Precision = ", 0.5749293119698398}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "254", "\" example\"", "\"s\"", "\" classified as \"", "\"E\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7480314960629921`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{254, " example", "s", " classified as ", "E"}], 
        Row[{"Precision = ", 0.7480314960629921}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{4.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"C\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"D\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"E\"", BoxRotation -> 0.], TraditionalForm]}}, {{4.5, 
       FormBox["1", TraditionalForm]}, {3.5, 
       FormBox["10", TraditionalForm]}, {2.5, 
       FormBox["51", TraditionalForm]}, {1.5, 
       FormBox["667", TraditionalForm]}, {0.5, 
       FormBox["586", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["1061", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["254", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"C\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"D\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"E\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->13,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->228.,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.878619184460875*^9, 3.878619347255011*^9, 3.878619387156837*^9, 
   3.878715848704851*^9, {3.878715890521706*^9, 3.8787158953838463`*^9}, {
   3.878805538696899*^9, 3.878805553604134*^9}, 3.878806818221781*^9, 
   3.878806864604879*^9, 3.878807079111846*^9, 3.878807118477005*^9, 
   3.878811632503502*^9, 3.879149124818185*^9, 3.879161018757894*^9, 
   3.879325487125759*^9, 3.879333014394899*^9, 3.8793547007651587`*^9, 
   3.879419602180521*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"4f6e74c0-2935-4d26-858a-866c6dbaa690"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SupportVectorMachine", "Subsubsection",
 CellChangeTimes->{{3.878805416699134*^9, 3.878805417721744*^9}, {
  3.8788071343093243`*^9, 
  3.8788071382069473`*^9}},ExpressionUUID->"707033d6-fc97-4519-873d-\
86d56ff114d1"],

Cell["Train a classifier using a support vector machine", "Text",
 CellChangeTimes->{{3.878805704170437*^9, 3.8788057223306637`*^9}, {
  3.878805766632689*^9, 3.87880578974465*^9}, {3.8788071511686087`*^9, 
  3.878807154470745*^9}},ExpressionUUID->"072a572c-19ec-4e50-8160-\
bd35294883af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cRisk", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"trainingset", "->", "\"\<Ratings\>\""}], ",", 
    RowBox[{"Method", "->", "\"\<SupportVectorMachine\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "cRisk", "]"}]}], "Input",
 CellChangeTimes->{{3.8786185865414057`*^9, 3.878618597824006*^9}, {
   3.878618646892776*^9, 3.878618648994371*^9}, {3.878618877270843*^9, 
   3.878618880432907*^9}, {3.878618998083866*^9, 3.878619004451974*^9}, {
   3.8786191510115213`*^9, 3.878619159945651*^9}, {3.8786192237272882`*^9, 
   3.878619223941098*^9}, 3.8788071411539087`*^9},
 CellLabel->
  "In[171]:=",ExpressionUUID->"0ad5282a-88fd-4696-b81a-c71cc5893931"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Text\"", ",", "\"Numerical\""}], 
                    "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                    "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", 
                    "\"E\""}, "RowWithSeparators"], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Text\"", ",", "\"Numerical\""}], 
                    "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                    "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", 
                    "\"E\""}, "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["5261", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 4431576, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 4431576, 
            6420330498715651700304158268670885977637260306666283675584, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 6420330498715651700304158268670885977637260306666283675584,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878619160734618*^9, 3.8786192245310097`*^9, {3.878715800641226*^9, 
   3.87871584525163*^9}, 3.878715887355948*^9, 3.8788055501495533`*^9, 
   3.87880572388905*^9, 3.878806815602689*^9, {3.8788071459712963`*^9, 
   3.878807157009053*^9}, 3.878811636198832*^9, 3.8791492018173523`*^9, 
   3.879161026375566*^9, 3.8793254916927137`*^9, 3.8793330181206427`*^9, 
   3.879354706216084*^9, 3.8794196202053747`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"4993e691-31f4-4ea6-bba3-27938d4d0545"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Data type"], 
                  TextCell["Data type"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{
                  InterpretationBox[
                   Cell["Mixed"], 
                   TextCell["Mixed"]], 
                  StyleBox[
                   
                   TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                   GrayLevel[0.5], StripOnInput -> False]},
                 "RowDefault"],
                TagBox[
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                 Short[#, 10]& ]],
               Annotation[#, 
                
                Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                  "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classes"], 
                  TextCell["Classes"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",", "\",\"", 
                InterpretationBox[
                 Cell["A"], 
                 TextCell["A"]], 
                InterpretationBox[
                 Cell["B"], 
                 TextCell["B"]], 
                InterpretationBox[
                 Cell["C"], 
                 TextCell["C"]], 
                InterpretationBox[
                 Cell["D"], 
                 TextCell["D"]], 
                InterpretationBox[
                 Cell["E"], 
                 TextCell["E"]]},
               "RowWithSeparators"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"41.5", "2.6"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   41.4885604654965050031`3., 2.6092451394075526494`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Method"], 
                  TextCell["Method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                InterpretationBox[Cell[
                 "SupportVectorMachine",ExpressionUUID->
                  "2674bcdf-8a44-437b-9a0b-8cbf4e5f0620"],
                 TextCell["SupportVectorMachine"]],
                StyleBox[
                 TagBox[
                  
                  GridBox[{{"\"KernelType\"", "\"RadialBasisFunction\""}, {
                    "\"GammaScalingParameter\"", "0.0025939792148579957`"}, {
                    "\"SoftMarginParameter\"", "0.1`"}, {
                    "\"PolynomialDegree\"", "3"}, {
                    "\"BiasParameter\"", "1"}, {
                    "\"MulticlassStrategy\"", "\"OneVersusOne\""}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                   FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                 "Verdana", StripOnInput -> False]],
               Annotation[#, 
                Style[
                 
                 Grid[{{"KernelType", "RadialBasisFunction"}, {
                   "GammaScalingParameter", 0.0025939792148579957`}, {
                   "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                   "BiasParameter", 1}, {
                   "MulticlassStrategy", "OneVersusOne"}}, Alignment -> Left, 
                  Frame -> All, FrameStyle -> GrayLevel[0.84], 
                  Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"6.82`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"8.4`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}], "examples per millisecond", 
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.8468377464663657817`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0372358163105176512`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.7723661138453304931`3.",
                   "\", \"", "0.9213093790874010702`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.7723661138453304931`3., 
                  ", ", 0.9213093790874010702`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Model memory"], 
                  TextCell["Model memory"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"4.43`", "\"MB\"", "megabytes", "\"Megabytes\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training examples used"], 
                  TextCell["Training examples used"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"5261", "\"examples\"", "examples", "\"Examples\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training time"], 
                  TextCell["Training time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"15.5`", "\"s\"", "seconds", "\"Seconds\""},
               "Quantity"]},
             {
              ItemBox[
               
               DynamicModuleBox[{
                MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                DynamicBox[ToBoxes[
                  Show[
                   Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4696675416614504}, {
                    3.6888794541139363`, 0.3047296514416955}, {
                    5.298317366548036, -0.16624616529404332`}, {
                    6.907755278982137, -0.08563470761566784}, {
                    8.344980368770571, -0.04666325254236166}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.4696675416614504}}, {{3.6888794541139363`, 
                    0.3047296514416955}}, {{
                    5.298317366548036, -0.16624616529404332`}}, {{
                    6.907755278982137, -0.08563470761566784}}, {{
                    8.344980368770571, -0.04666325254236166}}}]}}}, {{}, \
{}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 0.46473606969924663`}, {
                    2.302585092994046, 0.4745748135013611}, {
                    2.302585092994046, 0.4745748135013611}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, 0.28724331628541233`}, {
                    3.6888794541139363`, 0.3219154622247537}, {
                    3.6888794541139363`, 0.3219154622247537}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.298317366548036, -0.21121259636599707`}, {
                    5.298317366548036, -0.12321500399578304`}, {
                    5.298317366548036, -0.12321500399578304`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.907755278982137, -0.12790582371615014`}, {
                    6.907755278982137, -0.04507820507820977}, {
                    6.907755278982137, -0.04507820507820977}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.344980368770571, -0.10148414309227675`}, {
                    8.344980368770571, 0.0053078588833647125`}, {
                    8.344980368770571, 
                    0.0053078588833647125`}}]}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0725280624560205`, -0.2160100216925911}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 
                    8.568076401730806}, {-0.2160100216925911, 
                    0.4696675416614504}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.5000791916395335}, {
                    3.6888794541139363`, 0.42251677911006047`}, {
                    5.298317366548036, 0.41488560465496505`}, {
                    6.907755278982137, 0.5262963580011732}, {
                    8.344980368770571, 0.4890908804476506}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.5000791916395335}}, {{3.6888794541139363`, 
                    0.42251677911006047`}}, {{5.298317366548036, 
                    0.41488560465496505`}}, {{6.907755278982137, 
                    0.5262963580011732}}, {{8.344980368770571, 
                    0.4890908804476506}}}]}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0725280624560205`, 0.38409011016312194`},
                     DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 8.568076401730806}, {
                    0.38409011016312194`, 1.}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.47414959233541343`}, {
                    3.6888794541139363`, 0.3149644762900455}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00009011420315322913}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4767156441259213}, {
                    3.6888794541139363`, 0.31326623921712116`}, {
                    5.298317366548036, -0.12994501595143715`}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.013194999629809353`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.5328521548383721}, {
                    3.6888794541139363`, 0.4265922709574424}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.019807803464226916`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.47244078220651076`}, {
                    3.6888794541139363`, 0.3316120889356624}, {
                    5.298317366548036, -0.1413108684900533}, {
                    6.907755278982137, -0.063551901206377}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010161972117626893`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.47051417926791583`}, {
                    3.6888794541139363`, 0.31158724872970217`}, {
                    5.298317366548036, -0.15024473129873053`}, {
                    6.907755278982137, -0.0428324695682616}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0019297557543388362`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.47187837688681195`}, {
                    3.6888794541139363`, 0.3120603845469366}, {
                    5.298317366548036, -0.16112671643694673`}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00034035898985872864`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4904903012932508}, {
                    3.6888794541139363`, 0.3307648551606174}, {
                    5.298317366548036, -0.04376147464040597}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.01671363178733327}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4696675416614504}, {
                    3.6888794541139363`, 0.3311287078104126}, {
                    5.298317366548036, -0.1041835648543012}, {
                    6.907755278982137, -0.07789024288358207}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0003772458988388974}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.5035529150403963}, {
                    3.6888794541139363`, 0.37869919716265354`}, {
                    5.298317366548036, -0.028313383819584273`}, {
                    6.907755278982137, 0.0013966499772425113`}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.007753724652886887}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.47598946920084856`}, {
                    3.6888794541139363`, 0.3490484304396635}, {
                    5.298317366548036, -0.11163043176326658`}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.007349632636304202}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.030679774997896203`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4713635206404123}, {
                    3.6888794541139363`, 0.3047296514416955}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.008892048386752567}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.266747752497686, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4747884452833101}, {
                    3.6888794541139363`, 0.32963814077782655`}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.015057956811368681`}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5028157299974758, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4712887822342799}, {
                    3.6888794541139363`, 0.3149469522540909}, {
                    5.298317366548036, -0.16624616529404332`}, {
                    6.907755278982137, -0.08563470761566784}, {
                    8.344980368770571, -0.04666325254236166}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0025939792148579957`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7388837074972656, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.3259368490564235}, {
                    3.6888794541139363`, 0.3259368490564235}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0046381162805087806`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9749516849970554, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.4064666890951266}, {
                    5.298317366548036, 0.012452929650640657`}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.019660952476180094`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.21101966249684523`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.3158026112701851}, {
                    3.6888794541139363`, 0.3158026112701851}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.006991033017579088}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.44708763999663503`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.3192266006267191}, {
                    3.6888794541139363`, 0.3192266006267191}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.011633634020500955`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6831556174964248, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.3171001463708667}, {
                    3.6888794541139363`, 0.3171001463708667}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.013468011999703659`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9192235949962146, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.3156494788521002}, {
                    5.298317366548036, -0.14099336617663571`}, {
                    6.907755278982137, -0.03233914466752071}, {
                    8.344980368770571, 0.07588164242375345}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.006812070170251001}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.15529157249600445`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.3583236447456299}, {
                    3.6888794541139363`, 0.3583236447456299}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.014354912032530798`}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.47414959233541343`}}, {{
                    3.6888794541139363`, 0.3149644762900455}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00009011420315322913}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4767156441259213}}, {{
                    3.6888794541139363`, 0.31326623921712116`}}, {{
                    5.298317366548036, -0.12994501595143715`}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.013194999629809353`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.5328521548383721}}, {{
                    3.6888794541139363`, 0.4265922709574424}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.019807803464226916`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.47244078220651076`}}, {{
                    3.6888794541139363`, 0.3316120889356624}}, {{
                    5.298317366548036, -0.1413108684900533}}, {{
                    6.907755278982137, -0.063551901206377}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010161972117626893`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.47051417926791583`}}, {{
                    3.6888794541139363`, 0.31158724872970217`}}, {{
                    5.298317366548036, -0.15024473129873053`}}, {{
                    6.907755278982137, -0.0428324695682616}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0019297557543388362`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.47187837688681195`}}, {{
                    3.6888794541139363`, 0.3120603845469366}}, {{
                    5.298317366548036, -0.16112671643694673`}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00034035898985872864`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4904903012932508}}, {{
                    3.6888794541139363`, 0.3307648551606174}}, {{
                    5.298317366548036, -0.04376147464040597}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.01671363178733327}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4696675416614504}}, {{
                    3.6888794541139363`, 0.3311287078104126}}, {{
                    5.298317366548036, -0.1041835648543012}}, {{
                    6.907755278982137, -0.07789024288358207}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0003772458988388974}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.5035529150403963}}, {{
                    3.6888794541139363`, 0.37869919716265354`}}, {{
                    5.298317366548036, -0.028313383819584273`}}, {{
                    6.907755278982137, 0.0013966499772425113`}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.007753724652886887}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.47598946920084856`}}, {{
                    3.6888794541139363`, 0.3490484304396635}}, {{
                    5.298317366548036, -0.11163043176326658`}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.007349632636304202}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4713635206404123}}, {{
                    3.6888794541139363`, 0.3047296514416955}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.008892048386752567}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4747884452833101}}, {{
                    3.6888794541139363`, 0.32963814077782655`}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.015057956811368681`}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.4712887822342799}}, {{
                    3.6888794541139363`, 0.3149469522540909}}, {{
                    5.298317366548036, -0.16624616529404332`}}, {{
                    6.907755278982137, -0.08563470761566784}}, {{
                    8.344980368770571, -0.04666325254236166}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0025939792148579957`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.3259368490564235}}, {{
                    3.6888794541139363`, 0.3259368490564235}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0046381162805087806`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.4064666890951266}}, {{
                    5.298317366548036, 0.012452929650640657`}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.019660952476180094`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.3158026112701851}}, {{
                    3.6888794541139363`, 0.3158026112701851}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.006991033017579088}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.3192266006267191}}, {{
                    3.6888794541139363`, 0.3192266006267191}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.011633634020500955`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.3171001463708667}}, {{
                    3.6888794541139363`, 0.3171001463708667}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.013468011999703659`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.3156494788521002}}, {{
                    5.298317366548036, -0.14099336617663571`}}, {{
                    6.907755278982137, -0.03233914466752071}}, {{
                    8.344980368770571, 0.07588164242375345}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.006812070170251001}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.3583236447456299}}, {{
                    3.6888794541139363`, 0.3583236447456299}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.014354912032530798`}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.0725280624560205`, -0.22095457624825218`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 
                    8.568076401730806}, {-0.22095457624825218`, 
                    0.5328521548383721}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                   PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                 ImageSizeCache->{330., {122., 127.}}],
                DynamicModuleValues:>{}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> 
          ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.878619160734618*^9, 3.8786192245310097`*^9, {3.878715800641226*^9, 
   3.87871584525163*^9}, 3.878715887355948*^9, 3.8788055501495533`*^9, 
   3.87880572388905*^9, 3.878806815602689*^9, {3.8788071459712963`*^9, 
   3.878807157009053*^9}, 3.878811636198832*^9, 3.8791492018173523`*^9, 
   3.879161026375566*^9, 3.8793254916927137`*^9, 3.8793330181206427`*^9, 
   3.879354706216084*^9, 3.879419620790739*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"4e019477-7516-4ecf-9b91-ddc4da6d4b4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cm", " ", "=", 
    RowBox[{"ClassifierMeasurements", "[", 
     RowBox[{"cRisk", ",", "testset"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Test", " ", "our", " ", "classifier", " ", "on", " ", "the", " ", "test", 
    " ", "set"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<The accuracy is: \>\"", ",", 
    RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}], " ", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "the", " ", "accuracy", " ", "of", " ", "our", " ", "model"}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"AccuracyAss", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"AccuracyAss", ",", " ", 
     RowBox[{"\"\<SupportVectorMachine\>\"", "->", 
      RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "the", " ", "Confusion", " ", "Matrix"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.878619179671941*^9, 3.8786191833045883`*^9}, {
   3.8786192222213593`*^9, 3.878619249704307*^9}, {3.878619342065884*^9, 
   3.878619346687873*^9}, {3.878619378625424*^9, 3.8786193862338676`*^9}, 
   3.878805729554159*^9, 3.878805819596631*^9, {3.878806143346759*^9, 
   3.878806195391272*^9}, {3.878806763106118*^9, 3.878806811062291*^9}, {
   3.878806841172628*^9, 3.878806863962813*^9}, {3.8788071595906687`*^9, 
   3.8788071669267473`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"21382602-c388-449e-99f7-a16ab30307db"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The accuracy is: \"\>", "\[InvisibleSpace]", 
   "0.5733840304182508`"}],
  SequenceForm["The accuracy is: ", 0.5733840304182508],
  Editable->False]], "Print",
 CellChangeTimes->{3.878806864557898*^9, 3.8788071688546124`*^9, 
  3.87881163954853*^9, 3.8791492075417137`*^9, 3.879325494817211*^9, 
  3.879333021517658*^9, 3.879354710071299*^9, 3.8794196280710793`*^9},
 CellLabel->
  "During evaluation of \
In[173]:=",ExpressionUUID->"212a637f-6722-477c-93e9-c18f65cee5d7"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGwI+2FNKh9k57f6v89b+SPvlAzftHti3L5tW2vy/
0L5sfdWlyRVv7HtjTxS/YHxmb/Vhbrrd6gsU24dOP6wSWef+8JY9zEdR7nPn
lBi/tdeeWmihZvzSXv3g9TV9lnepZl9X6cYtrb1v7ZPW1Xf/73plf79muckx
rkf2f6/tEvULeWf/No1/iWrVW/t7S1/snLzmJdXs1Zs7u2T7/7f2VhM2xjZZ
vbHfLKjyTjv3Gc3txUXjshcAnOWobA==
   "], {{0, 0}, {5, 5}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "\"B\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.00818926296633303`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.9`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", "B", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.00818926296633303}], 
         Row[{"Row fraction = ", 0.9}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["50", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "50", "\" examples of \"", "\"C\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.04549590536851683`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.9803921568627451`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{50, " examples of ", "C", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.04549590536851683}], 
         Row[{"Row fraction = ", 0.9803921568627451}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["604", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "604", "\" examples of \"", "\"D\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.5495905368516834`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9055472263868066`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.6840317100792753`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{604, " examples of ", "D", " correctly classified"}], 
         Row[{"Precision = ", 0.5495905368516834}], 
         Row[{"Recall = ", 0.9055472263868066}], 
         Row[{"FScore = ", 0.6840317100792753}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["436", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "436", "\" examples of \"", "\"E\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.39672429481346677`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.7440273037542662`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{436, " examples of ", "E", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.39672429481346677`}], 
         Row[{"Row fraction = ", 0.7440273037542662}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004629629629629629`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "A", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.004629629629629629}], 
         Row[{"Row fraction = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004629629629629629`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.1`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "B", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.004629629629629629}], 
         Row[{"Row fraction = ", 0.1}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004629629629629629`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0196078431372549`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "C", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.004629629629629629}], 
         Row[{"Row fraction = ", 0.0196078431372549}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["63", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "63", "\" examples of \"", "\"D\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.2916666666666667`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0944527736131934`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{63, " examples of ", "D", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.2916666666666667}], 
         Row[{"Row fraction = ", 0.0944527736131934}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["150", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "150", "\" examples of \"", "\"E\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.6944444444444444`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.25597269624573377`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.37406483790523687`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{150, " examples of ", "E", " correctly classified"}], 
         Row[{"Precision = ", 0.6944444444444444}], 
         Row[{"Recall = ", 0.25597269624573377`}], 
         Row[{"FScore = ", 0.37406483790523687`}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "A"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "10", "\" example\"", "\"s\"", "\" of class \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{10, " example", "s", " of class ", "B"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "51", "\" example\"", "\"s\"", "\" of class \"", "\"C\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{51, " example", "s", " of class ", "C"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "667", "\" example\"", "\"s\"", "\" of class \"", "\"D\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9055472263868066`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{667, " example", "s", " of class ", "D"}], 
        Row[{"Recall = ", 0.9055472263868066}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "586", "\" example\"", "\"s\"", "\" of class \"", "\"E\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.25597269624573377`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{586, " example", "s", " of class ", "E"}], 
        Row[{"Recall = ", 0.25597269624573377`}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "A"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "B"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"C\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "C"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1099", "\" example\"", "\"s\"", "\" classified as \"", "\"D\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.5495905368516834`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1099, " example", "s", " classified as ", "D"}], 
        Row[{"Precision = ", 0.5495905368516834}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "216", "\" example\"", "\"s\"", "\" classified as \"", "\"E\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.6944444444444444`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{216, " example", "s", " classified as ", "E"}], 
        Row[{"Precision = ", 0.6944444444444444}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{4.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"C\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"D\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"E\"", BoxRotation -> 0.], TraditionalForm]}}, {{4.5, 
       FormBox["1", TraditionalForm]}, {3.5, 
       FormBox["10", TraditionalForm]}, {2.5, 
       FormBox["51", TraditionalForm]}, {1.5, 
       FormBox["667", TraditionalForm]}, {0.5, 
       FormBox["586", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["1099", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["216", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"C\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"D\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"E\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->13,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->228.,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.878619184460875*^9, 3.878619347255011*^9, 3.878619387156837*^9, 
   3.878715848704851*^9, {3.878715890521706*^9, 3.8787158953838463`*^9}, {
   3.878805538696899*^9, 3.878805553604134*^9}, 3.878806818221781*^9, 
   3.878806864604879*^9, 3.878807168896861*^9, 3.878811639592146*^9, 
   3.879149207590951*^9, 3.8793254948586063`*^9, 3.8793330215591373`*^9, 
   3.879354710115163*^9, 3.8794196283194857`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"bbe3d1df-ca71-4947-9fd1-d64169d12504"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nearest Neighbors", "Subsubsection",
 CellChangeTimes->{{3.878805416699134*^9, 
  3.878805417721744*^9}},ExpressionUUID->"9942841c-f629-4f6a-b284-\
312b9ff53265"],

Cell["Train a classifier from nearest neighbor examples", "Text",
 CellChangeTimes->{{3.878805704170437*^9, 3.8788057223306637`*^9}, {
  3.878805766632689*^9, 
  3.87880578974465*^9}},ExpressionUUID->"5dfadb55-1804-475e-af67-\
fd5a3fa3ada6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cRisk", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"trainingset", "->", "\"\<Ratings\>\""}], ",", 
    RowBox[{"Method", "->", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "cRisk", "]"}]}], "Input",
 CellChangeTimes->{{3.8786185865414057`*^9, 3.878618597824006*^9}, {
  3.878618646892776*^9, 3.878618648994371*^9}, {3.878618877270843*^9, 
  3.878618880432907*^9}, {3.878618998083866*^9, 3.878619004451974*^9}, {
  3.8786191510115213`*^9, 3.878619159945651*^9}, {3.8786192237272882`*^9, 
  3.878619223941098*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"81eb6b46-1115-4683-ad4f-4a7788f50766"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                    "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\""},
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                    "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\""},
                    "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["5261", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 5261, "ClassNumber" -> 5, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "Country" -> <|"Type" -> "Nominal"|>, 
           "GICS Sector Name" -> <|"Type" -> "Nominal"|>, 
           "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> <|
            "Type" -> "Numerical"|>, 
           "Carbon Disclosure" -> <|"Type" -> "Text"|>, 
           "Revenue (USD mn)" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["FromDataset"], 
              MachineLearning`MLProcessor[
              "FromNamedFeatures", <|
               "FeatureNames" -> {
                 "Country", "GICS Sector Name", 
                  "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                  "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                  "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                  "Carbon Disclosure", "Revenue (USD mn)"}|>], 
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 7|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {
                 "Nominal", "Nominal", "Numerical", "Numerical", "Numerical", 
                  "Text", "Numerical"}, 
                "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6", "f7"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         False, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

              "], "Type" -> "NumericalVector"|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 5261, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Text"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "FeatureChangeType", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 8728850163752787708|>], 
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>, 
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 4012203223801137025|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 7247984987659546603|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>, <|"" -> 1|>}, 
                    "MissingCode" -> Indeterminate, "Version" -> {13.1, 0}, 
                    "ID" -> 4113760982813578529, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Mean" -> {209.80690318178338`, 38.57264497138987, 
                    138.3376102159199, 2296.6337905542246`}, 
                    "StandardDeviation" -> {1432.0032489855246`, 
                    171.69843080857044`, 192.57826196052247`, 
                    9129.337299520432}, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 3752698420053720059|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3, 
                    "SetSize" -> {55, 11, 1}|>|>, 
                    "Boundaries" -> {CompressedData["
1:eJw1US1IQ1EYfcIMChbLhBk0GCwrCjMIZwZhDEHQsjJBwaQww8qCIAvPYDEY
FGGIZWXhCS5o2EEmMgTx/4lv6l4wWIQxxLLiu+/7/Mq9XM49f9/oSm5htcey
rCnrf3y6teXvmPvBymbdS1TeWZweaywW35jp2tVcpsn4+dfxTtxjbyG9W468
spkwyBee/A6stRyX2wGqaz8zm7+fjWafOBHOI/s7eyPzfQ/0HQO843rLXG45
FAJveOkZomtuhEINDodGrhiIBw7qDOnyF0yWBj/HZ2rcPzBzxh9D2znlXOCm
kHaYihrCMtsxQ3DIIwMvFbklJ3x5R1JwSMk/tIUHygvVgepCfUB9QX1CfUNz
QHNBc0JzY1J6wJL0Alt6giO9wZMeEZFeoT1De4fuAboX6J6ge8MfBK7o6Q==

                    
                    "], {-0.5, -0.40909090909090906`, -0.3181818181818182, \
-0.2272727272727273, -0.13636363636363635`, -0.04545454545454547, 
                    0.045454545454545414`, 0.13636363636363635`, 
                    0.2272727272727273, 0.31818181818181823`, 
                    0.40909090909090906`, 0.5}, {-0.5, 0.5}}, 
                    "Version" -> {13.1, 0}, "ID" -> 2082886514676041914, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>, 
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                    Span[1, 3], 
                    Span[4, 7]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {13.1, 0}, "ID" -> 
                    3471102231048770802|>]}, "Invertibility" -> "Approximate",
                    "StructurePreserving" -> True, "Missing" -> "Allowed"|>], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBmQFm/iFib1JlAgAAAAcAAAAHAAAAPlM1OXtLmz/JiPcwbAyAv1XkjbwG
1YQ/vL3MM3alqD9dV7Q3ltHiP2S57Fz+YOk/MnmDCDz5wj8EQ6YFpvefv++u
GnjfNYi/QC4jX10NcD/9dRoemfCSPzfG6DRwO6y/+Fp8ks9qwr/+dWRCD5jv
P1e44E2uMWU/lBmRez1vUr9Wme0jCTJhvzS4InKsPWE/ogrVuWjN6b+p6Amc
leHiP19FAIP8/KQ/Fsw7lzFi479b2o2x/7O7v8QbWFU9jta/WunW5/OI5j8Y
e5c5Toh6vzr5ex/nBYC/SjOPC+5Gob+BzmGl9zXgvwH8AegL5cS/qmysjusN
6z8sWiaoibijv7tSilO75l8/vMAEl/OHgj/6wqUCxqOTv5LfxWV4YuO/+WSv
W3RQuj+vRZXiiwHYvxzP5zepJOa/dwddW+vpnj/AldSzjP6mP7AL08UTf3M/
oEUKDPSctr9PbMjmPjTvP+rNfS3iL8I//6HrutiXwj+qZ+qwPl89vy+NAyQq
BlQ/cl4LGc2Ndz/G8Myp
                   "], 
                  "Precisions" -> {0.7323150115031848, 0.9950353534094927, 
                   1.150259857918005, 1.3081831054231352`, 
                   11.904267203841378`, 12.590913834400338`, 
                   21.78658982700742}, "NoisePrecision" -> None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.045734233435905304`, \
-0.025594359218476675`, -0.0029955448724701505`, -0.00014912358418741337`, \
-0.00003169670080297662, 0.00013678099790770116`, -0.00011712644515109536`}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 7813766679320217419|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 7.|>,
                     "Key" -> "((f1f2f6)(f3f4f5f7))", "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 7, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4503155047815583877|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                   "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                   "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 7, 
                   "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                   "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                   4503155047815583877|>], "InputDimension" -> 0, 
                "OutputDimension" -> 7, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"},
                     "ID" -> 9054002198889522994|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"Information Technology"}, "ID" -> 
                    111132265781554143|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537},
                     "ID" -> 345609698028463116|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {10.982}, "ID" -> 2847955718844691890|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {60.982}, "ID" -> 8279278174017998872|>, 
                    "f6" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {""}, 
                    "ID" -> 2733924562406810284|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {624.605427784142}, "ID" -> 
                    6335781326903152349|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.077829, "MaxTrainingMemory" -> 2954496, 
                  "DataMemory" -> 1220792, "FunctionMemory" -> 92272, 
                  "LanguageVersion" -> {13.1, 0}, "Date" -> 
                  DateObject[{
                    2022, 12, 7, 17, 33, 51.636619`8.465532773566753}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, 
                  "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-5.8464371569811195`, -5.8464371569811195`, \
-5.772442655506229, -5.719536211659443, -5.569781037675731, \
-5.547597831708812, -5.492452464861547, -5.490044807247233, \
-5.4488020625417395`, -5.375138296361131, -5.327882521015458}, 
                   "LeftBoundary" -> -5.772442655506229, "LeftScale" -> 
                   0.03699725073744542, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[38.91308053189091, 0.3782184306301033], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0}, 
             "ID" -> 8833432794738512184|>], 
           MachineLearning`MLProcessor[
           "Threads", <|
            "Input" -> <|
              "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "(f3f4f5f7)" -> <|"Type" -> "NumericalVector", "Weight" -> 4|>, 
               "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
             "Processors" -> {
               MachineLearning`MLProcessor[
               "ToVector", <|
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                 "Version" -> {13.1, 0}, "ID" -> 7001699027996678713|>], 
               MachineLearning`MLProcessor[
               "ToVector", <|
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                   "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                 "Version" -> {13.1, 0}, "ID" -> 4268131072254999855|>]}, 
             "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
             "Missing" -> "Allowed"|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
             "Mean" -> {209.80690318178338`, 38.57264497138987, 
              138.3376102159199, 2296.6337905542246`}, 
             "StandardDeviation" -> {1432.0032489855246`, 171.69843080857044`,
               192.57826196052247`, 9129.337299520432}, 
             "Output" -> <|
              "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 1927666520227175614|>], 
           MachineLearning`MLProcessor[
           "ToLowerCase", <|
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 8121204540162656102, 
             "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "RemoveDiacritics", <|
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 1964114494773798714, 
             "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "Threads", <|
            "Input" -> <|
              "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
             "Output" -> <|
              "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
             "Processors" -> {
               MachineLearning`MLProcessor[
               "Sequence", <|
                "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                 "Processors" -> {
                   MachineLearning`MLProcessor[
                   "TextToNominalSequence", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
                    ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", 
                    ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
                    "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {13.1, 0}, "ID" -> 613813152937597666, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NominalSequence", "Weight" -> 1|>|>|>], 
                   MachineLearning`MLProcessor[
                   "NominalSequenceToTFIDFVector", <|
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "NominalSequence", "Weight" -> 1|>|>, 
                    "Index" -> 
                    MachineLearning`SortedHashAssociation[<|
                    "KeyHashes" -> CompressedData["
1:eJw1lEuO1FAMRXvACmg2wAKQ/P8soSVGLIEBEiMGsH9xkpdSqlIp28++vtfO
159/fvyqt7e3v5+4ff/999/HFx6+rVqq2U5t5uas6uMQ9dFe5zNhJb3HMWvS
Km1rvToSKY8jNX27tJV0aV79ODRLoq/wmC31quPoyeyWtMycu46+HDZewFKJ
ohAHj6PWCogmCuTOGPHjyBUAd5tW+tToPicytTykamdkPMuf4gEcA+a2rxM1
rxNBhfBc7fIBHSGPIwBIYaECtFDvSUWYhUY3/lQt63g5TJXO0mFWFlAPJQ6f
smRRDl38dz6OCNeUdlDNRa4/xR2MQrsxzRHOv2i3lAVShyw+8trLoQjqFTOT
BdXtdhxaEwVHCN9bgrIPXM0IhcGrBQu0nPh4PyR2V18t65jBcn18xm6BcnSu
l1i1sXabIy6IQxfS0WU0fZsTLt1UmCv4rTlmOoRwujoNi+Vt3pQg1rhPgDTk
hqJKZnJKTozTRu6xZ6FgFk2P9CXeyw5qWXrJgj8ThvK2V2vQJunFkVTMbjuM
QGMkE5jG12Vuu9t0OK0zNSJxrcWx0yu5BK4YeHQwP/bsCvijTZKUDTP/fpMA
FPQuS9IR0afuTVZlcF2z0ZQ4draQrIRv3U9Pv7TL0nQVBeqqEyc/e8BSiTvy
LfyUPvHwydaynMviFLofHpgjppClUKc0a2NHcmaYcP7ZoFkIbB87lZh/bVBO
uVyb+dgvqIau/AwjcfSqaywGdNEBTcawH3sjH3O2AdfLGuaJZ4Ad8HrJEmy5
Vx57+/WuAaBrVaHEE89SQQMnIAR+WN7bDgSWTp1LzJUZOnV5wQ2KFAqyKSMv
HpZlDgaRyiAIiJ7/oUHtSA==
                    "], "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    ToString[#, InputForm] <> "Cn.i9)P$", "Murmur3-64"]]& , 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {13.1, 0}|>], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAwA+JZ+8T4F3B/tJdela8mWSvlsHur766IQAGHjdl5U6SU
3thPLz2z7Xc0p8OSKy+f6VwRdNDev3TKgWpJB9NNtkKqu2QcdugrPJST4XTg
X7O3SFiR1SHN7VRk234mh3ecys+/rXpqv8/RscLYTsiBcdn7A2u4n9jD9MPs
5Vx4y+1PNq9Dt/jeJ5zmrA4wPszejqrkPcbMEnB7YXyBlxtjDnH8hZu3Xz1y
j+JGTrg57gfXrLgchSm/dJPZ7ohURjgf5l8GCGhY3573N3bDPfuu5Gi7N884
HIxSD6beYvlob8h2kPHjuj9w/8DM3bCj8PInKWk4H+ZuWHjC5GE0zN4FPvYz
lqx7bQ9zb79YndlmJWGHd/8DjHc/kIXTMPUwfwMAf4a6Yg==
                    "], "Version" -> {13.1, 0}, "ID" -> 2566335944547631010, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>]}, 
                 "Invertibility" -> "Impossible", "StructurePreserving" -> 
                 True, "Missing" -> "Forbidden"|>], 
               MachineLearning`MLProcessor[
               "EmbedNominalVector", <|
                "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                 "Index" -> {<|
                   "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, "BOTSWANA" -> 
                    4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 7, 
                    "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                   "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>}, 
                 "Output" -> <|
                  "(f1f2)" -> <|
                    "Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
                 "EmbeddingVectors" -> {CompressedData["
1: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
AYwY2QUp9dHwDxWH4HQ=
                   "], 
                   RawArray["Real32",{{0., 0., 0., 0., 0.}, {
                    0.09429772198200226, -0.24127089977264404`, \
-0.5270462036132812, -0.24486297369003296`, -0.5337972044944763}, {
                    0.3855826258659363, 0.345225065946579, 
                    0.375460684299469, -0.6187008023262024, \
-0.9083080291748047}, {0.038637321442365646`, -0.39784038066864014`, 
                    0.4888850748538971, -0.3776519000530243, 
                    0.04570373147726059}, {
                    0.1278393715620041, -0.05385725945234299, 
                    0.7183319926261902, 
                    0.20311319828033447`, -0.020085696130990982`}, {
                    0.2800740897655487, 0.3026285469532013, 
                    0.013881713151931763`, 0.6868195533752441, 
                    0.08314655721187592}, {-0.8298808336257935, 
                    0.34320393204689026`, 0.0243590846657753, 
                    0.07180754095315933, -0.6089136004447937}, \
{-0.10904797911643982`, -0.2677527964115143, 0.5590679049491882, 
                    0.48168694972991943`, -0.6030200719833374}, {
                    0.22935371100902557`, 
                    0.18263663351535797`, -0.7634024620056152, \
-0.029437005519866943`, -1.0930653810501099`}, {
                    0.14211100339889526`, -0.2188272774219513, \
-0.5335532426834106, -0.15458126366138458`, -0.20572292804718018`}, {
                    0.4123682975769043, 
                    0.36278361082077026`, -0.48854225873947144`, 
                    0.04904557392001152, 
                    0.27460458874702454`}, {-0.10662871599197388`, 
                    0.2889917492866516, 
                    0.4839726388454437, -1.046645164489746, 
                    0.2283746600151062}}]}, "Version" -> {13.1, 0}, "ID" -> 
                 4560545129116418848|>]}, "Invertibility" -> "Impossible", 
             "StructurePreserving" -> True, "Missing" -> "Forbidden"|>], 
           MachineLearning`MLProcessor[
           "MergeVectors", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
               "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>, 
               "(f3f4f5f7)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
               Span[1, 54], 
               Span[55, 66], 
               Span[67, 70]}, "Wrappers" -> {SparseArray, Identity, Identity},
              "Output" -> <|
              "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

                  "], "Type" -> "NumericalVector"|>|>, "Version" -> {13.1, 0},
              "ID" -> 324326445301658208|>]}, "Invertibility" -> "Impossible",
          "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 4199606916556033440|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|
               "A" -> 1, "B" -> 2, "C" -> 3, "D" -> 4, "E" -> 5|>}, 
             "MissingCode" -> 0, "Version" -> {13.1, 0}, "ID" -> 
             18782000146286335, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {5}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 7688100530236977542|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 5|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       "A" -> 0.001329282187618686, "B" -> 0.005507026205848841, "C" -> 
        0.04044815799468287, "D" -> 0.5218382073680212, "E" -> 
        0.4308773262438283|>|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> 
       MachineLearning`MLProcessor[
        "KeyIndexSplit", <|
         "Index" -> "Ratings", 
          "Order" -> {
           "Country", "GICS Sector Name", 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
            "Carbon Disclosure", "Revenue (USD mn)", "Ratings"}|>], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {5, 6}, 0., {
      1, {{0, 1, 2, 3, 4, 5}, {{2}, {3}, {4}, {5}, {6}}}, {1., 1., 1., 1., 
       1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "NeighborsFunction" -> 
      MachineLearning`PackageScope`NeighborsFunction[
       "BruteForce", {CompressedData["
1:eJzsnQdU1NrWx+14VbD33kARuyJWrNhFvXYQu9h7V1TsXUQBO3bBLoiCiAMW
sCN2FGyIHbuC2L78563cb325X95JMplhgP3Weuu3kpzss9vZZ5/MVcsOHNt1
SKYMGTLYcf9/mTkD/7+5PNt9mvioU1KIRng/+bJf9ej4wxrWc6nyWM/5+zxb
XXCeGpDbT3R+sfv8e2LzC98XziP1faX2yX1P13mVjpdrh9S4KtWLv8/KS7nz
K/W7mFx9yWPlpVr+leovqePlziPVr0rzXel8cv2kFqXmrdJ81FfdYcnl17Fw
H2HpL7c+C8crre9qrQd9x0OqXrr6Ve78Uu+LyRPbp6XKF9OPNY/Yc6X+YOkp
lC81foZex2rppe/6KXf9K63rYv2r8Dkrviz5rPvC/FUaP7n9sNz9U3hf6Tws
P+raFymVo1Yfo2scWfVMLfvUli93nNL6pVQftfpRufel1hmp86uVf1Lvs+bR
Vx2QK09f+5hadYE1/x7Tmj+jon1l96Nq9zdK/aHr/Cz7dK0fYvIM3e/IXTdi
3+2Ez3Xtf9Su93LJ6rPk9mG69rv8fKw4SR2nlLruO3LlStVH175O6T6l1B5d
+3W1+wqp609fdVZX+bruQ0rXt77qD2s+qXVEX/sFy19y31c6Tjhe1/tSx7H6
ZrXzkTVO13OaofJJrn5ieaZWf8haT1L9oPQ8pKtfxd6X21cK5Yldi1Hp77m6
nteEz8Xkseq6Un1Y87HkEIlEIpFIJBKJRCKRSCQSiUQikUgkEolEopD5Qh26
x/a6Qb83EokSmHHmxFPNll6j9ULUiW5F3ry5sjFcch5R3v2Hcv1GJBoT+XVM
65lITH+k/UsZU9pvKT2/sZH8QSQSif8/qT6mLqbW8xjlGZFIJBKJRCLREMzV
O7zAwuDAf/WdpjeGzI/suk/DPx/6MMsm++67NcLnUuWxnvP3eW53m9fGKfKg
hjVeqBf/nlS7hfNIfZ8lV6iXUr/InVd4/z9xOvnPfV4vfrzwOUue0vtiz2dv
+th32qydTD/9X333icoT87tcvYV+EV6LyRWLvxiF8RCTJ8xLqX6Taq9wfrnj
5M7PslfsvlR7peaB1Pnk+kktSs1boT7CvGLJF+aT2voJya9j4T7CioPc+iwc
L/Y+a72qtR70vQ9I1YvlV6n1Syxv1FpvvB5i+7RU+WL6Ce+z+g7+udi+KXU+
sfUqjIPU+LH2c7F4suqErnnP2vfVrp+sfpBVP8TskFofhPkp9C8rviz5Yvs+
f1+Yv0rjJ2YHa72LXbPuy+3bWfawxkuVK3wuzAOxeKjVx+gaR1Y9U+onuX2Q
WnEQGycWH6X7sNz35dYxteqtWD0Rvs/KU5aeSvWV6w9WHZC6X4nlA2t+qddy
z/di+kmdT0ix8yh/vaHj4mGJfzSy+1Gl3z/E9GedK6TmoZBK1zmrbxTKZ+kl
db8VzsPqx+TaLTVuYt/thM+Vrl+58WSNk+onYZ6x+iypfZjY9xmxOsPqb1hx
kjpOKnXdD6X2w0r7eLn9jfC+8Byh9n6k9nO5eural/HPpdYzqfMofS62nln7
kFrnL137Nqlk1Qep5wS19ZPaR8p9X+k4sbzk+xt99e+svlnXvkhuP8A6p8nt
e6Xmk9zvRWLzNx7+esWxBiHMeaWeR6X6kbWepPpB6XlI6nssfwrrhNy+Uiw/
pPpZ6u+5wnzR9buN8LmYPFbfplQf1nwsOcT/zlNxu7Zsdgv7lx/F7qc1plU7
1bYrrfqJaFxMr3mWUnYbq78NrZex+oEojxRH3Wgo/1GciKmRz3zWOH1+GvxP
3rLyOL3leWq3N7Xrn9po7OdUyofUQYq7cVEt/0mVk1bilVbsMFby/hX6mfxO
JEpfL0SiMZJ1Ptd3Hhu670mv1CQXdrR+xv73FBJqZ32c9Ndl8iNRS8oHIpFI
JBKJRN0otQ8nEolEIpFIVItp7XsO9VNEItHYSHWJSDQe0no0DMnPRCKRSCQS
iUQikUhMCe6a3f3k06xX6DxKJBKJRCKRSCQSiURiCpLO50QikUgkEolEIpFI
JBKJRGKGubljZrfbeOE2fScjEolEIpFIJBKJRKJB2CJ5sKb/4H//Pfti99Ma
06qdatuVVv1ENC6m1zxLKbuN1d+G1stY/UCUR4qjbjSU/yhOxNTIjLmSWwZt
/t9/X42Vx+ktz1O7vald/9RGYz+nUj6kDlLcjYtq+U+qnLQSr7Rih7GS96/Q
z+R3IlH6eklvTO/2pxayzuf6jqOh+x5jYd6gAc33Zw01On1Jr//Obp+D95c+
f/YfPYR6CZ8bmlOK3N1SuFWIavOr5XehX+T6SaoeSvVV229pjcay/lKKcu1P
7/mU3vNFSKn+0HfeGGtc1N439bVvseSnlH/1lTf6skepXLX1EfObodYh7RP/
N57p3R/GRmPdL1KaaSVP5cbX2PYDtcjqP/6j3/UUj3dq2+dTWj5r3pTOO0NT
qp9SOs+MNS5ptf7xTCv7mr5pLPEy9Dkqtdud1inml5T+XcLYqK/8kfu9SIxU
h/879d1HGKq+0Lr8D+2+VIzO/Dxcth/E3rMPX2r/urT+/r4wfcvX1/wsPyuN
g9p6pLR/lTK16q2UUvNFql/U9h+vn5DpLU5SKYwn+cm4qVZ8KM7/P8kv8mio
/sFQlBt/pfki9b2U7pvS6noQ86vUfFaa94bKL33TWPVSm6w4BzeJuu0Zq/w8
r6sf08r6N7Z8UvvcYGj7hHmra71LKzRU3daXPkrP1ca2vlj66pvpJe+NPe5q
k5X3hoq7vvaNlIonP6++/Cd3f0pr3/WUfodTOx4p7U9+fmPJe6lkxU/4PVqp
XLXHpxam13OI2lSahymlp9L3jTWOan0vbLfQutSbKfs0j7oMvDAxl/+/5M3b
6DK0gt2uf54vOdBma4Mx2zT8e/xzfvyqr72vFR0RKCqPp9hz/j7Poe9Xm6z7
uuefa16+cDyvF3+ff4/lD7F5xN4Xzs+SK/SXmN2s51LJiiM/D68XP55/LuZf
qfNIjavweZv1rdoXz7JV8rzCvBTqLcwH1vwsv4ldi8kVy0sxCuMhJo/PSz6O
LL+J5avYOOH8UuMpJK+fkFLnYd1nxU3oV6lypcqX6iep5P0jjIdUPcT0EuaV
2Pz8c2E+SaXcdcWTX09i60rsWmp9Fxsv9j5rvbL2IbnrR+r6VEqWXiy/Sq1f
YnmjdL2J1XOxfVqqfKl+FpMrfC7MWxalrldhHKTWW+H+KJxfLJ6sOqF0H2C9
z+eN1H1LjKz9X2z9s9af0L9i/hPb1/h5hP5lxZclX2zf5+8L81dp/MTsYK13
sWvhfeG+J+xvxOIt9r7U/JNbd4X+F+aBWDzU6mPE5LD6KVadlGo/Sx9d6y1r
nFg+iNkn1veJvc+qN1Lfl7tvS623rDiL1ROhXFaeSq2HSu2Q6g9hHRCr71Lr
Gj9ebpxZ16w8E+atcJ8W27+l+o/VN4v5g2W33P6a5S9h3kmt20IqPeeL2cfy
v1ieCfUQ22+F41j7iJhdrOdidUCMYv0hr5/w+wpLnpj/We9L/e4l1U/CPGP1
WVL7MLHvM2J1Rixf+PlYcZI6Tirl7odi96XWP7G856/lrn/WuhaeI8T0UJrP
rHXMel+qPWLvCfVg9UNS81j4vphcsXiJ7c9K1zNrH5L6fUbs3MLKI9Z3ODFK
jYfUOiLW77H0kEpWH8nPz8p7uetWbJxYXrL2IVa/JdRX+D2a1TcL35Naj8X6
PFY8WOc0uX2vmD1ifhabT8yfLHvE5mXZyfq+KtVuuX6QGy+5/Y7w90CxPBH7
3ilVvtxzBE9hHoj1Z8JxUn8vlbsOpD6Xe34R5jFrPjF7WLTfY9Y3Im+UanWb
SCQSicbJkVViny9rdZHqPVEWKW+IxJQnrUNieuSMpW38VnW7SXnPINUHIpFI
3/WIaYm0rxGJRCKRqJzUF8rj+UkLwo/O9NHE9Oh32dH76L/81ndRO6s1YTv+
eV5Ek23ejqFbNfx7/HN+fFbf8vWqeB4XlcdT7Dl/n+ee6XPtljbe/c81L184
nteLv8+/x7JfbB7+Wjif8JolV+gvMbvFnkudj+VXPk78PLxe/Hj+uZh/pc4j
Na7C51kr1G9z/dwmyfMK81KotzAfWPOz/CZ2LSZXGH9eP7F4CuMhJo/PSz6O
LL+JzSs2Tji/3HE8ef2ElDoP6z4rbnLzQOp8YuNZeoiR9wfvH+F9qXqI6SXM
K5Z8YT6J6Su8lruuePLrSWxdiV2L1Xex9SUcL/a+MF/E7BHzn9S8EMqRGm+5
ZOnF8ivLHzzF8kbpehOr52L7tPA9Vv1i+VkoV+y5MG+lxkPMD0I7xcaJ1Vvh
/iicXyyerDohtw5KraN83uja97D2f7H1LzaPmH/F/CeWd/w8Qv+y4suSL7bv
8/eF+as0fmJ2sNa72LXwvnDfE/Y3YvEVe19q/rHizvK/MA/E4qFWH6NrP8aq
Z1L1YNmntnyx/kg4TmifWN/HmkduXojtO8JxusplxVmsngjnZ+Wp1Hoo1w6W
H4Tj/3XOEanvUuua8BzGml/qNSvPhHkr3KfF9m+WX3my+mbWuVLsPanfT1j9
lNh+xToPSp1P7vlOaB/L/1LPT2L7Leu8xOrHxPwgZrcwbmJ1Tey7HU/h9xUx
PYSUux+wvouJ2cvrydqHWX2W1D5MbB2J1RmxfOHnY60vqeOkUu5+KHZfav1j
fTeV2rexngvrC2v9Kc1nud89lPpTbF65/ZDUPBa+LyZXLF5i+7Pc9Sz2ntzv
EaxzCyuPWOcOMUqNh9Q6IndflEtWHym2b7D6UKnfxYT6iOUlax8S67fE+mbh
92hW3yx8T2o9FuvzWPFgndPk9r1i9oj5WWw+/pp5zhH5niOWZ1LPS3L3B6V+
kBsvuf2O8PdAsTwR+94pVb7UcwSrLxTrz4TjpH6Pl7sOpD6Xe34R5jFrPjF7
iEQikUgkEolEIpFI1IW7Znc/+TRrDJ0ziUQikUgkEolEIpFITEHS+Vxdtvs0
8VGnpJB/+TP5sl/16PjDGtZzqfJYz/n7PFtdcJ4akNtPdH6x+/x7Uu0WziP1
faX2yX1P13mVjpdrh9S4KtWLv8/KS7nzK/W7mFx9yWPlpVr+leovqePlziPV
r0rzXel8cv2kFqXmrdJ81FfdYcnl17FwH2HpL7c+C8crre9qrQd9x0OqXrr6
Ve78Uu+LyRPbp6XKF9OPNY/Yc6X+YOkplC81foZex2rppe/6KXf9K63rYv2r
8Dkrviz5rPvC/FUaP7n9sNz9U3hf6TwsP+raFymVo1Yfo2scWfVMLfvUli93
nNL6pVQftfpRufel1hmp86uVf1Lvs+bRVx2QK09f+5hadYE1/x7Tmj+jon1l
96Nq9zdK/aHr/Cz7dK0fYvIM3e/IXTdi3+2Ez3Xtf9Su93LJ6rPk9mG69rv8
fKw4SR2nlLruO3LlStVH175O6T6l1B5d+3W1+wqp609fdVZX+bruQ0rXt77q
D2s+qXVEX/sFy19y31c6Tjhe1/tSx7H6ZrXzkTVO13OaofJJrn5ieaZWf8ha
T1L9oPQ8pKtfxd6X21cK5Yldi1Hp77m6nteEz8Xkseq6Un1Y87HkEP9/Pmlc
qVm/tY9TzH8pPT9RHfJxTKl4qjUv5aO6TG35IHzP2PLB2PSRytSqt7GR5Ufy
szySv4jGQMrD9ElDx11f86nVbxl6frVpLHoQ1aGu8aR80C+lfndIbXFIbfoS
iUpIeU5MTTSWfDUWPYhEYyatE8OyzCSPoK6FQo3O36TXf6dL5frjDkSf/UcP
oV7C54bm8UiztgsGqfffeajld6Ff5PpJqh5K9VXbb2mNxrL+Uopy7U/v+ZTe
80VIqf7Qd94Ya1zU3jf1tW+x5KeUf/WVN/qyR6lctfUR85uh1iHtE/83nund
H8ZGY90vUpppJU/lxtfY9gO1mNLndqlMbft8SstnzZvSeWdoSvVTSueZscYl
rdY/nmllX9M3jSVehj5HpXa70zrF/JJa+htDUV/5I/d7kRipDv936ruPMFR9
oXVJlMKU/u8zUnp+ojqkP39O/P+Y2vKB/vy5fpha9TY2prU/Z5PSJH8RjYGU
h+mT9OfP01bfbix6ENUh/flz4yb9+XMiMfWS8pyYmmgs+WosehCJxkxaJ0RD
8FTcri2b3cL+lWdi99Ma06qdatuVVv1ENC6m1zxLKbuN1d+G1stY/UCUR4qj
bjSU/yhOxNTIZz5rnD4/Df4nb1l5nN7yPLXbm9r1T2009nMq5UPqIMXduKiW
/6TKSSvxSit2GCt5/wr9TH4nEqWvFyLRGMk6n+s7jw3d9xCJRCKRSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEItE4uWt295NPs16h/y6cSCQS
iUQikUgkEonEFCSdz4lEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJKrFgQM6
figULP73xx93m/h8m+X//j35TscireplOa7h3xM+V5uBE5pPO3/2NFM+r5fc
98TGy32fpRfLz6znapGfR+ivlGaZkYtbNCxxTLI+rLwzFvuk6iF1HJ+XfBzl
+s1Q5PUT0tB6GEsesKgv/8i139D5xK9jufuIvup7askXfVHoF6n+0Hfe8Hro
a58WkiVXX/OK2cmi1PohFs+Uynt95Q2rH1TqX7l+4ufRtT8VUsxv/H2181No
h1pxE+atsL+R+76hKIynsfZhPPVVrwxFVpyV7ltphVLja+x5ypNVB+TGV1/5
wJIr1F/MnpSqY2JUu14I804te5XGVWifrnmm1F9K+zGx51L1YJ239P1dj6fa
faswz9Tq49X6jsPPJ1Uvtb9D6ipHLblq17vUsq+pRaX+k7tfKb2vqx48de3r
xM5fYlRqj651zFiYUucEtfwi9XcWnlLtVTperv4s+YbOH33Nl9rPo0op/D2Q
1XfK9ZOu8RL2fVLzWF/fm/T1XN/6E4lEIpFIJBKJRCKRKIX098MRiUQikUgk
EolEIpGY8qTzOdGQvLgq+3XPy//+7zDE7qc1plU71bYrrfqJaFxMr3mWUnYb
q78NrZex+oEojxRH3Wgo/1GciGmBrDxOb3me2u1N7fqnNhr7OZXyIXWQ4m5c
VMt/UuWklXilFTuMlbx/hX4mvxOJ0tcLkZgaaOg6b+i+x1hYZpJHUNdCoUan
L+n13+lSuf64A9Fn//fvuRLoJXxuaB6PNGu7YFCIen+fk0p+F/pFrp+k6qFU
X7X9ltZoLOsvpSjX/vSeT+k9X4SU6g99542xxkXtfVNf+xZLfkr5V195oy97
lMpVWx8xvxlqHdI+8X/jmd79YWw01v0ipZlW8lRufI1tP1CLKX1ul8rUts+n
tHzWvCmdd4amVD+ldJ4Za1zSav3jmVb2NX3TWOJl6HNUarc7rVPML6mlvzEU
9ZU/cr8XiZHq8H+nvvsIQ9UXWpf/4alMlXPWTRD//X64+/nAEVP/9+/DL+dm
PWRC8+Ma1nspTd8/776fLKaRrJ9wPH899Gj7ZceWXldsp1R/iT3XdX6xeXi9
1JJL/P/J+5mPo1g8pcaDz0u560+tPJIqh9dPSF3nl0tjz3Pen/ryj5j9YnFs
l7tvpfzdxf8dMeF7atcnqRSr72L6iNV34biUypeU8qOQQr9I9Qcrb3Qlrwcr
jiw/SvUzq3+Q21/oaieLUuuHWDzl1gljp9AeqetfjEr7Jn4elj5qkV+H+s5P
teQJ81asvxHLQ+orpFFf+aBvSu2PlO5bYvPpyw59vceKLy9H3/s0i3LtEYu7
3Pjqa72y5Ar1F7PH2L6nSK0XSvOat1et7yty3xPap2ueKa2vcvsx1nOxfljo
Z+F3vZTq85TmPa8vy09q9fFS80BXfYTj1Nq3U6r+iVHtepfS+5q+qHbfK3e/
UnpfVz146trXiZ2/xKjUHl3P32mFSvcRtfzC6iuE36Ol1lel4+Xqz5Jv6PzR
13yp9TyqK4W/B6p1vlH6HqsvlJrHasdT174tveYXkUgkEolEIpFIJBJTF+nf
VyMSiUQikUgkEolEIjHlSedzoiFJ//552rST/j0wYmpkes0z+vfPU1YvY/UD
UR4pjrqR/v1zIlG9PE5veZ7a7U3t+qc2Gvs5lfIhdZDiblykf/9cGdOKHcZK
+vfPiUTd1wuRmBpI//65YWhXYv2vuAEnjU5ffev14kY9p/JFA/8lX+y+ofSS
ytDJOzWP7P7330UQ6iV8LiTLTl2ptnypfmfNK/SLXD9J1UNpnug7LqmdxrL+
1KbUuMu139jzSd/6ifnLWP1iaH8o3QfV1sNYyNoP5FItO8X04uUr3afUpr7y
Rl/2iPlPX/rIXW+GWofGWg8NRal1Mb3yxIin283L+kv2T0r1/ynFlMoXteZN
6XyXG1997wdqyxVSzN9K+w+142fo9c1T3/5PKfmseY3le4Gh6oBUP6V0nqXU
eVvqd8i0ss8K7Ujp/Si1UO53UX35WWneGPo9tWksehgbxfyi9vcVfVFsvahN
feUP63uR2vOlV+r79yCp77HO53J/F5PLtHIOJUoj/fnztGkn/ffYxNTI9Jpn
9OfPU1YvY/UDUR4pjrqR/vw5kaheHqe3PE/t9qZ2/VMbjf2cSvmQOkhxNy7S
nz9XxrRih7GS/vw5kaj7eiESUwPpz5+nDDPOnHiq2dJrqVZ/onHQrcibN1c2
hkvOI8q7/1Cu34hEYyK/jmk9E4npj7R/KWNK+y2l5zc2kj+IRCLx/yfVx9TF
1HoeozwjEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSNQPW9u3
PuV95axm35E8ZhdCdmiE93kK32s4qaf92FZe/7xn/aO198/jm0XHC+UJx7Hm
298pS+fOzbeJyhXqxd/n3xObX/i+cB7h9YZWJ4N3NvP4l978fTG5Qn+J2S32
nOVHuX7l5+H1YuWH0H6p87DiKnwuVz6fd2JyhfkgNk4srmJ6iF0L/cRfi/lZ
OA9rHH/N5yUfR5bfWPLExrHeY5HXT0il80iNh5hfpcqVKp+lv9z1yvtHqp1i
eSvUR5hXcvNE6npg+UlMHr+OxfYRsTokVt/F5hOOF3tfmC9i/mb5QapfWPJY
+SO2/8hdr2J+EfqDtd9Jrfty7/N6sPZpuX4V01soV+5zpetHaKfUOIrVV7H8
FsaRVSfE5Cn1u9Q6ptSvrH6QFT8x/4r5T8x+fh6hf1nxZdUd1vysvllufRDa
IbUOsOYV7nvC/oYlV2wcSw+WXiw/seqimB+V9jEsOSxKrVes51LnrVes5Ns9
j9yY61yq/4RxZukh1vfJ3Yf19b7Uc4dUitUTpfnD0kfpeVBsnPC5sA4I3xPb
r1jrVer8Uq9ZeSbMW7F9mnX+V1pvxc6VrPjJ/X7C2seF87HOg0r3eTE5Yvax
/C/1/MTqQ6XuI2J2sZ7z8lh9hdRzo/D7ipgecvc9IVnfxVj2svZhlj+k9mGs
72VCfcT8y8/HU2xdC8ex1iHrHCjs28T8zbov5he5609q3yY1j1mU29/I3Tfl
9lNy7RVSbj8kdd8UflfkKbwv1EOun8Xqm/A91vcIlv1i5y8xfVnnDlYdk9uH
yKXUvJWb10J/sfwkVU+pduj6/UFqXyH8Hi21bxYbL6y/wvXC0l9sf5DrJ6n+
Zt2Xuu+KjZfaX0j9/qJWvZTrB7F5pM7Hqnus30XEvndKlS9mF3/Nn8/5+8K4
ieWx1DrNiiPrPMOSJ+yfpOojtQ+UmodEadzTv2zCYtt//z37YvfTGtOqnWrb
lVb9RDQuptc8Sym7jdXfhtbLWP1AlEeKo240lP8oTsTUyGJ9ak2sPzD4n7xl
5XF6y/PUbm9q1z+10djPqZQPqYMUd+OiWv6TKietxCut2GGs5P0r9DP5nUiU
vl6IRGMk63yu7zw2dN+jb4650Obg0LchonqwnvP0Lzeid9mqZzVK5fH3hc/5
a16+XL2k6sGSJ5xfqX1y31NqD88FE3q8tIo+LKoP/1yqf5Xel2qfVPlieSF3
fql+E16z8pVlp1Q9lfpNzC9i44TzS42n1PhKnUeqH+T6Wdf5WPZL1YNFpetQ
af7oq+7oug7U0k8tsvYhuetH6vrUVV+l61Xt+aXel1rPWde65j3rudi+Kldv
qXpIrZty9WLZq+s+INfPUvsspeNZ78ldH2L7GstOqfOx+mqlctWuD3L3T6ly
dbVXaV8kHC+3D1OrjxGTw+qn9NUHKM0XXft/1jil60PufiP2vq7rRey+0v5c
6vxS+xGl/tXVH3LXK2u9SJ3fUOtH6Xxi51Gp88nVW6pdcuVKrR9Kz/lS7Za7
HlnzC8cprRMsqiVP1+9rSvsHfZ9DxPTT9bmu/UZKUe0+UjhOLO9Z7+na17HW
n9J8VrqO1arHcvsUfdd7Vn4rla+WXrrmkZhdaunDqiNSz5Nq6SUWT1beK62X
LL34a76/UZrHSs9tUuVLlSfXbrXqCivv+PtSvxcprXu6rjtd92W5+ki1T2m/
w5In97nYeJaf5erHX8vNF6l66Jr3Uu1RmsdCe/oVTKjZeIH47/cvrnTZ43nn
5D/PY228JhUPDdDw7wmfq80x+ez3bBh8mimf10vue2Lj5b7P0ovlZ9ZztcjP
I/RXSvPM9D5lsz70l6wPK++MxT6pekgdx+clH0e5fjMUef2ENLQexpIHLOrL
P3LtN3Q+8etY7j6ir/qeWvJFXxT6Rao/9J03vB762qeFZMnV17xidrIotX6I
xTOl8l5fecPqB5X6V66f+Hl07U+FFPMbf1/t/BTaoVbchHkr7G/kvm8oCuNp
rH0YT33VK0ORFWel+1ZaodT4Gnue8mTVAbnx1Vc+sOQK9Rezx1j6f55q1wth
3qllr1r26ZpnSv2ltB8Tey5VD9Z5S9/f9Xiq3bcK80ytPl6t7zj8fFL1Uvs7
pK5y1JKrdr1LLfuaWlTqP7n7ldL7uurBU9e+Tuz8JUal9uhax4yFKXVOUMsv
Un9n4SnVXqXj5erPkm/o/NHX9+PUfh5VSuHvgay+U66fdM0PYd8nNY/19b1J
X8/1rT9P+z1mfSPyRqW7PCcSicT0xpFVYp8va3WR6j1RFilviMSUJ61DYnrk
jKVt/FZ1u0l5zyDVByKRSN/1iGmJtK8RiUQikaic1BcSiUQikUgkEolEIpFo
OO6a3f3k06xX6BxOJBKJRCKRSCQSiURiCpLO50QikUgkEolEIpFIJBKJRGKG
uZOSF5ueXXmLvpMRiUQikUgkEvXCYePKBdYKv0H9JpFIJBKJRCKRSCQSiUQi
g/TftxOJRCKRSCQSiUQikZjypPM50ZA8Fbdry2a3sH/lm9j9tMa0aqfadqVV
PxGNi+k1z1LKbmP1t6H1MlY/EOWR4qgbDeU/ihMxNfKZzxqnz0+D/8lbVh6n
tzxP7famdv1TG439nEr5kDpIcTcuquU/qXLSSrzSih3GSt6/Qj+T34lE6euF
SDRGss7n+s5jQ/c9RCKRSCQSiUQikUgkEolEIpFIJBKJRCKRaGjmC3XoHtuL
/v52IpFIJBKJRCKRSCQSiUQikWj8pH//nEgkEolEIpGoT9K/f04kEolEIpFI
JBKJRCKRSCQSUwvp93MikUgkEolEoj5Jv58TiUQhL67Kft3z8r//nn2x+2mN
adVOte1Kq34iGhfTa56llN3G6m9D62WsfiDKI8VRNxrKfxQnYlogK4/TW56n
dntTu/6pjcZ+TqV8SB2kuBsX1fKfVDlpJV5pxQ5jJe9foZ/J70Si9PVCJKYG
GrrOG7rvUZsFw58XNomJ+te8/H2x57rKE47T13ys+eXOJ3ceqe+rZYdafhWb
X67dUu0Te09Xv8q1Q6leLH1YerLk6NtupfL1RaV6S10Pus4nNV5y16tcO6Xa
IVe+Wv6UGx+5+smdjyVf13iLPddVntJ6r+t+qi+/qXVfLnXdZ+Q+V7p+1LZf
X/HQtd7ou++Req3ULpY8Xd/XV34otVOuPH3VBbXfV7v+6zpe6T4pl0r3E7XW
h9K6qO/6I1U/Xd/X1S659rLGKdVHrb5L13qnVI5a+4jSfUctO9XqL9SqA2rt
a7raq3bfpa8+Tm4dlqunUr101UPq+2rbq+u+LNc/cuWy7GY9V5ovUueV23+o
HRe19kPWvHLrm655q7a9atVjQ/uZNb+++ge5fmHNJzfOulJq3irdt+X6Sel4
tdaZUv1Y8+mqv9T31PKTWvub0n1XrT5E3/uD2nVdqj1q1wOl+5W+14m+8keu
3+X6San+cllmkkdQ10Khqu8LpJd+6VK5/rgD0Wf/0UOol/C5oXk80qztgkEh
qs2vlt+FfpHrJ6l6KNVXbb+lNRrL+kspyrU/vedTes8XIaX6Q995Y6xxUXvf
1Ne+xZKfUv7VV97oyx6lctXWR8xvhlqHtE/833imd38YG411v0hpppU8lRtf
Y9sP1GJKn9ulMrXt8yktnzVvSuedoSnVTymdZ8Yal7Ra/3imlX1N3zSWeBn6
HJXa7U7rFPNLaulvDEV95Y/c70VipDr836nvPsJQ9YXWJTE9sV3gd5t1L8T/
+wnW8/RKoV/IT0QikUgEjXU/MFa9iEQikUgk6k7a54lEIpFIJKY1Un9jGJKf
iXJI+UIkEolEIpFIJBKJRCKRSCSmXjo92HOpUsvX9H2PSCQSiUQikUgkEolE
IpFIJBKJRCKRSCQSiema9Ps5kUgkEolEIpFIJKYML67Kft3zcti/zmNi99Ma
06qdatuVVv1ENC6m1zxLKbuN1d+G1stY/UCUR4qjbjSU/yhOxLRAVh6ntzxP
7famdv1TG439nEr5kDpIcTcuquU/qXLSSrzSih3GSt6/Qj+T34lE6euFSEwN
NHSdN3TfQyQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQiUX1uqvpl78/P5zWZ
BvVq9J3jgl9m0z2CHmqy+1Rf98jxga0m29cZbYtctz18yK/owUIxmlpTm35Z
wz2/PmxZtieuIRqfA03++HD3v5tZWAyrFql56X3912Huul2uXlfw3kKb5mUh
L0NwngF23LV57pnjvnHz1Nr/a97pexrbJ5tDa0GeZrPlxRbc844bzBNbcryR
tVvYOu5+4x+TTFZzvLP02dwldS9oFs66vX8Vd/2uW/8j9S691mw/HVv+Cyev
bJNc8bifdGznvAPc/N3OZvkUz+kX3fz1Zcjz/1K/JfTZ1LaVK/QoOcW79cd7
LzTbri7fhHnHPs4yE3oEHFx4D+Ob1WresurXEE3wgvrln3B+uFZx8Ndom1ea
6V3PNEtaHqrJ9X5DuQfcdZa6Xk0hd2rVM6GtOH4rWKoA5L3+0307ri9Osmnq
zsndXdm3G/Tp4vXr5ETOT4vsdrxZyd0fZLE1p8Pvp7a9P02e4Tn2heZGeZ9J
mVeEaqZsCCwNfQpk/b3iHWdf9tGbWq/nnh8bM71ZG05u26XZnrXm2MYzwDYT
Nz4+cuF1XN/aE6X1n1mTUg6Y1ymyj88nzs5VtQ+vz8KN+zHcND/iU91l0aUE
Tp8R3q2cEEfbrl6X4OffLbv6PeSuHVxrT3jNMbzsvmzwl6vVQKu13PN8Q7uv
g/xb1ZqEwP+mzldNMU+thnULbvp1RuMZYFekHff8oMXF2hi/ZadLafihR1D/
UOid1z2qlRt3/1z12qaYz6Fu70aQH9h3cvQfzq9vo6ybRnPzTtp3fWtvzi8J
0TZvIL9pNofs+zi9B3h+qwY/fYsZUATvJ5vPWwn/n6/UsTni/3ZZPasH1kG2
9XOb2GDe1m29k35x/lv0uPNDXJdbue8+/Hr07spHiFOzjB83gr0X1Dr3jpu3
28PoNpATWqXX+dXhCzQZ5li9TebeL36woUUc93zvzM/WmO9Yv8VbbnLXA8t/
OPmD0/uIZaEZ0Gd/C81jvF++Y+J0xGPll7BruD6dZ0HXe9z4qCmrDmbg4rBn
97Htsdz1yg8XqsVw+eUcvXcK4lTyfdahkL/szjknrJvrCWtbYh2UNS3yCP6b
WXutHe73sP7aZXS5e5qRTu/y/Z3jiSbAablFDCfPa2hcUYzr8KjLTIzzCdr+
awPnL8vJpq8xT9ulF7I7cn4N97rcCvod/XK1CeKx+rtrTsRhzCzf2EOcnz3i
fxby5O4PuZP/C563e7TnG/z2stGHGMjpnG3OzUfcfD+nni8M+65UzXYV8c6+
cOBy+KH+jeSMYOOcJaORJ3X27PpZnFtPff1cTvfh5o98smsJ1k/hjoOzYp4l
ZZpr5zvxYGldzDMwfnpWrGuL5V3awX573+dXwM9rtrWDfYc6NaqHvDgSuyIC
dhRvW7gSnn9t0X+3N5eH+7p1s8H9rlWuNkI+WuyqcKA5xyD/pcV/cHL98hz+
A307DfocAf3zZO/6AvrUz/3JA/cn7xxQBPe/Z3FJRN7EO7W2hF49bKduQL6E
z+/2LZGTk/XsiXMYn3X54jCMH7DiUwX4/dLVcR7Qf3b/ZkkFOLtvrzpod5Tz
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
PPtTK0o84fQPaNq5DZ5ne1P321NO7qpvj7V93MVlp9ZgnPPGy1o5Oey+d8H3
W/uuzwdDv3w5+5fB/vWg1PIF6FP2Fsyl3RffmZ9+j+eVRvkFYr6RJ/bsgH1j
szRNxP3TTxpoz91mlxOrQb5tbrtk9BmFe3Rajn3x3LMNi1AnCwz1mod4XV1a
Mwveyx5pqe1LplS6OUn7fWrtl3bIh0F9fe2wH5Ya2zwJ4+JDdh0ez/U7/U/3
eAW7WntlyIn+yLtoUAH4J1kzZBj8H2Y2P2wMV3+j1ixtinEJVwZov9/NX/fh
S1kuny4edzuI+QZcuDwM7z01rT4F9dGs16taGP/XkaURbbZN0xzKMa4u7Bvu
0Pon7r845FYB+4rN+MFO8JfD+Gmx6OdatZsWDz+euJqcC+eLB2H+x2DnvIlr
L6C+2a3J2xPrInhUqC36hDodig3C+umx5ekz7Xl+TEAz2PfIzOIvyHlWKroz
nuc+YW6FPHJpe+oK/Jn4ZGog/LjXoutx3A8q2HcpvvOvs+0cHNrqicZxX+mG
qC85g0dcxTorYjW/AeLY+s+yfJDn37nCQu06Wfb4Ir6vWxzNrMG56GFIaCDW
h2bunv3Q43fyc1/MN+zRbyfMt2LRnwnwj8uOBUWhb6Gx87R19leHrnPAVu1/
ur3i5vXbmDkS/kj4vb8TxjVZN+g57oc6To3GvMuKec/A96Pd50yyYB0dDdlY
AOfpy8nTHP5w+6NPzKfRY7j49s5yrwfq59vCOdtA78CiTwpjHodqd39qv++a
+3WBPnf2dHeE3vXytWqP+mN5a0Z/9E2bLU21fWz7YY7ZYV/Oij1Lwd4JG36e
xfurct0tqa3fCc6FYJ9Lji3B8Nel65Ha/uViQKzW79Hzh5uCjVbfaQz9x3S+
5YH41Zz5fNoLbp6b2/Nrz6tjzyXlhZ7eFffNfMndP911dTL82PLb2eLIm+jP
7iu15/oKiyPhl6zPC27qye3Tx6/c7dyNWx/ukWNcEPdPjSrfxLln8KBzt7Tn
KrfgD6ij3jbdp4Hd3cdegp6eG+uEQR/7v2YPQl0adGvJT4vwBZpy8Qm+0D9s
sPcj2LsusFHzBbkjbL/vblcKdTPmXtR+7feZYi1NR3Hz/NxwxgX7z/hvq5tj
vFmzfr+gt/P6N7Nht1fEzpzYlwNK3tmEeRMs/h6qPce83r4Lz/O817ihPmfZ
V+Ur9PA0v+EOvz/xqOSKcRYxW09hH2k64WUE7Jnjsa4y9peJDn2X4bvrtX53
/+D+9OZrW4Exdu/3YP43NevUMC12StNmw7A7sGd+dc9RuJ8zfu4N9GMbn9eY
jt8pWuZIskd/93TH22jo12jRtW/PufsVZ1u8x35sbnqtMOrRqGwNRkK+Q59F
KxCPfreGbkA8Qm3W1oLe1fOOrQL5f+6Y3ke/fsVv/hfkcfNK5zfiecQEr1vI
qy4lpoyEPl9rLopCvKesvN4P+02l+XNfjeTqzYXd8aXxHf3+uT9HMa5bn8jx
8JPl+NE5cS5ub1pvLupCOVf7D7g/v8Ox3lhnj44c34v5+2/ur11nQWVMn2I/
+Oj9zAr+dFs8pwie+3UqMB/6/HGe+QJ2lS902gzzPFnSuSPkHb5cZxn2j79D
gofgvdbP8n+FvXXONfgEua5FTw7FfEdz/+miPe/7/qgAep0wyYB1lPB2ZzDy
IzkxZw7455NL7CDtOahlps3o3+5VfrwH+9ggz903kccFNL1eQt4N7+1WWOdT
j12zxfj+7gOWQd+blRauB3f0uJUTcouED58JveLPbNX2ZX2HdXZA/fo74wPt
d6s83XMEon+8PnZTbVwvn7DVRPt73K1M+zHuxcVqPojzno9z72Bf8fAdew/X
vfLf36HVt8+AYzgPjzrd0ALr0vTI833oE4+F1kvC9yjTO1vHQd6dBe5J2Oef
R7jfxDnnfL/L2vwuPmrYd8jpZJU4DfraOia5wa8N9w6KxXsPXPttgn3VXze5
h+sV9bZof2eYYfVok2e7GE23mIzmGq4O367/Q9sXtXW8+hDvb80UNhp1efPU
yW96cv6LXTrZRJsfno9KI49WljyXgHkH3jug/T7XO77ZA+jTbdyOYZiv4KUI
D+hTK2+5ijhXxNpY9sF6rZP9Wnnc97iQsB/vb346QLt/umSp+xT3x36csRNx
q9Y54GS/jpdsLw+dWh98/q1Lj17WsZoaObIMcawYrBnZcPnyTiHXuXPj8pUN
wuI0f1ebNgvPd1V26rJh8H3bhl4OBXH/2KWN4ZZ5w2zHjkgYj+tiUffnd+Te
y3Sswrbe3Phb45ItO3DX7tXzD3Pk5pm9d//ip8U/246wX1itK/e855jDl9pz
zwPDV1nYcwy/uccP8wR+/1G+G8fmD0ubZCj3QPPySkHt9bbRM01jih3Q9Gnf
bHwfTt6pSr9z4/6ZK6N7NOTmv1dqVhXod37NydWYd6pr5BDIX/fBbj/kP/Uf
Nuf80DOaaneXenfmro+svnqrC/f+0if757bjrq3yrXt5Ze5d2xxl78wcxfnh
VdHrc10qnrAdf2VMtWvhF2wjH47a7Mpdvwp9UaAtN376pyv+sPfjglmfIP/U
wNnNIKdx5g6lYX98nzpjPDl9zs3weWvD+Wmai8P9nvDj1Kc3Kq+Isz0zqJLH
1OchmqtWXb9c4OTHj1/3vgfsmZOnVU/OvkwuD4+4cs/71gnpCbmB3tYHMM+y
wNHPL3Lj75/feBNxGprHZDTuH7hWqzjm3VWwpH04Z+dFp/JJl7lxTzcVOAv/
DH/wxH4zp0/uBU5h0Gvx+ad+f3Pjn/2ofhb3u2QMXLyJY6GprStAboH7mctC
3hLfxlvhx00XC2QI5PyvKTHkVXfufsTOQd1Wlb6h6ZDwdib8UHFswe2IX8aC
ef/APzV9repDzvpzMeUQp4XjztTDfE/XBZeGPd/sw62vcvp9GF3l7EZu3num
e8Zbcn6Ji16/GeP/jhydqz6n95C79zZM5/wQ4vj0GPQpOGW2NeSHdX4Rhzy6
eC7zlADLeE2fY+3Xww/NijsGIa+f1JjYBvMsOWieHfJmJx7cDD07DS90Be87
vTb/6MXNOzj6YXs8H/Ur9tNoX+7clClyLPL1hfOgT9Brfod5dSFn2gCrtuu5
64iiw5/Br9kCzScgXv6PlueCHneS9vfDuL0vL7bGdZu5YxZu4cbP3mS2Evkz
0nNcO/h3xbCQ5mO5/LobP3BHKBenViVOtIY+jhWqtcB79R0zdoQ+peKitkPf
ch0XtNGuT8uHNTMOuW97cfe3QceCo21vv11QH/oXnVf/MuZ9HfnsPvQp3SZg
zyTOX/6lB9d3wnpe0bmqBefXJvXXxMM/ns+O1sY8ZyaGBCGuyVVLO8LPTk7P
z2Lekr8z1UWeZj/8uxDm/bV30p9BnJz6udz3Im8eHz8Ri+fTX78vinh2Dqnd
Etc3kkbYY/6Vq34nPubyZPcUu6RIbj3tOJJ/C/K93/15ASO59bPE52J7rZ1/
+jXGfPMiItbg/VlZBu7rxfn95Rj3DYjz44HztPnXfdSRrF2Q/xWLeWBcRFyj
lrB3S/YGs/B+jY3uQ1dzeXjN9P5p5FuhoW894LcKZoW74nrH0LlTB3Fyd2YO
X4z3Vx/2bA6aZWw0egqnT5bJLyoinwMu2eeHXl0KHvqNeNzvOr8i5O8f2Wwe
5A0un98XedXuxngN9HJ5fmkbxoc6F3WEn6aM7lwT67Z7TQeP65zd/m3XRKAu
rnI2+ejMzfP1YeI3yPlzy3kV9CrSskI1+P9uw3wJ9bhxz23zz9Tm9bezg805
f9na9JiI542+9xwE/X7ny9Ua661L90wFD3Lxn9fhzFzoNyJhbia8933P8luw
K9vXsD8YX3ba/bOok7Va9N2POnesRetg+Ld7Qbs6iMMpky0ZV9+L0kz2u/YJ
4+91yNl7APe8/XGPCWe4vGwXcjMykFtX68I3lkFct41v3LSw5QHbZn7rb8GO
u7+nzkadPbzW9wfeNxmY1ArrwuzSvpfQ+/DxMd+RH2cC8zli/Co3v8Oou7lD
/j6EvK94vUsU8i7uWJuuY20eaxbGzek2j8tbp7YnZ8E/6z45DUK+lpq8ew7m
H7AvZDnyz0dTLmkWp3/r3ok5Mc+Ly5kbQ06XSn3fIs9jVlf4Av+XqPhw/p+y
DzR/dxsxypnL3xN+HdtCj0NjF97DPpEtMmkl8sJ3v29nyPl542Z4Je79iA+m
5wdz903zfraAX0sNv3AQcl+3HbEL/naNWTIdfqxf7eeDLAVv225PnvoDfu/W
+dkS5EFSv7AA5Ifb/Sfa9dg0IL9Fb27++wXyr3Ti3gsZF78M8bgZE5MH9SHw
SRWHEM4ffzUIX9u68BONf/2B9zBPpwxdSmj3pVwPVw5E3m15fgz+O3A6Z845
nJ8KPVr05Rbn768xFlv/4vQIOjthJPQ9/rybtr69G+v0Ev53b110KOS9mdFr
PfS7VmjCFty/VLdeAOL2yHnnNdjdNLF502Pcuj0QnDwZcd1UzXIL4lAm4/ip
3bn5+2zJ9A51LN8Hxz3tK97UDF+1qQLq5F43+9r9Ofqdz3oU/pwY820C9H6h
sSyO9WG599d++CFDli9/+5se0Zzrefgl7L9aZncxzP+laMxGxOVcqd4ZoN/Z
wY2nZOTsOV8hcSfisqrnqc1vOb1Mlk9agXpXbGF/G7zX3Wt9Zbx3xLandl/x
KTfgQCauX4j7WjgA8Xg3tN5z2L3Ke5HlBC5f/Auuq9ib0++NbfU7eC+8VvAz
6HW3QaVk5NmMq72jMZ/l9javbnHzvZ/5dzbMMz3j9ZZ4XtTXpxPk/bKa9XJx
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
afvJPyUnloGcqPoXfyGeO+fk0c4fZLrJcoTvQ03y93mntP1u8KpQxHVt69DK
/Zs80bj2iPwehu91FwK98H69q1VrYx3NsrX0rsHtP0fP1y2g/e6bsNUF9v6Y
XS0vaGLeqC3yPdPwM9rfoxo/eXoJ6y7fxfcNod/w4WUqXuXyfdeh8ESMb7Pp
6gv44UP7r42Q73/vzBxgx+0j3XZe1/5eZ553vpX2XFrmVgecZ275r4qCnIQW
ZbXf1XZnz1AX+je3ndF7UK9QTa3xTevgus+7H6MR946dmvuiTn1rt3wVftdo
tq/ICOy7gxOOVYZdzqbHEuD/pM1d3uIcmj3bbweM/zv54xn4yWFd2z3Ii9r7
nmdCPi5LNg+AXtE9qnhjnZkcs56C7yJRv8tqfx8o+MDhHez6WCvjSuynA4pb
vsT4gIjNfyNe5ZavfIE8XRWyywnfr24WMckHfxRpUzcI9ty66DgXtFteaRT8
2NjnR45LXBxyVu+YB/rEt606Rvv9MNnWHHy+4ZB2n+l7xlT7+8/+i841oef4
ude159SkDRfzwR/nZhUeCHljLSNnYtz4HTW0vwetmeHniPyv175vBrxn+tr+
NfLkorVne8gf7f+gD/y9burPIRhfPdPpZsj3Rl7rr8N/V75Ffkbc6rrWvIb3
/WcX1dbD1Z1Km8PfmTyDHLGPdThm4gM5HpvjzkLfuq/HP4Df238c0Anvl9lZ
bQHk7p1VriHsT/pS8Mh/7Gjlh+cPNatLgbesEuPwnenkgqq2GP9m/sBf+B1w
Wqs+26DfxKjZ7tCryJX4z9iHnZ+YrIM9vX9YdcF3sKiZW/2QjxufnfLC/ZAu
c4fg3F72kf8ubb8zeNNT5EFlv84B8EvGj4eGYdzipJKnunP1YueLAg5YJ9W7
PdJ+T/UbUFDbJ5wunKyBfiUfLhiPvIjM1zUv9Pg4rrH2HPN1uVM/PF/s7O2K
eLgXWOszN/MtzZv4qj9bcnW41ZKfGzCPe3SFdvC79eamuVAfR1a55Qr//fD5
od1viuR8VAR5lGXio6OQH+Q+rLz2e+7J+Scxj33E7EF4XjvPtkm4bnH5w90f
nJyoxvYbUIfqWptpn8e4WWm/v0yfs/8k4jEzqORx7e8c2/1NMK/Xybwmn5q5
a0ZYT8pRsbm7pqDV1uGZ1p+3TciQ231+wFXbum26Oi7ffllz2Lag8/V2Z22b
BCUsz8497993QFv3l7G2210L1j7H3Y+bUyW/jcsrW+cwu2HXuOttF7tmWci9
N/TL4p9m3PjyTtl3LOauractvXePm+/G6oIFi7uf0ww4sO0Xnnuc2fhqAff8
mMuGrOs4bjlzySYXd3/9vZsbMnKcMndKrhJLr2o6FvNYg/kbvbHLOTHbUc3W
D44rC3F67/nu6J2Du1/IubI99Pk++dNJT06/TKENPaH/uO1Xzy/heMPivZU7
x0SzXiOLxoTZBk/wj17BXVeJnTsDcl+3uX0U8z+PLnKzyqyrtnn2rJnjxvlh
+duqNWpkumTb6OSB5fVNzmuy7mg7CNdlNeHrl0FeoN0T2HfIecl32GF5sWqN
pbjuMKHLX5zcdTe7xEGflZNf7arH+WnnLp8LWbj7Vt39R7zzeGpbpnx9v+AZ
R217HP0QU4uTv8br2xbYH7Wu/KfXnL/eBP34eoV7PuaMwyjMF3ZpYYVFHPe3
mPfJhhuvsX9/DvefVjjyEfrv+GCVNzP3fumlxW6bcXZ2XlvvUk1unMN9vyln
Of8kfe7zeAOnT5OlDzOv51hhwcnFptz464cejVnLXWeIirwJTu76cdNaTp7J
SbtT8M+lnbaHYdeB7we3Tef8n7/oigJ5uPvtXkQXeW3zxPZbi6mNVnHPn83O
6Yr5z5VJagr/T/d2aboS/ujW+QjitL+D3w/4pcvHDU7w/8zSn3PAjs3hSWfg
p47fWj16y/nl69kF26BXSGStqZGc3u19g2oHcX7IevfLCdz3m+66En4fWGdQ
Yei3dPm7Qr2vnNPkaBPUF/mX++CVpwW5/MhbelkE9DLJejKXCTduwfntP5AH
zj8GVcL7qxpvzQR/5GvoWRhyqzg9aTp07xPbsXccYqpw7yffLmsOf5QsdcAb
fj9TY1otXNutL1UUeu/JF9EH66byY8/3iGvO6m6u8Nud1ZNbIY4Lor9HY3zB
gP1NEd+anQ918+CuZ7tNcpnH5dfgHZ175eHi9KWOUyX4q+HwHHPhn2mjhhyA
Xe9iR5SCPc/69v6cm7vOsKjJqq9zzmi2jfzrUjfvc5oq+Vt4IY5um0KbYFyz
fEe2YtyFv4ZvOs75a9n9wSWXcPPksqxtl8D5tfG3DVOQp1MKF0jE+usbtHIp
1sfMt4/Ln+f83KrKt3GIn+b2GWs8/zF6dwZcm+95cht1war7qYHruPkuBhz4
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
4J5aWGM1Rq+Qijy+0CJq3zzr9GYy/xxRpR09+ZGaukd/KI7Qm/vAsgZy9Vfm
5IL/9IuuiUtEPrf92/WSCb1U7pDrIWS8Gx+/rpiMDzjnOaIjqyiTt3xPQi4h
Q3EtTnJ/vDH4dxiZHyrmbGgbIO/tWwnVGwkOTz2mFIIUMykxajGhvbO/KM+u
9L8OIXNfXUajKnJeJPrfoRwy/u7555BKRvqFQStfMqp//vIM8r+4scYJ8uwc
Xz3tRHDSDmQphh7vuzs7nSwaqCOOdYP0nuWUKUHljaB/OGL+CfYbdNrNSoh+
Edn/fV9F9p3n0j3CCd0NHCUpT8j4wfpYSh85b1T/9WoMmTOpV48GkvHkls1R
uF98+nbHC6KncoBMC87xrBjvjyb4uP8qlYY8Gvc6svTIePeuYj3sYB+ZqqdD
5psUlTlhX2XjvRahwM8usQ77IUc3tME+XwWDnqcT/J/f160HHx7/x//dFiql
HlHV6AP/jf6xr3F++Vy8TRyZ851mi39Lxi2Nzck4/9PB+Af8TOCmZbc/WZe7
+O5GD5FvprEzAnw3rFpp5EBwyfD35MT5reFO6+OJ3KaaUc0sBIcldZm7uM/e
U7gX/PLNZz7gXNT5T4yKS2+pbrGsgVFkPYHj6rpMgp/nvcELaWRu/F7HEfZw
p08ZB37nBcu3PyLjM6/9V8F32GdYjIPst1/0cQhtIHqVMf/5hPtOjmrAS7PO
z6WInL+lM2IF3Fb+Pj8PuetUE7q5yD16+fp78KPgY08OPibn6OQKo7F+89id
LOCau5llHex7meveAOh9H3BM5yb+lUS/lPOc2OnOfy0+oL/wyHkj6KyTdzgF
v9b3GdycRdavRul/wHou07iCHGclZWl/xwsb5ywK85zmCn1Cbyhc9NJncq41
NHk/zqm/LYhfSfAS495ynIvwSeMp9nAkuD44dvXeJ3IufvjHTuCmt8ihWEbm
DvsvtCJ+PFptT2D9rZOXMvgXV0k4gF7lqvwZ0Ek8vIkJeCW+EfwOvGQke/yB
63vZm7u5yZi1du13zC8W+R7MJX5yRSPtJeIpStvpxW3Cnze3au0DEj+bI5cV
4SeCiWulMG6NsbKHXXuV2RtfEtzFmEJ6Qd/p+MqjkKPHsqIY/j+yuPYK1gtv
3NXKJnNm3dXSwJnRtuS2I/HDU1cC2oLIutXOicpyMh7zu/IR9jjF+VAojdBt
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
EnX/3yjNC35iq3c6wE8DWxoouwwwnL6Od6Xfp3bngI7HlfC9kPPfRLA25PRU
DLlH+fVpgUtWdbkKjL/SRUAnaYPRFeD3b5/rHPY3qN+6Tt3Lw2Op+3H6vtZ4
7NvAnaUMvz5/K3MR+vRzf9SCnR7G2VH9EsN+/g7M177JMIedJndzDOO9sK78
zkpBMl5Tdd4N+s4bud7DOfUfXNcgp8Kxy5yYn0viq0M/dO+8lyzs9/KO38bz
xM+rZTKTqTj/ESID+TpHI6i6ceCaej76ut8CuyeBS0S4HFVnLzyInsc+vTVl
FVsI32M8yx8Bb/9H9Q6Y99cMr8K+i57F36CfkJFSGuhFfGlagPycoR9jMU4W
nrFFn/10tDTqDJHD8LNWBPQ/dFyzEjiKs4l3Iz/FV9hR73qFdXp0+J4pd/XH
/Anh4a3Qq+Oap9Z7Eo++U16RVL680rIMeWTFx4tU/2tmMPcB98vZtCEqD/bs
9IiqJPtpO3V2oI4ZX/ATh/wdA+8S3pD66s7z1Aryq/1RzEQfzu1hvQfvg1o1
zPGY3zm85znkCK0S94Q/npfcZQi910lqn8f65rtu1pA/M1AxGfrJDdaIY/w9
WnkZ8GCQDdQ7T+rhh5qTQbh3e29aYfSJ1DHddwkr0K9VsV+Oo+6daTPNH4mc
nmli+xG3KYzDuaDfHpftA3qGe796Ir/s5jhM2cusR/8u3kkG1rJLwJ+1XdLX
Yn+h5i8v07oGBf8yJer9wzT4oCzoB+wsXQH/WPzj7g7c/nKVKkAP6Xc6dsBt
z0f+4VzvnwqrRPptgXNFJqMA1T8npacDx3nnV2KgP7tT+yrueR0vkpfh3Hkt
1Qb4u82Za+qgdy3q23Kq75/mu03dP4L+DaDPqGmZofpohlnHbXiv2L2Kuxry
zJqnJGI/fed7qk7Fs95cAf7Knb9aod8/nwOp1H32+5U/qOv0Pceper7FRST+
HME1o3lrOPrSjG/NitQ9auV9Xsi7eCP7GfV+rlC/F/sfpFt3YKw8vrOnivCP
VFc1hl+xzKXyYv1cqq86+rIT5pvnwH8iy0Qb/cEetq8/QU8l4GEC8Ldiz/2E
+2QzzwEL4Ch8jycE8p1iPMGK/t+soFafklfOkhV2q7dwSod+q7wsqfvIk8HZ
d8MkX6u83fAK98mNzAfaECcVRxss4F9tDIz1VF7uOEr1p2yyfWvgf+/EuKn3
w+Zd26pRDwzPuf8AfhJ2wuKUvltK/OG3pU/vUbhv0LG4DH0NR05kUPX/wP5o
2Ovp8YxFrF+1sJfEvL63K+XnI93bdJFHnm+pDIO8tVUfnqCvYKtOdBTV76VZ
yjCVoH4Hnl8uhvPLxg8ywl8/yb3ShF5LWzxWQt+7XIongdNXOfujqPN1x24q
YZ6WfM0PfOKl9u3CV8DoXyn6Gfpqy1iMvy2/wEr5TZmtF+xhayNmSfW9K0Ni
wXfvlU1b4c9XHRpDsH5tn8gS+oTo9IAVlJ8V3hEGHgVGPTeqiVwZXw+Oo8/j
1wxY95vgrffywD70swmCf7/Aj0RlH9+icEttVQcOdX8f3gZdnr+cGZDn6aWV
R+EHmxUKtuF+vJ6u+TjkYNRnWQ19o1n+OUK/k957pIB7Cq/xEs6573oxA3qS
SbxL1D3Jo84H9hs/Vy4NfW5G2J/C9850JoX7+S3vfoLP1pO/DEDvvmblAeSn
E2P3Y7GvKVZkI/prfdeyfMTZmzy2eNBvNmY9R8Vl9GbqXt+7J8gD++N0WYtn
SJ22crluhHdx147/HgL/LYN0edC/uuGxOPbJFx4/gz7y7WTlJeTHp13Cn+Af
ZQqvVKj7X9AN6r0q3uZLiNr1YQXzOTojjBsKHR0Ql3qZpzTvJr+l2Ys8eA5/
1ArrVEc8GPY8r40kfAK9vOpRf85p7uqg3iOfnPqO86ztAythR+11yQGoy3/u
XhSFfluninygz2T0V2eqHgX+nnxO/H2EvmQc8o7FBNNh31zJUUbo68F2a0yL
1BHvtS5FwOObuPci/Fdi2UMv3GfyQhhLMG/ysIcB/Mz5Zuip3z1mcpp/zH6k
PR/OpnBMu25GvXcrOnLZIk9N3quQAP4Xq4yiEY/nmtqo/uOH4pUUzB8+Y5EM
uSV2xauiT5CT/poIO8YOeNUBtzZhNgP4Y8KDoCOYd5oXpd5DrfcIus2Qvic2
OLcNY+Gt81T/efe34Az8Ss17uxP1LrFsMA/nn3A8vgf+7wwO+0iSfKPweE9+
GcEjcayeiudxuu9UPr2g90MK8qiFrF2F/ujUk14b6GPalTGLdcuK2/LUvVS/
/QTl37tav+D77CjrXtjLWa2Qyuu99veofkXj4vAz5B8G6fx7mOeq7z+M/foC
8dT77JabbGugp5HDmBT1nvPMpgDrEnRx1DuteG16Dca7VZwMcf547+9s7C+s
EbwP+3IzLhnCHw/KFpyEnn1xs3LQf1i14jbqJxd90hecm+eV96Tio+K2Ota5
nzzaD7sPfQ35gfm1YmwV4MO24p8O5k+K7k6EPJPThz1AV28wunuW9PvaK92o
9/hVWfPn4adzYqxXcX5H+PVUyOXLeGs1+p5iZn9m0LlkVFWEuOmQt7hD3dsm
Wql3DZlQ00vw63XH8i6Bb/ozFgf4y1KUXj31O9YTe+q+dYP3kinyBcdUXjDi
+W7pTQnQlQ7aKISvdkDYc+AeuPE69ftnmghfKHD5sI+deuevuPuCwmV2MIB6
Dw2yCXoj86iSFjKi82sXycNKTWYUDnNXQqh3Y9/Utxbwy/aPs37w//E9tRTu
9oePJIHeA9+j1tDTTNJzFfjwydvzY97vgx31viTqclMbX/odvg6KxM9Ohh6o
RXxruBYqYt51OGATdd9bvnET9A6xWaOG+Ujhq9LQ+xn9XP7TveW0QI8QngWN
IgUTpVenX418od3JKCl2PVdLa99T11sv+Io2sfrs0TvDRQrNn3v30sh6Sk/t
cAE5x3b/9tcbZN55X9+3N2TesWSiwjhsWEHJ+sa/q+T83HIvb8w/c1SgBZJ9
g02npI0/PKb96pg1Ax2T3dEO+F6p3Sk3QfjYan6tuol9UUd9Ssh8e029ItYP
a+0RekTmD7Q9vo/5cXlr9lWGpTQRvfdWr8m4IOJHURH5hmxy27KWzJfIjsr9
IvTu/t112fhpMy3j3uPH14g8iQIrtCfJ/Be7819+k6+5V/43NzLPHP6jHXT8
656Y3CV8nqkP54aTr31VSGsr2TdfcavpHhnb/ic/b0ro8fbWztwmY63w0uMm
RF9zzulV5mRemcn1IXCziXx1D+c3rGbNKCZ0rWwFX2OeWXmp+5B5K81CgkUN
809O0eWakvOD/CsPzBD8r49Gz90n596s2ne9kKzn/uaSwf7/wuX8WIleITu+
CeHcBdXgt5kEf5+PfJs9CN1Fs1pFC8K/uEbICfZQyLnPATzWZx5UA35nlybO
mhE+1VtWu2L9X150lQKxA0Px0S+W5NxYz9Yu8HNj/3A4gqx7jEQUcBwvUvgm
fuMv6DqLPuEF35GOOG3st0i8+QR2/ZS+xxN8qgZ3HrpM5GCa2N4OPmw84Syw
0/u9D4rAr394cTn8h18gdQX4nF5vqwu8o9Isq7FfeLftJeBA4tL9Otm32f2l
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
8SnEP9N0xlrIaTIksn01Wddwa1oO/xuOrJ+E3dL0LsngfKyqjif2pa8aUsR3
gfv+OOwy/HdqD+Tlj016CNwbshQZ4R+qmwU5QUdjPpAV+UPXw+gPcFv/KJaq
0z+jVDzw3e+4VhV+l8ipQ0P+U72cogl+PLsfmuN7qJZbBnXkgr3Ib/h/lN/a
MhYi5/BZM2/k4d8SLXM7iZ6WBs4PIcdGw1MpoHtkl2418PC8Ms0BufLlQmjw
09AczWuY7xaWjcX87Wd7XkIuVoNeJpwXurqlxZLQG7G0qkedj6656fYccab8
VA56H05v84R9963KaMN5mlbGKvhFkdaq5VQfNp7Hi7r1Xlr7YzQ5r7JKKwVx
MbfSIZmq8+tVqHzMW361CvLM73oUCpxVfrEM4hzHqZPhkC+svd7bhMixrIEn
BHzPH9DTgh89Wzz4nyiZ7zWeiwXfwc4blPyKbRVNoPMyMmMhD/2cQafrd8Kv
59V7qh5f2abnAboexcGS2Ge0LLsFflQz+jC1heyj32nwFOv9XAmViMusr5yF
wMOt7uwQ+taKNVmXod+FU05Uf9Ngy7EG/rp688mHwOPMzq7BILLvae8w1WcG
6Rw7DLn6uVdEwR7HXbUswDfFarUU5JH6KLgEfex+cLAi3m98o6mCf+j1yy3w
l2TpjX7oC8Sid8kh/pxOFrxA/zZ2/2s26BpGdYv5EX63Q79VIP5Mq8NWIM/N
ix54B7yHatboYN+a6/oxqBcb+fbzQH7+mYVo5M2AjabdjmT/qWfqNuBb6R+8
F3gOl2+QMsP95m1KH85/uSTQhvtjKwMrL/YpH1teF0f4qenVN6NffvH6whno
oyN03Aj+uGXlI1nUqz27189jv9W2TbGQs37airrXPvsYKo46PO9lJg/cHLV2
9Z0j9sxap+cEf4qRtMkHnSkTViqvsY42taBufF6ZSg97HOBaext4Dn8xjQFu
hx6VnaUn8XDg9uwc8NWf1zgMvgtcYkdgp1bHgCD02SvL3tYAp+4FKUbgsCir
2Q58y3kT4tCnBO05LgT+N/J6baHPnO7TQMi74qvudfDTSzljCb9aUkmWRn7X
uRq76QKRe/104zXsu68bQN27V1ouW4Ccluekc5iJXK/nNljDH8JXxnmhL4/Q
PMUJetV/L6ZQ9WSX22vEfcf5hpXIw5wXmqfRr8m6lB5BffqoWJAkS+xeEZeq
Dv22Of3Xjrq+9sz3fsiZ7LqeBjzPCNx+AbvrBuq0oT9hcGecRnzxPfvMCXr2
5R1FsNtlIib0rxJZdgt46J9fXol8ZdjDVTRF7LnuE8cc1Wc8NlWHP1ezC0eC
rqPnzZs4JxMT5Qo9MvYEiEOef8s38SMv7d/8pwp6XUkpmsI7h4Vw7wbg6fFo
ypHqiyo76IDDpM4nLdwXSvWss4CTOj3/A9z/6hLmV6AfSPhnWQX+u/z/OwF6
KgtHk8BnK1/lKcyrvU50WUtwzVwS7oH+uiPm9LjPCD15UAT6V5n/fUe8qKtL
b4ffhglfc0c/euzb7iDQ4U5Lq0Hd7pCLaUd/uKV49xOci2ZmKcQ3Yol1Dnlo
LH/jFPrKw9IzVP2piJxfgXyYfpuzEHKc6lU5hXgR1v16D3kg5d4GmwGCXzSn
Ugr6Brq39Sbok2JvhcyC3ka2zEjY+6IdyzDk2C+wfBdVH0/0Un2Q9Mu723HP
X76rzRn8/CcMUlG/Oi+OfcH+3HfNVJ3iFbMKxb39386obOD2dSnpFexq+2Z9
LxvRV/Xa40LYVWlkWS/6uMg7bWzQt32l+CmcL2U2bEbdjBq78h/wfdVWpwj6
OVZcKV1kP2/gznnsqy4K54a959d7H6TiuCUnAOPS451UPn/qcVcMcpc7sepC
3hcNj5MQr8Wvq7SBq+Mo8X4yvyP/mgD45L8f18F5367HP4CDQPW/FvC98YFP
FfPiS1Xc1LuRYTElj5T34wnkgTWZqfOYb89+eQLft9s0BKAXY4w3L+yc97DM
+DjBqT126Ariwt7H6xDk2pmXMwo+9DqS7vi+Hre6gf77Zvf8BeQ3rpbmUHxb
HVVVQNdHSYQe976j+lVyGN/bKHppHcFz1sdjEDibetL5IB7tLSLc0VfdOsdE
9T8OPr/HEV/LXQKncX/beo2nAv3HOxPvZsSVF0NQHPrzxdVpH4CT82H1Zugr
OcwWBz/6+u1ZkhmRP1k80h/3cG31gED0XwKPk9uQl7b+yH2L/btunIsFvmX2
zkOQQ9M7Uxf8pWNGb0KPZ1lSr1Ff7z6PVkR8to8z8sFfiwLlV2B9VfSl7/i+
HTtzCXkshP/pNdRna7qsX+hTlgZ8NECP8d4gC+w16yWVivj86virFfx4bj98
CBwbXqtpQx6jH72RuA987qn5iDip49vUgnlRJw8F2O9h7Q5m0FnL9FYM51S8
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
TTjf5Z24mmR9tglWvgv0LnpOowzXT1Nhlu0gK7Q7ZBj7WKI6t4MW5lORTeVG
2bI1qHwgT+udfDFy//3cnSmXB04XNXu+PZpH8+RrC7z4HBlTcnuaPmB9F9vB
th/r6BS1YFQZLaGx3XHsFx9kIQVSh0Q/zl196oZbBRraYI+DQY2dVxvE82ae
HJ1kQmkTPI+/xkLUMkr+Bjy/AclSC83UeIgVtunq1WDAwwjynEk8E3Qe8KXo
8s6ia63njFgO46gqZna0B/c5XWVk3cdKD3T9VUSEPp5Lic1Hj7seYKKeJ18X
CkO/ILuC42/sZzYRDDWC/T+p0GHT691C4Q/6IFWqzG1rCR00R2jyMlhHZxkb
fCqf0kF49vzj3HwmLHLSoviaeuDJX/ZazYlUhJxspx0xF+w5wreyD/vIlvQg
RWvMz5pZzWX7NVmoyCbEzWA/A2DR7NtbnJ+rvzXfyWGfRlWPXpLduNrh5G8T
FbHXdFDlqueKdcD5+wSBbo3rx5Lkfb4Bc/9Sh1W31V0KAkGdo/yTPZD4bWi8
3bUa9bGOtUljrneyiOt634l1JNOO4eT5El2yUmY6KAkRIlZiAoxx7rxZ/c98
YyALRuo+2DRhXXzzjaWhtJ4Fne2P/tuJz6Wrr7qkcnsE9dj47r7G6IcrRqeF
RAT70c+oU2akw0zY4GNVraGM89KZ71ILckto/Ooy+2F8vpeZVxQy70ygmxY6
k6WtbeAd95yzomkCDQ2A3R88JwNdNF1jYayv+YeGT7H5o9Req5w6PAfWobHK
Sjd7UL5cbyjfln7Yc6PaVuFRO8yUrewM7MT5gLi06/XTSXTOru3rkU1EJMdL
0hOeZsLumVWqRlgf2mrun1SI5/X+KY4VI90RdLT29DBVAXNZV6/L9X25SN3m
QfTJbjp0de0vjIVOGGEk8B3HfLVyyXB1czETDYX0t/u9eIoMBYqnP6Qx0fOV
dzaPZtohWoXPt/g3EwKvsxP197EgkdoX5oR5ofBHQ886vK+UgU2RM0cW0GJN
dOvMThYsEiU2wT86alz99C0yBM97rOXiNZU51LG258649xSqu/E9LmztH2oz
2Q6t2L9Jq3NP81f7QeHr1FDEy2/QPfhjhx/OXTk/km4XYU4y0fg28f07A3bH
mtRtPTyPrAM7RUexHhn9x6O/k7sGKp4vvxXD7+Hdxl/6zXUOTa2lz6QutsGt
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
         "], CompressedData["
1:eJwdWHk4VV8bvYbMmcmUUCoqU6Yk7y4zKUOKFGWIqBQVSSQZopQpkqgMpVAo
Y5EhJQ1ISqhQCHHHcwfTt3/fX+d57jn7nL3Xu9611ntVvYOd/bhIJNIED4n0
6sHmm9VfWFCvV/9agNsJxQdszTFOJKA90SRR4AA3YuSXndq3igJ11b2r3V8z
4AnPtSKpKwR4b/kkYP2QgMqpvsKwZiZEmksl+u6kAq1W7Ky4FxOesHWdo61Y
cDl9QJs3iwB7s4UwlfUMELRdsVL5mTxSirfP6Q7kwL1/VKpiBgGuRMSTPWdm
ICOdd7KDQoaJtjr/y5cJKM71tOu+Q8Dzlj0PVn+igOvpek+FbALIJAfFb0V8
yHh3tkn5wjiYDispf0oi4CtPdEoGhwd9Z/wIbTflQObN0o7lKk5oNNHugEIt
C7LVrWpX8pDhQQ5Xpes5GkgMRMuOKbLgggP3cd5aAnyrxm66PudGBy3hYZUR
Pt+nChWS5zzUe7cEaMyy4WNU5WWznWzwX75R8mkjBz4+KfpkWk1AqXPbpZW6
LCiX8pqKNmKBuVaAK7mQAjZWZPuJCvxe9fXVQ5u4kaC73mLYWjqMbFH0n8e4
6D3f+T30IAeS1kVutllkQVGMj0ms2CJY+jGWNPMIoFx5+Mz8+Bj8+rb/4LoV
AqjZrsKfb4QMz30ZrdYx0xD+a50ta4oNi72kz+WyBFBzLMIDTRnQzpwI/1tG
wLvCZJ2qu3Q4HNS9wtiTDluHmjz54+chY+e3Kr6Vtiiq0kpO15uEZp/JyQjf
IMBPIEmLr3IOVtgOa6swluDhq3ze0UME/Pv6Tq/kKgH5d48hXikOtEd87Lx+
iALxT+N0zj0gYEbQXne0lQ32Mw4bh1VpYCKetPNMLgFmPRPHVKZ40J2IeZuG
CwwY2fOmufkpAb8/3N1eG0dAgdEHxYhNNLC+dC3YupAO2rffaOX2z4GuV+9K
qQIOvN254dd3/NydebeJWWcmMCvjlung/T1se2y06jYBdcoDj/9850LXG1Zv
/oj5km56MvJnhgxqC007QvxkQtLWekft5ikYZPZt202jw57Jfz32mN+3Bfpk
F1zmoTe7pzgngAIGHkqbR424Ub//V2fmTQLe22cQ9BEWmG0XZvySIsO1o1+n
CxXmQMOadlbigBaK6q2Qb1w5B2tOGEXNZlFhbJy1XCiVgJaoi/atYQR841Lx
CZQzQlYTLeNG1wlorRp6GviaA/b07TPMFhbc1g4J1etego03chld4QsQHmKu
rrGbDnJ3Q+J3KDPB+mNOq3EaAbMVe14ujyIgNXs+6bkTA475iNiYYt503jc5
mNT0F2T/Tbd381KBff225c7rc3D3e1er6QcydD4v2XkknQDS3YQfXV8I6F+7
KGlhwYtqiq1W3PFlQ0Jigt0qm39wqNe8heciAXYncpPDf5DQwKLebXOrZUjH
9uW4P+7LVOXKwETcbyPnhZbnXiIgZebEX1LZPKgsFNAzny9CTnnvSBk+n8lJ
gWQJzI/fbTHL9PC6FPNe11j8PHk/4q32YMFPamiF7uIBhPJvtV23ZUGKWEsC
XXQBfiVcfjT3jIDM9oDKiBTc7/fUPGRxXe9cT23LiZREy++ej+u/S0DF3xbd
4GsEfLyXMns9WRn1+ud98cQ4V4ouWJR30yFkcE8BJ4eAweJStV2VsxAivF7J
hpsDY+oygu/SOKBVma3wMIANIUm05wLP+JERV4H1Kcwr+meei+0XCMjdE/fA
vo0JpY/Mfw3j7+80Mr3aWoLPU/5tVTLGN3fs6NEEzJvlU8EjH6wJCFQNGwhO
+Qtar8U0PJIJWOVxdcET65SbwCwnH69z6nO7a25CAwdZA7vCWRpMHVCtyTnM
jUaktW9zFulgr63L/SSNBe925K/MiGLBE8u2uLijczC3W95gopYDn0OlyocF
uFDlD/vBM29E0AV5vyOlp6VR2h/e5BsYJ7nNGmfPJlOgz6p1qvLbFFylnvu8
/gkBqGP1JndFGpCpnVqumMcnzXtu7o8lQEdrueKVt2RI4ZhGHcQ6ueyffrpf
DdZN0i3txwWLsO2KqHQG1jHn4946X7EOOjw/c0QPnUE3tn4n3QthwsbkLeV9
Siyguyy/KjK6AOq1KT35xTTor3nuO7CfAjWqVR9u7VuEFll3o9cYV4dVyxM2
xuC+Cj/fE+ZHA09xC54wzLM0+bzw80GT8NFxcAuXBAWk++9cjL20DD3VmOWf
7WTAny6B0qZpU/Sis8xa4CAbTNcTj0LcqSBBCro7pEcDzQyz93TsP4/O9sWd
ujsHsca/mu7spkK3itYZbs85SLI/VSuXuwhhfKd8wm9wI8vnDIkedw5wr43v
1YkmQ1mfXlW7Nva1H0HRMlr86MsfqTnnUhLKCDa74U6fgFWWfq6S9li/N1zg
D46kg8Ozpkp5JeyH+bKfanhokGU1/7tYiQOXZplOkVjXN0nuWGfPXITXEdLj
vzxo0H6aEUWLISC7RDiHGk3AiY/Jy2xx/zSvOb0kF4Hxldm/eP7qPBiqvn4n
VcgAK9GjxfYFBAglXYzN2LQAUZ43g33erkQvK218N0eQkMQOro9qVQREbFC7
SnVmwLy1/6nCr7qoqHN13f0mGbRvVmyeEjkHNwYq3wseogGfxWY7t7JZqN7N
9fTU1lngyN8nBKhMuOP38vBWrCcqotyvvmO+tvcHhBC4b5/QmqKdiggIKtmk
V4r5G5zc/NzVjwMHqX6NRxbkkM/tA5VFKhQwvVr97guHCRInL2xh/5iCxbZc
pS/3qeB+syZkRcMUtOWtutJtMgGapb/FjjdQ4Ei0/4EQm0WwUBaKDLKnQEJY
THg0/m7dhJYi/z0CWCkpcaFjFFD16eiOwr4TkXXGkYR5He/+2MeRhwKJVhbB
Nlj3FPN4RG80TYP2Y2fZ0Rbcnx18DWysn6LsveNjdhzYHProqQo+15oNBXvb
9OehxF/Hvw7rwPeR9HWJ+XOwNoYv5hOug/6qmogO3A9nHGSsZ7dR4YhTTpOw
IzfaIG79ssjbDxW5qIhr4/d0O5efLDXmwN+GZVWHxuiwWjqBulOQCoc/d4yW
1BCwv/9mVV49B1RuBFYc3UGDK8ZvpXRu04G3Km6jxwGcWzj7njomzMMfnuB0
4z9MCKTu2LTxMAsWryj9jVjPBEs73l/aL8YBbe++q4v3406NMTG/PAZW7/dt
5MX9kVVSWq6Cde79rHnnnt+rEWH49N27NRJo1J3vx9hnjG+hybq/2FcjZX29
FjH/Qs+5uZW8IuC6u3mjMK5fY/boYH8LN3Lda3I0sJQAj5fBx3+HCKCyEbMS
5hAJnZWtvDJGowIzaHi9mhYBj7/JRY04MOF88dkk1MGPsk6/iWk2nYFXh+4k
FmLd/fDSOJvPhw7eRwPrlvGS0O7UGd6lQgK+SJnfPGfLhWjdP8qa/RnQJRH0
6zvWxx1Dupf/4Hp2UT0CX2E/5mv9/OkixrW54WXrmb0UWClCWZX6AvukjpjR
Es4PTicPStz9zQGDpJ8dqql0sHq0SvEj1o+ezVef9G3lQ2srVSbkc+agnDF2
4PpJCng2DFe9EKRBthZvb0cuC/atuJfvPTAPn8zOWsUpUkHBTbDJWHMOCI3z
Rk9PcqMzdZsiWKsY0MvlEjX0aRKklLid1r1fieyZ3aIG8RLo2tXs+SpzHpSi
062w25EMlb16Q9WdJJSoIBLPxPmVaXIkVS6fgGSjbT7xuE/Td05miHPTof9o
hbFByDzk5rgJpPCzIe5IkNLLBTJEVH3eq2TCixpeHMq+iHkX9e3dn81nCXgI
H5OMNQ8hzdGTCwe/0GGtCOe6rj4d4v0eMbObcH5y4BWLZ/4D9okx/QyM16mF
szQnfI08WhQxM0AHLWnuop+OXCj0j2qnUrg5ioxhlNXi/v0dQ3K45mmK1hR3
cVkqGSKadd/qGMwrcZ/Hv0aqRJGk7eZKLcNx8NEzd3yF32cTrZy2HNeJVsbr
ha0KvqIVP5TKyJDweMpEF9/PTFJ6/7KSgM83so68/+/5tRs+3MJ+UdS4nSvt
Pz8k+N5sfEaH4DOfZFqy5yHFbb7Q9QsDSiZuq03bUWDHYfOlIhEm6JSU1ZXj
96SrbmHE59HBRV4vxgX7kHzNKuO9GtPwM9Ts9Is/bKAd36vvh3ND6XHB+NW6
4xD0Y1AoVgH7TBOHzR6RQb9hbGPEERK63VU4ws6SRa6/D6g2a/Gih/FNaj8x
j1/qpRqWYr4dlP85GOBKBcnTSkZrFWjw5ENSbCDuJ7m5Z/5/8DUge3W0VTcL
kpuc1/g/x/w7fbFsoZUOJkL5QZ8XJdHnYw5bDhaPQ2le4q72Bl4UvlYuth/3
2ZkNEi6GrUwY4dfVtO3nAG3ZScQXsQgPPFfed8XvebxW4oIH7wLUzbt0n3Jh
wPNnYvsvGJEQR9o7TBz721lDs7FMnCcajG8PCb/EubApKEIJ61OuXVCLiug0
FGnKbyPjnJ5owqrMa9uMDjRI9WThPN0QcC5TX3oOZPnaQnxV2VAeqh1xHud0
fyOLPn2sD3nKRdo6mXhuevz74Q3fRUgjaobUGfzItIs7+ifW1zCD158V8f6T
m52+qmP+Jo5U1F7BOeeN5fBzKfUp+LJn+YDyY5wPEj650EupQF/yMCWp0OBk
50FqSDMH3M9/cCTj/Ghp7fJQkk6GvtQBp8d7cD4bU5nVGlyAvgw79xtpE5AW
u/6ZOOab6okIZI59Wdi7IHM5/p7suVmzCtwv7sZiNsvS6eAofWR+w04a2MeX
WJxazgSjjW1lepi/F9WGj6mtoMOaW9MldR6zcGUsPHBWeQH+rTh7M9WLAplU
+il1zJtrZbad23aQIfZycFBREwtamZsGfrKxnl4q6+yO4kKmGU4dXFj/RAKk
FKh4jlqSdV+XhXPyketZDysquBH//FvL0FomsE9pxn7D+vI6+ak6vZ0CFbu+
brpmwIIHFxaGNLEP/nZT1qggy6F9Nc+XFdcwofrmoo2CPBUqz2xXTY8iw++Z
3FObwglYR9xyN9AgoZGW+f6T2J/bLMm0SXyeN7K/fXs2/4P1ItvOymO/E7i8
mjH3EefsjDvNd8aYkJ+ZZQe31FFCVzW/XREFkvbEefr/YEGgJn/LnD4NYtXH
h5z3cKPswd4ddwYYwGcf+SMP91/36GebzpZ56Arlumwhtxyd/lF3vw/XbzL9
x7m3uM5Cc0YHHmL/1DTND3M0pEIotw+TSwbnzm3eZSrYB57p0Sw/ts9A6aEV
LzKNmHA8yEuYQkyDbjMxuoVKBvYHzelCXMfCcLsV9zBf0U32c+5IaZR3bdj6
WSEbzlYktyocH4YSlQXBK3g/3j/15cm4LtE8YQlRzxiwZDLVL/NmO9pZOTag
jvP/12132Bv2smAwoDqF+x8ZDt3YaInuE1AyLG//+RIHUP60/ItxDuQO/2uk
OHNAOeT1G/l1HDi2XNIydhOuc/zhdabYZyYlsx7t4pJEocNrUqnLNVAjKvAn
e+O87PdFQ7aTBcXhppeUplhw8dhRoZnTOHdnHL54SZwDwU+/Ksq9JoNu15VD
yf+dS/yzzYani+DkhDb1CnNgb3Hze4t+NuSwRkiTV8kgvsVDNArn20saXnlH
pHD+SBr8//8Obm93T0pw00B+91tqFa6nQaA+Y/UhUbRgEeW1UE7AQPDuE80n
2fDzjsnTiBtMeCmwMPitaQbMlK4ddsP4PBp8dEBjFw1uKIt8U3CeB1aMi9Cp
x0ycBz/Zyd9jQswRscB8XLfgJ5mJ7P90QHtD2ZwZB6LeDWxQxjhfiHPg3Sun
gL7cojXHYfy0NpzOTH6M56/G8YIawyn4O5qsrnybhBxHPtJXCIki643jcGwf
L5IydLwlhvPBBe1NHfZG87CrM8vIcDkBQ8cCv27FeGQIloaVYx2yk+9x0Asi
g2dsTOMuSQ7czntdoITnMZriiSkXYQpo1SeQ3eMZ8GaqzuRxMwnpa5Rb/46k
QMm47HoLvXGoORcd9PqRJFoXs1457skcrK/rFzvlTgHGj+F1Bf/1GftfuNSN
cVhJ/kbfhvuD1SuVL3tgAVxyvPNeu09AV6s/k5NAhZAfihEOmSLI5MmmM80Y
547wT/m1GA+6aMLsWLsmYmoQ9yZ2TsCbxJ7Grp3ToPJYoojmhXNsX+Tghqpp
kHG8kifFh/NEmvWfFlEW/Oi8lTaJdeiagbX2ud/L0KuT3cuTrtLBP/tpXgfe
x8JCvMglzzEgjIv/KIrinCKvbrA9j4Ar9T0bya84oLE5Q7MOr99SU+l5k0zA
rpiOtrxmBgzvCprhYF90SdoWI1hPhY5Ucc/7VAJi0vcs+diRQekTD6VqnArH
79vlbcHPLaynS/Djq2a5UtuEOwNa1WcCFPD9Q9bIcA+bBW6CJd/b4/Fc2WN+
4fsaJiS+XzfVfIoKES7r6iTPToHPTdCeJmbBo+9Qua0DB7a3Zkammk+CdFq1
XgZVDXEynnju2k1CC9WxSvexTic3/ly8nIp1VXZX9nv9OXjwV5kWjnn6eLg5
iJXJjZJjD/ZvJi+CyuarHX49uF5uMh5dYnRQEEyd9q2nQU2js8ZDMzK8FhI1
DOaTQiH0WD6bwGXIQcjk2RY8xxz/kDHYs4IDwqp3DKQPU8D8yZSyzTsaDI46
XPxxYQbcXdmEfQkJ5a2amY/HflBDk2z7jPNGb3lIYw/WIVbLQdG5gkl4pTZk
Y7iGD7UiuyMNAhwwrFsfJ12thXr4BiSFbmH/8OXdat5OBfuuoarSCgbcKTJX
1qnkwJMd1Y1FD/E8uOK4WcMNMgRf7dzmh/tqhYEyaD7jQLZvvkdFNxOUnFeI
W5E5uD59tKh8ErriLFgIJApYqozG92OePMl245Axzx6KmKrk4n0h+9pdhS/o
sILR7OkvwoGLA1Nej7F/fJWrSPTC+vrPYyr+oR8FFDLzLPLNbdGnV7RV3/Gc
5xq1fX86xqUuPKMYYd0TNrFZ8wKv27nowsMcVUPzt3zSNmC+rXRq2yGWTkLv
UzKyGwqFUK6bunL0tDY68E5ZPLGRBkW8T0S2vluA5hIF60l+DnTxNCgWbJ+D
rGijVit+LqSRYjDrm0UG6+qjN4Zb5kCy4toLXmCD3LXhDtdrTPC+UD24yKbi
+d7OPD2PhBSICHh0ngKi1WmTYlv10eJSSOIs9pe0JF96L50LmU2MdR3B8/kV
N65T7Tg/3eTymmvwpUFCXoZwe/Qi8F5NTeDGOSO0eqv09TYq9F3YfqSIPgX2
rIHVnngue5p6O3ke61bjNaG9PBwapGb4o5ysRehK7p51TMH7HGjenolz3WfB
LqsHNSx4qMh3Vt1kAQy7X29SDBFBKbaKdcUkBqhnvqGphgihvYWLcvlcDLjb
L5Oaj+tRsqOlLv8h9k/D75KjU2y48SIhYlCcAWomsd37n2A+75Wp3TdJQpOa
edHHrwghCBXja8Q8ExD3Pe7rMQOXL5+kK2K9/JocGReDefhaMJEdmDYHqVmn
tZ0i5+HgiyuFFXi+kbPODxbYSoE7bvGPAsIIsNiUzBurToEv4aemW1dRwC88
etalhwzjS5dCPC4RMPjO+N+U7BTMfPWprRcjYMwxSP2aoArqy7hRfxPj5R55
fCdVbAFe/rkzc+4tDR7Ua0nTce7x8NtualtMgKiiHF9qLgnZvDSIbBOfA+lS
l7E43P8jmXkpPfj7ly8P87QZUkB2y445qF+ETsuUu161pqjIPY8pMkSH1LWv
P5dh37cWPKy2VZ0J91V67mUfZUPS8cDm7V000OE7cPjaEhMQ8xDvdZwDW6zI
V+dx7ovh6xv3xeuOpYc7mkVRoO3ShHZvDC+6dCmgQRDjcFO7uVriAwtc9vXd
6sVz2SVfg72V2RRQp9pdPF5MAZlQwwnroHnQU88lnz35FyaXWqOP4/ykHNfe
tRXj6zu2r1ovkwLB1IOXtzuJoUYjqxUTnXh/bSkuWthn0tcsWR87RAMTt6vn
S+T+gcohzd52pznYIxjmUWzAh4wSGuN3pcuhbY4nQoPaF+DoeOGmNVgH3O9r
xg9ymGBxl8X7dJUzQgKpm+/zzkHFwMUwBV0ORKQ56xeb0EAg2ut5RiTOy8Mp
OZ6FUijnb0fZNpwfDL5t3TWN+3xd/L5VujslkPoprWxbYQXkWRvNPIH9tS3v
of8r7IfCoqsC7K+QEJ3v11FXPOdE55o1NE0RMJHqE9hkyIShn4lI/yMbPqx0
2+czTgaZs+1X1+ZT4aTxbKAP9hu5n181JePYcKZuuWD0Ki6k0796okxvDras
6dDyYY1D3FYx3kcJ2M9e7f7eh/cVXLRUbCXNgbqZ+mtZ2B8Yw3bCnTj3yyVn
nFmDfYdqOdE5eQ7z/Iv6n/eHVZG+Tao9L143pZllZYXx9P11ZiTGmAPvsgWc
V35WQ5vHvGvnrTnwYt14Picez1XvCyqiRyXQsX8Pti1xpoFRLZdF8mJCm77O
WhESD/pU2F6TOkSFWxm104V4TqVxfLda/Pe/soXIMBvvs0ixVNZrNweebY5t
pnMjVBZD1rr9bAVi/ny/bCvWA+vkb1L20fNwfYX0h32PGMC9/eliHNaRpeud
Zj8xn9+N7v/qqbEEAec+ZOYfo8GpllaGcAgBFbYd4/fwXNGzpueeMX5OqHoh
PEycDhVn4qs9pjjg5P0iSJXMBreu51xKmL/Or4omNHeroX5LzmcLc4zneEXw
XXx+tO6q2rdJNrxat6fP14cD411Gm+qwLu0KM6iPEadA+PuJCpVkLmQj3RQ1
JLwIR9t/80EPA5zOnWgKwP6468G/jbtqqaDjxD+htV4Lpb2quOjtz4Ku+H2z
0RFrUPqnjkVn3O/897z13zcwIXyv98oeXKfhNQ59CSIEnA47abQ/5y98Zdis
OfZEB937Sw+qb2fB49w9zpQgAk44PIoNQFxoeYDI7VddSyD27F1DCu4TuR5h
s+P4un4krt/AcwEe8915ZoHPmyBEH/LSIcPlzeTYEsx778I/XG3VFGgsS7Ad
wDnq98nFitUeVNCqkTr9RXkO3pzZ6caF5wQRy6Kiaaw7rk36v5rwfLo6J0Fg
+zTW3V35+sdwPenf5j4pY9781fid5It55fg7v0CjgIS2xwxsGME4blmSSXfE
v1ud3xMg7jcL2df3D6aqrkHPo0U6qJxx4Dedtvw+ygTe1sntk/9I6GX3rRPt
OG9ZWtWPBNv9AaF3kvb2WKe9FMd2X37DjZKUrhXse8sGX89hHdujXGhb3dsx
nqf4vvE7MpcgB8Y86gklnLNevVvrG4J5J6XGfmm0Xwxp6462mVUSEBH2WIB8
gQWa6xUKDkoLo6x3RXWlKhSgLmq/O71nAeTCTptk/ecr4WNnKVjf+2q+u+92
JQOJcyirbB8dFmOlxo9jXhnWV9WOYBzHPUxDeXEON1VMiCnB/aWrUsUYx751
Vi0ty0mWDDNLd8Oc8bzzr8/jdQXWgxTNF25Rc1Pw5HndkeX4PV5jKakKGN8v
pLurV+zl4Bxs3nz85gKcDGuPvPV3Dg7XVCtnY17EOZ/dYYbn8V5xM/XXmIf6
PqLfGfh3p7EwpoIkFTxvpfwiNpPhkuIZ0UP8TLj8yJDS7yeFbvU6usfGb0CR
uxv37AhfhLpvlXbNeH/mgc05fpgnJ7zCwx7MzkGu7ummo0lUML2qY2uIfc6s
YHiAjfuo+wjnbX/TJNTnKmi5bODApvlsoe4lOqi5Vml0nWdBQrXq6znM9y21
4tKcAjJUDXbklOO5pnS2rmL1VQ4UX36rHaa6AGNBibxeucLII2dpqFxRA33z
/+ihepoCJi1VvXI8ikipLZ+vZ5oBjjtM1dhYl0b7ItRYu8eB72PmfakP87Aq
qTiYIkQGzumX4xb188B760qDmAMTxGVyfY3uM+HOSivjIwEskOCPf3RiDw04
+9kyBhinmMzv7MRuOpxc80g1xIWEVHhjuMPlmJBekCldhc9XU/GgXD+JAimk
j65M7I/Fpoflc76QwU29VHTneTwf6npyKzpywLsl+1aXIxdy361k+xTrvRl/
0+ReNzLYLbT22ErRoEvr9nfJRTYcTBtQHUtmQ7mQg4zDCBPO3XEPLVniwMuk
L48+Rc+AzgGZpNn9JKToF3TTWooDQza6LW/5aSC+4ORzF89TFg+PnhD2kUC/
Lqj7ys9oov8B4aTxtg==
         "]}], "NeighborsNumber" -> 100, 
      "ClassPriors" -> {0.001990049751243781, 0.0059701492537313425`, 
       0.04378109452736318, 0.5034825870646766, 0.44477611940298506`}, 
      "TrainingOutput" -> CompressedData["
1:eJzFU0FOAzEMTOOxxJEv9BdcOXIt4gGt2FZcFmmLhPgxzyBxPI73BajbbDKx
xx7be7x8nq61lHJ/aMvp/P28beef18d2eFvvH7d1eX9Zv5bbsj1dDg38lVIA
aP9xkf7A3uo3bdPO2lE7QgzqL0fGKr6Dr7DHTMlCRAkPUtsdjE0qxCkBhIs0
NCyZR0eDlvE8eo4t489Yihl1kKESrsOZPO4QbtWVUClzJD/VUTDT0ZQZbxRB
QAlIAiko7hmP3t6XqUSx06TeRkke7EOvXcu4168bSk4lcneXipSvUvAUa2cb
DwGFq7i1zH7RYbYqRERS2MXIXbUBywPjBTUORlGGTIO4GwpyMmyU1Lk6LBoN
V2MDRMNoDsC4TaWNvRdsjgSywf98bX+Pvx5r
       "], "DistributionSmoothing" -> 0.5, "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|"Info" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

            "], "Type" -> "NumericalVector"|>, "Key" -> 
         "(f6(f1f2)(f3f4f5f7))", "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "Calibrator" -> None, "Method" -> "NearestNeighbors", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NeighborsNumber" -> <|"Value" -> 100, "Options" -> <||>|>, 
        "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
        "NearestMethod" -> <|"Value" -> "Scan", "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 0.418354`6.073088919248974, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[0.8072386138416003, 0.020244417557342083`], "Accuracy" -> 
         Around[0.5459893673938094, 0.02469121329033473], "EvaluationTime" -> 
         0.000012349400314289931`, "TestSize" -> 800, "ModelMemory" -> 577240,
          "ModelUtility" -> -0.4841940028245755, "TrainingSize" -> 1000, 
         "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 13738400, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[0.8072386138416003, 0.014314964935968589`]}, 
         "AccuracyHistory" -> {
           Around[0.5459893673938094, 0.01745932435331909]}, 
         "Configuration" -> {
          "NearestNeighbors", "NeighborsNumber" -> Automatic, 
           "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "NearestNeighbors", 
           "Options" -> <|
            "NeighborsNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.2740697419227336`, 0.10747985551947889`], "Accuracy" -> 
              Around[0.4991976465471883, 0.04983892446080182], 
              "EvaluationTime" -> 5.01187233627272*^-6, "TestSize" -> 200, 
              "ModelMemory" -> 13824, "ModelUtility" -> -0.9521430491093832, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.003981071705534969, 
              "TrainingMemory" -> 92720, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2740697419227336`, 0.0759997346787739]}, 
              "AccuracyHistory" -> {
                Around[0.4991976465471883, 0.03524144145327706]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.3166184342550955`, 0.13492604832101765`], "Accuracy" -> 
              Around[0.419992238760501, 0.06962939267631489], 
              "EvaluationTime" -> 5.01187233627272*^-6, "TestSize" -> 100, 
              "ModelMemory" -> 31000, "ModelUtility" -> -0.9885548952185483, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.001995262314968879, 
              "TrainingMemory" -> 148784, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.3166184342550955`, 0.09540712372649536]}, 
              "AccuracyHistory" -> {
                Around[0.419992238760501, 0.04923541573132319]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8715553594914197, 0.038307806186032516`], "Accuracy" -> 
              Around[0.46889095444678675`, 0.04953596545315289], 
              "EvaluationTime" -> 8.971641173621406*^-6, "TestSize" -> 200, 
              "ModelMemory" -> 121848, "ModelUtility" -> -0.5644971300864597, 
              "TrainingSize" -> 200, "TrainingTime" -> 0.005011872336272719, 
              "TrainingMemory" -> 1135264, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8715553594914197, 0.027087709526523562`]}, 
              "AccuracyHistory" -> {
                Around[0.46889095444678675`, 0.03502721708454696]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8072386138416003, 0.020244417557342083`], "Accuracy" -> 
              Around[0.5459893673938094, 0.02469121329033473], 
              "EvaluationTime" -> 0.000012349400314289931`, "TestSize" -> 800,
               "ModelMemory" -> 577240, "ModelUtility" -> -0.4841940028245755,
               "TrainingSize" -> 1000, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 13738400, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8072386138416003, 0.014314964935968589`]}, 
              "AccuracyHistory" -> {
                Around[0.5459893673938094, 0.01745932435331909]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.7956719390072993, 0.015453999643939016`], "Accuracy" -> 
              Around[0.561198555379164, 0.018646573961953197`], 
              "EvaluationTime" -> 0.00002290476095849279, "TestSize" -> 700, 
              "ModelMemory" -> 2404232, "ModelUtility" -> -0.5648767472034929,
               "TrainingSize" -> 4209, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 17385792, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7956719390072993, 0.015453999643939016`]}, 
              "AccuracyHistory" -> {
                Around[0.561198555379164, 0.018646573961953197`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00002290476095849279, "MeanCrossEntropy" -> 
             Around[0.7956719390072993, 0.015453999643939016`], "ModelMemory" -> 
             2404232, "TrainingMemory" -> 17385792, "TrainingTime" -> 
             0.08284699209779668|>, "Index" -> 1|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 5], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], <||>], "MaxTrainingSize" -> 5261, 
      "PreprocessorEvaluationTime" -> 2.140625*^-6, "PreprocessorMemory" -> 
      194128, "InputDimension" -> 70, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -0.8693687048950245, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.879423231892094`16.34134215139692*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.00014581070609212223`, 
          "ElapsedTimes" -> 0.006608, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 40, "TimeBudgets" -> 0.0007290535304606112, 
          "ElapsedTimes" -> 0.003907, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 200, "TimeBudgets" -> 0.0036452676523030555`, 
          "ElapsedTimes" -> 0.008838, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 1000, "TimeBudgets" -> 0.018226338261515273`, 
          "ElapsedTimes" -> 0.050588, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 4209, "TimeBudgets" -> 0.09113169130757635, 
          "ElapsedTimes" -> 0.087968, "ExperimentCounts" -> 1|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"}, "ID" -> 
           4840131171699015203|>, 
         "f2" -> <|
          "Type" -> "Nominal", "Weight" -> 1, 
           "Values" -> {"Information Technology"}, "ID" -> 
           5042234179079910413|>, 
         "f3" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537}, "ID" -> 
           8143623558489070887|>, 
         "f4" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {10.982}, "ID" -> 
           7788679715678402894|>, 
         "f5" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.982}, "ID" -> 
           4867089090251939422|>, 
         "f6" -> <|
          "Type" -> "Text", "Weight" -> 1, "Values" -> {"Estimated data"}, 
           "ID" -> 1244584425521089410|>, 
         "f7" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {624.605427784142}, "ID" -> 824640885889355554|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 0.600563, 
      "MaxTrainingMemory" -> 21221512, "DataMemory" -> 8209648, 
      "FunctionMemory" -> 851800, "LanguageVersion" -> {13.1, 0}, "Date" -> 
      DateObject[{2022, 12, 7, 17, 33, 52.060285`8.469081516268043}, 
        "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, "ProcessorType" -> 
      "ARM64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878619160734618*^9, 3.8786192245310097`*^9, {3.878715800641226*^9, 
   3.87871584525163*^9}, 3.878715887355948*^9, 3.8788055501495533`*^9, 
   3.87880572388905*^9, 3.878806815602689*^9, 3.8788071767848167`*^9, 
   3.878811643047717*^9, 3.8791492159968452`*^9, {3.879325496945715*^9, 
   3.8793255053952217`*^9}, 3.879333028444346*^9, 3.879354712621949*^9, 
   3.8794196320730877`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"2f943f7a-016f-4ab3-9980-cfde325c5d4b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Data type"], 
                   TextCell["Data type"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{
                   InterpretationBox[
                    Cell["Mixed"], 
                    TextCell["Mixed"]], 
                   StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]},
                  "RowDefault"],
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Numerical\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Text\"", ",", "\"Numerical\""}], "}"}], 
                  Short[#, 10]& ]],
                Annotation[#, 
                 
                 Short[{"Nominal", "Nominal", "Numerical", "Numerical", 
                   "Numerical", "Text", "Numerical"}, 10], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classes"], 
                   TextCell["Classes"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{",", "\",\"", 
                 InterpretationBox[
                  Cell["A"], 
                  TextCell["A"]], 
                 InterpretationBox[
                  Cell["B"], 
                  TextCell["B"]], 
                 InterpretationBox[
                  Cell["C"], 
                  TextCell["C"]], 
                 InterpretationBox[
                  Cell["D"], 
                  TextCell["D"]], 
                 InterpretationBox[
                  Cell["E"], 
                  TextCell["E"]]},
                "RowWithSeparators"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"54.6", "2.5"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    54.5989367393809459372`3., 2.4691213290334728114`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Method"], 
                   TextCell["Method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 
                 InterpretationBox[Cell[
                  "NearestNeighbors",ExpressionUUID->
                   "cc83a41e-292d-435b-a022-7c6cf045aceb"],
                  TextCell["NearestNeighbors"]],
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"NeighborsNumber\"", "100"}, {
                    "\"DistributionSmoothing\"", "0.5`"}, {
                    "\"NearestMethod\"", "\"Scan\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                  "Verdana", StripOnInput -> False]],
                Annotation[#, 
                 Style[
                  
                  Grid[{{"NeighborsNumber", 100}, {
                    "DistributionSmoothing", 0.5}, {"NearestMethod", "Scan"}},
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                   GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                 "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"1.91`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"39.5`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.8072386138416003387`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0202444175573420829`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.7667497787269161869`3.", "\", \"", 
                   "0.8477274489562844906`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.7667497787269161869`3., 
                   ", ", 0.8477274489562844906`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Model memory"], 
                   TextCell["Model memory"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"854.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training examples used"], 
                   TextCell["Training examples used"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               TemplateBox[{
                "5261", "\"examples\"", "examples", "\"Examples\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training time"], 
                   TextCell["Training time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               TemplateBox[{
                "600.`", "\"ms\"", "milliseconds", "\"Milliseconds\""},
                "Quantity"]},
              {
               ItemBox[
                
                DynamicModuleBox[{
                 MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                 DynamicBox[ToBoxes[
                   Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.24221629813417903`}, {
                    3.6888794541139363`, 0.2750666573626251}, {
                    5.298317366548036, -0.13747589396099524`}, {
                    6.907755278982137, -0.21413597431581882`}, {
                    8.344980368770571, -0.22856831501502212`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.24221629813417903`}}, {{3.6888794541139363`, 
                    0.2750666573626251}}, {{
                    5.298317366548036, -0.13747589396099524`}}, {{
                    6.907755278982137, -0.21413597431581882`}}, {{
                    8.344980368770571, -0.22856831501502212`}}}]}}}, {{}, \
{}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 0.15408486600722324`}, {
                    2.302585092994046, 0.3232057658894277}, {
                    2.302585092994046, 0.3232057658894277}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, 0.16694763632657808`}, {
                    3.6888794541139363`, 0.3726281499489768}, {
                    3.6888794541139363`, 0.3726281499489768}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{{5.298317366548036, -0.18242449812576703`}, {
                    5.298317366548036, -0.09446105816496553}, {
                    5.298317366548036, -0.09446105816496553}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.907755278982137, -0.23953440507190224`}, {
                    6.907755278982137, -0.18936667780347238`}, {
                    6.907755278982137, -0.18936667780347238`}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.344980368770571, -0.2481819888858422}, {
                    8.344980368770571, -0.20933194882003686`}, {
                    8.344980368770571, -0.20933194882003686`}}]}}}, {{}, \
{}}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.0725280624560205`, -0.26798060974708354`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 
                    8.568076401730806}, {-0.26798060974708354`, 
                    0.2750666573626251}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4991976465471883}, {
                    3.6888794541139363`, 0.419992238760501}, {
                    5.298317366548036, 0.46889095444678675`}, {
                    6.907755278982137, 0.5459893673938094}, {
                    8.344980368770571, 0.561198555379164}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.4991976465471883}}, {{3.6888794541139363`, 
                    0.419992238760501}}, {{5.298317366548036, 
                    0.46889095444678675`}}, {{6.907755278982137, 
                    0.5459893673938094}}, {{8.344980368770571, 
                    0.561198555379164}}}]}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0725280624560205`, 0.3894655144847388}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 8.568076401730806}, {
                    0.3894655144847388, 1.}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.24221629813417903`}, {
                    3.6888794541139363`, 0.2750666573626251}, {
                    5.298317366548036, -0.13747589396099524`}, {
                    6.907755278982137, -0.21413597431581882`}, {
                    8.344980368770571, -0.22856831501502212`}}]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.24221629813417903`}}, {{
                    3.6888794541139363`, 0.2750666573626251}}, {{
                    5.298317366548036, -0.13747589396099524`}}, {{
                    6.907755278982137, -0.21413597431581882`}}, {{
                    8.344980368770571, -0.22856831501502212`}}}]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.0725280624560205`, -0.26798060974708354`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.0725280624560205`, 
                    8.568076401730806}, {-0.26798060974708354`, 
                    0.2750666573626251}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                  ImageSizeCache->{330., {122., 127.}}],
                 DynamicModuleValues:>{}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  MachineLearning`MLInformationObject[
   ClassifierFunction[<|
    "ExampleNumber" -> 5261, "ClassNumber" -> 5, 
     "Input" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|
           "Country" -> <|"Type" -> "Nominal"|>, 
            "GICS Sector Name" -> <|"Type" -> "Nominal"|>, 
            "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> <|
             "Type" -> "Numerical"|>, 
            "Carbon Disclosure" -> <|"Type" -> "Text"|>, 
            "Revenue (USD mn)" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
            "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["FromDataset"], 
               MachineLearning`MLProcessor[
               "FromNamedFeatures", <|
                "FeatureNames" -> {
                  "Country", "GICS Sector Name", 
                   "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                   "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                   "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                   "Carbon Disclosure", "Revenue (USD mn)"}|>], 
               MachineLearning`MLProcessor[
               "Transpose", <|"FeatureNumber" -> 7|>], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {
                  "Nominal", "Nominal", "Numerical", "Numerical", "Numerical",
                    "Text", "Numerical"}, 
                 "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6", "f7"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          False, "Invertibility" -> "Perfect", "StructurePreserving" -> False,
           "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
            "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|
           "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

               "], "Type" -> "NumericalVector"|>|>, "Processors" -> {
            MachineLearning`MLProcessor[
            "SynthesizeMissingValues", <|
             "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Distribution" -> 
              LearnedDistribution[<|
                "ExampleNumber" -> 5261, "Preprocessor" -> 
                 MachineLearning`MLProcessor[
                  "ToMLDataset", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Text"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                  "Processor" -> 
                 MachineLearning`MLProcessor[
                  "Sequence", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "FeatureChangeType", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 8728850163752787708|>], 
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>, 
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 4012203223801137025|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 7247984987659546603|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>, 
                    "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>, <|"" -> 1|>}, 
                    "MissingCode" -> Indeterminate, "Version" -> {13.1, 0}, 
                    "ID" -> 4113760982813578529, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Mean" -> 
                    {209.80690318178338`, 38.57264497138987, 
                    138.3376102159199, 2296.6337905542246`}, 
                    "StandardDeviation" -> {1432.0032489855246`, 
                    171.69843080857044`, 192.57826196052247`, 
                    9129.337299520432}, 
                    "Output" -> <|
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 3752698420053720059|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 3, 
                    "SetSize" -> {55, 11, 1}|>|>, 
                    "Boundaries" -> {CompressedData["
1:eJw1US1IQ1EYfcIMChbLhBk0GCwrCjMIZwZhDEHQsjJBwaQww8qCIAvPYDEY
FGGIZWXhCS5o2EEmMgTx/4lv6l4wWIQxxLLiu+/7/Mq9XM49f9/oSm5htcey
rCnrf3y6teXvmPvBymbdS1TeWZweaywW35jp2tVcpsn4+dfxTtxjbyG9W468
spkwyBee/A6stRyX2wGqaz8zm7+fjWafOBHOI/s7eyPzfQ/0HQO843rLXG45
FAJveOkZomtuhEINDodGrhiIBw7qDOnyF0yWBj/HZ2rcPzBzxh9D2znlXOCm
kHaYihrCMtsxQ3DIIwMvFbklJ3x5R1JwSMk/tIUHygvVgepCfUB9QX1CfUNz
QHNBc0JzY1J6wJL0Alt6giO9wZMeEZFeoT1De4fuAboX6J6ge8MfBK7o6Q==

                    
                    "], {-0.5, -0.40909090909090906`, -0.3181818181818182, \
-0.2272727272727273, -0.13636363636363635`, -0.04545454545454547, 
                    0.045454545454545414`, 0.13636363636363635`, 
                    0.2272727272727273, 0.31818181818181823`, 
                    0.40909090909090906`, 0.5}, {-0.5, 0.5}}, 
                    "Version" -> {13.1, 0}, "ID" -> 2082886514676041914, 
                    "Output" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3|>, 
                    "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                    Span[1, 3], 
                    Span[4, 7]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Weight" -> {1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {13.1, 0}, "ID" -> 
                    3471102231048770802|>]}, "Invertibility" -> "Approximate",
                     "StructurePreserving" -> True, "Missing" -> "Allowed"|>],
                  "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                 Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBmQFm/iFib1JlAgAAAAcAAAAHAAAAPlM1OXtLmz/JiPcwbAyAv1XkjbwG
1YQ/vL3MM3alqD9dV7Q3ltHiP2S57Fz+YOk/MnmDCDz5wj8EQ6YFpvefv++u
GnjfNYi/QC4jX10NcD/9dRoemfCSPzfG6DRwO6y/+Fp8ks9qwr/+dWRCD5jv
P1e44E2uMWU/lBmRez1vUr9Wme0jCTJhvzS4InKsPWE/ogrVuWjN6b+p6Amc
leHiP19FAIP8/KQ/Fsw7lzFi479b2o2x/7O7v8QbWFU9jta/WunW5/OI5j8Y
e5c5Toh6vzr5ex/nBYC/SjOPC+5Gob+BzmGl9zXgvwH8AegL5cS/qmysjusN
6z8sWiaoibijv7tSilO75l8/vMAEl/OHgj/6wqUCxqOTv5LfxWV4YuO/+WSv
W3RQuj+vRZXiiwHYvxzP5zepJOa/dwddW+vpnj/AldSzjP6mP7AL08UTf3M/
oEUKDPSctr9PbMjmPjTvP+rNfS3iL8I//6HrutiXwj+qZ+qwPl89vy+NAyQq
BlQ/cl4LGc2Ndz/G8Myp
                    "], 
                   "Precisions" -> {0.7323150115031848, 0.9950353534094927, 
                    1.150259857918005, 1.3081831054231352`, 
                    11.904267203841378`, 12.590913834400338`, 
                    21.78658982700742}, "NoisePrecision" -> None, "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.045734233435905304`, \
-0.025594359218476675`, -0.0029955448724701505`, -0.00014912358418741337`, \
-0.00003169670080297662, 0.00013678099790770116`, -0.00011712644515109536`}, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 7813766679320217419|>], 
                   "PostProcessor" -> 
                   MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 7.|>,
                     "Key" -> "((f1f2f6)(f3f4f5f7))", "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Method" -> "Multinormal", 
                   "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 7, "Options" -> <||>|>|>|>, 
                 "TrainingInformation" -> <|
                  "Configurations" -> 
                   Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4503155047815583877|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                   Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                 "NaiveImputer" -> 
                 MachineLearning`MLProcessor[
                  "ImputeMissing", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, 
                    "Mean" -> {-0.04573423343590529, -0.025594359218476706`, \
-0.002995544872470147, -0.00014912358418745248`, -0.00003169670080298648, 
                    0.00013678099790773914`, -0.00011712644515111538`}, 
                    "StandardDeviation" -> {0.28794054951458087`, 
                    0.21997322796714638`, 0.28698568666117097`, 
                    0.9999709043300569, 0.9998937656056074, 1.000145992783374,
                     0.9999776283360723}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 7, 
                    "Output" -> <|
                    "((f1f2f6)(f3f4f5f7))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 7.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4503155047815583877|>], "InputDimension" -> 0, 
                 "OutputDimension" -> 7, 
                 "Log" -> <|
                  "Example" -> 
                   MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"},
                     "ID" -> 9054002198889522994|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"Information Technology"}, "ID" -> 
                    111132265781554143|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537},
                     "ID" -> 345609698028463116|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {10.982}, "ID" -> 2847955718844691890|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {60.982}, "ID" -> 8279278174017998872|>, 
                    "f6" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {""}, 
                    "ID" -> 2733924562406810284|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {624.605427784142}, "ID" -> 
                    6335781326903152349|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                   "TrainingTime" -> 0.077829, "MaxTrainingMemory" -> 2954496,
                    "DataMemory" -> 1220792, "FunctionMemory" -> 92272, 
                   "LanguageVersion" -> {13.1, 0}, "Date" -> 
                   DateObject[{
                    2022, 12, 7, 17, 33, 51.636619`8.465532773566753}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, 
                   "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                 "LogPDFDistribution" -> 
                 MachineLearning`TailedQuantileDistribution[<|
                   "Quantiles" -> {-5.8464371569811195`, \
-5.8464371569811195`, -5.772442655506229, -5.719536211659443, \
-5.569781037675731, -5.547597831708812, -5.492452464861547, \
-5.490044807247233, -5.4488020625417395`, -5.375138296361131, \
-5.327882521015458}, "LeftBoundary" -> -5.772442655506229, "LeftScale" -> 
                    0.03699725073744542, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                 Around[38.91308053189091, 0.3782184306301033], 
                 "EntropySampleSize" -> 10|>], 
              "Output" -> <|
               "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0}, 
              "ID" -> 8833432794738512184|>], 
            MachineLearning`MLProcessor[
            "Threads", <|
             "Input" -> <|
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Output" -> <|
               "(f3f4f5f7)" -> <|"Type" -> "NumericalVector", "Weight" -> 4|>,
                 "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
              "Processors" -> {
                MachineLearning`MLProcessor[
                "ToVector", <|
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "(f3f4f5f7)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
                  "Version" -> {13.1, 0}, "ID" -> 7001699027996678713|>], 
                MachineLearning`MLProcessor[
                "ToVector", <|
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>,
                   "Version" -> {13.1, 0}, "ID" -> 4268131072254999855|>]}, 
              "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
              "Missing" -> "Allowed"|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
              "Mean" -> {209.80690318178338`, 38.57264497138987, 
               138.3376102159199, 2296.6337905542246`}, 
              "StandardDeviation" -> {1432.0032489855246`, 
               171.69843080857044`, 192.57826196052247`, 9129.337299520432}, 
              "Output" -> <|
               "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 1927666520227175614|>], 
            MachineLearning`MLProcessor[
            "ToLowerCase", <|
             "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 8121204540162656102, 
              "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
            
            MachineLearning`MLProcessor[
            "RemoveDiacritics", <|
             "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 1964114494773798714, 
              "Output" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>|>], 
            
            MachineLearning`MLProcessor[
            "Threads", <|
             "Input" -> <|
               "f6" -> <|"Type" -> "Text", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
              "Output" -> <|
               "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
              "Processors" -> {
                MachineLearning`MLProcessor[
                "Sequence", <|
                 "Input" -> <|"f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                  "Processors" -> {
                    MachineLearning`MLProcessor[
                    "TextToNominalSequence", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Forbidden", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "Text", "Weight" -> 1|>|>, 
                    "Tokens" -> {{
                    " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", 
                    "(", ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", 
                    "{", "}", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
                    ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", 
                    ":P", ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
                    "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
                    "Version" -> {13.1, 0}, "ID" -> 613813152937597666, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NominalSequence", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "NominalSequenceToTFIDFVector", <|
                    "Invertibility" -> "Impossible", "Missing" -> "Forbidden",
                     "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f6" -> <|"Type" -> "NominalSequence", "Weight" -> 1|>|>, 
                    "Index" -> 
                    MachineLearning`SortedHashAssociation[<|
                    "KeyHashes" -> CompressedData["
1:eJw1lEuO1FAMRXvACmg2wAKQ/P8soSVGLIEBEiMGsH9xkpdSqlIp28++vtfO
159/fvyqt7e3v5+4ff/999/HFx6+rVqq2U5t5uas6uMQ9dFe5zNhJb3HMWvS
Km1rvToSKY8jNX27tJV0aV79ODRLoq/wmC31quPoyeyWtMycu46+HDZewFKJ
ohAHj6PWCogmCuTOGPHjyBUAd5tW+tToPicytTykamdkPMuf4gEcA+a2rxM1
rxNBhfBc7fIBHSGPIwBIYaECtFDvSUWYhUY3/lQt63g5TJXO0mFWFlAPJQ6f
smRRDl38dz6OCNeUdlDNRa4/xR2MQrsxzRHOv2i3lAVShyw+8trLoQjqFTOT
BdXtdhxaEwVHCN9bgrIPXM0IhcGrBQu0nPh4PyR2V18t65jBcn18xm6BcnSu
l1i1sXabIy6IQxfS0WU0fZsTLt1UmCv4rTlmOoRwujoNi+Vt3pQg1rhPgDTk
hqJKZnJKTozTRu6xZ6FgFk2P9CXeyw5qWXrJgj8ThvK2V2vQJunFkVTMbjuM
QGMkE5jG12Vuu9t0OK0zNSJxrcWx0yu5BK4YeHQwP/bsCvijTZKUDTP/fpMA
FPQuS9IR0afuTVZlcF2z0ZQ4draQrIRv3U9Pv7TL0nQVBeqqEyc/e8BSiTvy
LfyUPvHwydaynMviFLofHpgjppClUKc0a2NHcmaYcP7ZoFkIbB87lZh/bVBO
uVyb+dgvqIau/AwjcfSqaywGdNEBTcawH3sjH3O2AdfLGuaJZ4Ad8HrJEmy5
Vx57+/WuAaBrVaHEE89SQQMnIAR+WN7bDgSWTp1LzJUZOnV5wQ2KFAqyKSMv
HpZlDgaRyiAIiJ7/oUHtSA==
                    "], "Values" -> None, "DefaultValue" -> -1, 
                    "HashFunction" -> 
                    Function[{
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$}, 
                    Switch[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, {
                    BlankSequence[String]}, 
                    Data`StringHash[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 
                    PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[List], 
                    Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q = 
                    Flatten[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    ToString[#, InputForm] <> "Cn.i9)P$", "Murmur3-64"]]& , 
                    MachineLearning`file164SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {13.1, 0}|>], 
                    "InverseDocumentFrequency" -> CompressedData["
1:eJxTTMoPSmVkYGAwA+JZ+8T4F3B/tJdela8mWSvlsHur766IQAGHjdl5U6SU
3thPLz2z7Xc0p8OSKy+f6VwRdNDev3TKgWpJB9NNtkKqu2QcdugrPJST4XTg
X7O3SFiR1SHN7VRk234mh3ecys+/rXpqv8/RscLYTsiBcdn7A2u4n9jD9MPs
5Vx4y+1PNq9Dt/jeJ5zmrA4wPszejqrkPcbMEnB7YXyBlxtjDnH8hZu3Xz1y
j+JGTrg57gfXrLgchSm/dJPZ7ohURjgf5l8GCGhY3573N3bDPfuu5Gi7N884
HIxSD6beYvlob8h2kPHjuj9w/8DM3bCj8PInKWk4H+ZuWHjC5GE0zN4FPvYz
lqx7bQ9zb79YndlmJWGHd/8DjHc/kIXTMPUwfwMAf4a6Yg==
                    "], "Version" -> {13.1, 0}, "ID" -> 2566335944547631010, 
                    "Output" -> <|
                    "f6" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>]}, 
                  "Invertibility" -> "Impossible", "StructurePreserving" -> 
                  True, "Missing" -> "Forbidden"|>], 
                MachineLearning`MLProcessor[
                "EmbedNominalVector", <|
                 "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "(f1f2)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>,
                   "Index" -> {<|
                    "AUSTRIA" -> 1, "BAHRAIN" -> 2, "BELGIUM" -> 3, 
                    "BOTSWANA" -> 4, "BULGARIA" -> 5, "CHINA" -> 6, "CROATIA" -> 
                    7, "CYPRUS" -> 8, "CZECH REPUBLIC" -> 9, "DENMARK" -> 10, 
                    "EGYPT" -> 11, "ESTONIA" -> 12, "FINLAND" -> 13, "FRANCE" -> 
                    14, "GEORGIA" -> 15, "GERMANY" -> 16, "GREECE" -> 17, 
                    "HUNGARY" -> 18, "ICELAND" -> 19, "INDIA" -> 20, 
                    "IRELAND" -> 21, "ISRAEL" -> 22, "ITALY" -> 23, "JORDAN" -> 
                    24, "KENYA" -> 25, "KUWAIT" -> 26, "LEBANON" -> 27, 
                    "LUXEMBOURG" -> 28, "MALTA" -> 29, "MAURITIUS" -> 30, 
                    "MOROCCO" -> 31, "NAMIBIA" -> 32, "NETHERLANDS" -> 33, 
                    "NIGERIA" -> 34, "NORWAY" -> 35, "OMAN" -> 36, 
                    "PHILIPPINES" -> 37, "POLAND" -> 38, "PORTUGAL" -> 39, 
                    "QATAR" -> 40, "ROMANIA" -> 41, "SAUDI ARABIA" -> 42, 
                    "SENEGAL" -> 43, "SLOVENIA" -> 44, "SOUTH AFRICA" -> 45, 
                    "SPAIN" -> 46, "SWEDEN" -> 47, "SWITZERLAND" -> 48, 
                    "TOGO" -> 49, "TUNISIA" -> 50, "TURKEY" -> 51, "UKRAINE" -> 
                    52, "UNITED ARAB EMIRATES" -> 53, "UNITED KINGDOM" -> 54, 
                    "ZIMBABWE" -> 55|>, <|
                    "Communication Services" -> 1, "Consumer Discretionary" -> 
                    2, "Consumer Staples" -> 3, "Energy" -> 4, "Financials" -> 
                    5, "Health Care" -> 6, "Industrials" -> 7, 
                    "Information Technology" -> 8, "Materials" -> 9, 
                    "Real Estate" -> 10, "Utilities" -> 11|>}, 
                  "Output" -> <|
                   "(f1f2)" -> <|
                    "Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
                  "EmbeddingVectors" -> {CompressedData["
1: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
AYwY2QUp9dHwDxWH4HQ=
                    "], 
                    RawArray["Real32",{{0., 0., 0., 0., 0.}, {
                    0.09429772198200226, -0.24127089977264404`, \
-0.5270462036132812, -0.24486297369003296`, -0.5337972044944763}, {
                    0.3855826258659363, 0.345225065946579, 
                    0.375460684299469, -0.6187008023262024, \
-0.9083080291748047}, {0.038637321442365646`, -0.39784038066864014`, 
                    0.4888850748538971, -0.3776519000530243, 
                    0.04570373147726059}, {
                    0.1278393715620041, -0.05385725945234299, 
                    0.7183319926261902, 
                    0.20311319828033447`, -0.020085696130990982`}, {
                    0.2800740897655487, 0.3026285469532013, 
                    0.013881713151931763`, 0.6868195533752441, 
                    0.08314655721187592}, {-0.8298808336257935, 
                    0.34320393204689026`, 0.0243590846657753, 
                    0.07180754095315933, -0.6089136004447937}, \
{-0.10904797911643982`, -0.2677527964115143, 0.5590679049491882, 
                    0.48168694972991943`, -0.6030200719833374}, {
                    0.22935371100902557`, 
                    0.18263663351535797`, -0.7634024620056152, \
-0.029437005519866943`, -1.0930653810501099`}, {
                    0.14211100339889526`, -0.2188272774219513, \
-0.5335532426834106, -0.15458126366138458`, -0.20572292804718018`}, {
                    0.4123682975769043, 
                    0.36278361082077026`, -0.48854225873947144`, 
                    0.04904557392001152, 
                    0.27460458874702454`}, {-0.10662871599197388`, 
                    0.2889917492866516, 
                    0.4839726388454437, -1.046645164489746, 
                    0.2283746600151062}}]}, "Version" -> {13.1, 0}, "ID" -> 
                  4560545129116418848|>]}, "Invertibility" -> "Impossible", 
              "StructurePreserving" -> True, "Missing" -> "Forbidden"|>], 
            MachineLearning`MLProcessor[
            "MergeVectors", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f6" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "(f1f2)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>, 
                "(f3f4f5f7)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 4|>|>, "Spans" -> {
                Span[1, 54], 
                Span[55, 66], 
                Span[67, 70]}, 
              "Wrappers" -> {SparseArray, Identity, Identity}, 
              "Output" -> <|
               "(f6(f1f2)(f3f4f5f7))" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

                   "], "Type" -> "NumericalVector"|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 324326445301658208|>]}, 
          "Invertibility" -> "Impossible", "StructurePreserving" -> True, 
          "Missing" -> "Imputed"|>]|>, 
     "Output" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 4199606916556033440|>], 
            MachineLearning`MLProcessor[
            "IntegerEncodeNominalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Index" -> {<|
                "A" -> 1, "B" -> 2, "C" -> 3, "D" -> 4, "E" -> 5|>}, 
              "MissingCode" -> 0, "Version" -> {13.1, 0}, "ID" -> 
              18782000146286335, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "FromVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|
                 "Type" -> "NominalVector", "Weight" -> 1, 
                  "SetSize" -> {5}|>|>, 
              "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Version" -> {13.1, 0}, "ID" -> 7688100530236977542|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 5|>,
               "Key" -> "f1", "Invertibility" -> "Perfect", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
       "Name" -> "class", 
       "Marginal" -> <|
        "A" -> 0.001329282187618686, "B" -> 0.005507026205848841, "C" -> 
         0.04044815799468287, "D" -> 0.5218382073680212, "E" -> 
         0.4308773262438283|>|>, "LabelSplitter" -> 
     MachineLearning`MLProcessor[
      "FeatureLabelSplit", <|
       "Processor" -> 
        MachineLearning`MLProcessor[
         "KeyIndexSplit", <|
          "Index" -> "Ratings", 
           "Order" -> {
            "Country", "GICS Sector Name", 
             "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
             "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
             "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
             "Carbon Disclosure", "Revenue (USD mn)", "Ratings"}|>], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
     "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
     "Prior" -> Automatic, "Utility" -> 
     SparseArray[
      Automatic, {5, 6}, 0., {
       1, {{0, 1, 2, 3, 4, 5}, {{2}, {3}, {4}, {5}, {6}}}, {1., 1., 1., 1., 
        1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
     "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
     "Model" -> <|
      "NeighborsFunction" -> 
       MachineLearning`PackageScope`NeighborsFunction[
        "BruteForce", {CompressedData["
1:eJzsnQdU1NrWx+14VbD33kARuyJWrNhFvXYQu9h7V1TsXUQBO3bBLoiCiAMW
sCN2FGyIHbuC2L78563cb325X95JMplhgP3Weuu3kpzss9vZZ5/MVcsOHNt1
SKYMGTLYcf9/mTkD/7+5PNt9mvioU1KIRng/+bJf9ej4wxrWc6nyWM/5+zxb
XXCeGpDbT3R+sfv8e2LzC98XziP1faX2yX1P13mVjpdrh9S4KtWLv8/KS7nz
K/W7mFx9yWPlpVr+leovqePlziPVr0rzXel8cv2kFqXmrdJ81FfdYcnl17Fw
H2HpL7c+C8crre9qrQd9x0OqXrr6Ve78Uu+LyRPbp6XKF9OPNY/Yc6X+YOkp
lC81foZex2rppe/6KXf9K63rYv2r8Dkrviz5rPvC/FUaP7n9sNz9U3hf6Tws
P+raFymVo1Yfo2scWfVMLfvUli93nNL6pVQftfpRufel1hmp86uVf1Lvs+bR
Vx2QK09f+5hadYE1/x7Tmj+jon1l96Nq9zdK/aHr/Cz7dK0fYvIM3e/IXTdi
3+2Ez3Xtf9Su93LJ6rPk9mG69rv8fKw4SR2nlLruO3LlStVH175O6T6l1B5d
+3W1+wqp609fdVZX+bruQ0rXt77qD2s+qXVEX/sFy19y31c6Tjhe1/tSx7H6
ZrXzkTVO13OaofJJrn5ieaZWf8haT1L9oPQ8pKtfxd6X21cK5Yldi1Hp77m6
nteEz8Xkseq6Un1Y87HkEIlEIpFIJBKJRCKRSCQSiUQikUgkEolEopD5Qh26
x/a6Qb83EokSmHHmxFPNll6j9ULUiW5F3ry5sjFcch5R3v2Hcv1GJBoT+XVM
65lITH+k/UsZU9pvKT2/sZH8QSQSif8/qT6mLqbW8xjlGZFIJBKJRCLREMzV
O7zAwuDAf/WdpjeGzI/suk/DPx/6MMsm++67NcLnUuWxnvP3eW53m9fGKfKg
hjVeqBf/nlS7hfNIfZ8lV6iXUr/InVd4/z9xOvnPfV4vfrzwOUue0vtiz2dv
+th32qydTD/9X333icoT87tcvYV+EV6LyRWLvxiF8RCTJ8xLqX6Taq9wfrnj
5M7PslfsvlR7peaB1Pnk+kktSs1boT7CvGLJF+aT2voJya9j4T7CioPc+iwc
L/Y+a72qtR70vQ9I1YvlV6n1Syxv1FpvvB5i+7RU+WL6Ce+z+g7+udi+KXU+
sfUqjIPU+LH2c7F4suqErnnP2vfVrp+sfpBVP8TskFofhPkp9C8rviz5Yvs+
f1+Yv0rjJ2YHa72LXbPuy+3bWfawxkuVK3wuzAOxeKjVx+gaR1Y9U+onuX2Q
WnEQGycWH6X7sNz35dYxteqtWD0Rvs/KU5aeSvWV6w9WHZC6X4nlA2t+qddy
z/di+kmdT0ix8yh/vaHj4mGJfzSy+1Gl3z/E9GedK6TmoZBK1zmrbxTKZ+kl
db8VzsPqx+TaLTVuYt/thM+Vrl+58WSNk+onYZ6x+iypfZjY9xmxOsPqb1hx
kjpOKnXdD6X2w0r7eLn9jfC+8Byh9n6k9nO5eural/HPpdYzqfMofS62nln7
kFrnL137Nqlk1Qep5wS19ZPaR8p9X+k4sbzk+xt99e+svlnXvkhuP8A6p8nt
e6Xmk9zvRWLzNx7+esWxBiHMeaWeR6X6kbWepPpB6XlI6nssfwrrhNy+Uiw/
pPpZ6u+5wnzR9buN8LmYPFbfplQf1nwsOcT/zlNxu7Zsdgv7lx/F7qc1plU7
1bYrrfqJaFxMr3mWUnYbq78NrZex+oEojxRH3Wgo/1GciKmRz3zWOH1+GvxP
3rLyOL3leWq3N7Xrn9po7OdUyofUQYq7cVEt/0mVk1bilVbsMFby/hX6mfxO
JEpfL0SiMZJ1Ptd3Hhu670mv1CQXdrR+xv73FBJqZ32c9Ndl8iNRS8oHIpFI
JBKJRN0otQ8nEolEIpFIVItp7XsO9VNEItHYSHWJSDQe0no0DMnPRCKRSCQS
iUQikUhMCe6a3f3k06xX6DxKJBKJRCKRSCQSiURiCpLO50QikUgkEolEIpFI
JBKJRGKGubljZrfbeOE2fScjEolEIpFIJBKJRKJB2CJ5sKb/4H//Pfti99Ma
06qdatuVVv1ENC6m1zxLKbuN1d+G1stY/UCUR4qjbjSU/yhOxNTIjLmSWwZt
/t9/X42Vx+ktz1O7vald/9RGYz+nUj6kDlLcjYtq+U+qnLQSr7Rih7GS96/Q
z+R3IlH6eklvTO/2pxayzuf6jqOh+x5jYd6gAc33Zw01On1Jr//Obp+D95c+
f/YfPYR6CZ8bmlOK3N1SuFWIavOr5XehX+T6SaoeSvVV229pjcay/lKKcu1P
7/mU3vNFSKn+0HfeGGtc1N439bVvseSnlH/1lTf6skepXLX1EfObodYh7RP/
N57p3R/GRmPdL1KaaSVP5cbX2PYDtcjqP/6j3/UUj3dq2+dTWj5r3pTOO0NT
qp9SOs+MNS5ptf7xTCv7mr5pLPEy9Dkqtdud1inml5T+XcLYqK/8kfu9SIxU
h/879d1HGKq+0Lr8D+2+VIzO/Dxcth/E3rMPX2r/urT+/r4wfcvX1/wsPyuN
g9p6pLR/lTK16q2UUvNFql/U9h+vn5DpLU5SKYwn+cm4qVZ8KM7/P8kv8mio
/sFQlBt/pfki9b2U7pvS6noQ86vUfFaa94bKL33TWPVSm6w4BzeJuu0Zq/w8
r6sf08r6N7Z8UvvcYGj7hHmra71LKzRU3daXPkrP1ca2vlj66pvpJe+NPe5q
k5X3hoq7vvaNlIonP6++/Cd3f0pr3/WUfodTOx4p7U9+fmPJe6lkxU/4PVqp
XLXHpxam13OI2lSahymlp9L3jTWOan0vbLfQutSbKfs0j7oMvDAxl/+/5M3b
6DK0gt2uf54vOdBma4Mx2zT8e/xzfvyqr72vFR0RKCqPp9hz/j7Poe9Xm6z7
uuefa16+cDyvF3+ff4/lD7F5xN4Xzs+SK/SXmN2s51LJiiM/D68XP55/LuZf
qfNIjavweZv1rdoXz7JV8rzCvBTqLcwH1vwsv4ldi8kVy0sxCuMhJo/PSz6O
LL+J5avYOOH8UuMpJK+fkFLnYd1nxU3oV6lypcqX6iep5P0jjIdUPcT0EuaV
2Pz8c2E+SaXcdcWTX09i60rsWmp9Fxsv9j5rvbL2IbnrR+r6VEqWXiy/Sq1f
YnmjdL2J1XOxfVqqfKl+FpMrfC7MWxalrldhHKTWW+H+KJxfLJ6sOqF0H2C9
z+eN1H1LjKz9X2z9s9af0L9i/hPb1/h5hP5lxZclX2zf5+8L81dp/MTsYK13
sWvhfeG+J+xvxOIt9r7U/JNbd4X+F+aBWDzU6mPE5LD6KVadlGo/Sx9d6y1r
nFg+iNkn1veJvc+qN1Lfl7tvS623rDiL1ROhXFaeSq2HSu2Q6g9hHRCr71Lr
Gj9ebpxZ16w8E+atcJ8W27+l+o/VN4v5g2W33P6a5S9h3kmt20IqPeeL2cfy
v1ieCfUQ22+F41j7iJhdrOdidUCMYv0hr5/w+wpLnpj/We9L/e4l1U/CPGP1
WVL7MLHvM2J1Rixf+PlYcZI6Tirl7odi96XWP7G856/lrn/WuhaeI8T0UJrP
rHXMel+qPWLvCfVg9UNS81j4vphcsXiJ7c9K1zNrH5L6fUbs3MLKI9Z3ODFK
jYfUOiLW77H0kEpWH8nPz8p7uetWbJxYXrL2IVa/JdRX+D2a1TcL35Naj8X6
PFY8WOc0uX2vmD1ifhabT8yfLHvE5mXZyfq+KtVuuX6QGy+5/Y7w90CxPBH7
3ilVvtxzBE9hHoj1Z8JxUn8vlbsOpD6Xe34R5jFrPjF7WLTfY9Y3Im+UanWb
SCQSicbJkVViny9rdZHqPVEWKW+IxJQnrUNieuSMpW38VnW7SXnPINUHIpFI
3/WIaYm0rxGJRCKRqJzUF8rj+UkLwo/O9NHE9Oh32dH76L/81ndRO6s1YTv+
eV5Ek23ejqFbNfx7/HN+fFbf8vWqeB4XlcdT7Dl/n+ee6XPtljbe/c81L184
nteLv8+/x7JfbB7+Wjif8JolV+gvMbvFnkudj+VXPk78PLxe/Hj+uZh/pc4j
Na7C51kr1G9z/dwmyfMK81KotzAfWPOz/CZ2LSZXGH9eP7F4CuMhJo/PSz6O
LL+JzSs2Tji/3HE8ef2ElDoP6z4rbnLzQOp8YuNZeoiR9wfvH+F9qXqI6SXM
K5Z8YT6J6Su8lruuePLrSWxdiV2L1Xex9SUcL/a+MF/E7BHzn9S8EMqRGm+5
ZOnF8ivLHzzF8kbpehOr52L7tPA9Vv1i+VkoV+y5MG+lxkPMD0I7xcaJ1Vvh
/iicXyyerDohtw5KraN83uja97D2f7H1LzaPmH/F/CeWd/w8Qv+y4suSL7bv
8/eF+as0fmJ2sNa72LXwvnDfE/Y3YvEVe19q/rHizvK/MA/E4qFWH6NrP8aq
Z1L1YNmntnyx/kg4TmifWN/HmkduXojtO8JxusplxVmsngjnZ+Wp1Hoo1w6W
H4Tj/3XOEanvUuua8BzGml/qNSvPhHkr3KfF9m+WX3my+mbWuVLsPanfT1j9
lNh+xToPSp1P7vlOaB/L/1LPT2L7Leu8xOrHxPwgZrcwbmJ1Tey7HU/h9xUx
PYSUux+wvouJ2cvrydqHWX2W1D5MbB2J1RmxfOHnY60vqeOkUu5+KHZfav1j
fTeV2rexngvrC2v9Kc1nud89lPpTbF65/ZDUPBa+LyZXLF5i+7Pc9Sz2ntzv
EaxzCyuPWOcOMUqNh9Q6IndflEtWHym2b7D6UKnfxYT6iOUlax8S67fE+mbh
92hW3yx8T2o9FuvzWPFgndPk9r1i9oj5WWw+/pp5zhH5niOWZ1LPS3L3B6V+
kBsvuf2O8PdAsTwR+94pVb7UcwSrLxTrz4TjpH6Pl7sOpD6Xe34R5jFrPjF7
iEQikUgkEolEIpFI1IW7Znc/+TRrDJ0ziUQikUgkEolEIpFITEHS+Vxdtvs0
8VGnpJB/+TP5sl/16PjDGtZzqfJYz/n7PFtdcJ4akNtPdH6x+/x7Uu0WziP1
faX2yX1P13mVjpdrh9S4KtWLv8/KS7nzK/W7mFx9yWPlpVr+leovqePlziPV
r0rzXel8cv2kFqXmrdJ81FfdYcnl17FwH2HpL7c+C8crre9qrQd9x0OqXrr6
Ve78Uu+LyRPbp6XKF9OPNY/Yc6X+YOkplC81foZex2rppe/6KXf9K63rYv2r
8Dkrviz5rPvC/FUaP7n9sNz9U3hf6TwsP+raFymVo1Yfo2scWfVMLfvUli93
nNL6pVQftfpRufel1hmp86uVf1Lvs+bRVx2QK09f+5hadYE1/x7Tmj+jon1l
96Nq9zdK/aHr/Cz7dK0fYvIM3e/IXTdi3+2Ez3Xtf9Su93LJ6rPk9mG69rv8
fKw4SR2nlLruO3LlStVH175O6T6l1B5d+3W1+wqp609fdVZX+bruQ0rXt77q
D2s+qXVEX/sFy19y31c6Tjhe1/tSx7H6ZrXzkTVO13OaofJJrn5ieaZWf8ha
T1L9oPQ8pKtfxd6X21cK5Yldi1Hp77m6nteEz8Xkseq6Un1Y87HkEP9/Pmlc
qVm/tY9TzH8pPT9RHfJxTKl4qjUv5aO6TG35IHzP2PLB2PSRytSqt7GR5Ufy
szySv4jGQMrD9ElDx11f86nVbxl6frVpLHoQ1aGu8aR80C+lfndIbXFIbfoS
iUpIeU5MTTSWfDUWPYhEYyatE8OyzCSPoK6FQo3O36TXf6dL5frjDkSf/UcP
oV7C54bm8UiztgsGqfffeajld6Ff5PpJqh5K9VXbb2mNxrL+Uopy7U/v+ZTe
80VIqf7Qd94Ya1zU3jf1tW+x5KeUf/WVN/qyR6lctfUR85uh1iHtE/83nund
H8ZGY90vUpppJU/lxtfY9gO1mNLndqlMbft8SstnzZvSeWdoSvVTSueZscYl
rdY/nmllX9M3jSVehj5HpXa70zrF/JJa+htDUV/5I/d7kRipDv936ruPMFR9
oXVJlMKU/u8zUnp+ojqkP39O/P+Y2vKB/vy5fpha9TY2prU/Z5PSJH8RjYGU
h+mT9OfP01bfbix6ENUh/flz4yb9+XMiMfWS8pyYmmgs+WosehCJxkxaJ0RD
8FTcri2b3cL+lWdi99Ma06qdatuVVv1ENC6m1zxLKbuN1d+G1stY/UCUR4qj
bjSU/yhOxNTIZz5rnD4/Df4nb1l5nN7yPLXbm9r1T2009nMq5UPqIMXduKiW
/6TKSSvxSit2GCt5/wr9TH4nEqWvFyLRGMk6n+s7jw3d9xCJRCKRSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEItE4uWt295NPs16h/y6cSCQS
iUQikUgkEonEFCSdz4lEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJKrFgQM6
figULP73xx93m/h8m+X//j35TscireplOa7h3xM+V5uBE5pPO3/2NFM+r5fc
98TGy32fpRfLz6znapGfR+ivlGaZkYtbNCxxTLI+rLwzFvuk6iF1HJ+XfBzl
+s1Q5PUT0tB6GEsesKgv/8i139D5xK9jufuIvup7askXfVHoF6n+0Hfe8Hro
a58WkiVXX/OK2cmi1PohFs+Uynt95Q2rH1TqX7l+4ufRtT8VUsxv/H2181No
h1pxE+atsL+R+76hKIynsfZhPPVVrwxFVpyV7ltphVLja+x5ypNVB+TGV1/5
wJIr1F/MnpSqY2JUu14I804te5XGVWifrnmm1F9K+zGx51L1YJ239P1dj6fa
faswz9Tq49X6jsPPJ1Uvtb9D6ipHLblq17vUsq+pRaX+k7tfKb2vqx48de3r
xM5fYlRqj651zFiYUucEtfwi9XcWnlLtVTperv4s+YbOH33Nl9rPo0op/D2Q
1XfK9ZOu8RL2fVLzWF/fm/T1XN/6E4lEIpFIJBKJRCKRKIX098MRiUQikUgk
EolEIpGY8qTzOdGQvLgq+3XPy//+7zDE7qc1plU71bYrrfqJaFxMr3mWUnYb
q78NrZex+oEojxRH3Wgo/1GciGmBrDxOb3me2u1N7fqnNhr7OZXyIXWQ4m5c
VMt/UuWklXilFTuMlbx/hX4mvxOJ0tcLkZgaaOg6b+i+x1hYZpJHUNdCoUan
L+n13+lSuf64A9Fn//fvuRLoJXxuaB6PNGu7YFCIen+fk0p+F/pFrp+k6qFU
X7X9ltZoLOsvpSjX/vSeT+k9X4SU6g99542xxkXtfVNf+xZLfkr5V195oy97
lMpVWx8xvxlqHdI+8X/jmd79YWw01v0ipZlW8lRufI1tP1CLKX1ul8rUts+n
tHzWvCmdd4amVD+ldJ4Za1zSav3jmVb2NX3TWOJl6HNUarc7rVPML6mlvzEU
9ZU/cr8XiZHq8H+nvvsIQ9UXWpf/4alMlXPWTRD//X64+/nAEVP/9+/DL+dm
PWRC8+Ma1nspTd8/776fLKaRrJ9wPH899Gj7ZceWXldsp1R/iT3XdX6xeXi9
1JJL/P/J+5mPo1g8pcaDz0u560+tPJIqh9dPSF3nl0tjz3Pen/ryj5j9YnFs
l7tvpfzdxf8dMeF7atcnqRSr72L6iNV34biUypeU8qOQQr9I9Qcrb3Qlrwcr
jiw/SvUzq3+Q21/oaieLUuuHWDzl1gljp9AeqetfjEr7Jn4elj5qkV+H+s5P
teQJ81asvxHLQ+orpFFf+aBvSu2PlO5bYvPpyw59vceKLy9H3/s0i3LtEYu7
3Pjqa72y5Ar1F7PH2L6nSK0XSvOat1et7yty3xPap2ueKa2vcvsx1nOxfljo
Z+F3vZTq85TmPa8vy09q9fFS80BXfYTj1Nq3U6r+iVHtepfS+5q+qHbfK3e/
UnpfVz146trXiZ2/xKjUHl3P32mFSvcRtfzC6iuE36Ol1lel4+Xqz5Jv6PzR
13yp9TyqK4W/B6p1vlH6HqsvlJrHasdT174tveYXkUgkEolEIpFIJBJTF+nf
VyMSiUQikUgkEolEIjHlSedzoiFJ//552rST/j0wYmpkes0z+vfPU1YvY/UD
UR4pjrqR/v1zIlG9PE5veZ7a7U3t+qc2Gvs5lfIhdZDiblykf/9cGdOKHcZK
+vfPiUTd1wuRmBpI//65YWhXYv2vuAEnjU5ffev14kY9p/JFA/8lX+y+ofSS
ytDJOzWP7P7330UQ6iV8LiTLTl2ptnypfmfNK/SLXD9J1UNpnug7LqmdxrL+
1KbUuMu139jzSd/6ifnLWP1iaH8o3QfV1sNYyNoP5FItO8X04uUr3afUpr7y
Rl/2iPlPX/rIXW+GWofGWg8NRal1Mb3yxIin283L+kv2T0r1/ynFlMoXteZN
6XyXG1997wdqyxVSzN9K+w+142fo9c1T3/5PKfmseY3le4Gh6oBUP6V0nqXU
eVvqd8i0ss8K7Ujp/Si1UO53UX35WWneGPo9tWksehgbxfyi9vcVfVFsvahN
feUP63uR2vOlV+r79yCp77HO53J/F5PLtHIOJUoj/fnztGkn/ffYxNTI9Jpn
9OfPU1YvY/UDUR4pjrqR/vw5kaheHqe3PE/t9qZ2/VMbjf2cSvmQOkhxNy7S
nz9XxrRih7GS/vw5kaj7eiESUwPpz5+nDDPOnHiq2dJrqVZ/onHQrcibN1c2
hkvOI8q7/1Cu34hEYyK/jmk9E4npj7R/KWNK+y2l5zc2kj+IRCLx/yfVx9TF
1HoeozwjEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSNQPW9u3
PuV95axm35E8ZhdCdmiE93kK32s4qaf92FZe/7xn/aO198/jm0XHC+UJx7Hm
298pS+fOzbeJyhXqxd/n3xObX/i+cB7h9YZWJ4N3NvP4l978fTG5Qn+J2S32
nOVHuX7l5+H1YuWH0H6p87DiKnwuVz6fd2JyhfkgNk4srmJ6iF0L/cRfi/lZ
OA9rHH/N5yUfR5bfWPLExrHeY5HXT0il80iNh5hfpcqVKp+lv9z1yvtHqp1i
eSvUR5hXcvNE6npg+UlMHr+OxfYRsTokVt/F5hOOF3tfmC9i/mb5QapfWPJY
+SO2/8hdr2J+EfqDtd9Jrfty7/N6sPZpuX4V01soV+5zpetHaKfUOIrVV7H8
FsaRVSfE5Cn1u9Q6ptSvrH6QFT8x/4r5T8x+fh6hf1nxZdUd1vysvllufRDa
IbUOsOYV7nvC/oYlV2wcSw+WXiw/seqimB+V9jEsOSxKrVes51LnrVes5Ns9
j9yY61yq/4RxZukh1vfJ3Yf19b7Uc4dUitUTpfnD0kfpeVBsnPC5sA4I3xPb
r1jrVer8Uq9ZeSbMW7F9mnX+V1pvxc6VrPjJ/X7C2seF87HOg0r3eTE5Yvax
/C/1/MTqQ6XuI2J2sZ7z8lh9hdRzo/D7ipgecvc9IVnfxVj2svZhlj+k9mGs
72VCfcT8y8/HU2xdC8ex1iHrHCjs28T8zbov5he5609q3yY1j1mU29/I3Tfl
9lNy7RVSbj8kdd8UflfkKbwv1EOun8Xqm/A91vcIlv1i5y8xfVnnDlYdk9uH
yKXUvJWb10J/sfwkVU+pduj6/UFqXyH8Hi21bxYbL6y/wvXC0l9sf5DrJ6n+
Zt2Xuu+KjZfaX0j9/qJWvZTrB7F5pM7Hqnus30XEvndKlS9mF3/Nn8/5+8K4
ieWx1DrNiiPrPMOSJ+yfpOojtQ+UmodEadzTv2zCYtt//z37YvfTGtOqnWrb
lVb9RDQuptc8Sym7jdXfhtbLWP1AlEeKo240lP8oTsTUyGJ9ak2sPzD4n7xl
5XF6y/PUbm9q1z+10djPqZQPqYMUd+OiWv6TKietxCut2GGs5P0r9DP5nUiU
vl6IRGMk63yu7zw2dN+jb4650Obg0LchonqwnvP0Lzeid9mqZzVK5fH3hc/5
a16+XL2k6sGSJ5xfqX1y31NqD88FE3q8tIo+LKoP/1yqf5Xel2qfVPlieSF3
fql+E16z8pVlp1Q9lfpNzC9i44TzS42n1PhKnUeqH+T6Wdf5WPZL1YNFpetQ
af7oq+7oug7U0k8tsvYhuetH6vrUVV+l61Xt+aXel1rPWde65j3rudi+Kldv
qXpIrZty9WLZq+s+INfPUvsspeNZ78ldH2L7GstOqfOx+mqlctWuD3L3T6ly
dbVXaV8kHC+3D1OrjxGTw+qn9NUHKM0XXft/1jil60PufiP2vq7rRey+0v5c
6vxS+xGl/tXVH3LXK2u9SJ3fUOtH6Xxi51Gp88nVW6pdcuVKrR9Kz/lS7Za7
HlnzC8cprRMsqiVP1+9rSvsHfZ9DxPTT9bmu/UZKUe0+UjhOLO9Z7+na17HW
n9J8VrqO1arHcvsUfdd7Vn4rla+WXrrmkZhdaunDqiNSz5Nq6SUWT1beK62X
LL34a76/UZrHSs9tUuVLlSfXbrXqCivv+PtSvxcprXu6rjtd92W5+ki1T2m/
w5In97nYeJaf5erHX8vNF6l66Jr3Uu1RmsdCe/oVTKjZeIH47/cvrnTZ43nn
5D/PY228JhUPDdDw7wmfq80x+ez3bBh8mimf10vue2Lj5b7P0ovlZ9ZztcjP
I/RXSvPM9D5lsz70l6wPK++MxT6pekgdx+clH0e5fjMUef2ENLQexpIHLOrL
P3LtN3Q+8etY7j6ir/qeWvJFXxT6Rao/9J03vB762qeFZMnV17xidrIotX6I
xTOl8l5fecPqB5X6V66f+Hl07U+FFPMbf1/t/BTaoVbchHkr7G/kvm8oCuNp
rH0YT33VK0ORFWel+1ZaodT4Gnue8mTVAbnx1Vc+sOQK9Rezx1j6f55q1wth
3qllr1r26ZpnSv2ltB8Tey5VD9Z5S9/f9Xiq3bcK80ytPl6t7zj8fFL1Uvs7
pK5y1JKrdr1LLfuaWlTqP7n7ldL7uurBU9e+Tuz8JUal9uhax4yFKXVOUMsv
Un9n4SnVXqXj5erPkm/o/NHX9+PUfh5VSuHvgay+U66fdM0PYd8nNY/19b1J
X8/1rT9P+z1mfSPyRqW7PCcSicT0xpFVYp8va3WR6j1RFilviMSUJ61DYnrk
jKVt/FZ1u0l5zyDVByKRSN/1iGmJtK8RiUQikaic1BcSiUQikUgkEolEIpFo
OO6a3f3k06xX6BxOJBKJRCKRSCQSiURiCpLO50QikUgkEolEIpFIJBKJRGKG
uZOSF5ueXXmLvpMRiUQikUgkEvXCYePKBdYKv0H9JpFIJBKJRCKRSCQSiUQi
g/TftxOJRCKRSCQSiUQikZjypPM50ZA8Fbdry2a3sH/lm9j9tMa0aqfadqVV
PxGNi+k1z1LKbmP1t6H1MlY/EOWR4qgbDeU/ihMxNfKZzxqnz0+D/8lbVh6n
tzxP7famdv1TG439nEr5kDpIcTcuquU/qXLSSrzSih3GSt6/Qj+T34lE6euF
SDRGss7n+s5jQ/c9RCKRSCQSiUQikUgkEolEIpFIJBKJRCKRaGjmC3XoHtuL
/v52IpFIJBKJRCKRSCQSiUQikWj8pH//nEgkEolEIpGoT9K/f04kEolEIpFI
JBKJRCKRSCQSUwvp93MikUgkEolEoj5Jv58TiUQhL67Kft3z8r//nn2x+2mN
adVOte1Kq34iGhfTa56llN3G6m9D62WsfiDKI8VRNxrKfxQnYlogK4/TW56n
dntTu/6pjcZ+TqV8SB2kuBsX1fKfVDlpJV5pxQ5jJe9foZ/J70Si9PVCJKYG
GrrOG7rvUZsFw58XNomJ+te8/H2x57rKE47T13ys+eXOJ3ceqe+rZYdafhWb
X67dUu0Te09Xv8q1Q6leLH1YerLk6NtupfL1RaV6S10Pus4nNV5y16tcO6Xa
IVe+Wv6UGx+5+smdjyVf13iLPddVntJ6r+t+qi+/qXVfLnXdZ+Q+V7p+1LZf
X/HQtd7ou++Req3ULpY8Xd/XV34otVOuPH3VBbXfV7v+6zpe6T4pl0r3E7XW
h9K6qO/6I1U/Xd/X1S659rLGKdVHrb5L13qnVI5a+4jSfUctO9XqL9SqA2rt
a7raq3bfpa8+Tm4dlqunUr101UPq+2rbq+u+LNc/cuWy7GY9V5ovUueV23+o
HRe19kPWvHLrm655q7a9atVjQ/uZNb+++ge5fmHNJzfOulJq3irdt+X6Sel4
tdaZUv1Y8+mqv9T31PKTWvub0n1XrT5E3/uD2nVdqj1q1wOl+5W+14m+8keu
3+X6San+cllmkkdQ10Khqu8LpJd+6VK5/rgD0Wf/0UOol/C5oXk80qztgkEh
qs2vlt+FfpHrJ6l6KNVXbb+lNRrL+kspyrU/vedTes8XIaX6Q995Y6xxUXvf
1Ne+xZKfUv7VV97oyx6lctXWR8xvhlqHtE/833imd38YG411v0hpppU8lRtf
Y9sP1GJKn9ulMrXt8yktnzVvSuedoSnVTymdZ8Yal7Ra/3imlX1N3zSWeBn6
HJXa7U7rFPNLaulvDEV95Y/c70VipDr836nvPsJQ9YXWJTE9sV3gd5t1L8T/
+wnW8/RKoV/IT0QikUgEjXU/MFa9iEQikUgk6k7a54lEIpFIJKY1Un9jGJKf
iXJI+UIkEolEIpFIJBKJRCKRSCSmXjo92HOpUsvX9H2PSCQSiUQikUgkEolE
IpFIJBKJRCKRSCQSiema9Ps5kUgkEolEIpFIJKYML67Kft3zcti/zmNi99Ma
06qdatuVVv1ENC6m1zxLKbuN1d+G1stY/UCUR4qjbjSU/yhOxLRAVh6ntzxP
7famdv1TG439nEr5kDpIcTcuquU/qXLSSrzSih3GSt6/Qj+T34lE6euFSEwN
NHSdN3TfQyQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQiUX1uqvpl78/P5zWZ
BvVq9J3jgl9m0z2CHmqy+1Rf98jxga0m29cZbYtctz18yK/owUIxmlpTm35Z
wz2/PmxZtieuIRqfA03++HD3v5tZWAyrFql56X3912Huul2uXlfw3kKb5mUh
L0NwngF23LV57pnjvnHz1Nr/a97pexrbJ5tDa0GeZrPlxRbc844bzBNbcryR
tVvYOu5+4x+TTFZzvLP02dwldS9oFs66vX8Vd/2uW/8j9S691mw/HVv+Cyev
bJNc8bifdGznvAPc/N3OZvkUz+kX3fz1Zcjz/1K/JfTZ1LaVK/QoOcW79cd7
LzTbri7fhHnHPs4yE3oEHFx4D+Ob1WresurXEE3wgvrln3B+uFZx8Ndom1ea
6V3PNEtaHqrJ9X5DuQfcdZa6Xk0hd2rVM6GtOH4rWKoA5L3+0307ri9Osmnq
zsndXdm3G/Tp4vXr5ETOT4vsdrxZyd0fZLE1p8Pvp7a9P02e4Tn2heZGeZ9J
mVeEaqZsCCwNfQpk/b3iHWdf9tGbWq/nnh8bM71ZG05u26XZnrXm2MYzwDYT
Nz4+cuF1XN/aE6X1n1mTUg6Y1ymyj88nzs5VtQ+vz8KN+zHcND/iU91l0aUE
Tp8R3q2cEEfbrl6X4OffLbv6PeSuHVxrT3jNMbzsvmzwl6vVQKu13PN8Q7uv
g/xb1ZqEwP+mzldNMU+thnULbvp1RuMZYFekHff8oMXF2hi/ZadLafihR1D/
UOid1z2qlRt3/1z12qaYz6Fu70aQH9h3cvQfzq9vo6ybRnPzTtp3fWtvzi8J
0TZvIL9pNofs+zi9B3h+qwY/fYsZUATvJ5vPWwn/n6/UsTni/3ZZPasH1kG2
9XOb2GDe1m29k35x/lv0uPNDXJdbue8+/Hr07spHiFOzjB83gr0X1Dr3jpu3
28PoNpATWqXX+dXhCzQZ5li9TebeL36woUUc93zvzM/WmO9Yv8VbbnLXA8t/
OPmD0/uIZaEZ0Gd/C81jvF++Y+J0xGPll7BruD6dZ0HXe9z4qCmrDmbg4rBn
97Htsdz1yg8XqsVw+eUcvXcK4lTyfdahkL/szjknrJvrCWtbYh2UNS3yCP6b
WXutHe73sP7aZXS5e5qRTu/y/Z3jiSbAablFDCfPa2hcUYzr8KjLTIzzCdr+
awPnL8vJpq8xT9ulF7I7cn4N97rcCvod/XK1CeKx+rtrTsRhzCzf2EOcnz3i
fxby5O4PuZP/C563e7TnG/z2stGHGMjpnG3OzUfcfD+nni8M+65UzXYV8c6+
cOBy+KH+jeSMYOOcJaORJ3X27PpZnFtPff1cTvfh5o98smsJ1k/hjoOzYp4l
ZZpr5zvxYGldzDMwfnpWrGuL5V3awX573+dXwM9rtrWDfYc6NaqHvDgSuyIC
dhRvW7gSnn9t0X+3N5eH+7p1s8H9rlWuNkI+WuyqcKA5xyD/pcV/cHL98hz+
A307DfocAf3zZO/6AvrUz/3JA/cn7xxQBPe/Z3FJRN7EO7W2hF49bKduQL6E
z+/2LZGTk/XsiXMYn3X54jCMH7DiUwX4/dLVcR7Qf3b/ZkkFOLtvrzpod5Tz
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
PPtTK0o84fQPaNq5DZ5ne1P321NO7qpvj7V93MVlp9ZgnPPGy1o5Oey+d8H3
W/uuzwdDv3w5+5fB/vWg1PIF6FP2Fsyl3RffmZ9+j+eVRvkFYr6RJ/bsgH1j
szRNxP3TTxpoz91mlxOrQb5tbrtk9BmFe3Rajn3x3LMNi1AnCwz1mod4XV1a
Mwveyx5pqe1LplS6OUn7fWrtl3bIh0F9fe2wH5Ya2zwJ4+JDdh0ez/U7/U/3
eAW7WntlyIn+yLtoUAH4J1kzZBj8H2Y2P2wMV3+j1ixtinEJVwZov9/NX/fh
S1kuny4edzuI+QZcuDwM7z01rT4F9dGs16taGP/XkaURbbZN0xzKMa4u7Bvu
0Pon7r845FYB+4rN+MFO8JfD+Gmx6OdatZsWDz+euJqcC+eLB2H+x2DnvIlr
L6C+2a3J2xPrInhUqC36hDodig3C+umx5ekz7Xl+TEAz2PfIzOIvyHlWKroz
nuc+YW6FPHJpe+oK/Jn4ZGog/LjXoutx3A8q2HcpvvOvs+0cHNrqicZxX+mG
qC85g0dcxTorYjW/AeLY+s+yfJDn37nCQu06Wfb4Ir6vWxzNrMG56GFIaCDW
h2bunv3Q43fyc1/MN+zRbyfMt2LRnwnwj8uOBUWhb6Gx87R19leHrnPAVu1/
ur3i5vXbmDkS/kj4vb8TxjVZN+g57oc6To3GvMuKec/A96Pd50yyYB0dDdlY
AOfpy8nTHP5w+6NPzKfRY7j49s5yrwfq59vCOdtA78CiTwpjHodqd39qv++a
+3WBPnf2dHeE3vXytWqP+mN5a0Z/9E2bLU21fWz7YY7ZYV/Oij1Lwd4JG36e
xfurct0tqa3fCc6FYJ9Lji3B8Nel65Ha/uViQKzW79Hzh5uCjVbfaQz9x3S+
5YH41Zz5fNoLbp6b2/Nrz6tjzyXlhZ7eFffNfMndP911dTL82PLb2eLIm+jP
7iu15/oKiyPhl6zPC27qye3Tx6/c7dyNWx/ukWNcEPdPjSrfxLln8KBzt7Tn
KrfgD6ij3jbdp4Hd3cdegp6eG+uEQR/7v2YPQl0adGvJT4vwBZpy8Qm+0D9s
sPcj2LsusFHzBbkjbL/vblcKdTPmXtR+7feZYi1NR3Hz/NxwxgX7z/hvq5tj
vFmzfr+gt/P6N7Nht1fEzpzYlwNK3tmEeRMs/h6qPce83r4Lz/O817ihPmfZ
V+Ur9PA0v+EOvz/xqOSKcRYxW09hH2k64WUE7Jnjsa4y9peJDn2X4bvrtX53
/+D+9OZrW4Exdu/3YP43NevUMC12StNmw7A7sGd+dc9RuJ8zfu4N9GMbn9eY
jt8pWuZIskd/93TH22jo12jRtW/PufsVZ1u8x35sbnqtMOrRqGwNRkK+Q59F
KxCPfreGbkA8Qm3W1oLe1fOOrQL5f+6Y3ke/fsVv/hfkcfNK5zfiecQEr1vI
qy4lpoyEPl9rLopCvKesvN4P+02l+XNfjeTqzYXd8aXxHf3+uT9HMa5bn8jx
8JPl+NE5cS5ub1pvLupCOVf7D7g/v8Ox3lhnj44c34v5+2/ur11nQWVMn2I/
+Oj9zAr+dFs8pwie+3UqMB/6/HGe+QJ2lS902gzzPFnSuSPkHb5cZxn2j79D
gofgvdbP8n+FvXXONfgEua5FTw7FfEdz/+miPe/7/qgAep0wyYB1lPB2ZzDy
IzkxZw7455NL7CDtOahlps3o3+5VfrwH+9ggz903kccFNL1eQt4N7+1WWOdT
j12zxfj+7gOWQd+blRauB3f0uJUTcouED58JveLPbNX2ZX2HdXZA/fo74wPt
d6s83XMEon+8PnZTbVwvn7DVRPt73K1M+zHuxcVqPojzno9z72Bf8fAdew/X
vfLf36HVt8+AYzgPjzrd0ALr0vTI833oE4+F1kvC9yjTO1vHQd6dBe5J2Oef
R7jfxDnnfL/L2vwuPmrYd8jpZJU4DfraOia5wa8N9w6KxXsPXPttgn3VXze5
h+sV9bZof2eYYfVok2e7GE23mIzmGq4O367/Q9sXtXW8+hDvb80UNhp1efPU
yW96cv6LXTrZRJsfno9KI49WljyXgHkH3jug/T7XO77ZA+jTbdyOYZiv4KUI
D+hTK2+5ijhXxNpY9sF6rZP9Wnnc97iQsB/vb346QLt/umSp+xT3x36csRNx
q9Y54GS/jpdsLw+dWh98/q1Lj17WsZoaObIMcawYrBnZcPnyTiHXuXPj8pUN
wuI0f1ebNgvPd1V26rJh8H3bhl4OBXH/2KWN4ZZ5w2zHjkgYj+tiUffnd+Te
y3Sswrbe3Phb45ItO3DX7tXzD3Pk5pm9d//ip8U/246wX1itK/e855jDl9pz
zwPDV1nYcwy/uccP8wR+/1G+G8fmD0ubZCj3QPPySkHt9bbRM01jih3Q9Gnf
bHwfTt6pSr9z4/6ZK6N7NOTmv1dqVhXod37NydWYd6pr5BDIX/fBbj/kP/Uf
Nuf80DOaaneXenfmro+svnqrC/f+0if757bjrq3yrXt5Ze5d2xxl78wcxfnh
VdHrc10qnrAdf2VMtWvhF2wjH47a7Mpdvwp9UaAtN376pyv+sPfjglmfIP/U
wNnNIKdx5g6lYX98nzpjPDl9zs3weWvD+Wmai8P9nvDj1Kc3Kq+Isz0zqJLH
1OchmqtWXb9c4OTHj1/3vgfsmZOnVU/OvkwuD4+4cs/71gnpCbmB3tYHMM+y
wNHPL3Lj75/feBNxGprHZDTuH7hWqzjm3VWwpH04Z+dFp/JJl7lxTzcVOAv/
DH/wxH4zp0/uBU5h0Gvx+ad+f3Pjn/2ofhb3u2QMXLyJY6GprStAboH7mctC
3hLfxlvhx00XC2QI5PyvKTHkVXfufsTOQd1Wlb6h6ZDwdib8UHFswe2IX8aC
ef/APzV9repDzvpzMeUQp4XjztTDfE/XBZeGPd/sw62vcvp9GF3l7EZu3num
e8Zbcn6Ji16/GeP/jhydqz6n95C79zZM5/wQ4vj0GPQpOGW2NeSHdX4Rhzy6
eC7zlADLeE2fY+3Xww/NijsGIa+f1JjYBvMsOWieHfJmJx7cDD07DS90Be87
vTb/6MXNOzj6YXs8H/Ur9tNoX+7clClyLPL1hfOgT9Brfod5dSFn2gCrtuu5
64iiw5/Br9kCzScgXv6PlueCHneS9vfDuL0vL7bGdZu5YxZu4cbP3mS2Evkz
0nNcO/h3xbCQ5mO5/LobP3BHKBenViVOtIY+jhWqtcB79R0zdoQ+peKitkPf
ch0XtNGuT8uHNTMOuW97cfe3QceCo21vv11QH/oXnVf/MuZ9HfnsPvQp3SZg
zyTOX/6lB9d3wnpe0bmqBefXJvXXxMM/ns+O1sY8ZyaGBCGuyVVLO8LPTk7P
z2Lekr8z1UWeZj/8uxDm/bV30p9BnJz6udz3Im8eHz8Ri+fTX78vinh2Dqnd
Etc3kkbYY/6Vq34nPubyZPcUu6RIbj3tOJJ/C/K93/15ASO59bPE52J7rZ1/
+jXGfPMiItbg/VlZBu7rxfn95Rj3DYjz44HztPnXfdSRrF2Q/xWLeWBcRFyj
lrB3S/YGs/B+jY3uQ1dzeXjN9P5p5FuhoW894LcKZoW74nrH0LlTB3Fyd2YO
X4z3Vx/2bA6aZWw0egqnT5bJLyoinwMu2eeHXl0KHvqNeNzvOr8i5O8f2Wwe
5A0un98XedXuxngN9HJ5fmkbxoc6F3WEn6aM7lwT67Z7TQeP65zd/m3XRKAu
rnI2+ejMzfP1YeI3yPlzy3kV9CrSskI1+P9uw3wJ9bhxz23zz9Tm9bezg805
f9na9JiI542+9xwE/X7ny9Ua661L90wFD3Lxn9fhzFzoNyJhbia8933P8luw
K9vXsD8YX3ba/bOok7Va9N2POnesRetg+Ld7Qbs6iMMpky0ZV9+L0kz2u/YJ
4+91yNl7APe8/XGPCWe4vGwXcjMykFtX68I3lkFct41v3LSw5QHbZn7rb8GO
u7+nzkadPbzW9wfeNxmY1ArrwuzSvpfQ+/DxMd+RH2cC8zli/Co3v8Oou7lD
/j6EvK94vUsU8i7uWJuuY20eaxbGzek2j8tbp7YnZ8E/6z45DUK+lpq8ew7m
H7AvZDnyz0dTLmkWp3/r3ok5Mc+Ly5kbQ06XSn3fIs9jVlf4Av+XqPhw/p+y
DzR/dxsxypnL3xN+HdtCj0NjF97DPpEtMmkl8sJ3v29nyPl542Z4Je79iA+m
5wdz903zfraAX0sNv3AQcl+3HbEL/naNWTIdfqxf7eeDLAVv225PnvoDfu/W
+dkS5EFSv7AA5Ifb/Sfa9dg0IL9Fb27++wXyr3Ti3gsZF78M8bgZE5MH9SHw
SRWHEM4ffzUIX9u68BONf/2B9zBPpwxdSmj3pVwPVw5E3m15fgz+O3A6Z845
nJ8KPVr05Rbn768xFlv/4vQIOjthJPQ9/rybtr69G+v0Ev53b110KOS9mdFr
PfS7VmjCFty/VLdeAOL2yHnnNdjdNLF502Pcuj0QnDwZcd1UzXIL4lAm4/ip
3bn5+2zJ9A51LN8Hxz3tK97UDF+1qQLq5F43+9r9Ofqdz3oU/pwY820C9H6h
sSyO9WG599d++CFDli9/+5se0Zzrefgl7L9aZncxzP+laMxGxOVcqd4ZoN/Z
wY2nZOTsOV8hcSfisqrnqc1vOb1Mlk9agXpXbGF/G7zX3Wt9Zbx3xLandl/x
KTfgQCauX4j7WjgA8Xg3tN5z2L3Ke5HlBC5f/Auuq9ib0++NbfU7eC+8VvAz
6HW3QaVk5NmMq72jMZ/l9javbnHzvZ/5dzbMMz3j9ZZ4XtTXpxPk/bKa9XJx
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
afvJPyUnloGcqPoXfyGeO+fk0c4fZLrJcoTvQ03y93mntP1u8KpQxHVt69DK
/Zs80bj2iPwehu91FwK98H69q1VrYx3NsrX0rsHtP0fP1y2g/e6bsNUF9v6Y
XS0vaGLeqC3yPdPwM9rfoxo/eXoJ6y7fxfcNod/w4WUqXuXyfdeh8ESMb7Pp
6gv44UP7r42Q73/vzBxgx+0j3XZe1/5eZ553vpX2XFrmVgecZ275r4qCnIQW
ZbXf1XZnz1AX+je3ndF7UK9QTa3xTevgus+7H6MR946dmvuiTn1rt3wVftdo
tq/ICOy7gxOOVYZdzqbHEuD/pM1d3uIcmj3bbweM/zv54xn4yWFd2z3Ii9r7
nmdCPi5LNg+AXtE9qnhjnZkcs56C7yJRv8tqfx8o+MDhHez6WCvjSuynA4pb
vsT4gIjNfyNe5ZavfIE8XRWyywnfr24WMckHfxRpUzcI9ty66DgXtFteaRT8
2NjnR45LXBxyVu+YB/rEt606Rvv9MNnWHHy+4ZB2n+l7xlT7+8/+i841oef4
ude159SkDRfzwR/nZhUeCHljLSNnYtz4HTW0vwetmeHniPyv175vBrxn+tr+
NfLkorVne8gf7f+gD/y9burPIRhfPdPpZsj3Rl7rr8N/V75Ffkbc6rrWvIb3
/WcX1dbD1Z1Km8PfmTyDHLGPdThm4gM5HpvjzkLfuq/HP4Df238c0Anvl9lZ
bQHk7p1VriHsT/pS8Mh/7Gjlh+cPNatLgbesEuPwnenkgqq2GP9m/sBf+B1w
Wqs+26DfxKjZ7tCryJX4z9iHnZ+YrIM9vX9YdcF3sKiZW/2QjxufnfLC/ZAu
c4fg3F72kf8ubb8zeNNT5EFlv84B8EvGj4eGYdzipJKnunP1YueLAg5YJ9W7
PdJ+T/UbUFDbJ5wunKyBfiUfLhiPvIjM1zUv9Pg4rrH2HPN1uVM/PF/s7O2K
eLgXWOszN/MtzZv4qj9bcnW41ZKfGzCPe3SFdvC79eamuVAfR1a55Qr//fD5
od1viuR8VAR5lGXio6OQH+Q+rLz2e+7J+Scxj33E7EF4XjvPtkm4bnH5w90f
nJyoxvYbUIfqWptpn8e4WWm/v0yfs/8k4jEzqORx7e8c2/1NMK/Xybwmn5q5
a0ZYT8pRsbm7pqDV1uGZ1p+3TciQ231+wFXbum26Oi7ffllz2Lag8/V2Z22b
BCUsz8497993QFv3l7G2210L1j7H3Y+bUyW/jcsrW+cwu2HXuOttF7tmWci9
N/TL4p9m3PjyTtl3LOauractvXePm+/G6oIFi7uf0ww4sO0Xnnuc2fhqAff8
mMuGrOs4bjlzySYXd3/9vZsbMnKcMndKrhJLr2o6FvNYg/kbvbHLOTHbUc3W
D44rC3F67/nu6J2Du1/IubI99Pk++dNJT06/TKENPaH/uO1Xzy/heMPivZU7
x0SzXiOLxoTZBk/wj17BXVeJnTsDcl+3uX0U8z+PLnKzyqyrtnn2rJnjxvlh
+duqNWpkumTb6OSB5fVNzmuy7mg7CNdlNeHrl0FeoN0T2HfIecl32GF5sWqN
pbjuMKHLX5zcdTe7xEGflZNf7arH+WnnLp8LWbj7Vt39R7zzeGpbpnx9v+AZ
R217HP0QU4uTv8br2xbYH7Wu/KfXnL/eBP34eoV7PuaMwyjMF3ZpYYVFHPe3
mPfJhhuvsX9/DvefVjjyEfrv+GCVNzP3fumlxW6bcXZ2XlvvUk1unMN9vyln
Of8kfe7zeAOnT5OlDzOv51hhwcnFptz464cejVnLXWeIirwJTu76cdNaTp7J
SbtT8M+lnbaHYdeB7we3Tef8n7/oigJ5uPvtXkQXeW3zxPZbi6mNVnHPn83O
6Yr5z5VJagr/T/d2aboS/ujW+QjitL+D3w/4pcvHDU7w/8zSn3PAjs3hSWfg
p47fWj16y/nl69kF26BXSGStqZGc3u19g2oHcX7IevfLCdz3m+66En4fWGdQ
Yei3dPm7Qr2vnNPkaBPUF/mX++CVpwW5/MhbelkE9DLJejKXCTduwfntP5AH
zj8GVcL7qxpvzQR/5GvoWRhyqzg9aTp07xPbsXccYqpw7yffLmsOf5QsdcAb
fj9TY1otXNutL1UUeu/JF9EH66byY8/3iGvO6m6u8Nud1ZNbIY4Lor9HY3zB
gP1NEd+anQ918+CuZ7tNcpnH5dfgHZ175eHi9KWOUyX4q+HwHHPhn2mjhhyA
Xe9iR5SCPc/69v6cm7vOsKjJqq9zzmi2jfzrUjfvc5oq+Vt4IY5um0KbYFyz
fEe2YtyFv4ZvOs75a9n9wSWXcPPksqxtl8D5tfG3DVOQp1MKF0jE+usbtHIp
1sfMt4/Ln+f83KrKt3GIn+b2GWs8/zF6dwZcm+95cht1war7qYHruPkuBhz4
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
4J5aWGM1Rq+Qijy+0CJq3zzr9GYy/xxRpR09+ZGaukd/KI7Qm/vAsgZy9Vfm
5IL/9IuuiUtEPrf92/WSCb1U7pDrIWS8Gx+/rpiMDzjnOaIjqyiTt3xPQi4h
Q3EtTnJ/vDH4dxiZHyrmbGgbIO/tWwnVGwkOTz2mFIIUMykxajGhvbO/KM+u
9L8OIXNfXUajKnJeJPrfoRwy/u7555BKRvqFQStfMqp//vIM8r+4scYJ8uwc
Xz3tRHDSDmQphh7vuzs7nSwaqCOOdYP0nuWUKUHljaB/OGL+CfYbdNrNSoh+
Edn/fV9F9p3n0j3CCd0NHCUpT8j4wfpYSh85b1T/9WoMmTOpV48GkvHkls1R
uF98+nbHC6KncoBMC87xrBjvjyb4uP8qlYY8Gvc6svTIePeuYj3sYB+ZqqdD
5psUlTlhX2XjvRahwM8usQ77IUc3tME+XwWDnqcT/J/f160HHx7/x//dFiql
HlHV6AP/jf6xr3F++Vy8TRyZ851mi39Lxi2Nzck4/9PB+Af8TOCmZbc/WZe7
+O5GD5FvprEzAnw3rFpp5EBwyfD35MT5reFO6+OJ3KaaUc0sBIcldZm7uM/e
U7gX/PLNZz7gXNT5T4yKS2+pbrGsgVFkPYHj6rpMgp/nvcELaWRu/F7HEfZw
p08ZB37nBcu3PyLjM6/9V8F32GdYjIPst1/0cQhtIHqVMf/5hPtOjmrAS7PO
z6WInL+lM2IF3Fb+Pj8PuetUE7q5yD16+fp78KPgY08OPibn6OQKo7F+89id
LOCau5llHex7meveAOh9H3BM5yb+lUS/lPOc2OnOfy0+oL/wyHkj6KyTdzgF
v9b3GdycRdavRul/wHou07iCHGclZWl/xwsb5ywK85zmCn1Cbyhc9NJncq41
NHk/zqm/LYhfSfAS495ynIvwSeMp9nAkuD44dvXeJ3IufvjHTuCmt8ihWEbm
DvsvtCJ+PFptT2D9rZOXMvgXV0k4gF7lqvwZ0Ek8vIkJeCW+EfwOvGQke/yB
63vZm7u5yZi1du13zC8W+R7MJX5yRSPtJeIpStvpxW3Cnze3au0DEj+bI5cV
4SeCiWulMG6NsbKHXXuV2RtfEtzFmEJ6Qd/p+MqjkKPHsqIY/j+yuPYK1gtv
3NXKJnNm3dXSwJnRtuS2I/HDU1cC2oLIutXOicpyMh7zu/IR9jjF+VAojdBt
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
EnX/3yjNC35iq3c6wE8DWxoouwwwnL6Od6Xfp3bngI7HlfC9kPPfRLA25PRU
DLlH+fVpgUtWdbkKjL/SRUAnaYPRFeD3b5/rHPY3qN+6Tt3Lw2Op+3H6vtZ4
7NvAnaUMvz5/K3MR+vRzf9SCnR7G2VH9EsN+/g7M177JMIedJndzDOO9sK78
zkpBMl5Tdd4N+s4bud7DOfUfXNcgp8Kxy5yYn0viq0M/dO+8lyzs9/KO38bz
xM+rZTKTqTj/ESID+TpHI6i6ceCaej76ut8CuyeBS0S4HFVnLzyInsc+vTVl
FVsI32M8yx8Bb/9H9Q6Y99cMr8K+i57F36CfkJFSGuhFfGlagPycoR9jMU4W
nrFFn/10tDTqDJHD8LNWBPQ/dFyzEjiKs4l3Iz/FV9hR73qFdXp0+J4pd/XH
/Anh4a3Qq+Oap9Z7Eo++U16RVL680rIMeWTFx4tU/2tmMPcB98vZtCEqD/bs
9IiqJPtpO3V2oI4ZX/ATh/wdA+8S3pD66s7z1Aryq/1RzEQfzu1hvQfvg1o1
zPGY3zm85znkCK0S94Q/npfcZQi910lqn8f65rtu1pA/M1AxGfrJDdaIY/w9
WnkZ8GCQDdQ7T+rhh5qTQbh3e29aYfSJ1DHddwkr0K9VsV+Oo+6daTPNH4mc
nmli+xG3KYzDuaDfHpftA3qGe796Ir/s5jhM2cusR/8u3kkG1rJLwJ+1XdLX
Yn+h5i8v07oGBf8yJer9wzT4oCzoB+wsXQH/WPzj7g7c/nKVKkAP6Xc6dsBt
z0f+4VzvnwqrRPptgXNFJqMA1T8npacDx3nnV2KgP7tT+yrueR0vkpfh3Hkt
1Qb4u82Za+qgdy3q23Kq75/mu03dP4L+DaDPqGmZofpohlnHbXiv2L2Kuxry
zJqnJGI/fed7qk7Fs95cAf7Knb9aod8/nwOp1H32+5U/qOv0Pceper7FRST+
HME1o3lrOPrSjG/NitQ9auV9Xsi7eCP7GfV+rlC/F/sfpFt3YKw8vrOnivCP
VFc1hl+xzKXyYv1cqq86+rIT5pvnwH8iy0Qb/cEetq8/QU8l4GEC8Ldiz/2E
+2QzzwEL4Ch8jycE8p1iPMGK/t+soFafklfOkhV2q7dwSod+q7wsqfvIk8HZ
d8MkX6u83fAK98mNzAfaECcVRxss4F9tDIz1VF7uOEr1p2yyfWvgf+/EuKn3
w+Zd26pRDwzPuf8AfhJ2wuKUvltK/OG3pU/vUbhv0LG4DH0NR05kUPX/wP5o
2Ovp8YxFrF+1sJfEvL63K+XnI93bdJFHnm+pDIO8tVUfnqCvYKtOdBTV76VZ
yjCVoH4Hnl8uhvPLxg8ywl8/yb3ShF5LWzxWQt+7XIongdNXOfujqPN1x24q
YZ6WfM0PfOKl9u3CV8DoXyn6Gfpqy1iMvy2/wEr5TZmtF+xhayNmSfW9K0Ni
wXfvlU1b4c9XHRpDsH5tn8gS+oTo9IAVlJ8V3hEGHgVGPTeqiVwZXw+Oo8/j
1wxY95vgrffywD70swmCf7/Aj0RlH9+icEttVQcOdX8f3gZdnr+cGZDn6aWV
R+EHmxUKtuF+vJ6u+TjkYNRnWQ19o1n+OUK/k957pIB7Cq/xEs6573oxA3qS
SbxL1D3Jo84H9hs/Vy4NfW5G2J/C9850JoX7+S3vfoLP1pO/DEDvvmblAeSn
E2P3Y7GvKVZkI/prfdeyfMTZmzy2eNBvNmY9R8Vl9GbqXt+7J8gD++N0WYtn
SJ22crluhHdx147/HgL/LYN0edC/uuGxOPbJFx4/gz7y7WTlJeTHp13Cn+Af
ZQqvVKj7X9AN6r0q3uZLiNr1YQXzOTojjBsKHR0Ql3qZpzTvJr+l2Ys8eA5/
1ArrVEc8GPY8r40kfAK9vOpRf85p7uqg3iOfnPqO86ztAythR+11yQGoy3/u
XhSFfluninygz2T0V2eqHgX+nnxO/H2EvmQc8o7FBNNh31zJUUbo68F2a0yL
1BHvtS5FwOObuPci/Fdi2UMv3GfyQhhLMG/ysIcB/Mz5Zuip3z1mcpp/zH6k
PR/OpnBMu25GvXcrOnLZIk9N3quQAP4Xq4yiEY/nmtqo/uOH4pUUzB8+Y5EM
uSV2xauiT5CT/poIO8YOeNUBtzZhNgP4Y8KDoCOYd5oXpd5DrfcIus2Qvic2
OLcNY+Gt81T/efe34Az8Ss17uxP1LrFsMA/nn3A8vgf+7wwO+0iSfKPweE9+
GcEjcayeiudxuu9UPr2g90MK8qiFrF2F/ujUk14b6GPalTGLdcuK2/LUvVS/
/QTl37tav+D77CjrXtjLWa2Qyuu99veofkXj4vAz5B8G6fx7mOeq7z+M/foC
8dT77JabbGugp5HDmBT1nvPMpgDrEnRx1DuteG16Dca7VZwMcf547+9s7C+s
EbwP+3IzLhnCHw/KFpyEnn1xs3LQf1i14jbqJxd90hecm+eV96Tio+K2Ota5
nzzaD7sPfQ35gfm1YmwV4MO24p8O5k+K7k6EPJPThz1AV28wunuW9PvaK92o
9/hVWfPn4adzYqxXcX5H+PVUyOXLeGs1+p5iZn9m0LlkVFWEuOmQt7hD3dsm
Wql3DZlQ00vw63XH8i6Bb/ozFgf4y1KUXj31O9YTe+q+dYP3kinyBcdUXjDi
+W7pTQnQlQ7aKISvdkDYc+AeuPE69ftnmghfKHD5sI+deuevuPuCwmV2MIB6
Dw2yCXoj86iSFjKi82sXycNKTWYUDnNXQqh3Y9/Utxbwy/aPs37w//E9tRTu
9oePJIHeA9+j1tDTTNJzFfjwydvzY97vgx31viTqclMbX/odvg6KxM9Ohh6o
RXxruBYqYt51OGATdd9bvnET9A6xWaOG+Ujhq9LQ+xn9XP7TveW0QI8QngWN
IgUTpVenX418od3JKCl2PVdLa99T11sv+Io2sfrs0TvDRQrNn3v30sh6Sk/t
cAE5x3b/9tcbZN55X9+3N2TesWSiwjhsWEHJ+sa/q+T83HIvb8w/c1SgBZJ9
g02npI0/PKb96pg1Ax2T3dEO+F6p3Sk3QfjYan6tuol9UUd9Ssh8e029ItYP
a+0RekTmD7Q9vo/5cXlr9lWGpTQRvfdWr8m4IOJHURH5hmxy27KWzJfIjsr9
IvTu/t112fhpMy3j3uPH14g8iQIrtCfJ/Be7819+k6+5V/43NzLPHP6jHXT8
656Y3CV8nqkP54aTr31VSGsr2TdfcavpHhnb/ic/b0ro8fbWztwmY63w0uMm
RF9zzulV5mRemcn1IXCziXx1D+c3rGbNKCZ0rWwFX2OeWXmp+5B5K81CgkUN
809O0eWakvOD/CsPzBD8r49Gz90n596s2ne9kKzn/uaSwf7/wuX8WIleITu+
CeHcBdXgt5kEf5+PfJs9CN1Fs1pFC8K/uEbICfZQyLnPATzWZx5UA35nlybO
mhE+1VtWu2L9X150lQKxA0Px0S+W5NxYz9Yu8HNj/3A4gqx7jEQUcBwvUvgm
fuMv6DqLPuEF35GOOG3st0i8+QR2/ZS+xxN8qgZ3HrpM5GCa2N4OPmw84Syw
0/u9D4rAr394cTn8h18gdQX4nF5vqwu8o9Isq7FfeLftJeBA4tL9Otm32f2l
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
8SnEP9N0xlrIaTIksn01Wddwa1oO/xuOrJ+E3dL0LsngfKyqjif2pa8aUsR3
gfv+OOwy/HdqD+Tlj016CNwbshQZ4R+qmwU5QUdjPpAV+UPXw+gPcFv/KJaq
0z+jVDzw3e+4VhV+l8ipQ0P+U72cogl+PLsfmuN7qJZbBnXkgr3Ib/h/lN/a
MhYi5/BZM2/k4d8SLXM7iZ6WBs4PIcdGw1MpoHtkl2418PC8Ms0BufLlQmjw
09AczWuY7xaWjcX87Wd7XkIuVoNeJpwXurqlxZLQG7G0qkedj6656fYccab8
VA56H05v84R9963KaMN5mlbGKvhFkdaq5VQfNp7Hi7r1Xlr7YzQ5r7JKKwVx
MbfSIZmq8+tVqHzMW361CvLM73oUCpxVfrEM4hzHqZPhkC+svd7bhMixrIEn
BHzPH9DTgh89Wzz4nyiZ7zWeiwXfwc4blPyKbRVNoPMyMmMhD/2cQafrd8Kv
59V7qh5f2abnAboexcGS2Ge0LLsFflQz+jC1heyj32nwFOv9XAmViMusr5yF
wMOt7uwQ+taKNVmXod+FU05Uf9Ngy7EG/rp688mHwOPMzq7BILLvae8w1WcG
6Rw7DLn6uVdEwR7HXbUswDfFarUU5JH6KLgEfex+cLAi3m98o6mCf+j1yy3w
l2TpjX7oC8Sid8kh/pxOFrxA/zZ2/2s26BpGdYv5EX63Q79VIP5Mq8NWIM/N
ix54B7yHatboYN+a6/oxqBcb+fbzQH7+mYVo5M2AjabdjmT/qWfqNuBb6R+8
F3gOl2+QMsP95m1KH85/uSTQhvtjKwMrL/YpH1teF0f4qenVN6NffvH6whno
oyN03Aj+uGXlI1nUqz27189jv9W2TbGQs37airrXPvsYKo46PO9lJg/cHLV2
9Z0j9sxap+cEf4qRtMkHnSkTViqvsY42taBufF6ZSg97HOBaext4Dn8xjQFu
hx6VnaUn8XDg9uwc8NWf1zgMvgtcYkdgp1bHgCD02SvL3tYAp+4FKUbgsCir
2Q58y3kT4tCnBO05LgT+N/J6baHPnO7TQMi74qvudfDTSzljCb9aUkmWRn7X
uRq76QKRe/104zXsu68bQN27V1ouW4Ccluekc5iJXK/nNljDH8JXxnmhL4/Q
PMUJetV/L6ZQ9WSX22vEfcf5hpXIw5wXmqfRr8m6lB5BffqoWJAkS+xeEZeq
Dv22Of3Xjrq+9sz3fsiZ7LqeBjzPCNx+AbvrBuq0oT9hcGecRnzxPfvMCXr2
5R1FsNtlIib0rxJZdgt46J9fXol8ZdjDVTRF7LnuE8cc1Wc8NlWHP1ezC0eC
rqPnzZs4JxMT5Qo9MvYEiEOef8s38SMv7d/8pwp6XUkpmsI7h4Vw7wbg6fFo
ypHqiyo76IDDpM4nLdwXSvWss4CTOj3/A9z/6hLmV6AfSPhnWQX+u/z/OwF6
KgtHk8BnK1/lKcyrvU50WUtwzVwS7oH+uiPm9LjPCD15UAT6V5n/fUe8qKtL
b4ffhglfc0c/euzb7iDQ4U5Lq0Hd7pCLaUd/uKV49xOci2ZmKcQ3Yol1Dnlo
LH/jFPrKw9IzVP2piJxfgXyYfpuzEHKc6lU5hXgR1v16D3kg5d4GmwGCXzSn
Ugr6Brq39Sbok2JvhcyC3ka2zEjY+6IdyzDk2C+wfBdVH0/0Un2Q9Mu723HP
X76rzRn8/CcMUlG/Oi+OfcH+3HfNVJ3iFbMKxb39386obOD2dSnpFexq+2Z9
LxvRV/Xa40LYVWlkWS/6uMg7bWzQt32l+CmcL2U2bEbdjBq78h/wfdVWpwj6
OVZcKV1kP2/gznnsqy4K54a959d7H6TiuCUnAOPS451UPn/qcVcMcpc7sepC
3hcNj5MQr8Wvq7SBq+Mo8X4yvyP/mgD45L8f18F5367HP4CDQPW/FvC98YFP
FfPiS1Xc1LuRYTElj5T34wnkgTWZqfOYb89+eQLft9s0BKAXY4w3L+yc97DM
+DjBqT126Ariwt7H6xDk2pmXMwo+9DqS7vi+Hre6gf77Zvf8BeQ3rpbmUHxb
HVVVQNdHSYQe976j+lVyGN/bKHppHcFz1sdjEDibetL5IB7tLSLc0VfdOsdE
9T8OPr/HEV/LXQKncX/beo2nAv3HOxPvZsSVF0NQHPrzxdVpH4CT82H1Zugr
OcwWBz/6+u1ZkhmRP1k80h/3cG31gED0XwKPk9uQl7b+yH2L/btunIsFvmX2
zkOQQ9M7Uxf8pWNGb0KPZ1lSr1Ff7z6PVkR8to8z8sFfiwLlV2B9VfSl7/i+
HTtzCXkshP/pNdRna7qsX+hTlgZ8NECP8d4gC+w16yWVivj86virFfx4bj98
CBwbXqtpQx6jH72RuA987qn5iDip49vUgnlRJw8F2O9h7Q5m0FnL9FYM51S8
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
TTjf5Z24mmR9tglWvgv0LnpOowzXT1Nhlu0gK7Q7ZBj7WKI6t4MW5lORTeVG
2bI1qHwgT+udfDFy//3cnSmXB04XNXu+PZpH8+RrC7z4HBlTcnuaPmB9F9vB
th/r6BS1YFQZLaGx3XHsFx9kIQVSh0Q/zl196oZbBRraYI+DQY2dVxvE82ae
HJ1kQmkTPI+/xkLUMkr+Bjy/AclSC83UeIgVtunq1WDAwwjynEk8E3Qe8KXo
8s6ia63njFgO46gqZna0B/c5XWVk3cdKD3T9VUSEPp5Lic1Hj7seYKKeJ18X
CkO/ILuC42/sZzYRDDWC/T+p0GHT691C4Q/6IFWqzG1rCR00R2jyMlhHZxkb
fCqf0kF49vzj3HwmLHLSoviaeuDJX/ZazYlUhJxspx0xF+w5wreyD/vIlvQg
RWvMz5pZzWX7NVmoyCbEzWA/A2DR7NtbnJ+rvzXfyWGfRlWPXpLduNrh5G8T
FbHXdFDlqueKdcD5+wSBbo3rx5Lkfb4Bc/9Sh1W31V0KAkGdo/yTPZD4bWi8
3bUa9bGOtUljrneyiOt634l1JNOO4eT5El2yUmY6KAkRIlZiAoxx7rxZ/c98
YyALRuo+2DRhXXzzjaWhtJ4Fne2P/tuJz6Wrr7qkcnsE9dj47r7G6IcrRqeF
RAT70c+oU2akw0zY4GNVraGM89KZ71ILckto/Ooy+2F8vpeZVxQy70ygmxY6
k6WtbeAd95yzomkCDQ2A3R88JwNdNF1jYayv+YeGT7H5o9Req5w6PAfWobHK
Sjd7UL5cbyjfln7Yc6PaVuFRO8yUrewM7MT5gLi06/XTSXTOru3rkU1EJMdL
0hOeZsLumVWqRlgf2mrun1SI5/X+KY4VI90RdLT29DBVAXNZV6/L9X25SN3m
QfTJbjp0de0vjIVOGGEk8B3HfLVyyXB1czETDYX0t/u9eIoMBYqnP6Qx0fOV
dzaPZtohWoXPt/g3EwKvsxP197EgkdoX5oR5ofBHQ886vK+UgU2RM0cW0GJN
dOvMThYsEiU2wT86alz99C0yBM97rOXiNZU51LG258649xSqu/E9LmztH2oz
2Q6t2L9Jq3NP81f7QeHr1FDEy2/QPfhjhx/OXTk/km4XYU4y0fg28f07A3bH
mtRtPTyPrAM7RUexHhn9x6O/k7sGKp4vvxXD7+Hdxl/6zXUOTa2lz6QutsGt
L0mm38/0wQHz5uPa4SOIfz3Z0lyhC9gsLmo6ZzDgenGfuxPW31KVWeNz35hw
965HmR/mz9OEHyK/xjvg9fn/ZAJEyIjLHZGIF1nwXT1d7vxndoL3vecvJkh4
bwPmZTvx/rW2z1T3d/5GigffJhQsVyHIeK4tGdIJ3yavAMs/E+WpaX40TimA
y+WD540j+oHE0XLo73wN6n9t7JCH6/VWI0JF3KAf6LwdXUGYyy2NT90abmaC
nsFL2ZmoLrg9peLuhnXKUtLwiM0oE4JOHzM7hXP5s5GxVh1ch8ecLprNqa2o
Q2A0v6KpDa7cDbJTw3vdW/5S+EN0CwQd/1L3y7sI5RUOlcY39EICn+Vbfsz7
A984iTE49/8RsT9Z1YT5vyv9X5gHCxjsM8mDckwwF8jOQI/ocJF889EaniuW
jplV90ArSHY7kT7n3ofTB8lP7hh+h9op0dXS9HaY2kK7eKGsHbw3afqZBwdA
l2xmbirmw61jc07OA1i/fLjHqq9i/iML0f3w/hbHn+Yw5BlDIiKCiz1FY6h8
y7szVL02MM5YK3Pb1ggeL++tlLXgv3/ZMaGRQQea+UrzzrgJFBd9/MjhYAIa
ZZmGa64Vgmiq0Tbim1RQvBBvKIX9juIeO3bhYR/UMy5kJzPqkHa0duLz1j4Y
35991auyHsV+/ZxYWP8TZHePSCjhOm8WMGn/jf2K2qnW9g7n4nunmhlFJvWw
d73bQMSmf2joWoqLydde+NYdK+5Bq0SiPUKDvn/wvhpsj258SAf14aSlu/UM
4LMQauELYwL7EaOHibzt8Ko8OaWO2AfThXLRRUvfwH6l2mGEpxRFqYRxr7vQ
iw5rpeYubGyHrmM+c2/K/qDNg7ciryg0oGXkb+UX0oJesCJ7TCqZcEQtWaIL
c51lwcdn83Wd0Kjm+o+l1wtOUkHRhfj8amIvtKpwzqO8t5Yh2IwhYfrcz4c/
pAlDw70cWzHPeIdsePkcP58XPqZkj/2yLbnYlrMLc9Q4T4+SCs7nqVduylVh
/rniOEVX7YGQDC7O2ux59O3kmg2nZD/6crtFVt2eDlphjqwXHjgnUF5UNL/p
Bb8AkXUcjmOo0zvfp9VqDPV5ZL9oW2GCPkQzpRu64XKwvfjc3UG0MvR01K6l
DfYfqSk+m9QI7NHXkv+UssCF2DVebURFV8c81Mn54gQ20ryr949uaMzY1+3q
NoOMKVcMTSNYiPuCULA05r5Ww51R8dG9YLTGvNac1Q9mhrxyqlTMTcZwU3V7
D8inOh/qKqPD2y9IsP8H7sODrc33+7Cu/6fzRspnCq2qvrI7+qIdDi2eqXfF
nF6y0fVWCs4BnHOOhjuOT6KOpT/Q1/ke5no02y3X9SKNHas+5IOtoLzyVLGi
+A8iWdQ72qTiHC6RxT2D+UFm/kdzByeuu9qzJ4ryg2if0gO7ebIVqN29/3UQ
+9mJQJ9F8J9GJ4/8e3QLc9r+9e1Fug1M+OrS+atwuAm9E+34906ABR1NDXLt
75mw/0m5gNtBCrIM3HZN3WAO8XYtNJGw3j72V/+WWV4LX+e/PmHL74E7KQXp
qkdIyEL4x17vJexDyvtGB+l98K1EUSkf68eYvsjHR0coSD7ayYMzYBRp5N+v
3rdbkGClmvBzDvNyCtVIM/ZLG9w+x31TNImJbh/Y9sXqGfYbPQ+L79IssPpe
/uW5yRxKvSWR+IoN628aRzoZ610DWW/ftwQ8j4PGntq/60DTwkHdQpcBcck7
jvPbD6A8gxaHbRd+gvnyznkZXJ+iiOs1c1Z9IKBTN1ge1AVOCq60jwwGKN3t
2/RT1RHlZ13sV8J5UNRP1F4T+xDXsXYPSeynH55pay5uoMGw6LuxzhuYO0/x
ZUvhHKn7NKGULaEfwCoU5lWYcItrQDMhog+8C2RTbtZWg3jUdVXLRx+R7tLU
RucIFmy4ZCB1DuvBmCPB7f/cZ80lPtkbx4Rg59hiUlE9miceLNQrzEYnDQ9d
edON688Wt3Ss/BfSo5nKae1igTwfh1/Bnw7o37h6n18e5wly1psnbavIRH0H
UWjbPKr/K6xZgPfuhSF567NzR+DY3ai92T9+o5Zjx54lqvXAjqCVzBNX/oPu
A1abc3zpUKy7Gji+1AbUaydHKjw4CEOLgbHleF/OKjoWvaxnAtnNXcwxIhel
Tnz9Js9sQOKvJuZe4r0c19a9JYG5b8+48cj4fC8s8x1KUdiOc/N9yjbh8yPo
ZN7gH0GsR2YuN9tNBElgZqrZbL7dD4k8fGL7pbgdVAjioKtHRHy5W2/xXZ1G
vtfe5vzk6IbvufWdl+vaYY/atbJVlVD4tHJRhgP7efgeS2My1sHW9e9a59Tp
oKt4bbwf60xQgT+v0Cyun4ugwdAGFjwpOLElCOeuxsgR6YKtFOCOrHLI3M+C
91onOtY6cD8paZwZzQyY+13mO3hFiLB2r1jmvSD2rY8NT5KoQ0hRXu4/yXdc
BEXLTTrSeA/qprbKF24io+FrXl/25Kyifdb1caYhJDCdEGj4W4B12lAw6vsy
E0IbH1tNfMb9Gs3q0eFjwIffcYbNK2QI+VB37nlzH0TvMGXuGq4C6y1cKceV
8iDTZkj34uc2+H2ot0AE53ZP7V72MOxn3crdk4Ja7SB8bYNl5WoLnKv1akrG
3OwqHlslXcuEOzaS/GaYc20ejlv2cQyg2gdz6ouv2mBkrM14KawKvJ/4mKfi
85wQe0T6dU6IcLPQZftiIQNEx/YOtkixQEAi51a5dQ+0TbG0TT4NI9e6Jodo
XK8Lut1x63f2gT6/1Ea7rnZYvkjecPxnP0T9c+Cr3zGOFBLNm9RwHtWleOz7
r74afKiDGqLY/9aU1tSFFnvgj669jMTVTYSRERrh//zCSb2wTnCxGy4Z8V85
SmSC/RNRWUZvK6hmnTm7K4wF4zs88yXsthB6Pqq2SocyYFmTEZpd3gt6MzNX
brhSUdTCbbO1nZ3oUIbztCHe8yOk6Lj9mAvSZM82ItNWdKD+0pag3D7wI/n7
y1YxgHk+7P39v7j+3aNn3+G9Ue5wtygpYUI999S4GFsnGFR3KxdsnkXKjvu6
YoYbkYdfcFEA9rE0DtJMSBETJoRuHIg/ywL3mq7Mh5hnLD3kYzrXseA0R5r0
LuxPBpGUhxHh7Yhue4Q+gX2r6D9UWoE/rwaHJVOEhtHzGTUh9y9shLQNvrV+
KkR0XbSh0X64Ch25XHdJV7QGDUiFHMvgYqK4E4Z1hTu7YdNsQpIEztNG5wPL
jugtIpFHuvMOzj3g/OuhRLd2DxSMc1/kkWOBeY6O+/7WLLgiOblwahWfM2+7
yn6sp+aXRwyfXGbC8MdXcr04H5c5neEvwn64Lij9wEV7DsK64s/F/q+H0CmO
pVMXsW66fIxtjsP3PPJihs0Wf//FR345weph5KTH/3UM69jZwMy/Q6+ZIBUv
k3sG1zFicxc/Aev/S8bt2CWsOyKiq1yaXzG/XeciHF1gAAp9vStyhgkFnfcu
jOK5zDuiqOB4jQY9nkvVW/A8sR06t9yN9/PJQFv/hBYTxAsdnbzip5D0P0PH
Z8RZdEf7zd7NPUyQ/Hj5lRbWWzPb3xRFvAcyckSJcOyPF3vsKhf2tqPQ0rLe
G3xYb46KNKuw2lCbZ+YnLa9BZKdybN7hTxcsj8q47/ncAZzOhFMv8DnWyyp6
VePP9J3GwgO4f31POxhuqg2w+v1TiB/2uRzrsvQj+Pe+Btk89dxFBqnhuz9n
5PoQpfpG21wiAyRtxAxThdvh8Y7FxNf4PYf/01Du+N2ErqwG/BPC9y3ZsWA0
iXN9lFG2btjrz/DATsWPwVxGg3PJFplPRQiBpPy/Czh/jzbPVDh+mUFFooZF
pgMVQB224zuK55HyezrqlCbu3+Mba28bOpHsS13troFO8P+XEuSc3A8V4/aC
P71p8KD+W/vNdf2g6ocmCcpvgZpmlhCW8AtxWS7NPsJ9aQi9ciJpshNxxnxY
ifH+g2x/s+s8aW5BqUHxzqnYH80ks8+dyqyG3pStfoKrDNhSzvHVNe0LPCqi
Wb/FesLLM7px7iATlIQTpmafYn2o536XjvcbjORDmjBPVJ5edJba2wjbTjrW
3jTvRyuH1Ty4yofQJJmHzUItHR48ym234qhBbY0kO/t770HdgkBhPzWH+IVy
D1S69kJynu/l9K/9MKK9SWwHzgNSUjYjF29yEgjS9oV/RPoR20u7NdPLRXDN
wGthRq8GzerHrNgs1wG1mBFzjNkAd3tXsnNG6qGU2NlxMfsrFJo3X7F7QYLr
woVcTiNU4PB9C4fCCZAT5hgu9qwBJZaYbF0ZIAFBwfmu/uM6+PDNO0EEESHV
VHy55tM3YOeQHed1rYMb++/t+KCdB677AlfjF+rgi2TiR/cVKhC00iOOfaqE
IiWXbidTInwItOZaUSIC/wFeZ8cjVFi3vF+TcYIIb6aY+bFWH+FW9FX7hZJ6
SJcqkNivQ4SwHK3m2rZK2LyB5i0uS4XD4qlv6hTkCAq//p4dOYbAQ2zu2rIo
BUzvqDHfRVYhfaSh2R5CAfeL3A9Edclwv1Q9hNw3h9xFOvdE4zq/MvxKWE78
itLSyuybttdCzL0EuossDfQCwMP7ZDUwbCzKFlfr4ErgSaqrYz24kbbKDkeT
IE0yUdHDuBqM5vb/PJRPhN5iiRlTFTq8tjx+1m+hHg5Vh0YUDJFgJSfmWPr5
WvgSnNmQvo0GV2ImREU0yDD+djQ5/wgJ0kMP3fD6SwZbZhDz2FcSUg9sfmgy
SQOvXdfDCx2I0HCmIPA5WwOaUFIv6letBwKUEx7tpsIiSydH2JcECyyh9k2v
6+GWfWjz9bt0mPY4rXovqR4tUAx5yqwrkfGYB8Hl7Hd4p1r0WucHCfaa8ty9
GfweuB8PsYmEtaLCts53qXxEmDg00BHpT4SWlEHhIJ9SKK+wV9okVg8110Oz
n90iwxPupBn2PCp4uv4Xv823HvLu+93q8yRCkZO6ovSfBhBm4z7jr1cNF0/G
pp8gkaDqX3onMZAIZC0z3x0nqTDJVD5wP4YGGQ6xd7y660GPY7e82ks6DHdM
TSqVk4Bxc9sgc54Kv8y/ZI/ONADH0AG+X3+J8H393T6yIBXq4jxqnhiRgVuG
k2PXcW7C9AhHW9ZAArzP+piCRqmgstcgkhTbACIEmb9jJST4LbH+ya6bI8ip
dqtsU18jSkzacPhQZCH6o1w9Jj5bB7rNJuwH7eshk/fIXtc9VeA2s7KvvIkG
+X0uFbbjHxCl+Xz+wlY6VBqE5KBqKvwoP2uz+Tq+z+tJQm8PEZhBF9fIvtsI
1U4Z+pHsZDDxHndBxmQwi8+UQr41IP/0bjOV0YmWc8vO1/2kghA/t4JAHgH4
fyY/PnicDsxW8YQrZiSol/gRMSVPhKCQq0qHmwbR7Ru3fg3bEuHa4e0eUeU0
cNPMSzXYOYwkwhm3C1+RQE7vr46SeTWUvu1M6v5AhMt2w6TFD1RocJ7+0fau
GdWI2pTs7iPDL9IPNxcvCryzIX3gJhBBaxc724IdFVqFu5ub786j7ZdMyOwC
ZLCzSnE+TybBZrtDwYbOJJBqShEy1qDCyqcviZtwotC6mdlsPk0C3prm8/29
RDjEKVPGPEOCUrdtzgk9JHCMvtKnPUpHWheiBXJv14O2dO8p5b1hkBD99uW0
/iS6Rq14+NKBDDqPq359f0OCFKLXdCA3ERx56Zf1Ij5Bi+eNEr8HRDBryrC+
f58EbvnBWVHudaC+/em5HeeI0HV3Rv9+VC3ctxacVPpXB8We8xuej1FBUr3q
W8edWfR7RXz2UBgV/N0VLNnw/Vgms3vd7xKAbHPKF2kSIec4G1p1I4Lr6bFm
l500cFm5Lep1Hd83Ii9ZbJIITxrCik1GakB503DLl7U6YPMPbG7+9QN1JE7f
aRKkw9a31hamx4kQ/js0JGuRCJn7JKOEp0hQOOwx5yyA+8PvfOz2DTrOHzvE
NldQQcbtdaiPLhFEG/Y4kJ0bQJN7YtfzzhTEJDOl+6aJcKJ+deTl1VZk4sWS
vaKdA/uqiiXss/6inFlFtzDT9QThFhPtkQMkGLzAJ3pOugGuluz+tYtFhJ6i
8TWmJhlydyqUP79LAWW9zpdyrUSQuUTUEjQhAp/DW03r6WAgONbtOK1AApXa
zqGHn8kgoLuQIPW+FkwlnFCcaz2s+ngE3FciQ/M+0V8yCgRoUK3gKKdSQd1l
rEjLkwZbh499SuJugPUdew3j9euB8pHrkPF6Ethu3bgl+n0VpL2IhaJLJIiS
7dqe9fk1Khl+82bjy3rQMTVN247ngRksuJe6E0Hlv9G6/Y8RONZZiD+1ocKb
t6EqgOjISHX9+7tKNUD05x3JeFEKE2I6XdEPXqEsvrMpulsJkG9rbKmN/WLs
90VBuwsNIEOUB1F8/kDVucvOfgQYor+8NDhGA6Fc9r1DiWS4p7vgasOkwPKl
vvvTCjT4uaF3r6EiBZ6GDRdXtVHA7L/J8z3cU0jFvTn7ywE6rP+3yTgggQaH
4XZmqxUN/vRdKj9hQQfTse9EchwduhMsBU+b0yEmVevq49NkGBZL+rfCTwHX
65cvlybjuVMe/Gt8iwgO3dM79xuQAOxpxnaIBGxtNu8wPIN3Rxq7XlAJnLna
/GsovQ44zrA/e/CUCJsnPq/e9i6GvbE9gfILxeBeXRbrI10P3JkSpRrPSVCc
xPqzfqweasOMJRbC8Dl897uUXaCAgs1/Y+UJ76As25bdWJcOVrKRttqUegjg
XzeYJ/ASaVzsHXL8R4GHhhsf3DtBBmWXZw6KeUQ40+1du7SJDFcMeA/ezSRC
QZiiWhPWKYH5Jf///ztnCRPpDxFFNfA768yutzk1sEdSqeFtPg38tv8Vb5do
gLrTPXK2eM4v7/3jOYt1nuZ7McRYmA4PDvY3Nz7KQ5dKJEcfSNXB7/OnT/xO
aIBrfG/u+85iv3ohM70mTISSxjNeWYca4EFtau6JCRIo+rbShk5gXwg6IqbO
XgdioT3U0VwiHKUzDGOxXlk6J155F0WC4z51W/UN6pBz5Qm9alca4o3xdJmh
E8H3FZ9Y/gMaXFy5etnOnAQWNWnXxpoaYEF1C9H4HAkqeLZMHbIiQZleC+k3
iQrvRI3vfZYZRm/0OfdFujQAcdhpxn4PCYhab+IbasnAmi6WTuirhMWQt1tc
oogQuFm6wBvfNyl0/NiFhkrYkXehRiuYBnvPXrHONsH1fsMnNcbMg+pr14+N
qNWD3I3lD3830UC8fyC8Q5oKY7PfE+KGquGV+Ju6fxzJiJziXthlQ4Tb953+
XL3UAIaix/idBYnAo95xb58s9tnsp7ckG+qh53nElqe/MAekJoq/IFRAsV5k
gIs5EQJOoY1tniTQXPe59pQkGTrck70p2HccW3+J15rPoIdH1H8/yiLBI0ei
AH9EC2qyrOdOXyGB0ru5tBSbSNgEVVGTZ2gg4OpwYsgP6xWZK/c5fl5Vw0oy
7GUD2L2UqynFc+H36sToQycqJPC+2W4WWA3f7w3YOeE5ybunSFQdmkNbuGuP
juH71bf8YDjIkqFPuFPuCw8Jcotjk4/ZEYFt6LWCUTgRNK2tqOpEEnA8uSP/
FX9uDFSRbokjA89090mFASqYXgrb+XaOCprO960i9bE+KU5mHOGthZHdNJqw
4Efgv+36gF2BCgtTEQYq5/CeLbZVfJagAjXkp3R6JA06t7CuCj6kol3FZGMe
9jmUs/mA2IxuPUTEaEzrmDfAWNz2tYrsH+CTxst9WGcSjbS/iZM6Sod3T81/
m09mwqjeo/f54gykOZXBzclOAYm385MHPZ7BjUbfVM+vRLi3gfT3cxMJ1hXI
Rk9FpkK86M6OvHwyKNgmJu1UqUU9745ODqVQsA5ps63f8gf9FJp6Hq5Nggnz
luBAzBOVFyoEBQRqIOeYgrDFCQrYVszOztSWQbuA+GGDvDr4gxKkczFnyx0u
GX9UgznMyqdfabEOIgMnY/7dqUTTYseGfsQ1QMViuMDuvHpgDvw8d+E1Ceit
21yqoncQ7lXxhljjOZaqLbbhrSOBnXvy18fGFWBcqH22S/cbzLPUVz+tkqBa
Z6b8kyLm5C3O2aQtNcCUXtjI85cG6yTfXngmRQYv8e/BAxfJoKuibyppQQSB
drLYMpkI6uv0OOUx1+4NnJ46fq8C5Ry23XP5Yy0oz/HOmIlXwLpPjFTrIBqs
pjQ/7HLBexEQX7E6QoTBasdsu2EqTMtO7HDZTAbC9q5k7SQ69ArNOfIUUKEo
ifNlQjIJTJ3H93AQ32J9PJTOdKGCracCbRvOCRFDAU0FAw3IVKy5qFEF87/L
/u4tH7+AwZoRI/Uj7j/VaaelHxGM1dgN3awroXxT37H33WSwnt8fvoTrPrIQ
f7LGgQRtnD/X7ZOoBIn1hAuqcmRIvdP1kPGvAab3LbjXnC4B7xo5F7Z91XBm
vOzvpE8JnDa+sv4X5qKTt9gzHPG9azXz1ac30kDi1vz1te9UdNsxuLAMz/vY
v+nfo5Z0KG7Jf+/GTYEdaCBYiD8TlcztPKCiQwOqkdF3tkckyPnkJ/+fFRmu
xr27lj2IffDp+pXfu6sge/uJk1H4/WqDn/6L1yfC7lEZKaMZEtzLM7EQOU8D
3tvSfYRBMoQGjee+7iuFwrM5LvYMIqTdDI24g/XoGlfqwk5zGhRaptEjV/+i
8sCD3ve8SHBUY/9qby3WRXW5bQM3MF9xpe48iTllg7WiQGxtCbg3oil7XDe0
W5Kmn0GAMV0b+lAlBda591L8ekvQsRGykmF/HTjxdIwGBZHh/VIE12mHBihq
ylX6dYgA6/33y02b0MA06Rk66EKCx1uFktfhvY56ZsrBg/mtvUymk2eUBJE3
D14KWyGCE6Nwrcy9AkoX3hSlK9TDufOCOt84SZAY2bdye30H8tMfP+l9nwZm
T3ovu59GsOjnYleIuclfbb9jXhIR8pefK+8xJsGvDUIS2qsMFOMd6n39KhmW
9/rOCmHu+2X5Njwc74t6Sunj3b+pcMX/hH9bCAlc/uxxXz1WC/+ZOh49+b4O
xGOUc99L4LkU4tnwcBcJ/l1763xdswZ2t9no7TUjg1Qou7qHPB/BU9CKz2rT
EDqtmRJgpd6E3o09idF6T4VRLf35X3jvLjB7vihkkOG30mzc/bwK9Ghbyu8m
zKfn5QQ5LXNa0HrrsqUHPkRo+o8l53aEAmflftkOh1PBxC//feWVj9DCe03W
U64apNSeUrqP0MCORdzsdrwG8pVvL8bJ0UHbz6xzKI8GOwVfbzz6hgjfyJQP
HjntqEs9fErUbAWBxZVwZy4ivGfG2hMwB3NbZ643oOI+vJzzW02sgxfJWQGx
cqkQ2eRpPrcbc+WXrNjDeZVg0OthrnymBB6saQ3NjtbD2kmlpnKtGsh7LV24
nUCC+CT1WU4JMrgc2+aRcKEaJKcqVzcVfQcPFZszt/6fpzeIToyrE+HKiUtO
chFEiN93Wad1MBJoLW935ik2QEDyW3V+7f/nENKo54964Cl31DjlgPXurJRJ
ggER5uumZp/eaIBCNYOYEcz7vY8MirvUMMc/ttWKlqaB+s/X1mdux0NVZlzg
fTkixF440OLkMIOUn80nf6gRJkTqqO4SDiGh9dX74u/HU4F/mx+FW6AK2HvL
Cz4kEIGzqc48NpwMIuJe67biOT3m+YpfN5EEofsaUv5F1IHZvbiKqBEqdMer
38vWwX1MmdcLkMmA3Vpd1z8+poCPiePlGW0iGB0lJVZiX3ziJSInl0iBNwYq
x3sHiCCXzqZh1lkKAbfzb289RoK1HdTjNyjYf6bpytM4t4mZPd6f4k+HYLNP
Vml8JHj2/IThpdVE6NUoEM5xoaO57zG5Xg9IYM4k2saRXqG7t0wUV6SJ8KPn
S2IM1stasW/lH7ufoHV/QtW9DchQ0hBXwon3b+XjkJzxF/y9NhOuTffr4FBe
BGlWuQp0kotKs6UqwIRdKeDELXbCI84xD3+tWsgZOnC/Evvupag9adpvsX71
qz00dcP7uVEu6PsRIniMVjFk8PyHkUsdfulQQM8/ePoZWz1Y3UoxHV9Hgv6D
W8hjz+qBK8ZzvN6nBv3nEbGW+Kocavf1ZMaNZaMAUvR861I93Ogw5nD/TQKy
aGli5NmfaI9TZxallwr7CcU1TMzB3tzNb3kfvYFtKT6Xq3G/hXrZOXQ3NIAp
pfukP6ka/imN3OPmGkL5ezJ+L4yTwdchXdQX73uLnI2Q1WMS6LEXKE68r4cv
h3Xt+HBd750194n3IcG5pQ1O2a9nkTxFTcPAvw6YfUfoU4s0eOZc0N7vSgQ6
ZU2Rj4MEJ+BftyLOoyzf2awtXFT46vzMarMGCeYFqYc4LckQkV0yavChCqZC
67e7YX3hN6hV/HqcDId5Qpz6VYmQkJfbpYQ56o/E8H8CTk3IroFpfqqUBFym
Qi6NljQYeidO/FOZApwB/Nssxang7W4+HCzWh1wbfUzEcf8Qp1dVAa7Ps30f
Wn09OtCbLR2K02E04M6X/vdclwD9Cz8PW87UQbzlvIXx/QYgWMV6TD+sA+Uc
kY8ZtnSofTzgxKFJhxdGGyr+JGH+KfT8z/ZBNCpQqpzf3UqDYsWye/kvf4Dp
zLonedhntAR8IjbhPL1a1VE78ZYMPzuH4g+w0YG8bc+qJc63F3x/mKrtoEPI
F8HX0pUjSLrP6qKeVSMKl31WmJyNoFTyS+AXwxpgvQqvVt+8jqDHrDTtL1xE
xlzf7+hYEkE5jRK/pb4enrdVy6nhfNv62OujuCT2xS2v3iQGU2Cvh1xH/uU2
dNn994IFzjXbFJ34ZCZJkCB4KCgIn4+j7RBH84n34PEi9EctKgEXvwPG9YtU
aFXcmO7JL0qQ4VD1G/lOAokMyzeqTRlw2bC3oiWQBitSZRvdxenAVdTSvOUg
DR592XHtkXAt7FJ+FKyxtxJt9qarhO0lQ/Ldc4Vn2xrAiPK2TqGwBtUL9wgX
NzeAQr6nBVtTCwr3GCtn9DCQ7RFnr8MXSPDaaEdhuhEZ59oPZunLBNjV2ykg
WEuFu0I9s8HYh+1z529wxZCgoH3+0xrm+UN2xQ9/N1OgU5T7jhrWXd2DJtcD
bpHAIE+jf0MBEfY4PTxLwn0/EttC/87ZANvPHGx9huuW81Jg7AXe7yNzkb2G
yv+Q0vGrZiKPGmBIJXS3tAQd3P6bSIiVroDQrdxOexOpcFtv926kSoI0/p+R
Fb8K4dCPr6IKXgRQkeG5EOZdChuXSLxF6enwK0Byi61tHTzYt+3aIJ4znl0a
a1ZLdTAgffdiTzHOV9XWCRodVOB7If4ixrMUYkw6Eq8s1IJ6hIcA++cGsPrF
4zOUjfflmrH58S0hIJKzaCWLddXrOUnwzCYSPB95M/pnCxk2DxrSBGPq4C+3
6sicLREOfD0VPpiB+TbhDBxOJwM1tkBm/mcVWOv+olW+oAL50lMxPXYivP6g
YJKSWA4c8ft51YXJIKMq9L7Ki50w87Ne+l8AHdSYxt3PTlXBdUPSNpGABpgk
uXfLpeF6b5gkbdIiwQaW+HfVgUa0+as1vxc3zkM8np1hyyQ4I3bnrmt1PmwY
YJUYDv1DMqW2b5Wx3mQtuJr80amA3WHb3/PivKecsl6BeBzr099mLZO1WrRL
26zZa7IOvt+KI8acIcJik/tKWhnOByEZdOGncZA1Gnn5I4MAAv58fR5e1Shv
c7TgQTwPFjNKvp24f2nJ6mmuQRSw2297Ky6wDhImfJ1T7tVAjarjea0WvB/X
NP5KtlDhm/+senpOA7QY+tVv3EiHiEyvlTCc6ybKu0PEjanQKMHpMZNPhYz8
ViGuvST4/Hnz9VHs07nP3zMTdzWAbEJ8TNlJOqy8Pre/9fQOwuO00hiZdako
O/xwOacyGZgqxttLxSoRh+BLiyee39DozrRP9xAVHrN+KHTeoMLHtOSre2fx
/XO61e+MEcFd+oOrUBcR+KIvql6Np8HV80ucqY5zaDG7RNXLigiuTttJdhap
sCQpe6FLuBlJv/JPy3CjQJmxxK8jWwKgtuLTaZkvP6BtO1vSklIhNJ9TWH+1
8C0SSqfWvNtFhGTPkX4rvHfplaHyz53YCU4V7Z6qrygglXpr3wctMng/d3i7
HefKw8U3mTxLH4DwIU5e/jgF/n6zOD+A5/PozT6vnl14Tm8ccz9vSwFhm+SE
S5+IICWiNimXSgF5nrriV/vqoW3TviA3zP3PdnYFBl19hfkvUDOCTIUywiau
5V8tqLswZoH6LA3WC8dX6k6QQJJm5F/bhv2kgRn5uKMK9AQl5TKiKFB7vLCr
Bvu5z7mj2ZyfMR+o39301PwzSr6mlmiO6zTJ/p8GzSYPQinzvqobvkJRz+zt
Q/doUNu+zereNZwLxDbqqcQXgsWhIvKd2Ro4+DSwO84WQWTscK/03TnUuM71
8w85GljkmTcIvKmE32fSn29dIEH5/qhis7NE0B96O7T2qhqsxe0zBLB+CLgf
MXdxIoMS+tVeo0OEzXXm2ycuEYHmTfB+5bCBsMLtwNnERoT0EBW/1WckEOba
x/58kgoDseKtVz2wT3vYxz3fTIc91fRLdIl6+Kp147HYz+/wpr375R6HjygE
WTw12UGDkI6z/1TptdD8yuy+SigVAqOPpRUcJcKLruoNooYk8HO/6JckRYLO
B/Lgm1EGkxeGzAYmJAnhwfdXzt3jJqxmLp+WlWkAdwXdf2f8a+FJsL9hzNZM
eEOsmjIQJEMCXzj9MdbLi58/eXEONcBR8ikPe0SDvgnCWYcaIgwHlu+INSPB
bMPiusy1OtidvCWR/pQKD1tdP+ljHS7Ytl29JpuJ3MB7TyD2X2dfH6EeIwLq
Dlh+OShMh4m8zdfYMS8uGwbzV9/EPK6jNdoUU4euyfxRy8B8aXiSNDv+6jsc
bYNVTsxLPm78px/i39Nv7K4WeUqA8WsDfy8+I4JQRX/lNvcGKP7hbpPUv5lg
7XJaxN5/GuVC45LaGubo7Oe7+wNIYOwk4J6uVAFDexOl9LaRIdMikjfeqg4l
XdUfio36hi7ZHt5Ju1ULX43F65urpxESmgoy+EGC5Ovm6Wc8F5HRXqZxaEEF
1IuD3jPMX3dFDIKH35Pg1Yf9R7Zj7ncPClo7AURIbBnQs2kmwCUuhqLDViKs
5jptCGVrRBwb3z4RwnlldoJN/kcyBYjpqieHnevh5q0qyh/LP+huX29+nR4J
dpcK2oqlJoFOpbxLkhoNwhaVVc4X4+eut5wT7MX6/mpD3Q+cs99vqfNWuUSH
TGp40EYBElAeHf3Ks48Iczwm3Y8aS2GJO65u5tcoygsXd9v97RssBh2UlLeq
hOh9lDIJXRoEHl+Nep6F9T7LhkuMmQXE4LalE1lEcAz5EWGtivnKKPXkgSAi
aB9l0M7RyKD5KYga0UICJ52FJ/HFNMhh/ndimygZ6mXjSnhxv76Iasg83sVO
kI48pU33JgGs4yGLeVbDQf2+n/KYe6W3yq/7p0gGTin+Ec+SBojq+3H1MfYj
s4MV9/42kWDufFZQEtZv62TDZf/b+WhmSOUW1ZcEzard01qWmBM/Jn41GiBB
ZUt0RfplzLUqPGuvm0mQ/o5v3/hwJBSJidVWYz4M33hhOToXPxcvqankR4Gi
vx8FblWSgFSiuJoljvM4EEJXDemwy6Ou3u1MLZCiMmkJRxqgnhZvri9IAjuf
jffm44jAmEyeC/uI8+WWM/cvGOG8un9hW09vPSgNPbq0Y+ErMN1TejeSKWBh
n3jW0GcdgT5s/vSk1yfodNpF2vmlFMye2Z6qxnklYjWpLgrz0+Xs9H5U24HM
F5e2HoscRLdkaTbiU3UwUzxx528m1u1D4hZpfxA0S59ZR2inQI7UVYrw8VG0
iXfssYNlKSQeNGIXW0eGz5T6C70RVBA++eDJKQYRFkRyCnnX10KTqaVVphvW
0zH7izUKQajIkYMr8lUNMNmvtTpvLUN3+5/tLHnPQ2C/61Hm41oFBmaaeWW+
RCjtM95uI/QdXnPznrGQbYCnjeHrCZhPpUcENSyK6+HQ8Rv2x4EOBoNdssb5
3+GdZcTpf2u4DvfPhB/gwHNk9ExMdaQOvl039NO7Q4Utwl8XCh/XQ2d8YLtz
PQ2U3z5rDsX3DCErvywPqoNuj6s3j2//AUuHd17QukSGwT/C/4J3EqE5493R
861UeJ32I2QNz3uwjojbi1oifHxi++Is9j1Deb2pKuVnyDz1waQXOxUOROfp
cAoXwLFr3TxJj2phf5F2adZFAnxVF3sYY4Pz9LLDLaWiKrD7oFPYok+D3wXC
wlPcJWB8RNVOb5wIhL3aaZLLM2jD8ed7L9RzEf4HW/IH8Q==
          "], CompressedData["
1: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
Lqj7ys9oov8B4aTxtg==
          "]}], "NeighborsNumber" -> 100, 
       "ClassPriors" -> {0.001990049751243781, 0.0059701492537313425`, 
        0.04378109452736318, 0.5034825870646766, 0.44477611940298506`}, 
       "TrainingOutput" -> CompressedData["
1:eJzFU0FOAzEMTOOxxJEv9BdcOXIt4gGt2FZcFmmLhPgxzyBxPI73BajbbDKx
xx7be7x8nq61lHJ/aMvp/P28beef18d2eFvvH7d1eX9Zv5bbsj1dDg38lVIA
aP9xkf7A3uo3bdPO2lE7QgzqL0fGKr6Dr7DHTMlCRAkPUtsdjE0qxCkBhIs0
NCyZR0eDlvE8eo4t489Yihl1kKESrsOZPO4QbtWVUClzJD/VUTDT0ZQZbxRB
QAlIAiko7hmP3t6XqUSx06TeRkke7EOvXcu4168bSk4lcneXipSvUvAUa2cb
DwGFq7i1zH7RYbYqRERS2MXIXbUBywPjBTUORlGGTIO4GwpyMmyU1Lk6LBoN
V2MDRMNoDsC4TaWNvRdsjgSywf98bX+Pvx5r
        "], "DistributionSmoothing" -> 0.5, "Processor" -> 
       MachineLearning`MLProcessor[
        "FirstValues", <|"Info" -> <|"Weight" -> CompressedData["
1:eJxTTMoPSmVkYGBwA+IM/YV7W75Nsh+lhwYdCgZHaUYzgMEHnDQAomYQVA==

             "], "Type" -> "NumericalVector"|>, "Key" -> 
          "(f6(f1f2)(f3f4f5f7))", "Invertibility" -> "Perfect", 
          "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "Calibrator" -> None, "Method" -> "NearestNeighbors", "PostProcessor" -> 
       MachineLearning`MLProcessor["Identity"], 
       "Options" -> <|
        "NeighborsNumber" -> <|"Value" -> 100, "Options" -> <||>|>, 
         "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
         "NearestMethod" -> <|"Value" -> "Scan", "Options" -> <||>|>|>|>, 
     "TrainingInformation" -> <|
      "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
       Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
       "PreprocessingTime" -> 0.418354`6.073088919248974, "LossName" -> 
       "MeanCrossEntropy", "BestModelInformation" -> 
       Dataset[<|
         "MeanCrossEntropy" -> 
          Around[0.8072386138416003, 0.020244417557342083`], "Accuracy" -> 
          Around[0.5459893673938094, 0.02469121329033473], "EvaluationTime" -> 
          0.000012349400314289931`, "TestSize" -> 800, "ModelMemory" -> 
          577240, "ModelUtility" -> -0.4841940028245755, "TrainingSize" -> 
          1000, "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
          13738400, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
            Around[0.8072386138416003, 0.014314964935968589`]}, 
          "AccuracyHistory" -> {
            Around[0.5459893673938094, 0.01745932435331909]}, 
          "Configuration" -> {
           "NearestNeighbors", "NeighborsNumber" -> Automatic, 
            "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}|>, 
         TypeSystem`Struct[{
          "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
           "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
           "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
           "AccuracyHistory", "Configuration"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`AnyType}]}], <||>], "Configurations" -> 
       Dataset[<|<|
           "Value" -> "NearestNeighbors", 
            "Options" -> <|
             "NeighborsNumber" -> <|"Value" -> Automatic|>, 
              "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
              "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.2740697419227336`, 0.10747985551947889`], "Accuracy" -> 
               Around[0.4991976465471883, 0.04983892446080182], 
               "EvaluationTime" -> 5.01187233627272*^-6, "TestSize" -> 200, 
               "ModelMemory" -> 13824, "ModelUtility" -> -0.9521430491093832, 
               "TrainingSize" -> 10, "TrainingTime" -> 0.003981071705534969, 
               "TrainingMemory" -> 92720, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.2740697419227336`, 0.0759997346787739]}, 
               "AccuracyHistory" -> {
                 Around[0.4991976465471883, 0.03524144145327706]}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.3166184342550955`, 0.13492604832101765`], "Accuracy" -> 
               Around[0.419992238760501, 0.06962939267631489], 
               "EvaluationTime" -> 5.01187233627272*^-6, "TestSize" -> 100, 
               "ModelMemory" -> 31000, "ModelUtility" -> -0.9885548952185483, 
               "TrainingSize" -> 40, "TrainingTime" -> 0.001995262314968879, 
               "TrainingMemory" -> 148784, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.3166184342550955`, 0.09540712372649536]}, 
               "AccuracyHistory" -> {
                 Around[0.419992238760501, 0.04923541573132319]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8715553594914197, 0.038307806186032516`], "Accuracy" -> 
               Around[0.46889095444678675`, 0.04953596545315289], 
               "EvaluationTime" -> 8.971641173621406*^-6, "TestSize" -> 200, 
               "ModelMemory" -> 121848, "ModelUtility" -> -0.5644971300864597,
                "TrainingSize" -> 200, "TrainingTime" -> 0.005011872336272719,
                "TrainingMemory" -> 1135264, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.8715553594914197, 0.027087709526523562`]}, 
               "AccuracyHistory" -> {
                 Around[0.46889095444678675`, 0.03502721708454696]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.8072386138416003, 0.020244417557342083`], "Accuracy" -> 
               Around[0.5459893673938094, 0.02469121329033473], 
               "EvaluationTime" -> 0.000012349400314289931`, "TestSize" -> 
               800, "ModelMemory" -> 577240, 
               "ModelUtility" -> -0.4841940028245755, "TrainingSize" -> 1000, 
               "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               13738400, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.8072386138416003, 0.014314964935968589`]}, 
               "AccuracyHistory" -> {
                 Around[0.5459893673938094, 0.01745932435331909]}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.7956719390072993, 0.015453999643939016`], "Accuracy" -> 
               Around[0.561198555379164, 0.018646573961953197`], 
               "EvaluationTime" -> 0.00002290476095849279, "TestSize" -> 700, 
               "ModelMemory" -> 2404232, 
               "ModelUtility" -> -0.5648767472034929, "TrainingSize" -> 4209, 
               "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
               17385792, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7956719390072993, 0.015453999643939016`]}, 
               "AccuracyHistory" -> {
                 Around[0.561198555379164, 0.018646573961953197`]}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00002290476095849279, "MeanCrossEntropy" -> 
              Around[0.7956719390072993, 0.015453999643939016`], 
              "ModelMemory" -> 2404232, "TrainingMemory" -> 17385792, 
              "TrainingTime" -> 0.08284699209779668|>, "Index" -> 1|>|>, 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
               "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
               "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory",
                "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Vector[TypeSystem`AnyType, 1], 
               TypeSystem`Vector[TypeSystem`AnyType, 1]}], 5], 
            
            TypeSystem`Struct[{
             "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
              "TrainingMemory", "TrainingTime"}, {
              TypeSystem`Atom[Real], TypeSystem`AnyType, 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real]}], 
            TypeSystem`Atom[Integer]}], 1], <||>], "MaxTrainingSize" -> 5261, 
       "PreprocessorEvaluationTime" -> 2.140625*^-6, "PreprocessorMemory" -> 
       194128, "InputDimension" -> 70, "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -0.8693687048950245, "VariableBudget" -> 
       True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
       False, "NaturalStop" -> True, "AbortStop" -> False, 
       "LastReportingTime" -> 3.879423231892094`16.34134215139692*^9, 
       "RoundPartitioning" -> 
       Dataset[{<|
          "TrainingSizes" -> 10, "TimeBudgets" -> 0.00014581070609212223`, 
           "ElapsedTimes" -> 0.006608, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 40, "TimeBudgets" -> 0.0007290535304606112, 
           "ElapsedTimes" -> 0.003907, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 200, "TimeBudgets" -> 0.0036452676523030555`, 
           "ElapsedTimes" -> 0.008838, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 1000, "TimeBudgets" -> 0.018226338261515273`, 
           "ElapsedTimes" -> 0.050588, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 4209, "TimeBudgets" -> 0.09113169130757635, 
           "ElapsedTimes" -> 0.087968, "ExperimentCounts" -> 1|>}, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> 
     None, "Log" -> <|
      "Example" -> 
       MachineLearning`MLDataset[<|
         "f1" -> <|
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"INDIA"}, "ID" -> 
            4840131171699015203|>, 
          "f2" -> <|
           "Type" -> "Nominal", "Weight" -> 1, 
            "Values" -> {"Information Technology"}, "ID" -> 
            5042234179079910413|>, 
          "f3" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.537}, "ID" -> 
            8143623558489070887|>, 
          "f4" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {10.982}, "ID" -> 
            7788679715678402894|>, 
          "f5" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.982}, "ID" -> 
            4867089090251939422|>, 
          "f6" -> <|
           "Type" -> "Text", "Weight" -> 1, "Values" -> {"Estimated data"}, 
            "ID" -> 1244584425521089410|>, 
          "f7" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {624.605427784142}, "ID" -> 824640885889355554|>|>, <|
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False|>], "TrainingTime" -> 0.600563, 
       "MaxTrainingMemory" -> 21221512, "DataMemory" -> 8209648, 
       "FunctionMemory" -> 851800, "LanguageVersion" -> {13.1, 0}, "Date" -> 
       DateObject[{2022, 12, 7, 17, 33, 52.060285`8.469081516268043}, 
         "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, "ProcessorType" -> 
       "ARM64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
       "Evaluations" -> {}|>|>]]]], "Output",
 CellChangeTimes->{
  3.878619160734618*^9, 3.8786192245310097`*^9, {3.878715800641226*^9, 
   3.87871584525163*^9}, 3.878715887355948*^9, 3.8788055501495533`*^9, 
   3.87880572388905*^9, 3.878806815602689*^9, 3.8788071767848167`*^9, 
   3.878811643047717*^9, 3.8791492159968452`*^9, {3.879325496945715*^9, 
   3.8793255053952217`*^9}, 3.879333028444346*^9, 3.879354712621949*^9, 
   3.87941963262143*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"8e80ecdb-f7b5-4111-ba5c-c14febc4d2f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cm", " ", "=", 
    RowBox[{"ClassifierMeasurements", "[", 
     RowBox[{"cRisk", ",", "testset"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Test", " ", "our", " ", "classifier", " ", "on", " ", "the", " ", "test", 
    " ", "set"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<The accuracy is: \>\"", ",", 
    RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}], " ", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "the", " ", "accuracy", " ", "of", " ", "our", " ", "model"}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"AccuracyAss", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"AccuracyAss", ",", " ", 
     RowBox[{"\"\<NearestNeighbors\>\"", "->", 
      RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "the", " ", "Confusion", " ", "Matrix"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.878619179671941*^9, 3.8786191833045883`*^9}, {
   3.8786192222213593`*^9, 3.878619249704307*^9}, {3.878619342065884*^9, 
   3.878619346687873*^9}, {3.878619378625424*^9, 3.8786193862338676`*^9}, 
   3.878805729554159*^9, 3.878805819596631*^9, {3.878806143346759*^9, 
   3.878806195391272*^9}, {3.878806763106118*^9, 3.878806811062291*^9}, {
   3.878806841172628*^9, 3.878806863962813*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"5e92e43d-3a8d-417e-8227-9da67103f984"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The accuracy is: \"\>", "\[InvisibleSpace]", 
   "0.5642585551330798`"}],
  SequenceForm["The accuracy is: ", 0.5642585551330798],
  Editable->False]], "Print",
 CellChangeTimes->{3.878806864557898*^9, 3.8788071796386433`*^9, 
  3.878811645673299*^9, 3.879149220880064*^9, 3.879161030587552*^9, 
  3.8793330325042353`*^9, 3.879354715679596*^9, 3.879419635165389*^9},
 CellLabel->
  "During evaluation of \
In[179]:=",ExpressionUUID->"201714ea-2656-4575-ac91-cd7e4b3375ef"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGwI+2FNKMx8LbH8V8tZ+1rdnK43EH9jXlWyoV2Qs
tOd9oDjtV/8be4WN6y/YZTyzf/JJ4PF+20sU24dOP6wSWef+8JY9zEcTG7ab
utq8tY9pZ7v0Pfyl/f+9x8WDb9ylmn2PphpclO57a+/h//yYWe8r+3WenAs6
BR7Zc+7zEQsMeWefe9rzj0HVW/slhXw2G9e8pJq9s/bsqbz0/639Non95S+s
3thvsK5oNM17RnN7cdG47AUAAg+gkw==
   "], {{0, 0}, {5, 5}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"C\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "C", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"D\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "D", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"E\"", "\" misclassified as \"", 
             "\"C\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "E", " misclassified as ", "C"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "9", "\" examples of \"", "\"B\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.007985803016858917`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.9`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{9, " examples of ", "B", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.007985803016858917}], 
         Row[{"Row fraction = ", 0.9}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["50", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "50", "\" examples of \"", "\"C\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.044365572315882874`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.9803921568627451`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{50, " examples of ", "C", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.044365572315882874`}], 
         Row[{"Row fraction = ", 0.9803921568627451}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["612", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "612", "\" examples of \"", "\"D\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.5430346051464063`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9175412293853074`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.6822742474916387`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{612, " examples of ", "D", " correctly classified"}], 
         Row[{"Precision = ", 0.5430346051464063}], 
         Row[{"Recall = ", 0.9175412293853074}], 
         Row[{"FScore = ", 0.6822742474916387}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["456", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "456", "\" examples of \"", "\"E\"", "\" misclassified as \"", 
             "\"D\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.4046140195208518`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.7781569965870307`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{456, " examples of ", "E", " misclassified as ", "D"}], 
         Row[{"Column fraction = ", 0.4046140195208518}], 
         Row[{"Row fraction = ", 0.7781569965870307}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.005319148936170213`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "A", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.005319148936170213}], 
         Row[{"Row fraction = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.005319148936170213`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.1`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "B", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.005319148936170213}], 
         Row[{"Row fraction = ", 0.1}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"C\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.005319148936170213`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0196078431372549`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "C", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.005319148936170213}], 
         Row[{"Row fraction = ", 0.0196078431372549}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["55", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "55", "\" examples of \"", "\"D\"", "\" misclassified as \"", 
             "\"E\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.2925531914893617`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.08245877061469266`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{55, " examples of ", "D", " misclassified as ", "E"}], 
         Row[{"Column fraction = ", 0.2925531914893617}], 
         Row[{"Row fraction = ", 0.08245877061469266}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["130", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "130", "\" examples of \"", "\"E\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.6914893617021277`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.22184300341296928`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.3359173126614987`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{130, " examples of ", "E", " correctly classified"}], 
         Row[{"Precision = ", 0.6914893617021277}], 
         Row[{"Recall = ", 0.22184300341296928`}], 
         Row[{"FScore = ", 0.3359173126614987}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "A"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "10", "\" example\"", "\"s\"", "\" of class \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{10, " example", "s", " of class ", "B"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "51", "\" example\"", "\"s\"", "\" of class \"", "\"C\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{51, " example", "s", " of class ", "C"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "667", "\" example\"", "\"s\"", "\" of class \"", "\"D\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9175412293853074`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{667, " example", "s", " of class ", "D"}], 
        Row[{"Recall = ", 0.9175412293853074}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "586", "\" example\"", "\"s\"", "\" of class \"", "\"E\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.22184300341296928`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{586, " example", "s", " of class ", "E"}], 
        Row[{"Recall = ", 0.22184300341296928`}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "A"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "B"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"C\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "C"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1127", "\" example\"", "\"s\"", "\" classified as \"", "\"D\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.5430346051464063`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1127, " example", "s", " classified as ", "D"}], 
        Row[{"Precision = ", 0.5430346051464063}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "188", "\" example\"", "\"s\"", "\" classified as \"", "\"E\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.6914893617021277`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{188, " example", "s", " classified as ", "E"}], 
        Row[{"Precision = ", 0.6914893617021277}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{4.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"C\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"D\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"E\"", BoxRotation -> 0.], TraditionalForm]}}, {{4.5, 
       FormBox["1", TraditionalForm]}, {3.5, 
       FormBox["10", TraditionalForm]}, {2.5, 
       FormBox["51", TraditionalForm]}, {1.5, 
       FormBox["667", TraditionalForm]}, {0.5, 
       FormBox["586", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["1127", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["188", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"C\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"D\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"E\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->13,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->228.,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.878619184460875*^9, 3.878619347255011*^9, 3.878619387156837*^9, 
   3.878715848704851*^9, {3.878715890521706*^9, 3.8787158953838463`*^9}, {
   3.878805538696899*^9, 3.878805553604134*^9}, 3.878806818221781*^9, 
   3.878806864604879*^9, 3.878807179681567*^9, 3.878811645716255*^9, 
   3.87914922092896*^9, 3.879161030778561*^9, 3.879333032551672*^9, 
   3.879354715717955*^9, 3.879419635228863*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"4722957b-ddb4-4bb5-8880-5dcd29caca8a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Network", "Subsection",
 CellChangeTimes->{{3.878618143305781*^9, 3.878618144962409*^9}, {
  3.8786189939708767`*^9, 3.8786190030333223`*^9}, {3.87871708806336*^9, 
  3.8787170907151747`*^9}},ExpressionUUID->"167a82f5-aa47-4220-90ca-\
39153e030b4f"],

Cell[CellGroupData[{

Cell["Encoding Data", "Subsubsection",
 CellChangeTimes->{{3.87871957306065*^9, 
  3.878719585487999*^9}},ExpressionUUID->"af6df2e6-1db6-4012-946a-\
f093b8cea41f"],

Cell["\<\
Categorical variables cannot be used directly in neural networks and must be \
encoded as arrays.
Therefore, we create \[OpenCurlyDoubleQuote]Class\[CloseCurlyDoubleQuote] \
encoders that encode the categorical variables as one-hot encoded vectors\
\>", "Text",
 CellChangeTimes->{
  3.878719595602223*^9, {3.87871982798316*^9, 
   3.878719847961817*^9}},ExpressionUUID->"231b4959-cb15-4d63-a49e-\
e3c934e96ca1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sectorEncoder", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Class\>\"", ",", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"datasetML", "[", 
        RowBox[{"All", ",", "\"\<GICS Sector Name\>\""}], "]"}], "]"}], "]"}],
      ",", "\"\<UnitVector\>\""}], "}"}], "]"}]}], "\n", 
 RowBox[{"disclosureEncoder", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Class\>\"", ",", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"datasetML", "[", 
        RowBox[{"All", ",", " ", "\"\<Carbon Disclosure\>\""}], "]"}], "]"}], 
      "]"}], ",", "\"\<UnitVector\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"countryEncoder", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Class\>\"", ",", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"datasetML", "[", 
        RowBox[{"All", ",", " ", "\"\<Country\>\""}], "]"}], "]"}], "]"}], 
     ",", "\"\<UnitVector\>\""}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.878719510991486*^9, 3.878719557128503*^9}, {
   3.878719695460547*^9, 3.878719697302268*^9}, {3.878719754708007*^9, 
   3.8787198129482393`*^9}, {3.878720175522973*^9, 3.878720185570636*^9}, {
   3.878722587877328*^9, 3.878722599416089*^9}, {3.878722879307081*^9, 
   3.878722879706128*^9}, {3.878724455305957*^9, 3.8787244800862913`*^9}, 
   3.878725378813992*^9, {3.87872541427944*^9, 3.878725477918508*^9}, {
   3.878810332977583*^9, 3.8788103344915447`*^9}, {3.8788119060859737`*^9, 
   3.878811919123225*^9}, {3.879149272745099*^9, 3.879149273071574*^9}, {
   3.8794177179495697`*^9, 3.879417728487172*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"2e8dbd1c-5f09-4c5e-9338-71b2c43249c3"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 11\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"\\\"Financials\\\"\"", ",", "\"\\\"Materials\\\"\"", 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",",
                     "\"\\\"Real Estate\\\"\""}], "}"}], 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Financials\"", ",", "\"Materials\"", ",", 
                    "\"Consumer Discretionary\"", ",", "\"Health Care\"", ",",
                     "\"Information Technology\"", ",", "\"Industrials\"", 
                    ",", "\"Consumer Staples\"", ",", "\"Utilities\"", ",", 
                    "\"Communication Services\"", ",", "\"Energy\"", ",", 
                    "\"Real Estate\""}], "}"}]], 
                    Annotation[#, {
                    "Financials", "Materials", "Consumer Discretionary", 
                    "Health Care", "Information Technology", "Industrials", 
                    "Consumer Staples", "Utilities", "Communication Services",
                     "Energy", "Real Estate"}, "Tooltip"]& ], Short], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"IndicatorVector\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 11\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8787195131639967`*^9, 3.878719538579525*^9}, 
   3.878719814955491*^9, 3.878719849094001*^9, 3.8787201868911448`*^9, {
   3.878722600153029*^9, 3.878722604373269*^9}, 3.8787226527964697`*^9, 
   3.878722881383275*^9, {3.878724466417713*^9, 3.878724480665699*^9}, {
   3.878724540332926*^9, 3.87872455913796*^9}, 3.878725321422592*^9, {
   3.878725379399231*^9, 3.8787254915835037`*^9}, 3.878725527069076*^9, 
   3.878726811463031*^9, 3.878807199244649*^9, 3.878810335757403*^9, {
   3.8788116503302193`*^9, 3.878811687851829*^9}, 3.8788118448568277`*^9, {
   3.87881191558842*^9, 3.8788119196165657`*^9}, 3.8791492737449017`*^9, 
   3.879161034434084*^9, 3.879325510256119*^9, 3.8793269442246923`*^9, 
   3.879333038844298*^9, 3.87935471801714*^9, 3.879417732230578*^9, 
   3.879419638492797*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"a8df58bf-2a6f-4b3b-9bd6-d15105ebb29b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"\\\"Value derived from data provided in Annual \
Report/Financial Accounts Disclosure\\\"\"", ",", 
                    RowBox[{"\"\\\"\"", "\[Ellipsis]", "\"P\\\"\""}], ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ",",
                     "\"\\\"Value derived from data provided in personal \
communication\\\"\""}], "}"}], 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Value derived from data provided in Annual \
Report/Financial Accounts Disclosure\"", ",", "\"Exact Value from CDP\"", ",",
                     "\"Value derived from data provided in CDP\"", ",", 
                    "\"Value summed up from data provided in Annual \
Report/Financial Accounts Disclosure\"", ",", 
                    "\"Exact Value from Annual Report/10K/Financial Accounts \
Disclosure\"", ",", 
                    "\"Estimate used instead of disclosure - data does not \
cover global operations\"", ",", "\"Estimated data\"", ",", 
                    "\"Value derived from data provided in \
Environmental/CSR\"", ",", "\"Exact Value from Environmental/CSR\"", ",", 
                    "\"Value derived from fuel use provided in CDP\"", ",", 
                    "\"Value derived from fuel use provided in Annual \
Report/Financial Accounts Disclosure\"", ",", 
                    "\"Derived from previous year\"", ",", 
                    "\"Value summed up from data provided in \
Environmental/CSR\"", ",", 
                    "\"Value split from data provided in Annual \
Report/Financial Accounts Disclosure\"", ",", 
                    "\"Value summed up from data provided in CDP\"", ",", 
                    "\"Value split from data provided in Environmental/CSR\"",
                     ",", "\"Exact Value from personal communication\"", ",", 
                    "\"Data approximated from chart/graph in Annual \
Report/10-K/Financial Accounts\"", ",", 
                    "\"Estimate based on partial data disclosure in Annual \
Report/10-K/Financial Accounts\"", ",", 
                    "\"Estimate based on partial data disclosure in \
Environmental/CSR\"", ",", 
                    "\"Value derived from fuel use provided in \
Environmental/CSR\"", ",", 
                    "\"Data approximated from chart/graph in Environmental \
Report/CSR Report/Website\"", ",", 
                    "\"Estimate used instead of disclosure - data is \
normalised and no aggregating factor is available\"", ",", 
                    "\"Estimate based on partial data disclosure in CDP\"", 
                    ",", "\"Value derived from data provided in personal \
communication\""}], "}"}]], 
                    Annotation[#, {
                    "Value derived from data provided in Annual \
Report/Financial Accounts Disclosure", "Exact Value from CDP", 
                    "Value derived from data provided in CDP", 
                    "Value summed up from data provided in Annual \
Report/Financial Accounts Disclosure", 
                    "Exact Value from Annual Report/10K/Financial Accounts \
Disclosure", 
                    "Estimate used instead of disclosure - data does not \
cover global operations", "Estimated data", 
                    "Value derived from data provided in Environmental/CSR", 
                    "Exact Value from Environmental/CSR", 
                    "Value derived from fuel use provided in CDP", 
                    "Value derived from fuel use provided in Annual \
Report/Financial Accounts Disclosure", "Derived from previous year", 
                    "Value summed up from data provided in Environmental/CSR",
                     "Value split from data provided in Annual \
Report/Financial Accounts Disclosure", 
                    "Value summed up from data provided in CDP", 
                    "Value split from data provided in Environmental/CSR", 
                    "Exact Value from personal communication", 
                    "Data approximated from chart/graph in Annual \
Report/10-K/Financial Accounts", 
                    "Estimate based on partial data disclosure in Annual \
Report/10-K/Financial Accounts", 
                    "Estimate based on partial data disclosure in \
Environmental/CSR", 
                    "Value derived from fuel use provided in \
Environmental/CSR", 
                    "Data approximated from chart/graph in Environmental \
Report/CSR Report/Website", 
                    "Estimate used instead of disclosure - data is normalised \
and no aggregating factor is available", 
                    "Estimate based on partial data disclosure in CDP", 
                    "Value derived from data provided in personal \
communication"}, "Tooltip"]& ], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"IndicatorVector\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8787195131639967`*^9, 3.878719538579525*^9}, 
   3.878719814955491*^9, 3.878719849094001*^9, 3.8787201868911448`*^9, {
   3.878722600153029*^9, 3.878722604373269*^9}, 3.8787226527964697`*^9, 
   3.878722881383275*^9, {3.878724466417713*^9, 3.878724480665699*^9}, {
   3.878724540332926*^9, 3.87872455913796*^9}, 3.878725321422592*^9, {
   3.878725379399231*^9, 3.8787254915835037`*^9}, 3.878725527069076*^9, 
   3.878726811463031*^9, 3.878807199244649*^9, 3.878810335757403*^9, {
   3.8788116503302193`*^9, 3.878811687851829*^9}, 3.8788118448568277`*^9, {
   3.87881191558842*^9, 3.8788119196165657`*^9}, 3.8791492737449017`*^9, 
   3.879161034434084*^9, 3.879325510256119*^9, 3.8793269442246923`*^9, 
   3.879333038844298*^9, 3.87935471801714*^9, 3.879417732230578*^9, 
   3.8794196385083427`*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"4f4968d5-4e80-415e-b97b-a5490c7300f0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 55\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"\\\"AUSTRIA\\\"\"", ",", "\"\\\"BELGIUM\\\"\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "52", "\[RightSkeleton]"}], 
                    ",", "\"\\\"ICELAND\\\"\""}], "}"}], 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"AUSTRIA\"", ",", "\"BELGIUM\"", ",", "\"IRELAND\"", 
                    ",", "\"SWITZERLAND\"", ",", "\"CHINA\"", ",", 
                    "\"GERMANY\"", ",", "\"DENMARK\"", ",", "\"SPAIN\"", ",", 
                    "\"FINLAND\"", ",", "\"FRANCE\"", ",", "\"NETHERLANDS\"", 
                    ",", "\"UNITED KINGDOM\"", ",", "\"SOUTH AFRICA\"", ",", 
                    "\"GREECE\"", ",", "\"ISRAEL\"", ",", "\"ITALY\"", ",", 
                    "\"NORWAY\"", ",", "\"PORTUGAL\"", ",", "\"SWEDEN\"", ",",
                     "\"LUXEMBOURG\"", ",", "\"PHILIPPINES\"", ",", 
                    "\"INDIA\"", ",", "\"HUNGARY\"", ",", "\"TURKEY\"", ",", 
                    "\"MALTA\"", ",", "\"UNITED ARAB EMIRATES\"", ",", 
                    "\"POLAND\"", ",", "\"EGYPT\"", ",", "\"KUWAIT\"", ",", 
                    "\"SLOVENIA\"", ",", "\"ESTONIA\"", ",", "\"CROATIA\"", 
                    ",", "\"QATAR\"", ",", "\"SAUDI ARABIA\"", ",", 
                    "\"JORDAN\"", ",", "\"MOROCCO\"", ",", "\"BAHRAIN\"", ",",
                     "\"ROMANIA\"", ",", "\"OMAN\"", ",", "\"TUNISIA\"", ",", 
                    "\"KENYA\"", ",", "\"NIGERIA\"", ",", "\"LEBANON\"", ",", 
                    "\"BULGARIA\"", ",", "\"UKRAINE\"", ",", "\"CYPRUS\"", 
                    ",", "\"MAURITIUS\"", ",", "\"TOGO\"", ",", "\"NAMIBIA\"",
                     ",", "\"SENEGAL\"", ",", "\"BOTSWANA\"", ",", 
                    "\"ZIMBABWE\"", ",", "\"CZECH REPUBLIC\"", ",", 
                    "\"GEORGIA\"", ",", "\"ICELAND\""}], "}"}]], 
                    Annotation[#, {
                    "AUSTRIA", "BELGIUM", "IRELAND", "SWITZERLAND", "CHINA", 
                    "GERMANY", "DENMARK", "SPAIN", "FINLAND", "FRANCE", 
                    "NETHERLANDS", "UNITED KINGDOM", "SOUTH AFRICA", "GREECE",
                     "ISRAEL", "ITALY", "NORWAY", "PORTUGAL", "SWEDEN", 
                    "LUXEMBOURG", "PHILIPPINES", "INDIA", "HUNGARY", "TURKEY",
                     "MALTA", "UNITED ARAB EMIRATES", "POLAND", "EGYPT", 
                    "KUWAIT", "SLOVENIA", "ESTONIA", "CROATIA", "QATAR", 
                    "SAUDI ARABIA", "JORDAN", "MOROCCO", "BAHRAIN", "ROMANIA",
                     "OMAN", "TUNISIA", "KENYA", "NIGERIA", "LEBANON", 
                    "BULGARIA", "UKRAINE", "CYPRUS", "MAURITIUS", "TOGO", 
                    "NAMIBIA", "SENEGAL", "BOTSWANA", "ZIMBABWE", 
                    "CZECH REPUBLIC", "GEORGIA", "ICELAND"}, "Tooltip"]& ], 
                   Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"IndicatorVector\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 55\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8787195131639967`*^9, 3.878719538579525*^9}, 
   3.878719814955491*^9, 3.878719849094001*^9, 3.8787201868911448`*^9, {
   3.878722600153029*^9, 3.878722604373269*^9}, 3.8787226527964697`*^9, 
   3.878722881383275*^9, {3.878724466417713*^9, 3.878724480665699*^9}, {
   3.878724540332926*^9, 3.87872455913796*^9}, 3.878725321422592*^9, {
   3.878725379399231*^9, 3.8787254915835037`*^9}, 3.878725527069076*^9, 
   3.878726811463031*^9, 3.878807199244649*^9, 3.878810335757403*^9, {
   3.8788116503302193`*^9, 3.878811687851829*^9}, 3.8788118448568277`*^9, {
   3.87881191558842*^9, 3.8788119196165657`*^9}, 3.8791492737449017`*^9, 
   3.879161034434084*^9, 3.879325510256119*^9, 3.8793269442246923`*^9, 
   3.879333038844298*^9, 3.87935471801714*^9, 3.879417732230578*^9, 
   3.879419638515876*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"dfd907f6-7ca6-49ce-8449-b57447f2d332"]
}, Open  ]],

Cell["Applying the encoders to class labels produces unit vectors", "Text",
 CellChangeTimes->{
  3.878719892174232*^9},ExpressionUUID->"4d8415d2-03cc-48ed-aee2-\
c53a40dd79be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sectorEncoder", "/@", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Normal", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"All", ",", "\"\<GICS Sector Name\>\""}], "]"}], "]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disclosureEncoder", "/@", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Normal", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"All", ",", "\"\<Carbon Disclosure\>\""}], "]"}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"countryEncoder", "/@", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Normal", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"All", ",", "\"\<Country\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.878719903392746*^9, 3.878719957267705*^9}, {
  3.8787201932620077`*^9, 3.878720203671546*^9}, {3.878722873636928*^9, 
  3.878722874481845*^9}, {3.878724509008936*^9, 3.8787245215822353`*^9}, {
  3.8787246795733337`*^9, 3.878724683635604*^9}, {3.87872529713558*^9, 
  3.878725307439637*^9}, {3.878725411938355*^9, 3.878725443890374*^9}, {
  3.8787255199919357`*^9, 3.878725524438147*^9}, {3.8787259904186707`*^9, 
  3.8787260709203444`*^9}, {3.878726753600051*^9, 3.8787267771256866`*^9}, {
  3.878726808576733*^9, 3.878726816110383*^9}, {3.878810325968855*^9, 
  3.878810327249482*^9}, {3.8794177441694613`*^9, 3.8794177533148603`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"0b8e8eb7-f51e-4c87-bb31-bd641db423ae"],

Cell["Applying the Decoder to class labels that we want to predict", "Text",
 CellChangeTimes->{{3.8787267717815857`*^9, 3.8787267979689217`*^9}, 
   3.878807200429632*^9},ExpressionUUID->"a21c5f12-ea36-4f7b-9a81-\
5804c3f222f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ratingsDecoder", " ", "=", " ", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Class\>\"", ",", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"datasetML", "[", 
         RowBox[{"All", ",", " ", "\"\<Ratings\>\""}], "]"}], "]"}], "]"}]}], 
     " ", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.878726818243514*^9, 3.8788103282336187`*^9, 
  3.878811943039888*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"c367e224-5d5f-4cad-8e0d-a2c397b5c8a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create a Network", "Subsubsection",
 CellChangeTimes->{{3.87871957306065*^9, 3.878719585487999*^9}, {
  3.8787200083687477`*^9, 
  3.878720013962109*^9}},ExpressionUUID->"988cb0f7-88bc-42af-8fce-\
d6f30b501fca"],

Cell["\<\
Create a network with an input corresponding to each feature and using a \
\[OpenCurlyDoubleQuote]Categorize\[CloseCurlyDoubleQuote] decoder to \
interpret the output of the net
The input features are first concatenated together before being further \
processed.\
\>", "Text",
 CellChangeTimes->{{3.8787200350499887`*^9, 3.8787200467022676`*^9}, {
  3.878810420414648*^9, 
  3.878810456142879*^9}},ExpressionUUID->"8cb8e66e-cdad-4527-820a-\
8cedc6abee3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CatenateLayer", "[", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "]"}], ",", "LogisticSigmoid"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<GICS Sector Name\>\"", "]"}], ",", 
         RowBox[{"NetPort", "[", "\"\<Country\>\"", "]"}], ",", 
         RowBox[{
         "NetPort", "[", 
          "\"\<Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\>\"", "]"}], ",", 
         RowBox[{
         "NetPort", "[", 
          "\"\<Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\>\"", "]"}], ",", 
         RowBox[{
         "NetPort", "[", 
          "\"\<Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\>\"", "]"}], ",", 
         RowBox[{"NetPort", "[", "\"\<Carbon Disclosure\>\"", "]"}], ",", 
         RowBox[{"NetPort", "[", "\"\<Revenue (USD mn)\>\"", "]"}]}], "}"}], "->",
        "1"}], ",", 
      RowBox[{"1", "->", 
       RowBox[{"2", "->", 
        RowBox[{"3", "->", 
         RowBox[{"NetPort", "[", "\"\<Ratings\>\"", "]"}]}]}]}]}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<GICS Sector Name\>\"", "->", "sectorEncoder"}], ",", 
    RowBox[{
    "\"\<Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\>\"", "->", 
     "\"\<Scalar\>\""}], ",", 
    RowBox[{
    "\"\<Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\>\"", "->", 
     "\"\<Scalar\>\""}], ",", 
    RowBox[{
    "\"\<Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\>\"", "->", 
     "\"\<Scalar\>\""}], ",", 
    RowBox[{"\"\<Carbon Disclosure\>\"", "->", "disclosureEncoder"}], ",", 
    RowBox[{"\"\<Country\>\"", "->", "countryEncoder"}], ",", 
    RowBox[{"\"\<Revenue (USD mn)\>\"", "->", "\"\<Scalar\>\""}], ",", 
    RowBox[{"\"\<Ratings\>\"", "->", "ratingsDecoder"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878720051420597*^9, 3.878720051425008*^9}, {
   3.878720083151984*^9, 3.878720136502512*^9}, {3.878720349837907*^9, 
   3.8787205487838097`*^9}, {3.8787208848753977`*^9, 3.878720891481406*^9}, 
   3.878723218987296*^9, 3.878724657828973*^9, 3.878724701983767*^9, 
   3.878725446922914*^9, 3.8787260823840933`*^9, {3.8791610732655783`*^9, 
   3.879161084518241*^9}, {3.879329477939612*^9, 3.879329479181963*^9}, {
   3.879330492144099*^9, 3.879330523371623*^9}, {3.879330604349607*^9, 
   3.879330607979247*^9}, {3.879417773881233*^9, 3.8794177795225573`*^9}, {
   3.879417812135602*^9, 3.879417821788159*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"14ea714b-552d-4cab-b1a4-42b227f9b31a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Ratings\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Carbon Di..\"", "\"Carbon Disclosure\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Carbon Disclosure", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999919615308, 
                    3.00000008038469}], 
                    
                    Offset[{0, -13.5}, {-2.999999919615308, 
                    3.00000008038469}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Carbon In..\"", 
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                    "Tooltip"]& ], TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Carbon In..\"", 
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                    "Tooltip"]& ], TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999464102047`, 
                    2.0000001071795874`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Carbon In..\"", 
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                    "Tooltip"]& ], TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999196153078`, 
                    3.0000001071795874`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Country\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999998928204104`, 
                    4.000000107179587}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"GICS Sect..\"", "\"GICS Sector Name\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "GICS Sector Name", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999998660255134`, 
                    5.000000107179586}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Revenue (..\"", "\"Revenue (USD mn)\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Revenue (USD mn)", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999998392306164`, 
                    6.000000107179586}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    
                    Offset[{0, -13.5}, {-1.9999999196153082`, 
                    3.000000053589793}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{0, -13.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Ratings\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {8.038469108735353*^-8, 
                    2.999999999999999}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"25\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019}, {-3.4790568996283615`, 
                    1.5628292687083438`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.3162277914367091,
                     0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592804, 
                    2.459674907063232}, {-3.4559016434844807`, 
                    2.08819669372554}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660422,
                     0.8944271790168734}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-3.4499999316730117`, 
                    2.550000092442394}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193576586097`*^-7, 
                    5.499999999999999}, {-3.4499999196153084`, 
                    3.0000000924423937`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897411974723`*^-8}], 
                    InsetBox[
                    FormBox["\"55\"", TraditionalForm], 
                    
                    Offset[{3.889087400733705, 
                    3.889087192318315}, {-3.449999907557604, 
                    3.4500000924423935`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396936, -0.7071068001334009}], 
                    InsetBox[
                    FormBox["\"11\"", TraditionalForm], 
                    
                    Offset[{4.919349616406269, 
                    2.459674643436303}, {-3.4559015946211247`, 
                    3.911803491475518}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721357153387326`, -0.894427202982958}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{5.217758185880922, 
                    1.7392525732833155`}, {-3.479056822610673, 
                    4.437170917733599}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622774059696646`, -0.948683306523804}], 
                    InsetBox[
                    FormBox["\"95\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999999}, {-2.4499999196153084`, 
                    3.0000000656474968`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-1.4499999196153084`, 
                    3.0000000388525994`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-0.44999991961530866`, 
                    3.000000012057703}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794896967885513`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Carbon Disclosure\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 25\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Carbon Disclosure", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999464102047`, 
                    2.0000001071795874`}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999196153078`, 
                    3.0000001071795874`}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999998928204104`, 
                    4.000000107179587}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 55\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Country\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 55\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Country", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999998660255134`, 
                    5.000000107179586}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 11\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"GICS Sector Name\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 11\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"GICS Sector Name", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999998392306164`, 
                    6.000000107179586}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Revenue (USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input7\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Revenue (USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input7"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999919615308, 
                    3.00000008038469}, {-1.9999999196153082`, 
                    3.000000053589793}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 95\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 95\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999196153082`, 
                    3.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999196153085, 3.000000026794896}, {
                    8.038469108735353*^-8, 2.999999999999999}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Ratings\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Ratings"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4790568996283615`, 
                    1.5628292687083438`}, {-0.25, 0}, 
                    Offset[8], {1.0000000803846905`, 2.9999999732051017`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Carbon Disclosure\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 25\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Carbon Disclosure", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4559016434844807`, 
                    2.08819669372554}, {-0.25, 0}, 
                    Offset[8], {1.0000000535897935`, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4499999316730117`, 
                    2.550000092442394}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4499999196153084`, 
                    3.0000000924423937`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897411974716`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999907557604, 
                    3.4500000924423935`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051021, -1.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 55\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Country\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 55\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Country", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4559015946211247`, 
                    3.911803491475518}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102052, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 11\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"GICS Sector Name\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 11\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"GICS Sector Name", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.479056822610673, 
                    4.437170917733599}, {-0.25, 0}, 
                    Offset[8], {0.9999999196153082, -3.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Revenue (USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input7\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Revenue (USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input7"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999196153084`, 
                    3.0000000656474968`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 95\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 95\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999196153084`, 
                    3.0000000388525994`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999991961530866`, 
                    3.000000012057703}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Ratings\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Ratings"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Carbon Disclosure\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Carbon Disclosure", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-2.999999919615308, 3.00000008038469}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.3], 
                    
                    LineBox[{{-0.2, 0.2}, {-0.1, 0.2}, {0., 
                    0.}, {-0.1, -0.2}, {-0.2, -0.2}}], 
                    LineBox[{{0., 0.}, {0.2, 0.}}], 
                    LineBox[{{0.125, 0.075}, {0.2, 0.}, {0.125, -0.075}}]}, 
                    ImageSize -> 16], {-2.999999919615308, 
                    3.00000008038469}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CatenateLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    CatenateLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", Bold,
                     StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style[
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", Bold]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999464102047`, 2.0000001071795874`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", Bold,
                     StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style[
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", Bold]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999196153078`, 3.0000001071795874`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", Bold,
                     StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style[
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", Bold]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999998928204104`, 4.000000107179587}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Country\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Country", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999998660255134`, 5.000000107179586}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"GICS Sector Name\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["GICS Sector Name", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999998392306164`, 6.000000107179586}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Revenue (USD mn)\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Revenue (USD mn)", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999196153082`, 
                    3.000000053589793}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999196153082`, 
                    3.000000053589793}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    GrayLevel[0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-1.9999999196153082`, 3.000000053589793}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-0.9999999196153085, 3.000000026794896}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm2toFFcUx7faRtNnrMVa+ggtCCr6RUkb/ZI0FF9UaFPGap479965oYjR
rkZtPzRSELFgIbSljZVWXWcmqFA/hFIfoEFUJLH91Ar2Qy2ljYigqTGEvvR/
NpuwOzub3e0+5q47f7i7O7szy5nfnnPPfZx9kW2sl1MCgcDm6Xio17e9Ggrp
771VgQOtffM7be2GWNm+xWgzQtVsKt5chPYG2oMB5bXaawOKXD6/7OTzy04F
5ce59bQQ4WrO7bcNbr0rhL3bEPZXeH0Mr88Y3P4Bxz+jDRbSriyUN37BoDmH
c1MHk8/B4zzakDR67qbb8mVXjpUzfpqmTRXCXA4/+gLMfsuEVSnzQzw+h/jb
STGXLbNS4iebD7xgGPZeKey/0mUCxn9SH4drvhHC+gS++j6eDfSH9Wi1Mhhe
RHEvG8PP5PIm86iM+bW2fj0dDHaAxUgKVsNSWMdx7geGbq9sadn/bD5uwGNl
xA/54GX4zuWk3IR9C7G8j/pBTessy5fRCiltfjTegE/9ncTXriAWpXy9++F8
GqugUvJbsaJrGuLQTMLtmsEsRrm3EMYqqEn5Sa37CTDqc2WH3NHYGH68UIYq
qqT8OP/ySbAbcPG5m+gH/XnfmFw5IMdWRMYZifnhsq6bLxXaSIWVwK+p6eAj
NN9yYXe2ocGc4YWRCiuOH+UBcOpNjFnrVAnm1nQUx4/m+i79XZ+m7Sn3ykDF
NcEP86gNLuwGGNv3mJcGKq4IP0M3XwOrfxzsriKPzPbaQMW1mrFDlWB1w8Fu
SNfD8702TnWVlZXXI19ccrD7F+O7VV7bVgxaupSdTBincHu713YVgyQ3xfJl
HXHshLCPem1XMYjWKRGno3H8MLfwc21qjc1rrV+I2Tg/sLzt54t01DkFY+Tv
xn1ugh8z13ptWTGI9nli+7sIP2F3eW1XMQjzizXOXFtbs/5Hubj7Ia9tU11C
mIsT9nuE/UdFxfMtXtumuqLzi0HHGHmUMXNJwK9/mVTNzQdmItf+5IxbjPOC
0VN8fklEexPws34XdrtjTvP5uSi6/n7BZR20Bx8/EHOqz88hWnOC333vspZ3
gvYiHaf7/GIkg4cW0rpdYsxa52hfw+USn19UBrObMSa5477+/umjSS4reX7w
q1lS9BxOUo/Sm2Lfp2T5UR0UcmmIanbc2OGzz9Koqyg5fpH1E25tRVz+nqQm
ZSRmfJdKJcEvUofCzLW0vklzh0lq7vo5t+dl8NX3HT+qm2Ps4ALJ7Qbw+hhM
Ljr3xtzq7pBjN9XUdGb6lx3l+VH/TnNQ8gsjGK7CfdahvUl1X+DTgVj8CHzC
GNuepnXNlKzi/W2YrpfrzKf+p3nK80uXRSYtWq/YkYN6lKLgR+uU2ba62var
r1Q1HamsrAoFxu47F+3DHH5XPlrG/gff+g/92a+I8W+lsHZRrFMfkJtfM0HK
+x94XCcetL9F+THSz3HrGI7343kP7bfS/3Qks5fJVnMujesKaJ7y/BSXzy87
+fzuc90D7bU4NA==
                    "], {{0, 25.}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.}, 
                    PlotRange -> {{0, 40.}, {0, 25.}}, ImageSize -> 20], 
                    TraditionalForm]], {-0.9999999196153085, 
                    3.000000026794896}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{8.038469108735353*^-8, 2.999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Ratings\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Ratings", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999919615308, 
                    3.00000008038469}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-3.9999999464102047`, 
                    2.0000001071795874`}, {-3.9999999196153078`, 
                    3.0000001071795874`}, {-3.9999998928204104`, 
                    4.000000107179587}, {-3.9999998660255134`, 
                    5.000000107179586}, {-3.9999998392306164`, 
                    6.000000107179586}, {-1.9999999196153082`, 
                    3.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}, {8.038469108735353*^-8, 
                    2.999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 8, 8, 8, 8, 8, 21, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {278.9999985262806, 369.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29.499994105122653`, 29.5}, {25., 15.}},
                     ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"GICS Sector Name\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"GICS Sector Name\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"GICS Sector Name"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"GICS Sector Name\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"GICS Sector Name"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Country\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Country\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Country"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Country\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Country"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    FrameStyle -> GrayLevel[0, 0], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    ToString[{
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                    InputForm]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    
                    RowBox[{"{", 
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    "}"}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    FrameStyle -> GrayLevel[0, 0], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    ToString[{
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"}, 
                    InputForm]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    
                    RowBox[{"{", 
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    "}"}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    FrameStyle -> GrayLevel[0, 0], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    ToString[{
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"}, 
                    InputForm]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    
                    RowBox[{"{", 
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    "}"}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Carbon Disclosure\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Carbon Disclosure\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Carbon Disclosure"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Carbon Disclosure\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Carbon Disclosure"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Revenue (USD mn)\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Revenue (USD mn)\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Revenue (USD mn)"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Revenue (USD mn)\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Revenue (USD mn)"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Ratings\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Ratings\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Ratings"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Ratings\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Ratings"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "1" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{11}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{55}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "Input4" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Input5" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "Input6" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input7" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{95}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{5, 95}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 95, "$InputDimensions" -> {95}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{95}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "GICS Sector Name" -> <|
                    "Form" -> NeuralNetworks`TensorT[{11}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> Tooltip[{"\"Financials\"", "\"Materials\"", 
                    Skeleton[8], "\"Real Estate\""}, {
                    "Financials", "Materials", "Consumer Discretionary", 
                    "Health Care", "Information Technology", "Industrials", 
                    "Consumer Staples", "Utilities", "Communication Services",
                     "Energy", "Real Estate"}], "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 11, "$Version" -> "13.1.4"|>, 
                    "Country" -> <|"Form" -> NeuralNetworks`TensorT[{55}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> Tooltip[{"\"AUSTRIA\"", "\"BELGIUM\"", 
                    Skeleton[52], "\"ICELAND\""}, {
                    "AUSTRIA", "BELGIUM", "IRELAND", "SWITZERLAND", "CHINA", 
                    "GERMANY", "DENMARK", "SPAIN", "FINLAND", "FRANCE", 
                    "NETHERLANDS", "UNITED KINGDOM", "SOUTH AFRICA", "GREECE",
                     "ISRAEL", "ITALY", "NORWAY", "PORTUGAL", "SWEDEN", 
                    "LUXEMBOURG", "PHILIPPINES", "INDIA", "HUNGARY", "TURKEY",
                     "MALTA", "UNITED ARAB EMIRATES", "POLAND", "EGYPT", 
                    "KUWAIT", "SLOVENIA", "ESTONIA", "CROATIA", "QATAR", 
                    "SAUDI ARABIA", "JORDAN", "MOROCCO", "BAHRAIN", "ROMANIA",
                     "OMAN", "TUNISIA", "KENYA", "NIGERIA", "LEBANON", 
                    "BULGARIA", "UKRAINE", "CYPRUS", "MAURITIUS", "TOGO", 
                    "NAMIBIA", "SENEGAL", "BOTSWANA", "ZIMBABWE", 
                    "CZECH REPUBLIC", "GEORGIA", "ICELAND"}], "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 55, "$Version" -> "13.1.4"|>, 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.1.4"|>, 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.1.4"|>, 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.1.4"|>, 
                    "Carbon Disclosure" -> <|
                    "Form" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> Tooltip[{
                    "\"Value derived from data provided in Annual \
Report/Financial Accounts Disclosure\"", "\"Exact Value from CDP\"", 
                    Skeleton[22], 
                    "\"Value derived from data provided in personal \
communication\""}, {
                    "Value derived from data provided in Annual \
Report/Financial Accounts Disclosure", "Exact Value from CDP", 
                    "Value derived from data provided in CDP", 
                    "Value summed up from data provided in Annual \
Report/Financial Accounts Disclosure", 
                    "Exact Value from Annual Report/10K/Financial Accounts \
Disclosure", 
                    "Estimate used instead of disclosure - data does not \
cover global operations", "Estimated data", 
                    "Value derived from data provided in Environmental/CSR", 
                    "Exact Value from Environmental/CSR", 
                    "Value derived from fuel use provided in CDP", 
                    "Value derived from fuel use provided in Annual \
Report/Financial Accounts Disclosure", "Derived from previous year", 
                    "Value summed up from data provided in Environmental/CSR",
                     "Value split from data provided in Annual \
Report/Financial Accounts Disclosure", 
                    "Value summed up from data provided in CDP", 
                    "Value split from data provided in Environmental/CSR", 
                    "Exact Value from personal communication", 
                    "Data approximated from chart/graph in Annual \
Report/10-K/Financial Accounts", 
                    "Estimate based on partial data disclosure in Annual \
Report/10-K/Financial Accounts", 
                    "Estimate based on partial data disclosure in \
Environmental/CSR", 
                    "Value derived from fuel use provided in \
Environmental/CSR", 
                    "Data approximated from chart/graph in Environmental \
Report/CSR Report/Website", 
                    "Estimate used instead of disclosure - data is normalised \
and no aggregating factor is available", 
                    "Estimate based on partial data disclosure in CDP", 
                    "Value derived from data provided in personal \
communication"}], "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 25, "$Version" -> 
                    "13.1.4"|>, 
                    "Revenue (USD mn)" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.1.4"|>|>, 
                    "Outputs" -> <|
                    "Ratings" -> <|
                    "Form" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{"\"D\"", "\"E\"", 
                    Skeleton[2], "\"A\""}, {"D", "E", "C", "B", "A"}], 
                    "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                    5, "$Rank" -> 0, "$Version" -> "13.1.4"|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "GICS Sector Name"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Country"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Carbon Disclosure"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input7"] -> 
                    NeuralNetworks`NetPath["Inputs", "Revenue (USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Ratings"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Carbon Disclosure"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Inputs", "Country"], 
                    NeuralNetworks`NetPath["Inputs", "GICS Sector Name"], 
                    NeuralNetworks`NetPath["Inputs", "Revenue (USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "Ratings"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Carbon Disclosure"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Inputs", "Country"], 
                    NeuralNetworks`NetPath["Inputs", "GICS Sector Name"], 
                    NeuralNetworks`NetPath["Inputs", "Revenue (USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "Ratings"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8787205504770603`*^9, {3.878720886103607*^9, 3.8787208935777817`*^9}, 
   3.878722665121871*^9, {3.878723217105832*^9, 3.87872322051511*^9}, {
   3.878724686696789*^9, 3.8787247023725758`*^9}, 3.8787253265518827`*^9, 
   3.8787253897763*^9, {3.878725424468122*^9, 3.87872548506365*^9}, 
   3.878725530059272*^9, 3.8787261003232718`*^9, 3.878726821386449*^9, 
   3.878807209605792*^9, 3.8788103408935747`*^9, {3.878811665104473*^9, 
   3.878811695031193*^9}, 3.8788118518267317`*^9, 3.878811949922965*^9, 
   3.879149316995925*^9, 3.8791610455150433`*^9, 3.87916108597993*^9, 
   3.87932554330888*^9, 3.879327152266754*^9, 3.879330493930929*^9, 
   3.8793305239563293`*^9, 3.879330608876268*^9, 3.879333046453142*^9, 
   3.879354723612504*^9, 3.8794178248276243`*^9, 3.879419643831319*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"d47094f4-993d-4cbb-9cc4-16fda1f6fa68"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training the Net", "Subsubsection",
 CellChangeTimes->{{3.878723326833516*^9, 
  3.878723337087538*^9}},ExpressionUUID->"99246540-7d26-482a-814f-\
c78318188484"],

Cell[TextData[{
 "Train the net on the training data. NetTrain will automatically attach a \
Cross Entropy Loss layer to the output of the net\nWe set up two parameters:\n\
- \[OpenCurlyDoubleQuote]",
 StyleBox["Max",
  FontWeight->"Bold"],
 " ",
 StyleBox["Training",
  FontWeight->"Bold"],
 " ",
 StyleBox["Rounds",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]: is an option that specifies how many times to \
traverse the training data\n- \[OpenCurlyDoubleQuote]",
 StyleBox["Learning",
  FontWeight->"Bold"],
 " ",
 StyleBox["Rate",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]: is an option that specifies the rate at which to \
adjust neural net weights in order to minimize the training loss."
}], "Text",
 CellChangeTimes->{{3.8787264716665154`*^9, 3.878726490862109*^9}, {
  3.878810714496086*^9, 3.87881076971*^9}, {3.878810871069847*^9, 
  3.878810881237308*^9}},ExpressionUUID->"7be345d5-6033-4892-8119-\
db0692a1b24f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "trainingset", ",", "All", ",", 
     RowBox[{"MaxTrainingRounds", "->", "1000"}], ",", " ", 
     RowBox[{"LearningRate", "->", "0.01"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"netTrained", "=", 
  RowBox[{"results", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.87872334170339*^9, 3.8787233675617456`*^9}, {
   3.8787240381723833`*^9, 3.8787240409329233`*^9}, 3.878724080194976*^9, {
   3.8787241385126467`*^9, 3.87872414244069*^9}, {3.878726154132513*^9, 
   3.878726162524501*^9}, {3.87872620718442*^9, 3.8787262230165863`*^9}, {
   3.878726501400774*^9, 3.878726517612896*^9}, {3.878810514967195*^9, 
   3.878810608388391*^9}, {3.87881067318223*^9, 3.878810710209969*^9}, {
   3.878810787168318*^9, 3.8788108059277887`*^9}, {3.878810924092107*^9, 
   3.878810949323271*^9}, {3.8791616822350883`*^9, 3.879161685742979*^9}, {
   3.879161802578738*^9, 3.879161805138054*^9}, {3.879162086212549*^9, 
   3.8791620862730007`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"1f19a39f-3020-4330-b84d-cdd628f2f64c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Ratings\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Carbon Di..\"", "\"Carbon Disclosure\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Carbon Disclosure", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999919615308, 
                    3.00000008038469}], 
                    
                    Offset[{0, -13.5}, {-2.999999919615308, 
                    3.00000008038469}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Carbon In..\"", 
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                    "Tooltip"]& ], TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Carbon In..\"", 
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                    "Tooltip"]& ], TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999464102047`, 
                    2.0000001071795874`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Carbon In..\"", 
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                    "Tooltip"]& ], TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999196153078`, 
                    3.0000001071795874`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Country\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999998928204104`, 
                    4.000000107179587}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"GICS Sect..\"", "\"GICS Sector Name\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "GICS Sector Name", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999998660255134`, 
                    5.000000107179586}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Revenue (..\"", "\"Revenue (USD mn)\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Revenue (USD mn)", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999998392306164`, 
                    6.000000107179586}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    
                    Offset[{0, -13.5}, {-1.9999999196153082`, 
                    3.000000053589793}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{0, -13.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Ratings\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {8.038469108735353*^-8, 
                    2.999999999999999}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"25\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019}, {-3.4790568996283615`, 
                    1.5628292687083438`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.3162277914367091,
                     0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592804, 
                    2.459674907063232}, {-3.4559016434844807`, 
                    2.08819669372554}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660422,
                     0.8944271790168734}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-3.4499999316730117`, 
                    2.550000092442394}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193576586097`*^-7, 
                    5.499999999999999}, {-3.4499999196153084`, 
                    3.0000000924423937`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897411974723`*^-8}], 
                    InsetBox[
                    FormBox["\"55\"", TraditionalForm], 
                    
                    Offset[{3.889087400733705, 
                    3.889087192318315}, {-3.449999907557604, 
                    3.4500000924423935`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396936, -0.7071068001334009}], 
                    InsetBox[
                    FormBox["\"11\"", TraditionalForm], 
                    
                    Offset[{4.919349616406269, 
                    2.459674643436303}, {-3.4559015946211247`, 
                    3.911803491475518}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721357153387326`, -0.894427202982958}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{5.217758185880922, 
                    1.7392525732833155`}, {-3.479056822610673, 
                    4.437170917733599}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622774059696646`, -0.948683306523804}], 
                    InsetBox[
                    FormBox["\"95\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999999}, {-2.4499999196153084`, 
                    3.0000000656474968`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-1.4499999196153084`, 
                    3.0000000388525994`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-0.44999991961530866`, 
                    3.000000012057703}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794896967885513`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Carbon Disclosure\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 25\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Carbon Disclosure", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999464102047`, 
                    2.0000001071795874`}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999196153078`, 
                    3.0000001071795874`}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999998928204104`, 
                    4.000000107179587}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 55\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Country\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 55\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Country", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999998660255134`, 
                    5.000000107179586}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 11\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"GICS Sector Name\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 11\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"GICS Sector Name", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999998392306164`, 
                    6.000000107179586}, {-2.999999919615308, 
                    3.00000008038469}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Revenue (USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input7\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Revenue (USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input7"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999919615308, 
                    3.00000008038469}, {-1.9999999196153082`, 
                    3.000000053589793}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 95\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 95\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999196153082`, 
                    3.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999196153085, 3.000000026794896}, {
                    8.038469108735353*^-8, 2.999999999999999}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Ratings\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Ratings"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4790568996283615`, 
                    1.5628292687083438`}, {-0.25, 0}, 
                    Offset[8], {1.0000000803846905`, 2.9999999732051017`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Carbon Disclosure\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 25\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Carbon Disclosure", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4559016434844807`, 
                    2.08819669372554}, {-0.25, 0}, 
                    Offset[8], {1.0000000535897935`, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4499999316730117`, 
                    2.550000092442394}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4499999196153084`, 
                    3.0000000924423937`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897411974716`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999907557604, 
                    3.4500000924423935`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051021, -1.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 55\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Country\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 55\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Country", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4559015946211247`, 
                    3.911803491475518}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102052, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 11\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"GICS Sector Name\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 11\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"GICS Sector Name", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.479056822610673, 
                    4.437170917733599}, {-0.25, 0}, 
                    Offset[8], {0.9999999196153082, -3.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Revenue (USD mn)\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input7\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Revenue (USD mn)", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input7"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999196153084`, 
                    3.0000000656474968`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 95\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 95\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999196153084`, 
                    3.0000000388525994`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999991961530866`, 
                    3.000000012057703}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Ratings\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Ratings"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Carbon Disclosure\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Carbon Disclosure", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-2.999999919615308, 3.00000008038469}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.3], 
                    
                    LineBox[{{-0.2, 0.2}, {-0.1, 0.2}, {0., 
                    0.}, {-0.1, -0.2}, {-0.2, -0.2}}], 
                    LineBox[{{0., 0.}, {0.2, 0.}}], 
                    LineBox[{{0.125, 0.075}, {0.2, 0.}, {0.125, -0.075}}]}, 
                    ImageSize -> 16], {-2.999999919615308, 
                    3.00000008038469}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CatenateLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    CatenateLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", Bold,
                     StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style[
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)", Bold]}], 
                    "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999464102047`, 2.0000001071795874`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", Bold,
                     StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style[
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)", Bold]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999196153078`, 3.0000001071795874`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", Bold,
                     StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style[
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)", Bold]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999998928204104`, 4.000000107179587}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Country\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Country", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999998660255134`, 5.000000107179586}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"GICS Sector Name\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["GICS Sector Name", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999998392306164`, 6.000000107179586}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Revenue (USD mn)\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Revenue (USD mn)", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999196153082`, 
                    3.000000053589793}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999196153082`, 
                    3.000000053589793}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-1.9999999196153082`, 3.000000053589793}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-0.9999999196153085, 3.000000026794896}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm2toFFcUx7faRtNnrMVa+ggtCCr6RUkb/ZI0FF9UaFPGap479965oYjR
rkZtPzRSELFgIbSljZVWXWcmqFA/hFIfoEFUJLH91Ar2Qy2ljYigqTGEvvR/
NpuwOzub3e0+5q47f7i7O7szy5nfnnPPfZx9kW2sl1MCgcDm6Xio17e9Ggrp
771VgQOtffM7be2GWNm+xWgzQtVsKt5chPYG2oMB5bXaawOKXD6/7OTzy04F
5ce59bQQ4WrO7bcNbr0rhL3bEPZXeH0Mr88Y3P4Bxz+jDRbSriyUN37BoDmH
c1MHk8/B4zzakDR67qbb8mVXjpUzfpqmTRXCXA4/+gLMfsuEVSnzQzw+h/jb
STGXLbNS4iebD7xgGPZeKey/0mUCxn9SH4drvhHC+gS++j6eDfSH9Wi1Mhhe
RHEvG8PP5PIm86iM+bW2fj0dDHaAxUgKVsNSWMdx7geGbq9sadn/bD5uwGNl
xA/54GX4zuWk3IR9C7G8j/pBTessy5fRCiltfjTegE/9ncTXriAWpXy9++F8
GqugUvJbsaJrGuLQTMLtmsEsRrm3EMYqqEn5Sa37CTDqc2WH3NHYGH68UIYq
qqT8OP/ySbAbcPG5m+gH/XnfmFw5IMdWRMYZifnhsq6bLxXaSIWVwK+p6eAj
NN9yYXe2ocGc4YWRCiuOH+UBcOpNjFnrVAnm1nQUx4/m+i79XZ+m7Sn3ykDF
NcEP86gNLuwGGNv3mJcGKq4IP0M3XwOrfxzsriKPzPbaQMW1mrFDlWB1w8Fu
SNfD8702TnWVlZXXI19ccrD7F+O7VV7bVgxaupSdTBincHu713YVgyQ3xfJl
HXHshLCPem1XMYjWKRGno3H8MLfwc21qjc1rrV+I2Tg/sLzt54t01DkFY+Tv
xn1ugh8z13ptWTGI9nli+7sIP2F3eW1XMQjzizXOXFtbs/5Hubj7Ia9tU11C
mIsT9nuE/UdFxfMtXtumuqLzi0HHGHmUMXNJwK9/mVTNzQdmItf+5IxbjPOC
0VN8fklEexPws34XdrtjTvP5uSi6/n7BZR20Bx8/EHOqz88hWnOC333vspZ3
gvYiHaf7/GIkg4cW0rpdYsxa52hfw+USn19UBrObMSa5477+/umjSS4reX7w
q1lS9BxOUo/Sm2Lfp2T5UR0UcmmIanbc2OGzz9Koqyg5fpH1E25tRVz+nqQm
ZSRmfJdKJcEvUofCzLW0vklzh0lq7vo5t+dl8NX3HT+qm2Ps4ALJ7Qbw+hhM
Ljr3xtzq7pBjN9XUdGb6lx3l+VH/TnNQ8gsjGK7CfdahvUl1X+DTgVj8CHzC
GNuepnXNlKzi/W2YrpfrzKf+p3nK80uXRSYtWq/YkYN6lKLgR+uU2ba62var
r1Q1HamsrAoFxu47F+3DHH5XPlrG/gff+g/92a+I8W+lsHZRrFMfkJtfM0HK
+x94XCcetL9F+THSz3HrGI7343kP7bfS/3Qks5fJVnMujesKaJ7y/BSXzy87
+fzuc90D7bU4NA==
                    "], {{0, 25.}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.}, 
                    PlotRange -> {{0, 40.}, {0, 25.}}, ImageSize -> 20], 
                    TraditionalForm]], {-0.9999999196153085, 
                    3.000000026794896}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{8.038469108735353*^-8, 2.999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Ratings\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Ratings", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999919615308, 
                    3.00000008038469}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-3.9999999464102047`, 
                    2.0000001071795874`}, {-3.9999999196153078`, 
                    3.0000001071795874`}, {-3.9999998928204104`, 
                    4.000000107179587}, {-3.9999998660255134`, 
                    5.000000107179586}, {-3.9999998392306164`, 
                    6.000000107179586}, {-1.9999999196153082`, 
                    3.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}, {8.038469108735353*^-8, 
                    2.999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 8, 8, 8, 8, 8, 21, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {278.9999985262806, 369.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29.499994105122653`, 29.5}, {25., 15.}},
                     ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"GICS Sector Name\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"GICS Sector Name\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"GICS Sector Name"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"GICS Sector Name\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"GICS Sector Name"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Country\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Country\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Country"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Country\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Country"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    FrameStyle -> GrayLevel[0, 0], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    ToString[{
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}, 
                    InputForm]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    
                    RowBox[{"{", 
                    "\"Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)\"", 
                    "}"}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    FrameStyle -> GrayLevel[0, 0], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    ToString[{
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"}, 
                    InputForm]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    
                    RowBox[{"{", 
                    "\"Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)\"", 
                    "}"}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    FrameStyle -> GrayLevel[0, 0], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    ToString[{
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"}, 
                    InputForm]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    
                    RowBox[{"{", 
                    "\"Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)\"", 
                    "}"}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Carbon Disclosure\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Carbon Disclosure\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Carbon Disclosure"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Carbon Disclosure\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Carbon Disclosure"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Revenue (USD mn)\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Revenue (USD mn)\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Revenue (USD mn)"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Revenue (USD mn)\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Revenue (USD mn)"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Ratings\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Ratings\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Ratings"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Ratings\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Ratings"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "1" -> <|"Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{11}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{55}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "Input4" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Input5" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "Input6" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input7" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{95}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{5, 95}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{5}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 95, "$InputDimensions" -> {95}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{95}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "GICS Sector Name" -> <|
                    "Form" -> NeuralNetworks`TensorT[{11}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> Tooltip[{"\"Financials\"", "\"Materials\"", 
                    Skeleton[8], "\"Real Estate\""}, {
                    "Financials", "Materials", "Consumer Discretionary", 
                    "Health Care", "Information Technology", "Industrials", 
                    "Consumer Staples", "Utilities", "Communication Services",
                     "Energy", "Real Estate"}], "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 11, "$Version" -> "13.1.4"|>, 
                    "Country" -> <|"Form" -> NeuralNetworks`TensorT[{55}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> Tooltip[{"\"AUSTRIA\"", "\"BELGIUM\"", 
                    Skeleton[52], "\"ICELAND\""}, {
                    "AUSTRIA", "BELGIUM", "IRELAND", "SWITZERLAND", "CHINA", 
                    "GERMANY", "DENMARK", "SPAIN", "FINLAND", "FRANCE", 
                    "NETHERLANDS", "UNITED KINGDOM", "SOUTH AFRICA", "GREECE",
                     "ISRAEL", "ITALY", "NORWAY", "PORTUGAL", "SWEDEN", 
                    "LUXEMBOURG", "PHILIPPINES", "INDIA", "HUNGARY", "TURKEY",
                     "MALTA", "UNITED ARAB EMIRATES", "POLAND", "EGYPT", 
                    "KUWAIT", "SLOVENIA", "ESTONIA", "CROATIA", "QATAR", 
                    "SAUDI ARABIA", "JORDAN", "MOROCCO", "BAHRAIN", "ROMANIA",
                     "OMAN", "TUNISIA", "KENYA", "NIGERIA", "LEBANON", 
                    "BULGARIA", "UKRAINE", "CYPRUS", "MAURITIUS", "TOGO", 
                    "NAMIBIA", "SENEGAL", "BOTSWANA", "ZIMBABWE", 
                    "CZECH REPUBLIC", "GEORGIA", "ICELAND"}], "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 55, "$Version" -> "13.1.4"|>, 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.1.4"|>, 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.1.4"|>, 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.1.4"|>, 
                    "Carbon Disclosure" -> <|
                    "Form" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> Tooltip[{
                    "\"Value derived from data provided in Annual \
Report/Financial Accounts Disclosure\"", "\"Exact Value from CDP\"", 
                    Skeleton[22], 
                    "\"Value derived from data provided in personal \
communication\""}, {
                    "Value derived from data provided in Annual \
Report/Financial Accounts Disclosure", "Exact Value from CDP", 
                    "Value derived from data provided in CDP", 
                    "Value summed up from data provided in Annual \
Report/Financial Accounts Disclosure", 
                    
                    "Exact Value from Annual Report/10K/Financial Accounts \
Disclosure", 
                    "Estimate used instead of disclosure - data does not \
cover global operations", "Estimated data", 
                    "Value derived from data provided in Environmental/CSR", 
                    "Exact Value from Environmental/CSR", 
                    "Value derived from fuel use provided in CDP", 
                    "Value derived from fuel use provided in Annual \
Report/Financial Accounts Disclosure", "Derived from previous year", 
                    "Value summed up from data provided in Environmental/CSR",
                     "Value split from data provided in Annual \
Report/Financial Accounts Disclosure", 
                    "Value summed up from data provided in CDP", 
                    "Value split from data provided in Environmental/CSR", 
                    "Exact Value from personal communication", 
                    "Data approximated from chart/graph in Annual \
Report/10-K/Financial Accounts", 
                    "Estimate based on partial data disclosure in Annual \
Report/10-K/Financial Accounts", 
                    "Estimate based on partial data disclosure in \
Environmental/CSR", 
                    "Value derived from fuel use provided in \
Environmental/CSR", 
                    "Data approximated from chart/graph in Environmental \
Report/CSR Report/Website", 
                    "Estimate used instead of disclosure - data is normalised \
and no aggregating factor is available", 
                    "Estimate based on partial data disclosure in CDP", 
                    "Value derived from data provided in personal \
communication"}], "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 25, "$Version" -> 
                    "13.1.4"|>, 
                    "Revenue (USD mn)" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.1.4"|>|>, 
                    "Outputs" -> <|
                    "Ratings" -> <|
                    "Form" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{"\"D\"", "\"E\"", 
                    Skeleton[2], "\"A\""}, {"D", "E", "C", "B", "A"}], 
                    "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                    5, "$Rank" -> 0, "$Version" -> "13.1.4"|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "GICS Sector Name"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Country"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Carbon Disclosure"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input7"] -> 
                    NeuralNetworks`NetPath["Inputs", "Revenue (USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Ratings"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Carbon Disclosure"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Inputs", "Country"], 
                    NeuralNetworks`NetPath["Inputs", "GICS Sector Name"], 
                    NeuralNetworks`NetPath["Inputs", "Revenue (USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "Ratings"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Carbon Disclosure"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 1 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 2 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath[
                    "Inputs", 
                    "Carbon Intensity-Scope 3 (tonnes CO2e/USD mn)"], 
                    NeuralNetworks`NetPath["Inputs", "Country"], 
                    NeuralNetworks`NetPath["Inputs", "GICS Sector Name"], 
                    NeuralNetworks`NetPath["Inputs", "Revenue (USD mn)"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "Ratings"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.878726129928315*^9, 3.878726168428197*^9}, {
   3.8787262156484528`*^9, 3.87872622961639*^9}, {3.878726512796131*^9, 
   3.878726522953801*^9}, 3.8788072152668047`*^9, 3.878810347274686*^9, {
   3.87881054488463*^9, 3.878810614535725*^9}, {3.878810679069372*^9, 
   3.878810716436698*^9}, {3.87881079352073*^9, 3.878810811943788*^9}, 
   3.878810893326872*^9, {3.878810929803438*^9, 3.8788109548774137`*^9}, {
   3.878811673755396*^9, 3.878811702022273*^9}, 3.8788118587791557`*^9, 
   3.8788119571211853`*^9, 3.87914947438482*^9, 3.879161051423369*^9, 
   3.8791610966238823`*^9, 3.879161813483426*^9, 3.8791620972581587`*^9, 
   3.879325551253036*^9, 3.879327159161799*^9, 3.8793305040313253`*^9, 
   3.879330615587932*^9, 3.879333052316928*^9, 3.879354787980659*^9, 
   3.879417899585849*^9, 3.879419857581071*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"97ec9589-6f93-4bd2-be5a-dea1a4ac2258"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing the Trained Neural Network", "Subsubsection",
 CellChangeTimes->{{3.878726643694363*^9, 
  3.8787266533838167`*^9}},ExpressionUUID->"d901b0fe-9ce0-49d2-8e3b-\
639446d55d30"],

Cell["Plot the accuracy of the Neural Network on the Test Set", "Text",
 CellChangeTimes->{{3.878726714067416*^9, 3.878726732353978*^9}, {
  3.8787275933293257`*^9, 
  3.878727603654995*^9}},ExpressionUUID->"0f267815-5b34-49df-b044-\
4d26ff756c83"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<The accuracy is: \>\"", ",", 
   RowBox[{"NetMeasurements", "[", 
    RowBox[{"netTrained", ",", "testset", ",", "\"\<Accuracy\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccuracyAss", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"AccuracyAss", ",", " ", 
     RowBox[{"\"\<NeuralNetwork\>\"", "->", 
      RowBox[{"NetMeasurements", "[", 
       RowBox[{"netTrained", ",", "testset", ",", "\"\<Accuracy\>\""}], 
       "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.878726605514142*^9, 3.878726617155772*^9}, 
   3.8787275887903347`*^9, {3.8788072618505507`*^9, 3.8788072659244833`*^9}, {
   3.878808579828779*^9, 3.8788085937210493`*^9}, {3.878808694140306*^9, 
   3.8788087103939*^9}, {3.878809380337645*^9, 3.8788093840805483`*^9}, {
   3.8788095453820143`*^9, 3.8788095671976147`*^9}, {3.879162093711692*^9, 
   3.879162102949932*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"deb6a3ce-1b71-4899-8dd5-f97cc198ad11"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The accuracy is: \"\>", "\[InvisibleSpace]", 
   "0.8174904915429794`"}],
  SequenceForm["The accuracy is: ", 0.8174904915429794],
  Editable->False]], "Print",
 CellChangeTimes->{{3.878811676406455*^9, 3.87881170464396*^9}, 
   3.8788118611968727`*^9, 3.878811959898769*^9, {3.8791494767883453`*^9, 
   3.879149479841407*^9}, 3.879161787171857*^9, 3.879161832965918*^9, 
   3.8791621042697678`*^9, 3.879325553839388*^9, 3.87932716134907*^9, 
   3.879330505917506*^9, 3.879330617631846*^9, 3.879333055380248*^9, 
   3.8793547909013653`*^9, 3.8794179036585083`*^9, 3.8794198658041973`*^9},
 CellLabel->
  "During evaluation of \
In[193]:=",ExpressionUUID->"b7ad3303-f5bf-411b-81f2-f6be1a341e77"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparing Accuracies", "Subsection",
 CellChangeTimes->{{3.878810999599156*^9, 
  3.87881101388165*^9}},ExpressionUUID->"f64bedb0-e15f-4b5c-a1ee-\
62184bc03531"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Sort", "[", "AccuracyAss", "]"}], ",", " ", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"Keys", "[", "AccuracyAss", "]"}]}], ",", " ", 
   RowBox[{"BarOrigin", "->", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.878811025981831*^9, 3.878811028862319*^9}, {
   3.878811082183075*^9, 3.878811133392282*^9}, {3.878811171674322*^9, 
   3.878811252198371*^9}, 3.878811291695615*^9, {3.878811486032049*^9, 
   3.878811491626598*^9}, {3.879332964647192*^9, 3.879332973313635*^9}, {
   3.8793332278274717`*^9, 3.879333229014473*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"b63792d8-88da-43de-b740-10156776cce8"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.45075018208302986`}, {0., 5.451201747997087}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6649999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5487982520029133}, {0.5642585551330798, 
             1.4512017479970867`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{103.75, 276.3292032374312}, {38.76149613948632, 
            65.67027935662892}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5642585551330798]& ,
         TagBoxNote->"0.5642585551330798"],
        StyleBox["0.5642585551330798`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5642585551330798, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5487982520029133`}, {0.5733840304182508, 
             2.4512017479970867`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{103.75, 279.1121553113519}, {9.496557191030476, 
            36.40534040817308}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5733840304182508]& ,
         TagBoxNote->"0.5733840304182508"],
        StyleBox["0.5733840304182508`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5733840304182508, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.5487982520029133`}, {0.5809885931558935, 
             3.4512017479970867`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{103.75, 
            281.4312820396192}, {-19.768381757425374`, 7.140401459717225}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5809885931558935]& ,
         TagBoxNote->"0.5809885931558935"],
        StyleBox["0.5809885931558935`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5809885931558935, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.5487982520029133`}, {0.6083650190114067, 
             4.451201747997087}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{103.75, 
            289.78013826138135`}, {-49.03332070588124, -22.124537488738625`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6083650190114067]& ,
         TagBoxNote->"0.6083650190114067"],
        StyleBox["0.6083650190114067`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6083650190114067, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.548798252002913}, {0.8174904915429794, 
             5.451201747997087}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{103.75, 
            353.55612244897964`}, {-78.29825965433707, -51.389476437194475`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8174904915429794]& ,
         TagBoxNote->"0.8174904915429794"],
        StyleBox["0.8174904915429794`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8174904915429794, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0., 0.45075018208302986`}, {0., 5.551210779315368}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0., 0.5487982520029133}, 
           Offset[{-6., 0.}, {0., 0.5487982520029133}]}], 
         LineBox[{{0., 5.451201747997087}, 
           Offset[{-6., 0.}, {0., 
            5.451201747997087}]}], {{}, {}, {}, {}, {}, {
           LineBox[{{0., 1.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 1.4512017479970867`}]}], 
           LineBox[{{0., 1.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 1.5487982520029133`}]}], 
           LineBox[{{0., 2.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 2.4512017479970867`}]}], 
           LineBox[{{0., 2.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 2.5487982520029133`}]}], 
           LineBox[{{0., 3.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 3.4512017479970867`}]}], 
           LineBox[{{0., 3.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 3.5487982520029133`}]}], 
           LineBox[{{0., 4.451201747997087}, 
             Offset[{-4., 0.}, {0., 4.451201747997087}]}], 
           LineBox[{{0., 4.548798252002913}, 
             Offset[{-4., 0.}, {0., 4.548798252002913}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"LogisticRegression\"\>", Offset[{-2, 0}, {0., 1.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"RandomForest\"\>", Offset[{-2, 0}, {0., 2.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"SupportVectorMachine\"\>", Offset[{-2, 0}, {0., 3.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"NearestNeighbors\"\>", Offset[{-2, 0}, {0., 4.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"NeuralNetwork\"\>", Offset[{-2, 0}, {0., 5.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.45075018208302986`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{
  3.878811133888937*^9, 3.878811175820257*^9, {3.878811210339319*^9, 
   3.8788112458324823`*^9}, 3.878811292309379*^9, 3.878811493093472*^9, 
   3.878811970869577*^9, 3.87914948452833*^9, 3.879332973829427*^9, 
   3.879333056912201*^9, 3.879333230530974*^9, 3.879354792678876*^9, 
   3.8794198673102837`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"74b53371-72f1-44af-b7bd-261eb04b391c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nobs"], "Input",
 CellChangeTimes->{{3.879417974281196*^9, 3.8794179786998663`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"ca04980b-a877-486f-9fa9-c771ae2f2fd9"],

Cell[BoxData["2865"], "Output",
 CellChangeTimes->{3.879417979205873*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"4efc0329-4d99-46e4-ab29-b564de6d974d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiment", "Subsection",
 CellChangeTimes->{{3.879334226156754*^9, 
  3.879334228076641*^9}},ExpressionUUID->"e6bab7d5-c5c1-47ab-b369-\
a2847676231e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"probaTestRes", " ", "=", " ", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"probaTest", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "-", 
         RowBox[{"probaTest", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "^", "2"}], "&"}], " ", "/@", 
     RowBox[{"Range", "[", "4", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.879328884646504*^9},ExpressionUUID->"8d14ef17-2a6b-4f14-a7c4-\
a8eba0470d45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probaTestset", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"netTrained", "[", 
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"testset", "[", 
        RowBox[{"[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"1", ";;", "6"}]}], "]"}], "]"}]}], ",", " ", 
      "\"\<Probabilities\>\""}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "testset", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8791619429818*^9, 3.879161954609281*^9}, {
  3.879162042321109*^9, 3.879162050076744*^9}, {3.879162118284605*^9, 
  3.879162141907312*^9}, {3.879162176882243*^9, 3.879162244974175*^9}, {
  3.879162329584804*^9, 3.879162406840211*^9}, {3.8791624473658123`*^9, 
  3.879162464993911*^9}, {3.8791625157925673`*^9, 3.8791625211288643`*^9}, {
  3.8793264765619383`*^9, 3.8793264810870943`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"647f2859-772b-46af-8879-4af283343275"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.09074581414461136`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.04478267580270767`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.003265876555815339`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.9999276399612427`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "2.4035836077018757`*^-7"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "1.1714661536896026`*^-16"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.9570074677467346`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "6.928027573849249`*^-8"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "6.462579968427459`*^-21"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "7.082799963478499`*^-28"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.904574990272522`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "6.364949967974098`*^-6"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.9999985694885254`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "1.352378278807187`*^-11"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "1.6913730338738284`*^-20"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.15117231011390686`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.9989238381385803`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "1.6076025133315852`*^-7"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.5578960180282593`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.00009703246178105474`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.6933250427246094`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "2.4995029595473736`*^-15"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.8244775533676147`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "6.373289396233162`*^-11"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "1.3142901046234983`*^-22"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.0021528934594243765`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "4.5962972938982475`*^-27"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.00004750672815134749`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "1.2683048662892879`*^-17"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.00003123212809441611`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "2.2474617184254582`*^-18"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "5.241511517189199`*^-35"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "2.1537858885596667`*^-30"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.2584087016875856`*^-7"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "1.9731990293005847`*^-13"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.9135748744010925`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.00011041463585570455`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "6.607169423275973`*^-33"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "3.4966524570113887`*^-19"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.000599023827817291`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "2.1935633753855655`*^-7"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.614212691783905`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.0011588974157348275`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "4.192461834933472`*^-16"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.9857790470123291`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.00002862624933186453`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "4.2878421392976794`*^-38"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.879162195111423*^9, 3.8791622459498043`*^9}, {
   3.879162337482966*^9, 3.879162407738915*^9}, 3.8791624658924713`*^9, 
   3.879162521843843*^9, 3.8793256218336687`*^9, 3.879328323340159*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"1bcd810c-d545-4daf-a3d6-d3e4f67ca5df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probaTestset", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"probaTestset", "[", 
      RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "probaTestset", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.879162712743273*^9, 3.879162714630197*^9}, 
   3.8791628025349092`*^9, {3.8791635647690077`*^9, 3.879163568725194*^9}, {
   3.8791635992611017`*^9, 3.8791636932031507`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"653e8d7a-0d01-435a-b126-1275645f83b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "1.4174311120718126`*^-23"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.2991310249788057`*^-8"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "8.604396362077438`*^-11"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.00006368425238179043`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.00027190460241399705`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.29853391647338867`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.9695113897323608`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"D\"\>", "\[Rule]", "1.391833097986419`*^-19"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "9.708011698965272`*^-18"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "7.741028412895645`*^-13"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "5.389659563093119`*^-8"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.00502255093306303`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "5.4166418574026436`*^-30"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "2.32077249004602`*^-22"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.000581845932174474`"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"B\"\>", "\[Rule]", "1.03112275120186`*^-13"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "5.421673526795345`*^-12"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "5.464879104799536`*^-10"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "9.106048310059123`*^-6"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.0012527997605502605`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.0155347049400909`*^-11"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "6.581280587170113`*^-8"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "1.5990977801898926`*^-13"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "7.577601324193495`*^-10"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"D\"\>", "\[Rule]", "9.560972404150091`*^-17"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "9.289184810015705`*^-16"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "1.7298543153465573`*^-10"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "2.4010445187627738`*^-8"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.008085167035460472`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "1.699688827183632`*^-11"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "1.3040377111472878`*^-10"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.4363990552546113`*^-10"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "3.1703254421699967`*^-7"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.10168071836233139`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.`"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "1.0487903719387623`*^-16"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"B\"\>", "\[Rule]", "1.723865494795973`*^-11"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "5.416270904001763`*^-11"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "5.610546471856992`*^-10"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "3.1798882105249504`*^-7"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.11350728571414948`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "1.0116469345094874`*^-26"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "7.724712118876639`*^-14"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "1.3858258305214079`*^-33"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "3.799773263891796`*^-31"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.026753360405564308`"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.9938878417015076`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"E\"\>", "\[Rule]", "4.622004760870324`*^-26"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "5.14481198433212`*^-23"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "2.3106309176938993`*^-15"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.0002671336696948856`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.5635074973106384`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"C\"\>", "\[Rule]", "2.2473537342523518`*^-30"}], ",", 
     RowBox[{"\<\"D\"\>", "\[Rule]", "2.799025247585912`*^-28"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "2.7204816211810306`*^-22"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "3.3394305098966015`*^-9"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.7957841157913208`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"D\"\>", "\[Rule]", "4.700201540745751`*^-19"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "3.088096175487477`*^-17"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "1.4303856493355638`*^-12"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "6.243189432098006`*^-8"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.005633242428302765`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"D\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"E\"\>", "\[Rule]", "6.929456086973362`*^-34"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "2.6336362396696115`*^-21"}], ",", 
     RowBox[{"\<\"A\"\>", "\[Rule]", "2.3709915240033297`*^-6"}], ",", 
     RowBox[{"\<\"C\"\>", "\[Rule]", "0.00001765969136613421`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8791635691851788`*^9, {3.879163601176399*^9, 3.879163693460307*^9}, 
   3.879325624090193*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"a53b0030-4151-49c3-89f2-a5fea5287272"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", " ", "=", " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<E\>\"", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\"\<B\>\"", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\"\<D\>\"", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\"\<A\>\"", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\"\<C\>\"", "\[Rule]", "0.2"}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.87916386300893*^9, 3.879163880670096*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"0e3dbb85-ad49-4db0-917a-547f268aee60"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"E\"\>", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"\<\"B\"\>", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"\<\"D\"\>", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"\<\"A\"\>", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"\<\"C\"\>", "\[Rule]", "0.2`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.879163881258347*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"7a653be9-9c82-4aea-8615-a33c6bb4a487"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"test", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "-", 
       RowBox[{"test", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "^", "2"}], "&"}], " ", "/@", 
   RowBox[{"Range", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879163895512356*^9, 3.8791639196542673`*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"4188413d-fba7-460c-b099-891645e54c40"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.8791639211489553`*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"4ecb7532-e850-4ad6-8f8f-713a08389583"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"probaTestset", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "5"}], "]"}], "]"}], "-", 
        RowBox[{"probaTestset", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "#"}], "]"}], "]"}]}], ")"}], "^", "2"}], "&"}], 
    " ", "/@", 
    RowBox[{"Range", "[", "4", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.879162554661834*^9, 3.8791626930674143`*^9}, {
  3.879162827355801*^9, 3.8791628774267387`*^9}, {3.87916292534603*^9, 
  3.879163006093318*^9}, {3.87916310217419*^9, 3.879163104335397*^9}, {
  3.879163408574731*^9, 3.879163426089576*^9}, {3.879163458761359*^9, 
  3.8791634791855783`*^9}, {3.879163516682467*^9, 3.879163544886017*^9}, {
  3.879163704125595*^9, 3.879163746848413*^9}, {3.879163786933915*^9, 
  3.879163793354096*^9}, {3.8791638255360613`*^9, 3.87916384092603*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"acaa06dc-acf2-4b81-97b1-ce82054a0354"],

Cell[BoxData["0.9999999999988427`"], "Output",
 CellChangeTimes->{
  3.87916300638414*^9, 3.879163104965707*^9, 3.879163426595355*^9, {
   3.879163462550201*^9, 3.879163479496263*^9}, {3.879163518227528*^9, 
   3.8791635458610287`*^9}, 3.879163795976687*^9, 3.879163841618247*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"d314cb50-54a2-407a-a579-c5e22de84bed"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"70747b3a-b508-40a2-9640-a8b321172c60"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating the API", "Section",
 CellChangeTimes->{{3.879334286047063*^9, 
  3.879334292242495*^9}},ExpressionUUID->"7fc40886-317c-46bc-9e91-\
a387e2e5c08e"],

Cell[CellGroupData[{

Cell["Defining the API", "Subsection",
 CellChangeTimes->{{3.879334543572297*^9, 3.879334545582472*^9}, {
  3.8793548084846*^9, 
  3.879354810906066*^9}},ExpressionUUID->"9706ea5c-35ac-4662-8099-\
7c9b71df6b15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"apiFunc", " ", "=", " ", 
   RowBox[{"APIFunction", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Sector\>\"", " ", "\[Rule]", " ", 
        RowBox[{
        "\"\<String\>\"", " ", "\[Rule]", " ", "\"\<Financials\>\""}]}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\"\<CarbInt1\>\"", " ", "\[Rule]", " ", 
        RowBox[{"\"\<Number\>\"", " ", "\[Rule]", " ", "10000"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<CarbInt2\>\"", " ", "\[Rule]", " ", 
        RowBox[{"\"\<Number\>\"", " ", "\[Rule]", " ", "10000"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<CarbInt3\>\"", " ", "\[Rule]", " ", 
        RowBox[{"\"\<Number\>\"", " ", "\[Rule]", " ", "10000"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Country\>\"", " ", "\[Rule]", " ", 
        RowBox[{"\"\<String\>\"", " ", "\[Rule]", " ", "\"\<Italy\>\""}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<CarbDisc\>\"", " ", "\[Rule]", " ", 
        RowBox[{
        "\"\<String\>\"", " ", "\[Rule]", " ", 
         "\"\<Value derived from data provided in Environmental/CSR\>\""}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Revenues\>\"", " ", "\[Rule]", " ", 
        RowBox[{"\"\<Number\>\"", " ", "\[Rule]", " ", "10000"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"netTrained", "[", 
       RowBox[{"{", 
        RowBox[{
        "#Sector", ",", " ", "#CarbInt1", ",", " ", "#CarbInt2", ",", "  ", 
         "#CarbInt3", ",", "#Country", ",", " ", "#CarbDisc", ",", "  ", 
         "#Revenues"}], "}"}], "]"}], "&"}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.879334547395049*^9, 3.879334547404652*^9}, {
   3.879335137738255*^9, 3.879335138624044*^9}, {3.8793353912902803`*^9, 
   3.879335392879437*^9}, {3.87933565638511*^9, 3.879335749518166*^9}, {
   3.879335873701726*^9, 3.879335897977887*^9}, 3.8793359965417128`*^9, {
   3.879336075223774*^9, 3.87933607568193*^9}, 3.879336168228867*^9, {
   3.879336271198415*^9, 3.879336282855215*^9}, {3.879336312857336*^9, 
   3.8793363363849373`*^9}, {3.87935481662586*^9, 3.879354817914371*^9}, {
   3.8794198972790728`*^9, 3.879419921657421*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"1875fc8d-1248-4c0b-b673-529c5bb9919c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploying the API", "Subsection",
 CellChangeTimes->{{3.879354834022154*^9, 
  3.879354841426221*^9}},ExpressionUUID->"74b8c785-fe21-4065-aa77-\
8bc63de254c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"apiFuncDeployed", " ", "=", " ", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "apiFunc", ",", "\[IndentingNewLine]", "\"\<WebServices/APIRiskRating\>\"",
     ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", " ", "\[Rule]", " ", "\"\<Public\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[198]:=",ExpressionUUID->"012a5e82-0346-4d83-9f8e-0ec67cca3446"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/dario.scalabrin/WebServices/\
APIRiskRating\"", 
     "https://www.wolframcloud.com/obj/dario.scalabrin/WebServices/\
APIRiskRating"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/dario.scalabrin/WebServices/\
APIRiskRating"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.879336172056601*^9, {3.879336325462165*^9, 3.879336364295141*^9}, 
   3.879354848053746*^9, 3.8794199273730297`*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"bb3657fc-ea10-470d-9087-817103513dc1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{316, Automatic}, {Automatic, 50}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d1442fc-8e41-45cf-86ce-0b9d40cf737d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 143, 3, 98, "Title",ExpressionUUID->"3d5c901c-528e-40ea-bfb5-6cae8602de3b"],
Cell[726, 27, 166, 3, 53, "Subtitle",ExpressionUUID->"e7479a40-b674-4689-a1e6-7937b2c177d6"],
Cell[895, 32, 159, 3, 31, "Subsubtitle",ExpressionUUID->"439ae915-0578-422b-b930-d6d3dc9f7065"],
Cell[CellGroupData[{
Cell[1079, 39, 219, 4, 67, "Section",ExpressionUUID->"7dace181-d0f9-4283-b4a9-94e43c143822"],
Cell[CellGroupData[{
Cell[1323, 47, 160, 3, 54, "Subsection",ExpressionUUID->"94903ccb-4645-43a4-b5e5-28857714dfcf"],
Cell[1486, 52, 1483, 33, 94, "Input",ExpressionUUID->"fc7511cd-d7b9-430d-bc85-259db4bc506b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3006, 90, 236, 4, 54, "Subsection",ExpressionUUID->"35896a36-bc89-45d7-aa4c-67e8432be11c"],
Cell[CellGroupData[{
Cell[3267, 98, 3300, 73, 220, "Input",ExpressionUUID->"64e06684-09ba-41b9-8f8e-61ae4922557f"],
Cell[6570, 173, 82928, 1580, 241, "Output",ExpressionUUID->"59ffc17f-97fd-4d71-bf72-1a11ed3e4e5d"],
Cell[89501, 1755, 88390, 1663, 241, "Output",ExpressionUUID->"b5aeca91-1273-477e-b51a-e0ba3fa1036c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177952, 3425, 263, 4, 67, "Section",ExpressionUUID->"09b8ec3b-6ad4-4052-b6db-39219809bea4"],
Cell[CellGroupData[{
Cell[178240, 3433, 139, 3, 54, "Subsection",ExpressionUUID->"718b3489-2255-4bf6-9e53-6fbf72095c28"],
Cell[178382, 3438, 780, 14, 104, "Text",ExpressionUUID->"709f453a-bbea-4521-b17e-2c6be2d07fba"],
Cell[CellGroupData[{
Cell[179187, 3456, 4299, 111, 262, "Input",ExpressionUUID->"2de772f5-4145-4495-9373-d8e224bc076d"],
Cell[183489, 3569, 1237, 20, 34, "Output",ExpressionUUID->"b4d46764-b099-4065-9a4f-246329671543"],
Cell[184729, 3591, 21952, 422, 241, "Output",ExpressionUUID->"dc45f563-20d0-4bfe-abe5-4b827e294061"],
Cell[206684, 4015, 9857, 265, 238, "Output",ExpressionUUID->"248ccc5f-e686-47b1-870f-d1de1c691657"],
Cell[CellGroupData[{
Cell[216566, 4284, 1236, 21, 24, "Print",ExpressionUUID->"d58fd0ec-67f5-4353-8b97-1ab88bc456bb"],
Cell[217805, 4307, 1250, 21, 24, "Print",ExpressionUUID->"32734033-839b-4e4e-9d8d-3de426cbe3d0"],
Cell[219058, 4330, 1265, 22, 24, "Print",ExpressionUUID->"e0d55027-8fad-49bd-ab45-83a92d88e911"],
Cell[220326, 4354, 1225, 21, 24, "Print",ExpressionUUID->"df6b0a00-af64-4bc7-a34d-7dfe1688a7d4"]
}, Open  ]]
}, Open  ]],
Cell[221578, 4379, 512, 9, 35, "Text",ExpressionUUID->"1a6fc14d-0418-469d-b9d5-9f5a2764ee89"],
Cell[CellGroupData[{
Cell[222115, 4392, 1697, 40, 115, "Input",ExpressionUUID->"2e930372-2ce5-4b8c-89e1-74e90910d3f2"],
Cell[223815, 4434, 83569, 1588, 241, "Output",ExpressionUUID->"2fe3fc1a-a93f-4bab-8a6c-8d1c835afd0d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[307433, 6028, 307, 5, 54, "Subsection",ExpressionUUID->"056fde69-d6a3-4d9e-a2ac-b269c1f5fc2c"],
Cell[CellGroupData[{
Cell[307765, 6037, 1639, 36, 73, "Input",ExpressionUUID->"750190a8-3600-4615-bbeb-0c8e1dcd2654"],
Cell[309407, 6075, 34134, 621, 201, "Output",ExpressionUUID->"5b80b074-88f2-4e59-bc93-89b525189286"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343590, 6702, 296, 5, 54, "Subsection",ExpressionUUID->"c2596125-a273-4404-a475-df67a84893ae"],
Cell[CellGroupData[{
Cell[343911, 6711, 787, 17, 52, "Input",ExpressionUUID->"71b43137-8fd0-4fca-a3e2-e31cd7015633"],
Cell[344701, 6730, 88742, 1665, 241, "Output",ExpressionUUID->"0a874e12-b288-40ce-9d03-60131e3a4398"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[433492, 8401, 338, 6, 54, "Subsection",ExpressionUUID->"13e1a9e6-dd50-4c06-9ec7-817728819780"],
Cell[CellGroupData[{
Cell[433855, 8411, 5121, 131, 325, "Input",ExpressionUUID->"aca8cf41-acc7-4aa4-b9d0-698571a4bee2"],
Cell[438979, 8544, 89248, 1668, 241, "Output",ExpressionUUID->"0767bafc-a767-48ad-85ef-245ea9b1721c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[528276, 10218, 370, 6, 54, "Subsection",ExpressionUUID->"2841fd97-a03b-47f0-825e-747d3de9d265"],
Cell[CellGroupData[{
Cell[528671, 10228, 2157, 61, 136, "Input",ExpressionUUID->"89c65a73-b4ee-4482-9bc9-332b9a5ea9b8"],
Cell[530831, 10291, 89785, 1682, 241, "Output",ExpressionUUID->"143faf8a-972e-4806-91f9-875792db94da"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[620677, 11980, 172, 3, 67, "Section",ExpressionUUID->"c4ba50b6-f780-49eb-946b-2f462f16f559"],
Cell[CellGroupData[{
Cell[620874, 11987, 213, 4, 30, "Input",ExpressionUUID->"21eccc16-790e-4e60-a70d-b036ebf73aad"],
Cell[621090, 11993, 273, 6, 34, "Output",ExpressionUUID->"43ad3a8c-4b41-4d7d-b170-f9d779e24f46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[621400, 12004, 995, 26, 52, "Input",ExpressionUUID->"5756d48e-5a10-4881-afc8-5ab15276c347"],
Cell[622398, 12032, 13600, 369, 357, "Output",ExpressionUUID->"27e88ef9-1a3b-4988-80f2-4e147442461d"]
}, Open  ]],
Cell[636013, 12404, 128, 3, 30, "Input",ExpressionUUID->"e1529622-9291-44a8-be5c-b09e04bfff93"],
Cell[CellGroupData[{
Cell[636166, 12411, 517, 13, 30, "Input",ExpressionUUID->"b48cf2f3-be79-417e-9329-af8519c3734c"],
Cell[636686, 12426, 8983, 262, 253, "Output",ExpressionUUID->"880a850d-6e6b-418a-8f32-e9fa701bf0d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645706, 12693, 1354, 37, 73, "Input",ExpressionUUID->"adaaf859-359c-4c64-922f-f922f86c28aa"],
Cell[647063, 12732, 7308, 198, 258, "Output",ExpressionUUID->"a4cc7def-9f88-43aa-9522-e2b5ff774e99"]
}, Open  ]],
Cell[654386, 12933, 153, 3, 30, "Input",ExpressionUUID->"61586cba-14da-4c50-98ff-8bab0c59ecc3"],
Cell[CellGroupData[{
Cell[654564, 12940, 1550, 38, 73, "Input",ExpressionUUID->"9864a534-e22e-4b02-8543-31db9531ec9f"],
Cell[656117, 12980, 14779, 382, 357, "Output",ExpressionUUID->"5b318a20-a38c-4caa-99df-e4ab5487fd80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670933, 13367, 1747, 50, 94, "Input",ExpressionUUID->"883ef2e7-3172-40b9-8c55-4ffc16691005"],
Cell[672683, 13419, 344495, 9500, 146, "Output",ExpressionUUID->"9b25635c-c0b0-461f-9244-c71e797d6941"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017215, 22924, 1771, 57, 94, "Input",ExpressionUUID->"f630a3a6-8885-4262-9891-ecf78bdcd971"],
Cell[1018989, 22983, 154027, 4226, 142, "Output",ExpressionUUID->"9b08d367-0fc9-44de-a9da-55b609b5ca7c"]
}, Open  ]],
Cell[1173031, 27212, 237, 5, 30, "Input",ExpressionUUID->"5901ca7d-0a0a-47e0-9d28-98cbe6ae5bce"],
Cell[CellGroupData[{
Cell[1173293, 27221, 852, 16, 73, "Input",ExpressionUUID->"ac81ec20-61b3-42ff-9d30-8d8c49991057"],
Cell[1174148, 27239, 855, 17, 77, "Output",ExpressionUUID->"2916c6af-5be9-47c2-91ae-9a2fc48358eb"]
}, Open  ]],
Cell[1175018, 27259, 81, 0, 30, "Input",ExpressionUUID->"6fe5b5e1-9fef-45da-9020-be49d30f6e34"],
Cell[1175102, 27261, 1761, 43, 115, "Input",ExpressionUUID->"f3c47b9b-a284-4e6d-8579-72e54a1fcde3"],
Cell[1176866, 27306, 2790, 71, 241, "Input",ExpressionUUID->"9547b407-c261-4cd3-9c61-3a2a8845f68e"],
Cell[CellGroupData[{
Cell[1179681, 27381, 664, 17, 30, "Input",ExpressionUUID->"4097cc73-a6ff-48d9-8186-ee3b23ad5f46"],
Cell[1180348, 27400, 98556, 1727, 438, "Output",ExpressionUUID->"c465eb24-183e-4c27-9e86-76ba1829a847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1278941, 29132, 939, 23, 73, "Input",ExpressionUUID->"ab8da2c3-9be2-40c2-9160-36c02e5f30bd"],
Cell[1279883, 29157, 116686, 2037, 200, "Output",ExpressionUUID->"cc920117-8b76-4e20-947e-2521838287f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396606, 31199, 815, 22, 73, "Input",ExpressionUUID->"29d3a312-4370-4946-bf15-97af67597887"],
Cell[1397424, 31223, 114963, 1996, 492, "Output",ExpressionUUID->"d13a14e6-c503-4034-b29b-f591f36b7f7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1512424, 33224, 741, 20, 52, "Input",ExpressionUUID->"cf066b86-a878-4df9-906c-01dfabdcbea6"],
Cell[1513168, 33246, 108682, 1907, 159, "Output",ExpressionUUID->"2855c943-879f-4944-9749-f37dfae0ac29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1621887, 35158, 726, 19, 30, "Input",ExpressionUUID->"1d49fc1e-14cb-400d-a30b-da2a8c02da52"],
Cell[1622616, 35179, 94708, 1676, 466, "Output",ExpressionUUID->"19383254-2c09-447e-80b1-321cc9f043d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1717361, 36860, 158, 3, 54, "Subsection",ExpressionUUID->"073a44ab-4398-4bdf-8e51-2576503cd162"],
Cell[CellGroupData[{
Cell[1717544, 36867, 486, 12, 30, "Input",ExpressionUUID->"92c7b856-4e8f-4ef4-8e4b-91b35e430943"],
Cell[1718033, 36881, 1248, 37, 253, "Output",ExpressionUUID->"ead02403-354b-488c-be4f-56ae4cb83a68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1719318, 36923, 791, 20, 30, "Input",ExpressionUUID->"409e672c-d644-4b81-b7c9-9919b8ed86e0"],
Cell[1720112, 36945, 1401, 24, 46, "Message",ExpressionUUID->"9f22c6ac-c3a6-4c6b-b820-c3c60e13d93f"],
Cell[1721516, 36971, 421, 10, 28, "Message",ExpressionUUID->"92781513-7e97-44c7-b834-a91c1486b462"],
Cell[1721940, 36983, 1401, 24, 46, "Message",ExpressionUUID->"3784c041-bcb9-491b-ae2b-1c35bbbd0f50"],
Cell[1723344, 37009, 422, 10, 28, "Message",ExpressionUUID->"269a9ce8-ce05-4064-80b2-29c14f271c9c"],
Cell[1723769, 37021, 1402, 24, 46, "Message",ExpressionUUID->"0507a85b-4d29-4dcd-a854-409b42b24e47"],
Cell[1725174, 37047, 455, 10, 28, "Message",ExpressionUUID->"bee4aeba-b8da-48c1-8b65-09802811c65d"],
Cell[1725632, 37059, 422, 10, 28, "Message",ExpressionUUID->"bb981fc4-abc5-4f53-a0c2-202dac243b21"],
Cell[1726057, 37071, 462, 10, 28, "Message",ExpressionUUID->"3a214e07-ea2d-4a0b-a3b7-c7004ab64240"],
Cell[1726522, 37083, 1549, 26, 46, "Message",ExpressionUUID->"21d3a782-0d94-4a29-ba0a-8ce588af2b74"],
Cell[1728074, 37111, 7396, 126, 338, "Output",ExpressionUUID->"85d2d5f1-9af0-4e41-89dd-2066e14a0695"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1735507, 37242, 592, 15, 52, "Input",ExpressionUUID->"71b48ad0-4374-4d00-ab83-2a7d7996ebd5"],
Cell[1736102, 37259, 4815, 93, 263, "Output",ExpressionUUID->"29aa516f-0264-4e98-86ef-0c7a77c6e208"]
}, Open  ]],
Cell[1740932, 37355, 81, 0, 30, "Input",ExpressionUUID->"1b6d7cc6-7822-4ee8-b5e6-586263c327a0"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1741062, 37361, 217, 4, 67, "Section",ExpressionUUID->"9cfeceee-578b-479e-9e2b-6bb082aed526"],
Cell[CellGroupData[{
Cell[1741304, 37369, 166, 3, 54, "Subsection",ExpressionUUID->"23ccf5ee-bcae-4dce-ad62-cf12062b8105"],
Cell[1741473, 37374, 751, 19, 81, "Text",ExpressionUUID->"6b2ba3af-bd0c-404b-9a30-d5bc7bfff9d7"],
Cell[1742227, 37395, 2762, 66, 157, "Input",ExpressionUUID->"7d247cef-d508-4632-b82d-0c996ff173ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1745026, 37466, 215, 4, 54, "Subsection",ExpressionUUID->"cd9d058a-068e-49c5-a54a-179c014ccdab"],
Cell[CellGroupData[{
Cell[1745266, 37474, 221, 4, 45, "Subsubsection",ExpressionUUID->"919c1118-c19d-49c2-b1cb-cdc52c16953a"],
Cell[1745490, 37480, 351, 7, 35, "Text",ExpressionUUID->"358fc56b-581c-400b-a2cb-e1fe47c98ca6"],
Cell[CellGroupData[{
Cell[1745866, 37491, 746, 14, 52, "Input",ExpressionUUID->"e494084e-deed-4ffe-a42a-57f607634d26"],
Cell[1746615, 37507, 109654, 1939, 62, "Output",ExpressionUUID->"2c1ad0a7-4ef8-4fdc-934f-45b73284ece8"],
Cell[1856272, 39448, 160762, 3021, 553, "Output",ExpressionUUID->"12434ae0-cf74-4975-9f41-e0c11be80081"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2017071, 42474, 1571, 37, 115, "Input",ExpressionUUID->"f50b7281-5b28-4bee-886b-6e43d141e559"],
Cell[2018645, 42513, 543, 12, 24, "Print",ExpressionUUID->"33bcdd30-bbb6-4b72-bd3c-a8cca597691a"],
Cell[2019191, 42527, 38508, 990, 260, "Output",ExpressionUUID->"f9af8137-acf3-43e0-87a5-050ea248edd2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2057748, 43523, 262, 4, 45, "Subsubsection",ExpressionUUID->"af039915-bf9f-4d39-af0a-2865838c6fc3"],
Cell[2058013, 43529, 323, 6, 35, "Text",ExpressionUUID->"accec003-1c7f-4fff-8f86-6d6171f252b3"],
Cell[CellGroupData[{
Cell[2058361, 43539, 744, 14, 52, "Input",ExpressionUUID->"6853ef91-287f-4ced-be7c-af92b49c909c"],
Cell[2059108, 43555, 405491, 6885, 62, "Output",ExpressionUUID->"ff193cf4-f336-47f5-ae63-caf1925e7e7c"],
Cell[2464602, 50442, 427538, 7395, 551, "Output",ExpressionUUID->"796e1529-b89f-4609-8286-405606559a50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2892177, 57842, 1589, 38, 115, "Input",ExpressionUUID->"99020af7-66ff-4247-b63c-5a1edaef53dc"],
Cell[2893769, 57882, 560, 12, 24, "Print",ExpressionUUID->"b0268f54-879f-4440-b689-4e6569187364"],
Cell[2894332, 57896, 38350, 986, 260, "Output",ExpressionUUID->"4f6e74c0-2935-4d26-858a-866c6dbaa690"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2932731, 58888, 224, 4, 45, "Subsubsection",ExpressionUUID->"707033d6-fc97-4519-873d-86d56ff114d1"],
Cell[2932958, 58894, 289, 4, 35, "Text",ExpressionUUID->"072a572c-19ec-4e50-8160-bd35294883af"],
Cell[CellGroupData[{
Cell[2933272, 58902, 730, 14, 52, "Input",ExpressionUUID->"0ad5282a-88fd-4696-b81a-c71cc5893931"],
Cell[2934005, 58918, 13268, 269, 84, "Output",ExpressionUUID->"4993e691-31f4-4ea6-bba3-27938d4d0545"],
Cell[2947276, 59189, 80974, 1645, 554, "Output",ExpressionUUID->"4e019477-7516-4ecf-9b91-ddc4da6d4b4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3028287, 60839, 1603, 38, 115, "Input",ExpressionUUID->"21382602-c388-449e-99f7-a16ab30307db"],
Cell[3029893, 60879, 522, 11, 24, "Print",ExpressionUUID->"212a637f-6722-477c-93e9-c18f65cee5d7"],
Cell[3030418, 60892, 38267, 984, 260, "Output",ExpressionUUID->"bbe3d1df-ca71-4947-9fd1-d64169d12504"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3068734, 61882, 168, 3, 45, "Subsubsection",ExpressionUUID->"9942841c-f629-4f6a-b284-312b9ff53265"],
Cell[3068905, 61887, 241, 4, 35, "Text",ExpressionUUID->"5dfadb55-1804-475e-af67-fd5a3fa3ada6"],
Cell[CellGroupData[{
Cell[3069171, 61895, 698, 14, 52, "Input",ExpressionUUID->"81eb6b46-1115-4683-ad4f-4a7788f50766"],
Cell[3069872, 61911, 236690, 4033, 62, "Output",ExpressionUUID->"2f943f7a-016f-4ab3-9980-cfde325c5d4b"],
Cell[3306565, 65946, 257755, 4495, 555, "Output",ExpressionUUID->"8e80ecdb-f7b5-4111-ba5c-c14febc4d2f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3564357, 70446, 1545, 37, 115, "Input",ExpressionUUID->"5e92e43d-3a8d-417e-8227-9da67103f984"],
Cell[3565905, 70485, 521, 11, 24, "Print",ExpressionUUID->"201714ea-2656-4575-ac91-cd7e4b3375ef"],
Cell[3566429, 70498, 38261, 984, 260, "Output",ExpressionUUID->"4722957b-ddb4-4bb5-8880-5dcd29caca8a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3604751, 71489, 262, 4, 54, "Subsection",ExpressionUUID->"167a82f5-aa47-4220-90ca-39153e030b4f"],
Cell[CellGroupData[{
Cell[3605038, 71497, 163, 3, 45, "Subsubsection",ExpressionUUID->"af6df2e6-1db6-4012-946a-f093b8cea41f"],
Cell[3605204, 71502, 422, 9, 58, "Text",ExpressionUUID->"231b4959-cb15-4d63-a49e-e3c934e96ca1"],
Cell[CellGroupData[{
Cell[3605651, 71515, 1827, 39, 73, "Input",ExpressionUUID->"2e8dbd1c-5f09-4c5e-9338-71b2c43249c3"],
Cell[3607481, 71556, 7278, 147, 63, "Output",ExpressionUUID->"a8df58bf-2a6f-4b3b-9bd6-d15105ebb29b"],
Cell[3614762, 71705, 10972, 210, 63, "Output",ExpressionUUID->"4f4968d5-4e80-415e-b97b-a5490c7300f0"],
Cell[3625737, 71917, 9007, 169, 63, "Output",ExpressionUUID->"dfd907f6-7ca6-49ce-8449-b57447f2d332"]
}, Open  ]],
Cell[3634759, 72089, 177, 3, 35, "Text",ExpressionUUID->"4d8415d2-03cc-48ed-aee2-c53a40dd79be"],
Cell[3634939, 72094, 1510, 32, 73, "Input",ExpressionUUID->"0b8e8eb7-f51e-4c87-bb31-bd641db423ae"],
Cell[3636452, 72128, 229, 3, 35, "Text",ExpressionUUID->"a21c5f12-ea36-4f7b-9a81-5804c3f222f8"],
Cell[3636684, 72133, 554, 14, 30, "Input",ExpressionUUID->"c367e224-5d5f-4cad-8e0d-a2c397b5c8a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3637275, 72152, 217, 4, 45, "Subsubsection",ExpressionUUID->"988cb0f7-88bc-42af-8fce-d6f30b501fca"],
Cell[3637495, 72158, 465, 10, 58, "Text",ExpressionUUID->"8cb8e66e-cdad-4527-820a-8cedc6abee3d"],
Cell[CellGroupData[{
Cell[3637985, 72172, 2639, 57, 157, "Input",ExpressionUUID->"14ea714b-552d-4cab-b1a4-42b227f9b31a"],
Cell[3640627, 72231, 226287, 4559, 65, "Output",ExpressionUUID->"d47094f4-993d-4cbb-9cc4-16fda1f6fa68"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3866963, 76796, 167, 3, 45, "Subsubsection",ExpressionUUID->"99246540-7d26-482a-814f-c78318188484"],
Cell[3867133, 76801, 941, 25, 104, "Text",ExpressionUUID->"7be345d5-6033-4892-8119-db0692a1b24f"],
Cell[CellGroupData[{
Cell[3868099, 76830, 1136, 20, 52, "Input",ExpressionUUID->"1f19a39f-3020-4330-b84d-cdd628f2f64c"],
Cell[3869238, 76852, 225470, 4535, 65, "Output",ExpressionUUID->"97ec9589-6f93-4bd2-be5a-dea1a4ac2258"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4094757, 81393, 187, 3, 45, "Subsubsection",ExpressionUUID->"d901b0fe-9ce0-49d2-8e3b-639446d55d30"],
Cell[4094947, 81398, 248, 4, 35, "Text",ExpressionUUID->"0f267815-5b34-49df-b044-4d26ff756c83"],
Cell[CellGroupData[{
Cell[4095220, 81406, 1028, 21, 52, "Input",ExpressionUUID->"deb6a3ce-1b71-4899-8dd5-f97cc198ad11"],
Cell[4096251, 81429, 743, 14, 24, "Print",ExpressionUUID->"b7ad3303-f5bf-411b-81f2-f6be1a341e77"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4097055, 81450, 167, 3, 54, "Subsection",ExpressionUUID->"f64bedb0-e15f-4b5c-a1ee-62184bc03531"],
Cell[CellGroupData[{
Cell[4097247, 81457, 679, 13, 30, "Input",ExpressionUUID->"b63792d8-88da-43de-b740-10156776cce8"],
Cell[4097929, 81472, 8745, 215, 191, "Output",ExpressionUUID->"74b53371-72f1-44af-b7bd-261eb04b391c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4106711, 81692, 177, 2, 30, "Input",ExpressionUUID->"ca04980b-a877-486f-9fa9-c771ae2f2fd9"],
Cell[4106891, 81696, 152, 2, 34, "Output",ExpressionUUID->"4efc0329-4d99-46e4-ab29-b564de6d974d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4107092, 81704, 158, 3, 54, "Subsection",ExpressionUUID->"e6bab7d5-c5c1-47ab-b369-a2847676231e"],
Cell[4107253, 81709, 541, 16, 30, "Input",ExpressionUUID->"8d14ef17-2a6b-4f14-a7c4-a8eba0470d45"],
Cell[CellGroupData[{
Cell[4107819, 81729, 945, 21, 30, "Input",ExpressionUUID->"647f2859-772b-46af-8879-4af283343275"],
Cell[4108767, 81752, 7663, 159, 221, "Output",ExpressionUUID->"1bcd810c-d545-4daf-a3d6-d3e4f67ca5df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4116467, 81916, 573, 13, 30, "Input",ExpressionUUID->"653e8d7a-0d01-435a-b126-1275645f83b9"],
Cell[4117043, 81931, 7963, 159, 290, "Output",ExpressionUUID->"a53b0030-4151-49c3-89f2-a5fea5287272"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4125043, 82095, 531, 12, 30, "Input",ExpressionUUID->"0e3dbb85-ad49-4db0-917a-547f268aee60"],
Cell[4125577, 82109, 471, 11, 34, "Output",ExpressionUUID->"7a653be9-9c82-4aea-8615-a33c6bb4a487"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4126085, 82125, 497, 14, 30, "Input",ExpressionUUID->"4188413d-fba7-460c-b099-891645e54c40"],
Cell[4126585, 82141, 157, 3, 34, "Output",ExpressionUUID->"4ecb7532-e850-4ad6-8f8f-713a08389583"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4126779, 82149, 1064, 25, 52, "Input",ExpressionUUID->"acaa06dc-acf2-4b81-97b1-ce82054a0354"],
Cell[4127846, 82176, 363, 6, 34, "Output",ExpressionUUID->"d314cb50-54a2-407a-a579-c5e22de84bed"]
}, Open  ]],
Cell[4128224, 82185, 81, 0, 30, "Input",ExpressionUUID->"70747b3a-b508-40a2-9640-a8b321172c60"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4128354, 82191, 161, 3, 67, "Section",ExpressionUUID->"7fc40886-317c-46bc-9e91-a387e2e5c08e"],
Cell[CellGroupData[{
Cell[4128540, 82198, 211, 4, 54, "Subsection",ExpressionUUID->"9706ea5c-35ac-4662-8099-7c9b71df6b15"],
Cell[4128754, 82204, 2410, 48, 241, "Input",ExpressionUUID->"1875fc8d-1248-4c0b-b673-529c5bb9919c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4131201, 82257, 165, 3, 54, "Subsection",ExpressionUUID->"74b8c785-fe21-4065-aa77-8bc63de254c9"],
Cell[CellGroupData[{
Cell[4131391, 82264, 412, 9, 94, "Input",ExpressionUUID->"012a5e82-0346-4d83-9f8e-0ec67cca3446"],
Cell[4131806, 82275, 646, 17, 37, "Output",ExpressionUUID->"bb3657fc-ea10-470d-9087-817103513dc1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

